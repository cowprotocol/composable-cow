{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "AuthorizerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExternalBalanceTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "InternalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "protocolFeeAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "PoolBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "cashDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "managedDelta",
          "type": "int256"
        }
      ],
      "name": "PoolBalanceManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RelayerApprovalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokensDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "TokensRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "batchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "deregisterTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.ExitPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getActionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getInternalBalance",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNextNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "managed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPoolTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeesCollector",
      "outputs": [
        {
          "internalType": "contract ProtocolFeesCollector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "hasApprovedRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxAmountsIn",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.JoinPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.PoolBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.PoolBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "managePoolBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.UserBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct IVault.UserBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "manageUserBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "queryBatchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "assetDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "registerPool",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "registerTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setRelayerApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WETH()": "ad5c4648",
    "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
    "deregisterTokens(bytes32,address[])": "7d3aeb96",
    "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
    "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
    "getActionId(bytes4)": "851c1bb3",
    "getAuthorizer()": "aaabadc5",
    "getDomainSeparator()": "ed24911d",
    "getInternalBalance(address,address[])": "0f5a6efa",
    "getNextNonce(address)": "90193b7c",
    "getPausedState()": "1c0de051",
    "getPool(bytes32)": "f6c00927",
    "getPoolTokenInfo(bytes32,address)": "b05f8e48",
    "getPoolTokens(bytes32)": "f94d4668",
    "getProtocolFeesCollector()": "d2946c2b",
    "hasApprovedRelayer(address,address)": "fec90d72",
    "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
    "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
    "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
    "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
    "registerPool(uint8)": "09b2760f",
    "registerTokens(bytes32,address[],address[])": "66a9c7d2",
    "setAuthorizer(address)": "058a628f",
    "setPaused(bool)": "16c38b3c",
    "setRelayerApproval(address,address,bool)": "fa6e671d",
    "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract ProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Stores the Asset Managers (by Pool and token), and implements the top level Asset Manager and Pool interfaces, such as registering and deregistering tokens, joining and exiting Pools, and informational functions like `getPool` and `getPoolTokens`, delegating to specialization-specific functions as needed. `managePoolBalance` handles all Asset Manager interactions.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer/src/vault/PoolBalances.sol\":\"PoolBalances\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/balancer/src/lib/helpers/AssetHelpers.sol\":{\"keccak256\":\"0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76\",\"dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH\"]},\"lib/balancer/src/lib/helpers/Authentication.sol\":{\"keccak256\":\"0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b\",\"dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF\"]},\"lib/balancer/src/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32\",\"dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9\"]},\"lib/balancer/src/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb\",\"dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH\"]},\"lib/balancer/src/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a\",\"dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq\"]},\"lib/balancer/src/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3\",\"dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ\"]},\"lib/balancer/src/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d\",\"dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc\"]},\"lib/balancer/src/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45\",\"dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9\"]},\"lib/balancer/src/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985\",\"dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj\"]},\"lib/balancer/src/lib/math/FixedPoint.sol\":{\"keccak256\":\"0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a\",\"dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8\"]},\"lib/balancer/src/lib/math/LogExpMath.sol\":{\"keccak256\":\"0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f\",\"dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T\"]},\"lib/balancer/src/lib/math/Math.sol\":{\"keccak256\":\"0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5\",\"dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp\"]},\"lib/balancer/src/lib/openzeppelin/Address.sol\":{\"keccak256\":\"0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e\",\"dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM\"]},\"lib/balancer/src/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246\",\"dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47\",\"dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableSet.sol\":{\"keccak256\":\"0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57\",\"dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK\"]},\"lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6\",\"dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C\"]},\"lib/balancer/src/lib/openzeppelin/SafeCast.sol\":{\"keccak256\":\"0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032\",\"dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk\"]},\"lib/balancer/src/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19\",\"dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj\"]},\"lib/balancer/src/vault/AssetManagers.sol\":{\"keccak256\":\"0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e\",\"dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn\"]},\"lib/balancer/src/vault/AssetTransfersHandler.sol\":{\"keccak256\":\"0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d\",\"dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR\"]},\"lib/balancer/src/vault/Fees.sol\":{\"keccak256\":\"0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de\",\"dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY\"]},\"lib/balancer/src/vault/PoolBalances.sol\":{\"keccak256\":\"0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5\",\"dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b\"]},\"lib/balancer/src/vault/PoolRegistry.sol\":{\"keccak256\":\"0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61\",\"dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo\"]},\"lib/balancer/src/vault/PoolTokens.sol\":{\"keccak256\":\"0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18\",\"dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW\"]},\"lib/balancer/src/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1\",\"dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy\"]},\"lib/balancer/src/vault/UserBalance.sol\":{\"keccak256\":\"0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145\",\"dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv\"]},\"lib/balancer/src/vault/VaultAuthorization.sol\":{\"keccak256\":\"0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb\",\"dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz\"]},\"lib/balancer/src/vault/balances/BalanceAllocation.sol\":{\"keccak256\":\"0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0\",\"dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny\"]},\"lib/balancer/src/vault/balances/GeneralPoolsBalance.sol\":{\"keccak256\":\"0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e\",\"dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh\"]},\"lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol\":{\"keccak256\":\"0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8\",\"dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH\"]},\"lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol\":{\"keccak256\":\"0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9\",\"dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4\"]},\"lib/balancer/src/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4\",\"dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4\"]},\"lib/balancer/src/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2\",\"dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB\"]},\"lib/balancer/src/vault/interfaces/IBasePool.sol\":{\"keccak256\":\"0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd\",\"dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW\"]},\"lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce\",\"dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP\"]},\"lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol\":{\"keccak256\":\"0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05\",\"dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp\"]},\"lib/balancer/src/vault/interfaces/IVault.sol\":{\"keccak256\":\"0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619\",\"dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq\"]},\"lib/canonical-weth/src/interfaces/IWETH.sol\":{\"keccak256\":\"0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05\",\"dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExternalBalanceTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashLoan",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InternalBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PausedStateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "deltas",
              "type": "int256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "protocolFeeAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "cashDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "managedDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceManaged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelayerApprovalChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "int256[]",
              "name": "limits",
              "type": "int256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "batchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exitPool"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashLoan"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuthorizer",
          "outputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInternalBalance",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPausedState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "pauseWindowEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bufferPeriodEndTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokenInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "managed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolFeesCollector",
          "outputs": [
            {
              "internalType": "contract ProtocolFeesCollector",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasApprovedRelayer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinPool"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.PoolBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.PoolBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "managePoolBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.UserBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.UserBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "manageUserBalance"
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queryBatchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "assetDeltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPool",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTokens"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthorizer"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelayerApproval"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "WETH()": {
            "details": "Returns the Vault's WETH instance."
          },
          "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
            "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
          },
          "deregisterTokens(bytes32,address[])": {
            "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
          },
          "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
          },
          "flashLoan(address,address[],uint256[],bytes)": {
            "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
          },
          "getActionId(bytes4)": {
            "details": "Returns the action identifier associated with the external function described by `selector`."
          },
          "getAuthorizer()": {
            "details": "Returns the Vault's Authorizer."
          },
          "getDomainSeparator()": {
            "details": "Returns the EIP712 domain separator."
          },
          "getInternalBalance(address,address[])": {
            "details": "Returns `user`'s Internal Balance for a set of tokens."
          },
          "getNextNonce(address)": {
            "details": "Returns the next nonce used by an address to sign messages."
          },
          "getPausedState()": {
            "details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."
          },
          "getPool(bytes32)": {
            "details": "Returns a Pool's contract address and specialization setting."
          },
          "getPoolTokenInfo(bytes32,address)": {
            "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
          },
          "getPoolTokens(bytes32)": {
            "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
          },
          "getProtocolFeesCollector()": {
            "details": "Returns the current protocol fee module."
          },
          "hasApprovedRelayer(address,address)": {
            "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
          },
          "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
          },
          "managePoolBalance((uint8,bytes32,address,uint256)[])": {
            "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
          },
          "manageUserBalance((uint8,address,uint256,address,address)[])": {
            "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
          },
          "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
            "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
          },
          "registerPool(uint8)": {
            "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
          },
          "registerTokens(bytes32,address[],address[])": {
            "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
          },
          "setAuthorizer(address)": {
            "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
          },
          "setPaused(bool)": {
            "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
          },
          "setRelayerApproval(address,address,bool)": {
            "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
          },
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
            "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/balancer/src/vault/PoolBalances.sol": "PoolBalances"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/helpers/AssetHelpers.sol": {
        "keccak256": "0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00",
        "urls": [
          "bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76",
          "dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/Authentication.sol": {
        "keccak256": "0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3",
        "urls": [
          "bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b",
          "dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942",
        "urls": [
          "bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32",
          "dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537",
        "urls": [
          "bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb",
          "dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b",
        "urls": [
          "bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a",
          "dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2",
        "urls": [
          "bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3",
          "dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/InputHelpers.sol": {
        "keccak256": "0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42",
        "urls": [
          "bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d",
          "dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c",
        "urls": [
          "bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45",
          "dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12",
        "urls": [
          "bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985",
          "dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/FixedPoint.sol": {
        "keccak256": "0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756",
        "urls": [
          "bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a",
          "dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/LogExpMath.sol": {
        "keccak256": "0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb",
        "urls": [
          "bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f",
          "dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/Math.sol": {
        "keccak256": "0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d",
        "urls": [
          "bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5",
          "dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/Address.sol": {
        "keccak256": "0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b",
        "urls": [
          "bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e",
          "dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717",
        "urls": [
          "bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246",
          "dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableMap.sol": {
        "keccak256": "0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27",
        "urls": [
          "bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47",
          "dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableSet.sol": {
        "keccak256": "0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780",
        "urls": [
          "bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57",
          "dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862",
        "urls": [
          "bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6",
          "dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeCast.sol": {
        "keccak256": "0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec",
        "urls": [
          "bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032",
          "dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8",
        "urls": [
          "bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19",
          "dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/vault/AssetManagers.sol": {
        "keccak256": "0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d",
        "urls": [
          "bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e",
          "dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/AssetTransfersHandler.sol": {
        "keccak256": "0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45",
        "urls": [
          "bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d",
          "dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Fees.sol": {
        "keccak256": "0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654",
        "urls": [
          "bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de",
          "dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolBalances.sol": {
        "keccak256": "0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec",
        "urls": [
          "bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5",
          "dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolRegistry.sol": {
        "keccak256": "0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5",
        "urls": [
          "bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61",
          "dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolTokens.sol": {
        "keccak256": "0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33",
        "urls": [
          "bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18",
          "dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e",
        "urls": [
          "bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1",
          "dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/UserBalance.sol": {
        "keccak256": "0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d",
        "urls": [
          "bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145",
          "dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/VaultAuthorization.sol": {
        "keccak256": "0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1",
        "urls": [
          "bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb",
          "dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/BalanceAllocation.sol": {
        "keccak256": "0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349",
        "urls": [
          "bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0",
          "dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/GeneralPoolsBalance.sol": {
        "keccak256": "0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597",
        "urls": [
          "bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e",
          "dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol": {
        "keccak256": "0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a",
        "urls": [
          "bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8",
          "dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol": {
        "keccak256": "0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26",
        "urls": [
          "bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9",
          "dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAsset.sol": {
        "keccak256": "0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c",
        "urls": [
          "bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4",
          "dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa",
        "urls": [
          "bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2",
          "dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IBasePool.sol": {
        "keccak256": "0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d",
        "urls": [
          "bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd",
          "dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f",
        "urls": [
          "bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce",
          "dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol": {
        "keccak256": "0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e",
        "urls": [
          "bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05",
          "dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IVault.sol": {
        "keccak256": "0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c",
        "urls": [
          "bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619",
          "dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/canonical-weth/src/interfaces/IWETH.sol": {
        "keccak256": "0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3",
        "urls": [
          "bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05",
          "dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/balancer/src/vault/PoolBalances.sol",
    "id": 9040,
    "exportedSymbols": {
      "Address": [
        6147
      ],
      "AssetHelpers": [
        2928
      ],
      "AssetManagers": [
        7482
      ],
      "AssetTransfersHandler": [
        7742
      ],
      "Authentication": [
        3005
      ],
      "BalanceAllocation": [
        12871
      ],
      "EIP712": [
        6240
      ],
      "EnumerableMap": [
        6614
      ],
      "EnumerableSet": [
        6827
      ],
      "Errors": [
        3317
      ],
      "Fees": [
        8031
      ],
      "FixedPoint": [
        4271
      ],
      "GeneralPoolsBalance": [
        13303
      ],
      "IAsset": [
        14558
      ],
      "IAuthentication": [
        3328
      ],
      "IAuthorizer": [
        14573
      ],
      "IBasePool": [
        14631
      ],
      "IERC20": [
        670
      ],
      "IFlashLoanRecipient": [
        14651
      ],
      "IPoolSwapStructs": [
        14719
      ],
      "ISignaturesValidator": [
        3346
      ],
      "ITemporarilyPausable": [
        3365
      ],
      "IVault": [
        15228
      ],
      "IWETH": [
        15479
      ],
      "InputHelpers": [
        3498
      ],
      "LogExpMath": [
        5540
      ],
      "Math": [
        5806
      ],
      "MinimalSwapInfoPoolsBalance": [
        13772
      ],
      "PoolBalances": [
        9039
      ],
      "PoolRegistry": [
        9320
      ],
      "PoolTokens": [
        9741
      ],
      "ProtocolFeesCollector": [
        10020
      ],
      "ReentrancyGuard": [
        6883
      ],
      "SafeCast": [
        6912
      ],
      "SafeERC20": [
        7009
      ],
      "SignaturesValidator": [
        3749
      ],
      "TemporarilyPausable": [
        3929
      ],
      "TwoTokenPoolsBalance": [
        14554
      ],
      "UserBalance": [
        11916
      ],
      "VaultAuthorization": [
        12232
      ],
      "_require": [
        3023
      ],
      "_revert": [
        3031
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:12406:33",
    "nodes": [
      {
        "id": 8289,
        "nodeType": "PragmaDirective",
        "src": "688:31:33",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 8290,
        "nodeType": "ImportDirective",
        "src": "721:30:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/math/Math.sol",
        "file": "../lib/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 5807,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8291,
        "nodeType": "ImportDirective",
        "src": "752:43:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/helpers/BalancerErrors.sol",
        "file": "../lib/helpers/BalancerErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 3318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8292,
        "nodeType": "ImportDirective",
        "src": "796:41:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/helpers/InputHelpers.sol",
        "file": "../lib/helpers/InputHelpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 3499,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8293,
        "nodeType": "ImportDirective",
        "src": "838:45:33",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 3,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8294,
        "nodeType": "ImportDirective",
        "src": "884:49:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol",
        "file": "../lib/openzeppelin/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 6884,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8295,
        "nodeType": "ImportDirective",
        "src": "934:43:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/openzeppelin/SafeERC20.sol",
        "file": "../lib/openzeppelin/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 7010,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8296,
        "nodeType": "ImportDirective",
        "src": "979:20:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/Fees.sol",
        "file": "./Fees.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 8032,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8297,
        "nodeType": "ImportDirective",
        "src": "1000:26:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/PoolTokens.sol",
        "file": "./PoolTokens.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 9742,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8298,
        "nodeType": "ImportDirective",
        "src": "1027:27:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/UserBalance.sol",
        "file": "./UserBalance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 11917,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8299,
        "nodeType": "ImportDirective",
        "src": "1055:36:33",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/interfaces/IBasePool.sol",
        "file": "./interfaces/IBasePool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9040,
        "sourceUnit": 14632,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9039,
        "nodeType": "ContractDefinition",
        "src": "1488:11606:33",
        "nodes": [
          {
            "id": 8311,
            "nodeType": "UsingForDirective",
            "src": "1575:23:33",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 8309,
              "name": "Math",
              "nameLocations": [
                "1581:4:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5806,
              "src": "1581:4:33"
            },
            "typeName": {
              "id": 8310,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1590:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 8315,
            "nodeType": "UsingForDirective",
            "src": "1603:27:33",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 8312,
              "name": "SafeERC20",
              "nameLocations": [
                "1609:9:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7009,
              "src": "1609:9:33"
            },
            "typeName": {
              "id": 8314,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8313,
                "name": "IERC20",
                "nameLocations": [
                  "1623:6:33"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 670,
                "src": "1623:6:33"
              },
              "referencedDeclaration": 670,
              "src": "1623:6:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$670",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 8318,
            "nodeType": "UsingForDirective",
            "src": "1635:36:33",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 8316,
              "name": "BalanceAllocation",
              "nameLocations": [
                "1641:17:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12871,
              "src": "1641:17:33"
            },
            "typeName": {
              "id": 8317,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1663:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 8322,
            "nodeType": "UsingForDirective",
            "src": "1676:38:33",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 8319,
              "name": "BalanceAllocation",
              "nameLocations": [
                "1682:17:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12871,
              "src": "1682:17:33"
            },
            "typeName": {
              "baseType": {
                "id": 8320,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1704:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 8321,
              "nodeType": "ArrayTypeName",
              "src": "1704:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "id": 8352,
            "nodeType": "FunctionDefinition",
            "src": "1720:562:33",
            "nodes": [],
            "body": {
              "id": 8351,
              "nodeType": "Block",
              "src": "1899:383:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8338,
                          "name": "PoolBalanceChangeKind",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15024,
                          "src": "2181:21:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PoolBalanceChangeKind_$15024_$",
                            "typeString": "type(enum IVault.PoolBalanceChangeKind)"
                          }
                        },
                        "id": 8339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2203:4:33",
                        "memberName": "JOIN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15022,
                        "src": "2181:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        }
                      },
                      {
                        "id": 8340,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "2209:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8341,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8326,
                        "src": "2217:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8344,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8328,
                            "src": "2233:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2225:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 8342,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2225:8:33",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2225:18:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8347,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8331,
                            "src": "2266:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JoinPoolRequest_$14979_memory_ptr",
                              "typeString": "struct IVault.JoinPoolRequest memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_JoinPoolRequest_$14979_memory_ptr",
                              "typeString": "struct IVault.JoinPoolRequest memory"
                            }
                          ],
                          "id": 8346,
                          "name": "_toPoolBalanceChange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8401,
                            8413
                          ],
                          "referencedDeclaration": 8401,
                          "src": "2245:20:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_JoinPoolRequest_$14979_memory_ptr_$returns$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$",
                            "typeString": "function (struct IVault.JoinPoolRequest memory) pure returns (struct PoolBalances.PoolBalanceChange memory)"
                          }
                        },
                        "id": 8348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2245:29:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                          "typeString": "struct PoolBalances.PoolBalanceChange memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                          "typeString": "struct PoolBalances.PoolBalanceChange memory"
                        }
                      ],
                      "id": 8337,
                      "name": "_joinOrExit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8554,
                      "src": "2169:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PoolBalanceChangeKind_$15024_$_t_bytes32_$_t_address_$_t_address_payable_$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$returns$__$",
                        "typeString": "function (enum IVault.PoolBalanceChangeKind,bytes32,address,address payable,struct PoolBalances.PoolBalanceChange memory)"
                      }
                    },
                    "id": 8349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2169:106:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8350,
                  "nodeType": "ExpressionStatement",
                  "src": "2169:106:33"
                }
              ]
            },
            "baseFunctions": [
              14967
            ],
            "functionSelector": "b95cac28",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8334,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1885:13:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3817,
                  "src": "1885:13:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1885:13:33"
              }
            ],
            "name": "joinPool",
            "nameLocation": "1729:8:33",
            "overrides": {
              "id": 8333,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1876:8:33"
            },
            "parameters": {
              "id": 8332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8324,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1755:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "1747:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8323,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8326,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1779:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "1771:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8328,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1803:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "1795:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8331,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "1845:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "1822:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_JoinPoolRequest_$14979_memory_ptr",
                    "typeString": "struct IVault.JoinPoolRequest"
                  },
                  "typeName": {
                    "id": 8330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8329,
                      "name": "JoinPoolRequest",
                      "nameLocations": [
                        "1822:15:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14979,
                      "src": "1822:15:33"
                    },
                    "referencedDeclaration": 14979,
                    "src": "1822:15:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JoinPoolRequest_$14979_storage_ptr",
                      "typeString": "struct IVault.JoinPoolRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:121:33"
            },
            "returnParameters": {
              "id": 8336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:0:33"
            },
            "scope": 9039,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8377,
            "nodeType": "FunctionDefinition",
            "src": "2288:384:33",
            "nodes": [],
            "body": {
              "id": 8376,
              "nodeType": "Block",
              "src": "2453:219:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8366,
                          "name": "PoolBalanceChangeKind",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15024,
                          "src": "2580:21:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PoolBalanceChangeKind_$15024_$",
                            "typeString": "type(enum IVault.PoolBalanceChangeKind)"
                          }
                        },
                        "id": 8367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2602:4:33",
                        "memberName": "EXIT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15023,
                        "src": "2580:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        }
                      },
                      {
                        "id": 8368,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8354,
                        "src": "2608:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8369,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8356,
                        "src": "2616:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8370,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8358,
                        "src": "2624:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8372,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8361,
                            "src": "2656:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExitPoolRequest_$15004_memory_ptr",
                              "typeString": "struct IVault.ExitPoolRequest memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ExitPoolRequest_$15004_memory_ptr",
                              "typeString": "struct IVault.ExitPoolRequest memory"
                            }
                          ],
                          "id": 8371,
                          "name": "_toPoolBalanceChange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8401,
                            8413
                          ],
                          "referencedDeclaration": 8413,
                          "src": "2635:20:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ExitPoolRequest_$15004_memory_ptr_$returns$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$",
                            "typeString": "function (struct IVault.ExitPoolRequest memory) pure returns (struct PoolBalances.PoolBalanceChange memory)"
                          }
                        },
                        "id": 8373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2635:29:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                          "typeString": "struct PoolBalances.PoolBalanceChange memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                          "typeString": "struct PoolBalances.PoolBalanceChange memory"
                        }
                      ],
                      "id": 8365,
                      "name": "_joinOrExit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8554,
                      "src": "2568:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PoolBalanceChangeKind_$15024_$_t_bytes32_$_t_address_$_t_address_payable_$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$returns$__$",
                        "typeString": "function (enum IVault.PoolBalanceChangeKind,bytes32,address,address payable,struct PoolBalances.PoolBalanceChange memory)"
                      }
                    },
                    "id": 8374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2568:97:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8375,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:97:33"
                }
              ]
            },
            "baseFunctions": [
              14992
            ],
            "functionSelector": "8bdb3913",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitPool",
            "nameLocation": "2297:8:33",
            "overrides": {
              "id": 8363,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2444:8:33"
            },
            "parameters": {
              "id": 8362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8354,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "2323:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8377,
                  "src": "2315:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8353,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8356,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2347:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8377,
                  "src": "2339:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8358,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2379:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8377,
                  "src": "2363:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 8357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:15:33",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8361,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "2421:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8377,
                  "src": "2398:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExitPoolRequest_$15004_memory_ptr",
                    "typeString": "struct IVault.ExitPoolRequest"
                  },
                  "typeName": {
                    "id": 8360,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8359,
                      "name": "ExitPoolRequest",
                      "nameLocations": [
                        "2398:15:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15004,
                      "src": "2398:15:33"
                    },
                    "referencedDeclaration": 15004,
                    "src": "2398:15:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExitPoolRequest_$15004_storage_ptr",
                      "typeString": "struct IVault.ExitPoolRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2305:129:33"
            },
            "returnParameters": {
              "id": 8364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2453:0:33"
            },
            "scope": 9039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8389,
            "nodeType": "StructDefinition",
            "src": "2967:140:33",
            "nodes": [],
            "canonicalName": "PoolBalances.PoolBalanceChange",
            "members": [
              {
                "constant": false,
                "id": 8381,
                "mutability": "mutable",
                "name": "assets",
                "nameLocation": "3011:6:33",
                "nodeType": "VariableDeclaration",
                "scope": 8389,
                "src": "3002:15:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_storage_ptr",
                  "typeString": "contract IAsset[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8378,
                      "name": "IAsset",
                      "nameLocations": [
                        "3002:6:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14558,
                      "src": "3002:6:33"
                    },
                    "referencedDeclaration": 14558,
                    "src": "3002:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAsset_$14558",
                      "typeString": "contract IAsset"
                    }
                  },
                  "id": 8380,
                  "nodeType": "ArrayTypeName",
                  "src": "3002:8:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_storage_ptr",
                    "typeString": "contract IAsset[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8384,
                "mutability": "mutable",
                "name": "limits",
                "nameLocation": "3037:6:33",
                "nodeType": "VariableDeclaration",
                "scope": 8389,
                "src": "3027:16:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 8382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8383,
                  "nodeType": "ArrayTypeName",
                  "src": "3027:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8386,
                "mutability": "mutable",
                "name": "userData",
                "nameLocation": "3059:8:33",
                "nodeType": "VariableDeclaration",
                "scope": 8389,
                "src": "3053:14:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 8385,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3053:5:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8388,
                "mutability": "mutable",
                "name": "useInternalBalance",
                "nameLocation": "3082:18:33",
                "nodeType": "VariableDeclaration",
                "scope": 8389,
                "src": "3077:23:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8387,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3077:4:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolBalanceChange",
            "nameLocation": "2974:17:33",
            "scope": 9039,
            "visibility": "public"
          },
          {
            "id": 8401,
            "nodeType": "FunctionDefinition",
            "src": "3216:267:33",
            "nodes": [],
            "body": {
              "id": 8400,
              "nodeType": "Block",
              "src": "3361:122:33",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3436:41:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3450:17:33",
                        "value": {
                          "name": "request",
                          "nodeType": "YulIdentifier",
                          "src": "3460:7:33"
                        },
                        "variableNames": [
                          {
                            "name": "change",
                            "nodeType": "YulIdentifier",
                            "src": "3450:6:33"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 8397,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3450:6:33",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3460:7:33",
                      "valueSize": 1
                    }
                  ],
                  "id": 8399,
                  "nodeType": "InlineAssembly",
                  "src": "3427:50:33"
                }
              ]
            },
            "documentation": {
              "id": 8390,
              "nodeType": "StructuredDocumentation",
              "src": "3113:98:33",
              "text": " @dev Converts a JoinPoolRequest into a PoolBalanceChange, with no runtime cost."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toPoolBalanceChange",
            "nameLocation": "3225:20:33",
            "parameters": {
              "id": 8394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8393,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "3269:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8401,
                  "src": "3246:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_JoinPoolRequest_$14979_memory_ptr",
                    "typeString": "struct IVault.JoinPoolRequest"
                  },
                  "typeName": {
                    "id": 8392,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8391,
                      "name": "JoinPoolRequest",
                      "nameLocations": [
                        "3246:15:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14979,
                      "src": "3246:15:33"
                    },
                    "referencedDeclaration": 14979,
                    "src": "3246:15:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JoinPoolRequest_$14979_storage_ptr",
                      "typeString": "struct IVault.JoinPoolRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3245:32:33"
            },
            "returnParameters": {
              "id": 8398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8397,
                  "mutability": "mutable",
                  "name": "change",
                  "nameLocation": "3349:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8401,
                  "src": "3324:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                    "typeString": "struct PoolBalances.PoolBalanceChange"
                  },
                  "typeName": {
                    "id": 8396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8395,
                      "name": "PoolBalanceChange",
                      "nameLocations": [
                        "3324:17:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8389,
                      "src": "3324:17:33"
                    },
                    "referencedDeclaration": 8389,
                    "src": "3324:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_storage_ptr",
                      "typeString": "struct PoolBalances.PoolBalanceChange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3323:33:33"
            },
            "scope": 9039,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8413,
            "nodeType": "FunctionDefinition",
            "src": "3593:267:33",
            "nodes": [],
            "body": {
              "id": 8412,
              "nodeType": "Block",
              "src": "3738:122:33",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3813:41:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3827:17:33",
                        "value": {
                          "name": "request",
                          "nodeType": "YulIdentifier",
                          "src": "3837:7:33"
                        },
                        "variableNames": [
                          {
                            "name": "change",
                            "nodeType": "YulIdentifier",
                            "src": "3827:6:33"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 8409,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3827:6:33",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8405,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3837:7:33",
                      "valueSize": 1
                    }
                  ],
                  "id": 8411,
                  "nodeType": "InlineAssembly",
                  "src": "3804:50:33"
                }
              ]
            },
            "documentation": {
              "id": 8402,
              "nodeType": "StructuredDocumentation",
              "src": "3489:99:33",
              "text": " @dev Converts an ExitPoolRequest into a PoolBalanceChange, with no runtime cost."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toPoolBalanceChange",
            "nameLocation": "3602:20:33",
            "parameters": {
              "id": 8406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8405,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "3646:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8413,
                  "src": "3623:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExitPoolRequest_$15004_memory_ptr",
                    "typeString": "struct IVault.ExitPoolRequest"
                  },
                  "typeName": {
                    "id": 8404,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8403,
                      "name": "ExitPoolRequest",
                      "nameLocations": [
                        "3623:15:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15004,
                      "src": "3623:15:33"
                    },
                    "referencedDeclaration": 15004,
                    "src": "3623:15:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExitPoolRequest_$15004_storage_ptr",
                      "typeString": "struct IVault.ExitPoolRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:32:33"
            },
            "returnParameters": {
              "id": 8410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8409,
                  "mutability": "mutable",
                  "name": "change",
                  "nameLocation": "3726:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8413,
                  "src": "3701:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                    "typeString": "struct PoolBalances.PoolBalanceChange"
                  },
                  "typeName": {
                    "id": 8408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8407,
                      "name": "PoolBalanceChange",
                      "nameLocations": [
                        "3701:17:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8389,
                      "src": "3701:17:33"
                    },
                    "referencedDeclaration": 8389,
                    "src": "3701:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_storage_ptr",
                      "typeString": "struct PoolBalances.PoolBalanceChange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3700:33:33"
            },
            "scope": 9039,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8554,
            "nodeType": "FunctionDefinition",
            "src": "3954:2358:33",
            "nodes": [],
            "body": {
              "id": 8553,
              "nodeType": "Block",
              "src": "4213:2099:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 8440,
                            "name": "change",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8426,
                            "src": "4548:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                              "typeString": "struct PoolBalances.PoolBalanceChange memory"
                            }
                          },
                          "id": 8441,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4555:6:33",
                          "memberName": "assets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8381,
                          "src": "4548:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                            "typeString": "contract IAsset[] memory"
                          }
                        },
                        "id": 8442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4562:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4548:20:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 8443,
                            "name": "change",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8426,
                            "src": "4570:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                              "typeString": "struct PoolBalances.PoolBalanceChange memory"
                            }
                          },
                          "id": 8444,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4577:6:33",
                          "memberName": "limits",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8384,
                          "src": "4570:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 8445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4584:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4570:20:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8437,
                        "name": "InputHelpers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "4512:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InputHelpers_$3498_$",
                          "typeString": "type(library InputHelpers)"
                        }
                      },
                      "id": 8439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4525:22:33",
                      "memberName": "ensureInputLengthMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3386,
                      "src": "4512:35:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 8446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4512:79:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8447,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:79:33"
                },
                {
                  "assignments": [
                    8452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8452,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "4772:6:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "4756:22:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8450,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8449,
                            "name": "IERC20",
                            "nameLocations": [
                              "4756:6:33"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 670,
                            "src": "4756:6:33"
                          },
                          "referencedDeclaration": 670,
                          "src": "4756:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8451,
                        "nodeType": "ArrayTypeName",
                        "src": "4756:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8457,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8454,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8426,
                          "src": "4800:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                            "typeString": "struct PoolBalances.PoolBalanceChange memory"
                          }
                        },
                        "id": 8455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4807:6:33",
                        "memberName": "assets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8381,
                        "src": "4800:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                          "typeString": "contract IAsset[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                          "typeString": "contract IAsset[] memory"
                        }
                      ],
                      "id": 8453,
                      "name": "_translateToIERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2858,
                        2909
                      ],
                      "referencedDeclaration": 2909,
                      "src": "4781:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr_$returns$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$",
                        "typeString": "function (contract IAsset[] memory) view returns (contract IERC20[] memory)"
                      }
                    },
                    "id": 8456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4781:33:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4756:58:33"
                },
                {
                  "assignments": [
                    8462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8462,
                      "mutability": "mutable",
                      "name": "balances",
                      "nameLocation": "4841:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "4824:25:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8460,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4824:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 8461,
                        "nodeType": "ArrayTypeName",
                        "src": "4824:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8467,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8464,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8419,
                        "src": "4882:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8465,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8452,
                        "src": "4890:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      ],
                      "id": 8463,
                      "name": "_validateTokensAndGetBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8983,
                      "src": "4852:29:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32,contract IERC20[] memory) view returns (bytes32[] memory)"
                      }
                    },
                    "id": 8466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:45:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4824:73:33"
                },
                {
                  "assignments": [
                    8472,
                    8475,
                    8478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8472,
                      "mutability": "mutable",
                      "name": "finalBalances",
                      "nameLocation": "5111:13:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "5094:30:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8470,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5094:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 8471,
                        "nodeType": "ArrayTypeName",
                        "src": "5094:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8475,
                      "mutability": "mutable",
                      "name": "amountsInOrOut",
                      "nameLocation": "5155:14:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "5138:31:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5138:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8474,
                        "nodeType": "ArrayTypeName",
                        "src": "5138:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8478,
                      "mutability": "mutable",
                      "name": "paidProtocolSwapFeeAmounts",
                      "nameLocation": "5200:26:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "5183:43:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8476,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5183:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8477,
                        "nodeType": "ArrayTypeName",
                        "src": "5183:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8487,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8480,
                        "name": "kind",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8417,
                        "src": "5262:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        }
                      },
                      {
                        "id": 8481,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8419,
                        "src": "5268:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8482,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8421,
                        "src": "5276:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8483,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8423,
                        "src": "5284:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 8484,
                        "name": "change",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8426,
                        "src": "5295:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                          "typeString": "struct PoolBalances.PoolBalanceChange memory"
                        }
                      },
                      {
                        "id": 8485,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8462,
                        "src": "5303:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                          "typeString": "struct PoolBalances.PoolBalanceChange memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "id": 8479,
                      "name": "_callPoolBalanceChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8670,
                      "src": "5239:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PoolBalanceChangeKind_$15024_$_t_bytes32_$_t_address_$_t_address_payable_$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (enum IVault.PoolBalanceChangeKind,bytes32,address,address payable,struct PoolBalances.PoolBalanceChange memory,bytes32[] memory) returns (bytes32[] memory,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 8486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5239:73:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32[] memory,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5080:232:33"
                },
                {
                  "assignments": [
                    8490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8490,
                      "mutability": "mutable",
                      "name": "specialization",
                      "nameLocation": "5404:14:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "5385:33:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                        "typeString": "enum IVault.PoolSpecialization"
                      },
                      "typeName": {
                        "id": 8489,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8488,
                          "name": "PoolSpecialization",
                          "nameLocations": [
                            "5385:18:33"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14848,
                          "src": "5385:18:33"
                        },
                        "referencedDeclaration": 14848,
                        "src": "5385:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                          "typeString": "enum IVault.PoolSpecialization"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8494,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8492,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8419,
                        "src": "5444:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 8491,
                      "name": "_getPoolSpecialization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9319,
                      "src": "5421:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_enum$_PoolSpecialization_$14848_$",
                        "typeString": "function (bytes32) pure returns (enum IVault.PoolSpecialization)"
                      }
                    },
                    "id": 8493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5421:30:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                      "typeString": "enum IVault.PoolSpecialization"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5385:66:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                      "typeString": "enum IVault.PoolSpecialization"
                    },
                    "id": 8498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8495,
                      "name": "specialization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8490,
                      "src": "5465:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                        "typeString": "enum IVault.PoolSpecialization"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8496,
                        "name": "PoolSpecialization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14848,
                        "src": "5483:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PoolSpecialization_$14848_$",
                          "typeString": "type(enum IVault.PoolSpecialization)"
                        }
                      },
                      "id": 8497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5502:9:33",
                      "memberName": "TWO_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14847,
                      "src": "5483:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                        "typeString": "enum IVault.PoolSpecialization"
                      }
                    },
                    "src": "5465:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                        "typeString": "enum IVault.PoolSpecialization"
                      },
                      "id": 8519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8516,
                        "name": "specialization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8490,
                        "src": "5642:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                          "typeString": "enum IVault.PoolSpecialization"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 8517,
                          "name": "PoolSpecialization",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14848,
                          "src": "5660:18:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PoolSpecialization_$14848_$",
                            "typeString": "type(enum IVault.PoolSpecialization)"
                          }
                        },
                        "id": 8518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5679:17:33",
                        "memberName": "MINIMAL_SWAP_INFO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14846,
                        "src": "5660:36:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$14848",
                          "typeString": "enum IVault.PoolSpecialization"
                        }
                      },
                      "src": "5642:54:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 8532,
                      "nodeType": "Block",
                      "src": "5791:113:33",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8528,
                                "name": "poolId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8419,
                                "src": "5871:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 8529,
                                "name": "finalBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8472,
                                "src": "5879:13:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              ],
                              "id": 8527,
                              "name": "_setGeneralPoolBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13040,
                              "src": "5847:23:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (bytes32,bytes32[] memory)"
                              }
                            },
                            "id": 8530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5847:46:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8531,
                          "nodeType": "ExpressionStatement",
                          "src": "5847:46:33"
                        }
                      ]
                    },
                    "id": 8533,
                    "nodeType": "IfStatement",
                    "src": "5638:266:33",
                    "trueBody": {
                      "id": 8526,
                      "nodeType": "Block",
                      "src": "5698:87:33",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8521,
                                "name": "poolId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8419,
                                "src": "5744:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 8522,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8452,
                                "src": "5752:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                  "typeString": "contract IERC20[] memory"
                                }
                              },
                              {
                                "id": 8523,
                                "name": "finalBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8472,
                                "src": "5760:13:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                  "typeString": "contract IERC20[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              ],
                              "id": 8520,
                              "name": "_setMinimalSwapInfoPoolBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13496,
                              "src": "5712:31:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (bytes32,contract IERC20[] memory,bytes32[] memory)"
                              }
                            },
                            "id": 8524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5712:62:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8525,
                          "nodeType": "ExpressionStatement",
                          "src": "5712:62:33"
                        }
                      ]
                    }
                  },
                  "id": 8534,
                  "nodeType": "IfStatement",
                  "src": "5461:443:33",
                  "trueBody": {
                    "id": 8515,
                    "nodeType": "Block",
                    "src": "5513:119:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8500,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8419,
                              "src": "5556:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 8501,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8452,
                                "src": "5564:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                  "typeString": "contract IERC20[] memory"
                                }
                              },
                              "id": 8503,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 8502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5571:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5564:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 8504,
                                "name": "finalBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8472,
                                "src": "5575:13:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 8506,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 8505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5589:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5575:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 8507,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8452,
                                "src": "5593:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                  "typeString": "contract IERC20[] memory"
                                }
                              },
                              "id": 8509,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 8508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5600:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5593:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 8510,
                                "name": "finalBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8472,
                                "src": "5604:13:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 8512,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 8511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5618:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5604:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 8499,
                            "name": "_setTwoTokenPoolCashBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13968,
                            "src": "5527:28:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,contract IERC20,bytes32,contract IERC20,bytes32)"
                            }
                          },
                          "id": 8513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5527:94:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8514,
                        "nodeType": "ExpressionStatement",
                        "src": "5527:94:33"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8536,
                      "mutability": "mutable",
                      "name": "positive",
                      "nameLocation": "5919:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8553,
                      "src": "5914:13:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 8535,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5914:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8541,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                      "typeString": "enum IVault.PoolBalanceChangeKind"
                    },
                    "id": 8540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8537,
                      "name": "kind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8417,
                      "src": "5930:4:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                        "typeString": "enum IVault.PoolBalanceChangeKind"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 8538,
                        "name": "PoolBalanceChangeKind",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15024,
                        "src": "5938:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PoolBalanceChangeKind_$15024_$",
                          "typeString": "type(enum IVault.PoolBalanceChangeKind)"
                        }
                      },
                      "id": 8539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5960:4:33",
                      "memberName": "JOIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15022,
                      "src": "5938:26:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                        "typeString": "enum IVault.PoolBalanceChangeKind"
                      }
                    },
                    "src": "5930:34:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5914:50:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8543,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8419,
                        "src": "6056:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8544,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8421,
                        "src": "6076:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8545,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8452,
                        "src": "6096:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8547,
                            "name": "amountsInOrOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8475,
                            "src": "6230:14:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 8548,
                            "name": "positive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8536,
                            "src": "6246:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 8546,
                          "name": "_unsafeCastToInt256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9038,
                          "src": "6210:19:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,bool) pure returns (int256[] memory)"
                          }
                        },
                        "id": 8549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6210:45:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      },
                      {
                        "id": 8550,
                        "name": "paidProtocolSwapFeeAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8478,
                        "src": "6269:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 8542,
                      "name": "PoolBalanceChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15021,
                      "src": "6024:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,contract IERC20[] memory,int256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 8551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6024:281:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8552,
                  "nodeType": "EmitStatement",
                  "src": "6019:286:33"
                }
              ]
            },
            "documentation": {
              "id": 8414,
              "nodeType": "StructuredDocumentation",
              "src": "3866:83:33",
              "text": " @dev Implements both `joinPool` and `exitPool`, based on `kind`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8429,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8428,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4149:12:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6858,
                  "src": "4149:12:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "4149:12:33"
              },
              {
                "arguments": [
                  {
                    "id": 8431,
                    "name": "poolId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8419,
                    "src": "4181:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8432,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8430,
                  "name": "withRegisteredPool",
                  "nameLocations": [
                    "4162:18:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9066,
                  "src": "4162:18:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "4162:26:33"
              },
              {
                "arguments": [
                  {
                    "id": 8434,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8421,
                    "src": "4205:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8433,
                  "name": "authenticateFor",
                  "nameLocations": [
                    "4189:15:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12037,
                  "src": "4189:15:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "4189:23:33"
              }
            ],
            "name": "_joinOrExit",
            "nameLocation": "3963:11:33",
            "parameters": {
              "id": 8427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8417,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "4006:4:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8554,
                  "src": "3984:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                    "typeString": "enum IVault.PoolBalanceChangeKind"
                  },
                  "typeName": {
                    "id": 8416,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8415,
                      "name": "PoolBalanceChangeKind",
                      "nameLocations": [
                        "3984:21:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15024,
                      "src": "3984:21:33"
                    },
                    "referencedDeclaration": 15024,
                    "src": "3984:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                      "typeString": "enum IVault.PoolBalanceChangeKind"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8419,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "4028:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8554,
                  "src": "4020:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8418,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4020:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8421,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4052:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8554,
                  "src": "4044:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4044:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8423,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4084:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8554,
                  "src": "4068:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 8422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4068:15:33",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8426,
                  "mutability": "mutable",
                  "name": "change",
                  "nameLocation": "4128:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8554,
                  "src": "4103:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                    "typeString": "struct PoolBalances.PoolBalanceChange"
                  },
                  "typeName": {
                    "id": 8425,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8424,
                      "name": "PoolBalanceChange",
                      "nameLocations": [
                        "4103:17:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8389,
                      "src": "4103:17:33"
                    },
                    "referencedDeclaration": 8389,
                    "src": "4103:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_storage_ptr",
                      "typeString": "struct PoolBalances.PoolBalanceChange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3974:166:33"
            },
            "returnParameters": {
              "id": 8436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4213:0:33"
            },
            "scope": 9039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8670,
            "nodeType": "FunctionDefinition",
            "src": "6539:1752:33",
            "nodes": [],
            "body": {
              "id": 8669,
              "nodeType": "Block",
              "src": "6960:1331:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    8586,
                    8588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8586,
                      "mutability": "mutable",
                      "name": "totalBalances",
                      "nameLocation": "6988:13:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8669,
                      "src": "6971:30:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8584,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6971:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8585,
                        "nodeType": "ArrayTypeName",
                        "src": "6971:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8588,
                      "mutability": "mutable",
                      "name": "lastChangeBlock",
                      "nameLocation": "7011:15:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8669,
                      "src": "7003:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8587,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7003:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8592,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8589,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8570,
                        "src": "7030:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 8590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7039:24:33",
                      "memberName": "totalsAndLastChangeBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12422,
                      "src": "7030:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$attached_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32[] memory) pure returns (uint256[] memory,uint256)"
                      }
                    },
                    "id": 8591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7030:35:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(uint256[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6970:95:33"
                },
                {
                  "assignments": [
                    8595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8595,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "7086:4:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8669,
                      "src": "7076:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBasePool_$14631",
                        "typeString": "contract IBasePool"
                      },
                      "typeName": {
                        "id": 8594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8593,
                          "name": "IBasePool",
                          "nameLocations": [
                            "7076:9:33"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14631,
                          "src": "7076:9:33"
                        },
                        "referencedDeclaration": 14631,
                        "src": "7076:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBasePool_$14631",
                          "typeString": "contract IBasePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8601,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8598,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8560,
                            "src": "7119:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 8597,
                          "name": "_getPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9278,
                          "src": "7103:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) pure returns (address)"
                          }
                        },
                        "id": 8599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7103:23:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8596,
                      "name": "IBasePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14631,
                      "src": "7093:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IBasePool_$14631_$",
                        "typeString": "type(contract IBasePool)"
                      }
                    },
                    "id": 8600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7093:34:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBasePool_$14631",
                      "typeString": "contract IBasePool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7076:51:33"
                },
                {
                  "expression": {
                    "id": 8634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 8602,
                          "name": "amountsInOrOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8577,
                          "src": "7138:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 8603,
                          "name": "dueProtocolFeeAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8580,
                          "src": "7154:21:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "id": 8604,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7137:39:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        },
                        "id": 8608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8605,
                          "name": "kind",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8558,
                          "src": "7179:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                            "typeString": "enum IVault.PoolBalanceChangeKind"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8606,
                            "name": "PoolBalanceChangeKind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15024,
                            "src": "7187:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PoolBalanceChangeKind_$15024_$",
                              "typeString": "type(enum IVault.PoolBalanceChangeKind)"
                            }
                          },
                          "id": 8607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7209:4:33",
                          "memberName": "JOIN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15022,
                          "src": "7187:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                            "typeString": "enum IVault.PoolBalanceChangeKind"
                          }
                        },
                        "src": "7179:34:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "arguments": [
                          {
                            "id": 8623,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8560,
                            "src": "7526:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 8624,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8562,
                            "src": "7550:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8625,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8564,
                            "src": "7574:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 8626,
                            "name": "totalBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8586,
                            "src": "7601:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 8627,
                            "name": "lastChangeBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8588,
                            "src": "7632:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8628,
                              "name": "_getProtocolSwapFeePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "7665:29:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 8629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7665:31:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 8630,
                              "name": "change",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8567,
                              "src": "7714:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                "typeString": "struct PoolBalances.PoolBalanceChange memory"
                              }
                            },
                            "id": 8631,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7721:8:33",
                            "memberName": "userData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8386,
                            "src": "7714:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 8621,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8595,
                            "src": "7493:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBasePool_$14631",
                              "typeString": "contract IBasePool"
                            }
                          },
                          "id": 8622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7498:10:33",
                          "memberName": "onExitPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14630,
                          "src": "7493:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32,address,address,uint256[] memory,uint256,uint256,bytes memory) external returns (uint256[] memory,uint256[] memory)"
                          }
                        },
                        "id": 8632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7493:250:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "tuple(uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 8633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "7179:564:33",
                      "trueExpression": {
                        "arguments": [
                          {
                            "id": 8611,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8560,
                            "src": "7261:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 8612,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8562,
                            "src": "7285:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8613,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8564,
                            "src": "7309:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 8614,
                            "name": "totalBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8586,
                            "src": "7336:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 8615,
                            "name": "lastChangeBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8588,
                            "src": "7367:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8616,
                              "name": "_getProtocolSwapFeePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "7400:29:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 8617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7400:31:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 8618,
                              "name": "change",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8567,
                              "src": "7449:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                "typeString": "struct PoolBalances.PoolBalanceChange memory"
                              }
                            },
                            "id": 8619,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7456:8:33",
                            "memberName": "userData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8386,
                            "src": "7449:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 8609,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8595,
                            "src": "7228:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBasePool_$14631",
                              "typeString": "contract IBasePool"
                            }
                          },
                          "id": 8610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7233:10:33",
                          "memberName": "onJoinPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14605,
                          "src": "7228:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32,address,address,uint256[] memory,uint256,uint256,bytes memory) external returns (uint256[] memory,uint256[] memory)"
                          }
                        },
                        "id": 8620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7228:250:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "tuple(uint256[] memory,uint256[] memory)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "src": "7137:606:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8635,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:606:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8639,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8570,
                          "src": "7790:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 8640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7799:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7790:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8641,
                          "name": "amountsInOrOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8577,
                          "src": "7807:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 8642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7822:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7807:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8643,
                          "name": "dueProtocolFeeAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8580,
                          "src": "7830:21:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 8644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7852:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7830:28:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8636,
                        "name": "InputHelpers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "7754:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InputHelpers_$3498_$",
                          "typeString": "type(library InputHelpers)"
                        }
                      },
                      "id": 8638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7767:22:33",
                      "memberName": "ensureInputLengthMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3408,
                      "src": "7754:35:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256) pure"
                      }
                    },
                    "id": 8645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7754:105:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8646,
                  "nodeType": "ExpressionStatement",
                  "src": "7754:105:33"
                },
                {
                  "expression": {
                    "id": 8667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8647,
                      "name": "finalBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8574,
                      "src": "8021:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                          "typeString": "enum IVault.PoolBalanceChangeKind"
                        },
                        "id": 8651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8648,
                          "name": "kind",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8558,
                          "src": "8037:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                            "typeString": "enum IVault.PoolBalanceChangeKind"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8649,
                            "name": "PoolBalanceChangeKind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15024,
                            "src": "8045:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PoolBalanceChangeKind_$15024_$",
                              "typeString": "type(enum IVault.PoolBalanceChangeKind)"
                            }
                          },
                          "id": 8650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8067:4:33",
                          "memberName": "JOIN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15022,
                          "src": "8045:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                            "typeString": "enum IVault.PoolBalanceChangeKind"
                          }
                        },
                        "src": "8037:34:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "arguments": [
                          {
                            "id": 8660,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8564,
                            "src": "8217:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 8661,
                            "name": "change",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8567,
                            "src": "8228:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                              "typeString": "struct PoolBalances.PoolBalanceChange memory"
                            }
                          },
                          {
                            "id": 8662,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8570,
                            "src": "8236:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 8663,
                            "name": "amountsInOrOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8577,
                            "src": "8246:14:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 8664,
                            "name": "dueProtocolFeeAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8580,
                            "src": "8262:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                              "typeString": "struct PoolBalances.PoolBalanceChange memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 8659,
                          "name": "_processExitPoolTransfers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8912,
                          "src": "8191:25:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (address payable,struct PoolBalances.PoolBalanceChange memory,bytes32[] memory,uint256[] memory,uint256[] memory) returns (bytes32[] memory)"
                          }
                        },
                        "id": 8665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8191:93:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 8666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "8037:247:33",
                      "trueExpression": {
                        "arguments": [
                          {
                            "id": 8653,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8562,
                            "src": "8112:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8654,
                            "name": "change",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8567,
                            "src": "8120:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                              "typeString": "struct PoolBalances.PoolBalanceChange memory"
                            }
                          },
                          {
                            "id": 8655,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8570,
                            "src": "8128:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 8656,
                            "name": "amountsInOrOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8577,
                            "src": "8138:14:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 8657,
                            "name": "dueProtocolFeeAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8580,
                            "src": "8154:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                              "typeString": "struct PoolBalances.PoolBalanceChange memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 8652,
                          "name": "_processJoinPoolTransfers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8807,
                          "src": "8086:25:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_PoolBalanceChange_$8389_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (address,struct PoolBalances.PoolBalanceChange memory,bytes32[] memory,uint256[] memory,uint256[] memory) returns (bytes32[] memory)"
                          }
                        },
                        "id": 8658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8086:90:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "8021:263:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 8668,
                  "nodeType": "ExpressionStatement",
                  "src": "8021:263:33"
                }
              ]
            },
            "documentation": {
              "id": 8555,
              "nodeType": "StructuredDocumentation",
              "src": "6318:216:33",
              "text": " @dev Calls the corresponding Pool hook to get the amounts in/out plus protocol fee amounts, and performs the\n associated token transfers and fee payments, returning the Pool's final balances."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callPoolBalanceChange",
            "nameLocation": "6548:22:33",
            "parameters": {
              "id": 8571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8558,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "6602:4:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6580:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                    "typeString": "enum IVault.PoolBalanceChangeKind"
                  },
                  "typeName": {
                    "id": 8557,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8556,
                      "name": "PoolBalanceChangeKind",
                      "nameLocations": [
                        "6580:21:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15024,
                      "src": "6580:21:33"
                    },
                    "referencedDeclaration": 15024,
                    "src": "6580:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolBalanceChangeKind_$15024",
                      "typeString": "enum IVault.PoolBalanceChangeKind"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8560,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "6624:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6616:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8559,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6616:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8562,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6648:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6640:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6640:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8564,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6680:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6664:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 8563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6664:15:33",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8567,
                  "mutability": "mutable",
                  "name": "change",
                  "nameLocation": "6724:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6699:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                    "typeString": "struct PoolBalances.PoolBalanceChange"
                  },
                  "typeName": {
                    "id": 8566,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8565,
                      "name": "PoolBalanceChange",
                      "nameLocations": [
                        "6699:17:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8389,
                      "src": "6699:17:33"
                    },
                    "referencedDeclaration": 8389,
                    "src": "6699:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_storage_ptr",
                      "typeString": "struct PoolBalances.PoolBalanceChange"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8570,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "6757:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6740:25:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8568,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6740:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8569,
                    "nodeType": "ArrayTypeName",
                    "src": "6740:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6570:201:33"
            },
            "returnParameters": {
              "id": 8581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8574,
                  "mutability": "mutable",
                  "name": "finalBalances",
                  "nameLocation": "6835:13:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6818:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8572,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6818:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8573,
                    "nodeType": "ArrayTypeName",
                    "src": "6818:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8577,
                  "mutability": "mutable",
                  "name": "amountsInOrOut",
                  "nameLocation": "6879:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6862:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8575,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6862:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8576,
                    "nodeType": "ArrayTypeName",
                    "src": "6862:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8580,
                  "mutability": "mutable",
                  "name": "dueProtocolFeeAmounts",
                  "nameLocation": "6924:21:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8670,
                  "src": "6907:38:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8578,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6907:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8579,
                    "nodeType": "ArrayTypeName",
                    "src": "6907:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6804:151:33"
            },
            "scope": 9039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8807,
            "nodeType": "FunctionDefinition",
            "src": "8605:1605:33",
            "nodes": [],
            "body": {
              "id": 8806,
              "nodeType": "Block",
              "src": "8879:1331:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    8692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8692,
                      "mutability": "mutable",
                      "name": "wrappedEth",
                      "nameLocation": "9007:10:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8806,
                      "src": "8999:18:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8999:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8694,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9020:1:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8999:22:33"
                },
                {
                  "expression": {
                    "id": 8702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8695,
                      "name": "finalBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8689,
                      "src": "9032:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8699,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8679,
                            "src": "9062:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 8700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9071:6:33",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9062:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "9048:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes32[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 8696,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "9052:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 8697,
                          "nodeType": "ArrayTypeName",
                          "src": "9052:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        }
                      },
                      "id": 8701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9048:30:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "9032:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 8703,
                  "nodeType": "ExpressionStatement",
                  "src": "9032:46:33"
                },
                {
                  "body": {
                    "id": 8800,
                    "nodeType": "Block",
                    "src": "9139:977:33",
                    "statements": [
                      {
                        "assignments": [
                          8717
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8717,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "9161:8:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 8800,
                            "src": "9153:16:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8716,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9153:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8721,
                        "initialValue": {
                          "baseExpression": {
                            "id": 8718,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8682,
                            "src": "9172:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 8720,
                          "indexExpression": {
                            "id": 8719,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8705,
                            "src": "9182:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9172:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9153:31:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8723,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8717,
                                "src": "9207:8:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 8724,
                                    "name": "change",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8676,
                                    "src": "9219:6:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                      "typeString": "struct PoolBalances.PoolBalanceChange memory"
                                    }
                                  },
                                  "id": 8725,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9226:6:33",
                                  "memberName": "limits",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8384,
                                  "src": "9219:13:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 8727,
                                "indexExpression": {
                                  "id": 8726,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8705,
                                  "src": "9233:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9219:16:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9207:28:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 8729,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3317,
                                "src": "9237:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 8730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9244:14:33",
                              "memberName": "JOIN_ABOVE_MAX",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3241,
                              "src": "9237:21:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8722,
                            "name": "_require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3023,
                            "src": "9198:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,uint256) pure"
                            }
                          },
                          "id": 8731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9198:61:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8732,
                        "nodeType": "ExpressionStatement",
                        "src": "9198:61:33"
                      },
                      {
                        "assignments": [
                          8735
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8735,
                            "mutability": "mutable",
                            "name": "asset",
                            "nameLocation": "9361:5:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 8800,
                            "src": "9354:12:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            },
                            "typeName": {
                              "id": 8734,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8733,
                                "name": "IAsset",
                                "nameLocations": [
                                  "9354:6:33"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14558,
                                "src": "9354:6:33"
                              },
                              "referencedDeclaration": 14558,
                              "src": "9354:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8740,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 8736,
                              "name": "change",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8676,
                              "src": "9369:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                "typeString": "struct PoolBalances.PoolBalanceChange memory"
                              }
                            },
                            "id": 8737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9376:6:33",
                            "memberName": "assets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8381,
                            "src": "9369:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                              "typeString": "contract IAsset[] memory"
                            }
                          },
                          "id": 8739,
                          "indexExpression": {
                            "id": 8738,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8705,
                            "src": "9383:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9369:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$14558",
                            "typeString": "contract IAsset"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9354:31:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8742,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8735,
                              "src": "9413:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            },
                            {
                              "id": 8743,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8717,
                              "src": "9420:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8744,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8673,
                              "src": "9430:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8745,
                                "name": "change",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8676,
                                "src": "9438:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                  "typeString": "struct PoolBalances.PoolBalanceChange memory"
                                }
                              },
                              "id": 8746,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9445:18:33",
                              "memberName": "useInternalBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8388,
                              "src": "9438:25:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8741,
                            "name": "_receiveAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7593,
                            "src": "9399:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (contract IAsset,uint256,address,bool)"
                            }
                          },
                          "id": 8747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9399:65:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8748,
                        "nodeType": "ExpressionStatement",
                        "src": "9399:65:33"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 8750,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8735,
                              "src": "9490:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            ],
                            "id": 8749,
                            "name": "_isETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2837,
                            "src": "9483:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IAsset_$14558_$returns$_t_bool_$",
                              "typeString": "function (contract IAsset) pure returns (bool)"
                            }
                          },
                          "id": 8751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9483:13:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8760,
                        "nodeType": "IfStatement",
                        "src": "9479:89:33",
                        "trueBody": {
                          "id": 8759,
                          "nodeType": "Block",
                          "src": "9498:70:33",
                          "statements": [
                            {
                              "expression": {
                                "id": 8757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 8752,
                                  "name": "wrappedEth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8692,
                                  "src": "9516:10:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 8755,
                                      "name": "amountIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8717,
                                      "src": "9544:8:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 8753,
                                      "name": "wrappedEth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8692,
                                      "src": "9529:10:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 8754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9540:3:33",
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5571,
                                    "src": "9529:14:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 8756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9529:24:33",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9516:37:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8758,
                              "nodeType": "ExpressionStatement",
                              "src": "9516:37:33"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          8762
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8762,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "9590:9:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 8800,
                            "src": "9582:17:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8761,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9582:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8766,
                        "initialValue": {
                          "baseExpression": {
                            "id": 8763,
                            "name": "dueProtocolFeeAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8685,
                            "src": "9602:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 8765,
                          "indexExpression": {
                            "id": 8764,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8705,
                            "src": "9624:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9602:24:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9582:44:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8769,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8735,
                                  "src": "9673:5:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAsset_$14558",
                                    "typeString": "contract IAsset"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAsset_$14558",
                                    "typeString": "contract IAsset"
                                  }
                                ],
                                "id": 8768,
                                "name": "_translateToIERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2858,
                                  2909
                                ],
                                "referencedDeclaration": 2858,
                                "src": "9654:18:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_contract$_IAsset_$14558_$returns$_t_contract$_IERC20_$670_$",
                                  "typeString": "function (contract IAsset) view returns (contract IERC20)"
                                }
                              },
                              "id": 8770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9654:25:33",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 8771,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8762,
                              "src": "9681:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8767,
                            "name": "_payFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8030,
                            "src": "9640:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$670_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,uint256)"
                            }
                          },
                          "id": 8772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9640:51:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8773,
                        "nodeType": "ExpressionStatement",
                        "src": "9640:51:33"
                      },
                      {
                        "expression": {
                          "id": 8798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8774,
                              "name": "finalBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8689,
                              "src": "9893:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 8776,
                            "indexExpression": {
                              "id": 8775,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8705,
                              "src": "9907:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9893:16:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8777,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8717,
                                    "src": "9913:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 8778,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8762,
                                    "src": "9925:9:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9913:21:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 8780,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9912:23:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8793,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8762,
                                    "src": "10084:9:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 8794,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8717,
                                    "src": "10096:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10084:20:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 8789,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8679,
                                    "src": "10059:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 8791,
                                  "indexExpression": {
                                    "id": 8790,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8705,
                                    "src": "10068:1:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10059:11:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 8792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10071:12:33",
                                "memberName": "decreaseCash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12577,
                                "src": "10059:24:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
                                  "typeString": "function (bytes32,uint256) view returns (bytes32)"
                                }
                              },
                              "id": 8796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10059:46:33",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 8797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "9912:193:33",
                            "trueExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8785,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8717,
                                    "src": "10019:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 8786,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8762,
                                    "src": "10030:9:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10019:20:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 8781,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8679,
                                    "src": "9994:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 8783,
                                  "indexExpression": {
                                    "id": 8782,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8705,
                                    "src": "10003:1:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9994:11:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 8784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10006:12:33",
                                "memberName": "increaseCash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12540,
                                "src": "9994:24:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
                                  "typeString": "function (bytes32,uint256) view returns (bytes32)"
                                }
                              },
                              "id": 8788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9994:46:33",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9893:212:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 8799,
                        "nodeType": "ExpressionStatement",
                        "src": "9893:212:33"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8708,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8705,
                      "src": "9108:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 8709,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8676,
                          "src": "9112:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                            "typeString": "struct PoolBalances.PoolBalanceChange memory"
                          }
                        },
                        "id": 8710,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9119:6:33",
                        "memberName": "assets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8381,
                        "src": "9112:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                          "typeString": "contract IAsset[] memory"
                        }
                      },
                      "id": 8711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9126:6:33",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9112:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9108:24:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8801,
                  "initializationExpression": {
                    "assignments": [
                      8705
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8705,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9101:1:33",
                        "nodeType": "VariableDeclaration",
                        "scope": 8801,
                        "src": "9093:9:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8704,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9093:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8707,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9105:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9093:13:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "9134:3:33",
                      "subExpression": {
                        "id": 8713,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8705,
                        "src": "9136:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8715,
                    "nodeType": "ExpressionStatement",
                    "src": "9134:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "9088:1028:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8803,
                        "name": "wrappedEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8692,
                        "src": "10192:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8802,
                      "name": "_handleRemainingEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7699,
                      "src": "10172:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 8804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10172:31:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8805,
                  "nodeType": "ExpressionStatement",
                  "src": "10172:31:33"
                }
              ]
            },
            "documentation": {
              "id": 8671,
              "nodeType": "StructuredDocumentation",
              "src": "8297:303:33",
              "text": " @dev Transfers `amountsIn` from `sender`, checking that they are within their accepted limits, and pays\n accumulated protocol swap fees.\n Returns the Pool's final balances, which are the current balances plus `amountsIn` minus accumulated protocol\n swap fees."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processJoinPoolTransfers",
            "nameLocation": "8614:25:33",
            "parameters": {
              "id": 8686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8673,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8657:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8807,
                  "src": "8649:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8649:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8676,
                  "mutability": "mutable",
                  "name": "change",
                  "nameLocation": "8698:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8807,
                  "src": "8673:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                    "typeString": "struct PoolBalances.PoolBalanceChange"
                  },
                  "typeName": {
                    "id": 8675,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8674,
                      "name": "PoolBalanceChange",
                      "nameLocations": [
                        "8673:17:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8389,
                      "src": "8673:17:33"
                    },
                    "referencedDeclaration": 8389,
                    "src": "8673:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_storage_ptr",
                      "typeString": "struct PoolBalances.PoolBalanceChange"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8679,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "8731:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8807,
                  "src": "8714:25:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8677,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8714:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8678,
                    "nodeType": "ArrayTypeName",
                    "src": "8714:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8682,
                  "mutability": "mutable",
                  "name": "amountsIn",
                  "nameLocation": "8766:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8807,
                  "src": "8749:26:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8680,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8749:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8681,
                    "nodeType": "ArrayTypeName",
                    "src": "8749:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8685,
                  "mutability": "mutable",
                  "name": "dueProtocolFeeAmounts",
                  "nameLocation": "8802:21:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8807,
                  "src": "8785:38:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8683,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8785:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8684,
                    "nodeType": "ArrayTypeName",
                    "src": "8785:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8639:190:33"
            },
            "returnParameters": {
              "id": 8690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8689,
                  "mutability": "mutable",
                  "name": "finalBalances",
                  "nameLocation": "8864:13:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8807,
                  "src": "8847:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8687,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8847:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8688,
                    "nodeType": "ArrayTypeName",
                    "src": "8847:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8846:32:33"
            },
            "scope": 9039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8912,
            "nodeType": "FunctionDefinition",
            "src": "10547:1072:33",
            "nodes": [],
            "body": {
              "id": 8911,
              "nodeType": "Block",
              "src": "10833:786:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 8835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8828,
                      "name": "finalBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8826,
                      "src": "10843:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8832,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8816,
                            "src": "10873:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 8833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10882:6:33",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10873:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10859:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes32[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 8829,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10863:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 8830,
                          "nodeType": "ArrayTypeName",
                          "src": "10863:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        }
                      },
                      "id": 8834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10859:30:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "10843:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 8836,
                  "nodeType": "ExpressionStatement",
                  "src": "10843:46:33"
                },
                {
                  "body": {
                    "id": 8909,
                    "nodeType": "Block",
                    "src": "10950:663:33",
                    "statements": [
                      {
                        "assignments": [
                          8850
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8850,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "10972:9:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 8909,
                            "src": "10964:17:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8849,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10964:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8854,
                        "initialValue": {
                          "baseExpression": {
                            "id": 8851,
                            "name": "amountsOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8819,
                            "src": "10984:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 8853,
                          "indexExpression": {
                            "id": 8852,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8838,
                            "src": "10995:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10984:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10964:33:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8856,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8850,
                                "src": "11020:9:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 8857,
                                    "name": "change",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8813,
                                    "src": "11033:6:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                      "typeString": "struct PoolBalances.PoolBalanceChange memory"
                                    }
                                  },
                                  "id": 8858,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11040:6:33",
                                  "memberName": "limits",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8384,
                                  "src": "11033:13:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 8860,
                                "indexExpression": {
                                  "id": 8859,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8838,
                                  "src": "11047:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11033:16:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11020:29:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 8862,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3317,
                                "src": "11051:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 8863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "11058:14:33",
                              "memberName": "EXIT_BELOW_MIN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3238,
                              "src": "11051:21:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8855,
                            "name": "_require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3023,
                            "src": "11011:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,uint256) pure"
                            }
                          },
                          "id": 8864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11011:62:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8865,
                        "nodeType": "ExpressionStatement",
                        "src": "11011:62:33"
                      },
                      {
                        "assignments": [
                          8868
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8868,
                            "mutability": "mutable",
                            "name": "asset",
                            "nameLocation": "11170:5:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 8909,
                            "src": "11163:12:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            },
                            "typeName": {
                              "id": 8867,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8866,
                                "name": "IAsset",
                                "nameLocations": [
                                  "11163:6:33"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14558,
                                "src": "11163:6:33"
                              },
                              "referencedDeclaration": 14558,
                              "src": "11163:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8873,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 8869,
                              "name": "change",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8813,
                              "src": "11178:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                "typeString": "struct PoolBalances.PoolBalanceChange memory"
                              }
                            },
                            "id": 8870,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11185:6:33",
                            "memberName": "assets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8381,
                            "src": "11178:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                              "typeString": "contract IAsset[] memory"
                            }
                          },
                          "id": 8872,
                          "indexExpression": {
                            "id": 8871,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8838,
                            "src": "11192:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11178:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$14558",
                            "typeString": "contract IAsset"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11163:31:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8875,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8868,
                              "src": "11219:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            },
                            {
                              "id": 8876,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8850,
                              "src": "11226:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8877,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8810,
                              "src": "11237:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 8878,
                                "name": "change",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8813,
                                "src": "11248:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                                  "typeString": "struct PoolBalances.PoolBalanceChange memory"
                                }
                              },
                              "id": 8879,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11255:18:33",
                              "memberName": "useInternalBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8388,
                              "src": "11248:25:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8874,
                            "name": "_sendAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7662,
                            "src": "11208:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_payable_$_t_bool_$returns$__$",
                              "typeString": "function (contract IAsset,uint256,address payable,bool)"
                            }
                          },
                          "id": 8880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11208:66:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8881,
                        "nodeType": "ExpressionStatement",
                        "src": "11208:66:33"
                      },
                      {
                        "assignments": [
                          8883
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8883,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "11297:9:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 8909,
                            "src": "11289:17:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8882,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11289:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8887,
                        "initialValue": {
                          "baseExpression": {
                            "id": 8884,
                            "name": "dueProtocolFeeAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8822,
                            "src": "11309:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 8886,
                          "indexExpression": {
                            "id": 8885,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8838,
                            "src": "11331:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11309:24:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11289:44:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8890,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8868,
                                  "src": "11380:5:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAsset_$14558",
                                    "typeString": "contract IAsset"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAsset_$14558",
                                    "typeString": "contract IAsset"
                                  }
                                ],
                                "id": 8889,
                                "name": "_translateToIERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2858,
                                  2909
                                ],
                                "referencedDeclaration": 2858,
                                "src": "11361:18:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_contract$_IAsset_$14558_$returns$_t_contract$_IERC20_$670_$",
                                  "typeString": "function (contract IAsset) view returns (contract IERC20)"
                                }
                              },
                              "id": 8891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11361:25:33",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 8892,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8883,
                              "src": "11388:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8888,
                            "name": "_payFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8030,
                            "src": "11347:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$670_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,uint256)"
                            }
                          },
                          "id": 8893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11347:51:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8894,
                        "nodeType": "ExpressionStatement",
                        "src": "11347:51:33"
                      },
                      {
                        "expression": {
                          "id": 8907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8895,
                              "name": "finalBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8826,
                              "src": "11533:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 8897,
                            "indexExpression": {
                              "id": 8896,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8838,
                              "src": "11547:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11533:16:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 8904,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8883,
                                    "src": "11591:9:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 8902,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8850,
                                    "src": "11577:9:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 8903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11587:3:33",
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5571,
                                  "src": "11577:13:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 8905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11577:24:33",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 8898,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8816,
                                  "src": "11552:8:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 8900,
                                "indexExpression": {
                                  "id": 8899,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8838,
                                  "src": "11561:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11552:11:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 8901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11564:12:33",
                              "memberName": "decreaseCash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12577,
                              "src": "11552:24:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256) view returns (bytes32)"
                              }
                            },
                            "id": 8906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11552:50:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11533:69:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 8908,
                        "nodeType": "ExpressionStatement",
                        "src": "11533:69:33"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8841,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8838,
                      "src": "10919:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 8842,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8813,
                          "src": "10923:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                            "typeString": "struct PoolBalances.PoolBalanceChange memory"
                          }
                        },
                        "id": 8843,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10930:6:33",
                        "memberName": "assets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8381,
                        "src": "10923:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$14558_$dyn_memory_ptr",
                          "typeString": "contract IAsset[] memory"
                        }
                      },
                      "id": 8844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10937:6:33",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10923:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10919:24:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8910,
                  "initializationExpression": {
                    "assignments": [
                      8838
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8838,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10912:1:33",
                        "nodeType": "VariableDeclaration",
                        "scope": 8910,
                        "src": "10904:9:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10904:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8840,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10916:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10904:13:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "10945:3:33",
                      "subExpression": {
                        "id": 8846,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8838,
                        "src": "10947:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8848,
                    "nodeType": "ExpressionStatement",
                    "src": "10945:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "10899:714:33"
                }
              ]
            },
            "documentation": {
              "id": 8808,
              "nodeType": "StructuredDocumentation",
              "src": "10216:326:33",
              "text": " @dev Transfers `amountsOut` to `recipient`, checking that they are within their accepted limits, and pays\n accumulated protocol swap fees from the Pool.\n Returns the Pool's final balances, which are the current `balances` minus `amountsOut` and fees paid\n (`dueProtocolFeeAmounts`)."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processExitPoolTransfers",
            "nameLocation": "10556:25:33",
            "parameters": {
              "id": 8823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8810,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "10607:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8912,
                  "src": "10591:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 8809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10591:15:33",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8813,
                  "mutability": "mutable",
                  "name": "change",
                  "nameLocation": "10651:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8912,
                  "src": "10626:31:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_memory_ptr",
                    "typeString": "struct PoolBalances.PoolBalanceChange"
                  },
                  "typeName": {
                    "id": 8812,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8811,
                      "name": "PoolBalanceChange",
                      "nameLocations": [
                        "10626:17:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8389,
                      "src": "10626:17:33"
                    },
                    "referencedDeclaration": 8389,
                    "src": "10626:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolBalanceChange_$8389_storage_ptr",
                      "typeString": "struct PoolBalances.PoolBalanceChange"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8816,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "10684:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8912,
                  "src": "10667:25:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8814,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10667:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8815,
                    "nodeType": "ArrayTypeName",
                    "src": "10667:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8819,
                  "mutability": "mutable",
                  "name": "amountsOut",
                  "nameLocation": "10719:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8912,
                  "src": "10702:27:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8817,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10702:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8818,
                    "nodeType": "ArrayTypeName",
                    "src": "10702:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8822,
                  "mutability": "mutable",
                  "name": "dueProtocolFeeAmounts",
                  "nameLocation": "10756:21:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8912,
                  "src": "10739:38:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8820,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10739:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8821,
                    "nodeType": "ArrayTypeName",
                    "src": "10739:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10581:202:33"
            },
            "returnParameters": {
              "id": 8827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8826,
                  "mutability": "mutable",
                  "name": "finalBalances",
                  "nameLocation": "10818:13:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8912,
                  "src": "10801:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8824,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10801:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8825,
                    "nodeType": "ArrayTypeName",
                    "src": "10801:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10800:32:33"
            },
            "scope": 9039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8983,
            "nodeType": "FunctionDefinition",
            "src": "11937:590:33",
            "nodes": [],
            "body": {
              "id": 8982,
              "nodeType": "Block",
              "src": "12092:435:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    8929,
                    8932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8929,
                      "mutability": "mutable",
                      "name": "actualTokens",
                      "nameLocation": "12119:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8982,
                      "src": "12103:28:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8927,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8926,
                            "name": "IERC20",
                            "nameLocations": [
                              "12103:6:33"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 670,
                            "src": "12103:6:33"
                          },
                          "referencedDeclaration": 670,
                          "src": "12103:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8928,
                        "nodeType": "ArrayTypeName",
                        "src": "12103:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8932,
                      "mutability": "mutable",
                      "name": "balances",
                      "nameLocation": "12150:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 8982,
                      "src": "12133:25:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8930,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12133:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 8931,
                        "nodeType": "ArrayTypeName",
                        "src": "12133:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8936,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8934,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8915,
                        "src": "12177:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 8933,
                      "name": "_getPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9740,
                      "src": "12162:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (contract IERC20[] memory,bytes32[] memory)"
                      }
                    },
                    "id": 8935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12162:22:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IERC20[] memory,bytes32[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12102:82:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8940,
                          "name": "actualTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8929,
                          "src": "12230:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        },
                        "id": 8941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12243:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "12230:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8942,
                          "name": "expectedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8919,
                          "src": "12251:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        },
                        "id": 8943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12266:6:33",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "12251:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8937,
                        "name": "InputHelpers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "12194:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InputHelpers_$3498_$",
                          "typeString": "type(library InputHelpers)"
                        }
                      },
                      "id": 8939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12207:22:33",
                      "memberName": "ensureInputLengthMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3386,
                      "src": "12194:35:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 8944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12194:79:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8945,
                  "nodeType": "ExpressionStatement",
                  "src": "12194:79:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8947,
                            "name": "actualTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8929,
                            "src": "12292:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 8948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12305:6:33",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12292:19:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12314:1:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12292:23:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 8951,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3317,
                          "src": "12317:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 8952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12324:14:33",
                        "memberName": "POOL_NO_TOKENS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3304,
                        "src": "12317:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8946,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "12283:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 8953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12283:56:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8954,
                  "nodeType": "ExpressionStatement",
                  "src": "12283:56:33"
                },
                {
                  "body": {
                    "id": 8978,
                    "nodeType": "Block",
                    "src": "12400:95:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              "id": 8973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 8967,
                                  "name": "actualTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8929,
                                  "src": "12423:12:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                    "typeString": "contract IERC20[] memory"
                                  }
                                },
                                "id": 8969,
                                "indexExpression": {
                                  "id": 8968,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8956,
                                  "src": "12436:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12423:15:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 8970,
                                  "name": "expectedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8919,
                                  "src": "12442:14:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                    "typeString": "contract IERC20[] memory"
                                  }
                                },
                                "id": 8972,
                                "indexExpression": {
                                  "id": 8971,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8956,
                                  "src": "12457:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12442:17:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "12423:36:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 8974,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3317,
                                "src": "12461:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 8975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12468:15:33",
                              "memberName": "TOKENS_MISMATCH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3283,
                              "src": "12461:22:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8966,
                            "name": "_require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3023,
                            "src": "12414:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,uint256) pure"
                            }
                          },
                          "id": 8976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12414:70:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8977,
                        "nodeType": "ExpressionStatement",
                        "src": "12414:70:33"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8959,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8956,
                      "src": "12370:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8960,
                        "name": "actualTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8929,
                        "src": "12374:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 8961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12387:6:33",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12374:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12370:23:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8979,
                  "initializationExpression": {
                    "assignments": [
                      8956
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8956,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12363:1:33",
                        "nodeType": "VariableDeclaration",
                        "scope": 8979,
                        "src": "12355:9:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8955,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12355:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8958,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12367:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12355:13:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "12395:3:33",
                      "subExpression": {
                        "id": 8963,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8956,
                        "src": "12397:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8965,
                    "nodeType": "ExpressionStatement",
                    "src": "12395:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "12350:145:33"
                },
                {
                  "expression": {
                    "id": 8980,
                    "name": "balances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8932,
                    "src": "12512:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 8924,
                  "id": 8981,
                  "nodeType": "Return",
                  "src": "12505:15:33"
                }
              ]
            },
            "documentation": {
              "id": 8913,
              "nodeType": "StructuredDocumentation",
              "src": "11625:307:33",
              "text": " @dev Returns the total balance for `poolId`'s `expectedTokens`.\n `expectedTokens` must exactly equal the token array returned by `getPoolTokens`: both arrays must have the same\n length, elements and order. Additionally, the Pool must have at least one registered token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateTokensAndGetBalances",
            "nameLocation": "11946:29:33",
            "parameters": {
              "id": 8920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8915,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "11984:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8983,
                  "src": "11976:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8914,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11976:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8919,
                  "mutability": "mutable",
                  "name": "expectedTokens",
                  "nameLocation": "12008:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 8983,
                  "src": "11992:30:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8917,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 8916,
                        "name": "IERC20",
                        "nameLocations": [
                          "11992:6:33"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 670,
                        "src": "11992:6:33"
                      },
                      "referencedDeclaration": 670,
                      "src": "11992:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 8918,
                    "nodeType": "ArrayTypeName",
                    "src": "11992:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11975:48:33"
            },
            "returnParameters": {
              "id": 8924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8983,
                  "src": "12070:16:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8921,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "12070:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8922,
                    "nodeType": "ArrayTypeName",
                    "src": "12070:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12069:18:33"
            },
            "scope": 9039,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 9038,
            "nodeType": "FunctionDefinition",
            "src": "12739:353:33",
            "nodes": [],
            "body": {
              "id": 9037,
              "nodeType": "Block",
              "src": "12888:204:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 9002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8995,
                      "name": "signedValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8993,
                      "src": "12898:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8999,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8987,
                            "src": "12926:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 9000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12933:6:33",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12926:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12913:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (int256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 8996,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12917:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 8997,
                          "nodeType": "ArrayTypeName",
                          "src": "12917:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        }
                      },
                      "id": 9001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12913:27:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[] memory"
                      }
                    },
                    "src": "12898:42:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                      "typeString": "int256[] memory"
                    }
                  },
                  "id": 9003,
                  "nodeType": "ExpressionStatement",
                  "src": "12898:42:33"
                },
                {
                  "body": {
                    "id": 9035,
                    "nodeType": "Block",
                    "src": "12994:92:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 9033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9015,
                              "name": "signedValues",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8993,
                              "src": "13008:12:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                "typeString": "int256[] memory"
                              }
                            },
                            "id": 9017,
                            "indexExpression": {
                              "id": 9016,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9005,
                              "src": "13021:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13008:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "id": 9018,
                              "name": "positive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8989,
                              "src": "13026:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 9031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "13057:18:33",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 9027,
                                      "name": "values",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8987,
                                      "src": "13065:6:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 9029,
                                    "indexExpression": {
                                      "id": 9028,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9005,
                                      "src": "13072:1:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13065:9:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 9026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13058:6:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 9025,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13058:6:33",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 9030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13058:17:33",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 9032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "13026:49:33",
                            "trueExpression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 9021,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8987,
                                    "src": "13044:6:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 9023,
                                  "indexExpression": {
                                    "id": 9022,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9005,
                                    "src": "13051:1:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13044:9:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 9020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13037:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 9019,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13037:6:33",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13037:17:33",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "13008:67:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 9034,
                        "nodeType": "ExpressionStatement",
                        "src": "13008:67:33"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9008,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9005,
                      "src": "12970:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9009,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8987,
                        "src": "12974:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 9010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12981:6:33",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12974:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12970:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9036,
                  "initializationExpression": {
                    "assignments": [
                      9005
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9005,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12963:1:33",
                        "nodeType": "VariableDeclaration",
                        "scope": 9036,
                        "src": "12955:9:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12955:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9007,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12967:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12955:13:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12989:3:33",
                      "subExpression": {
                        "id": 9012,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9005,
                        "src": "12989:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9014,
                    "nodeType": "ExpressionStatement",
                    "src": "12989:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "12950:136:33"
                }
              ]
            },
            "documentation": {
              "id": 8984,
              "nodeType": "StructuredDocumentation",
              "src": "12533:201:33",
              "text": " @dev Casts an array of uint256 to int256, setting the sign of the result according to the `positive` flag,\n without checking whether the values fit in the signed 256 bit range."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unsafeCastToInt256",
            "nameLocation": "12748:19:33",
            "parameters": {
              "id": 8990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8987,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "12785:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "12768:23:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8985,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12768:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8986,
                    "nodeType": "ArrayTypeName",
                    "src": "12768:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8989,
                  "mutability": "mutable",
                  "name": "positive",
                  "nameLocation": "12798:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "12793:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8988,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12793:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12767:40:33"
            },
            "returnParameters": {
              "id": 8994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8993,
                  "mutability": "mutable",
                  "name": "signedValues",
                  "nameLocation": "12870:12:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "12854:28:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8991,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12854:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 8992,
                    "nodeType": "ArrayTypeName",
                    "src": "12854:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12853:30:33"
            },
            "scope": 9039,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 8301,
              "name": "Fees",
              "nameLocations": [
                "1522:4:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8031,
              "src": "1522:4:33"
            },
            "id": 8302,
            "nodeType": "InheritanceSpecifier",
            "src": "1522:4:33"
          },
          {
            "baseName": {
              "id": 8303,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1528:15:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6883,
              "src": "1528:15:33"
            },
            "id": 8304,
            "nodeType": "InheritanceSpecifier",
            "src": "1528:15:33"
          },
          {
            "baseName": {
              "id": 8305,
              "name": "PoolTokens",
              "nameLocations": [
                "1545:10:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9741,
              "src": "1545:10:33"
            },
            "id": 8306,
            "nodeType": "InheritanceSpecifier",
            "src": "1545:10:33"
          },
          {
            "baseName": {
              "id": 8307,
              "name": "UserBalance",
              "nameLocations": [
                "1557:11:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11916,
              "src": "1557:11:33"
            },
            "id": 8308,
            "nodeType": "InheritanceSpecifier",
            "src": "1557:11:33"
          }
        ],
        "canonicalName": "PoolBalances",
        "contractDependencies": [
          10020
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8300,
          "nodeType": "StructuredDocumentation",
          "src": "1093:394:33",
          "text": " @dev Stores the Asset Managers (by Pool and token), and implements the top level Asset Manager and Pool interfaces,\n such as registering and deregistering tokens, joining and exiting Pools, and informational functions like `getPool`\n and `getPoolTokens`, delegating to specialization-specific functions as needed.\n `managePoolBalance` handles all Asset Manager interactions."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          9039,
          11916,
          9741,
          7482,
          14554,
          13772,
          9320,
          12232,
          3929,
          3749,
          6240,
          3005,
          3328,
          7742,
          13303,
          6883,
          8031,
          15228,
          3365,
          3346,
          2928
        ],
        "name": "PoolBalances",
        "nameLocation": "1506:12:33",
        "scope": 9040,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 33
}