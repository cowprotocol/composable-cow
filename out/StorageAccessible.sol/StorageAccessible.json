{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "getStorageAt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "calldataPayload",
          "type": "bytes"
        }
      ],
      "name": "simulateAndRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getStorageAt(uint256,uint256)": "5624b25b",
    "simulateAndRevert(address,bytes)": "b4faba09"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gnosis Developers\",\"kind\":\"dev\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}}},\"title\":\"StorageAccessible - A generic base contract that allows callers to access all internal storage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"notice\":\"Reads `length` bytes of storage in the currents contract\"}},\"notice\":\"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol         It removes a method from the original contract not needed for the Safe contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe/contracts/common/StorageAccessible.sol\":\"StorageAccessible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/safe/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStorageAt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "calldataPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "simulateAndRevert"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getStorageAt(uint256,uint256)": {
            "params": {
              "length": "- the number of words (32 bytes) of data to read",
              "offset": "- the offset in the current contract's storage in words to start reading from"
            },
            "returns": {
              "_0": "the bytes that were read."
            }
          },
          "simulateAndRevert(address,bytes)": {
            "details": "Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.",
            "params": {
              "calldataPayload": "Calldata that should be sent to the target contract (encoded method name and arguments).",
              "targetContract": "Address of the contract containing the code to execute."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getStorageAt(uint256,uint256)": {
            "notice": "Reads `length` bytes of storage in the currents contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/safe/contracts/common/StorageAccessible.sol": "StorageAccessible"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/safe/contracts/common/StorageAccessible.sol",
    "id": 50459,
    "exportedSymbols": {
      "StorageAccessible": [
        50458
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2329:106",
    "nodes": [
      {
        "id": 50411,
        "nodeType": "PragmaDirective",
        "src": "42:31:106",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 50458,
        "nodeType": "ContractDefinition",
        "src": "445:1925:106",
        "nodes": [
          {
            "id": 50447,
            "nodeType": "FunctionDefinition",
            "src": "785:464:106",
            "nodes": [],
            "body": {
              "id": 50446,
              "nodeType": "Block",
              "src": "874:375:106",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50423,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "897:6:106",
                      "nodeType": "VariableDeclaration",
                      "scope": 50446,
                      "src": "884:19:106",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50422,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "884:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50430,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50426,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50417,
                          "src": "916:6:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 50427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "925:2:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "916:11:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "906:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 50424,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "910:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 50429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:22:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "884:44:106"
                },
                {
                  "body": {
                    "id": 50442,
                    "nodeType": "Block",
                    "src": "987:233:106",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1070:140:106",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1088:37:106",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1110:6:106"
                                      },
                                      {
                                        "name": "index",
                                        "nodeType": "YulIdentifier",
                                        "src": "1118:5:106"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1106:3:106"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1106:18:106"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1100:5:106"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1100:25:106"
                              },
                              "variables": [
                                {
                                  "name": "word",
                                  "nodeType": "YulTypedName",
                                  "src": "1092:4:106",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "result",
                                            "nodeType": "YulIdentifier",
                                            "src": "1157:6:106"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1165:4:106",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1153:3:106"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1153:17:106"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "index",
                                            "nodeType": "YulIdentifier",
                                            "src": "1176:5:106"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1183:4:106",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "1172:3:106"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1172:16:106"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1149:3:106"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1149:40:106"
                                  },
                                  {
                                    "name": "word",
                                    "nodeType": "YulIdentifier",
                                    "src": "1191:4:106"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1142:6:106"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1142:54:106"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1142:54:106"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 50432,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1118:5:106",
                            "valueSize": 1
                          },
                          {
                            "declaration": 50432,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1176:5:106",
                            "valueSize": 1
                          },
                          {
                            "declaration": 50415,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1110:6:106",
                            "valueSize": 1
                          },
                          {
                            "declaration": 50423,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1157:6:106",
                            "valueSize": 1
                          }
                        ],
                        "id": 50441,
                        "nodeType": "InlineAssembly",
                        "src": "1061:149:106"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50435,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50432,
                      "src": "962:5:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 50436,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50417,
                      "src": "970:6:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "962:14:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50443,
                  "initializationExpression": {
                    "assignments": [
                      50432
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 50432,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "951:5:106",
                        "nodeType": "VariableDeclaration",
                        "scope": 50443,
                        "src": "943:13:106",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 50431,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "943:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 50434,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 50433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:1:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "943:17:106"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 50439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "978:7:106",
                      "subExpression": {
                        "id": 50438,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50432,
                        "src": "978:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50440,
                    "nodeType": "ExpressionStatement",
                    "src": "978:7:106"
                  },
                  "nodeType": "ForStatement",
                  "src": "938:282:106"
                },
                {
                  "expression": {
                    "id": 50444,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50423,
                    "src": "1236:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 50421,
                  "id": 50445,
                  "nodeType": "Return",
                  "src": "1229:13:106"
                }
              ]
            },
            "documentation": {
              "id": 50413,
              "nodeType": "StructuredDocumentation",
              "src": "487:293:106",
              "text": " @notice Reads `length` bytes of storage in the currents contract\n @param offset - the offset in the current contract's storage in words to start reading from\n @param length - the number of words (32 bytes) of data to read\n @return the bytes that were read."
            },
            "functionSelector": "5624b25b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageAt",
            "nameLocation": "794:12:106",
            "parameters": {
              "id": 50418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50415,
                  "mutability": "mutable",
                  "name": "offset",
                  "nameLocation": "815:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50447,
                  "src": "807:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50417,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "831:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50447,
                  "src": "823:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:32:106"
            },
            "returnParameters": {
              "id": 50421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50447,
                  "src": "860:12:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50419,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:5:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:14:106"
            },
            "scope": 50458,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50457,
            "nodeType": "FunctionDefinition",
            "src": "1882:486:106",
            "nodes": [],
            "body": {
              "id": 50456,
              "nodeType": "Block",
              "src": "1972:396:106",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2047:315:106",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2061:108:106",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2089:3:106"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2089:5:106"
                            },
                            {
                              "name": "targetContract",
                              "nodeType": "YulIdentifier",
                              "src": "2096:14:106"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "calldataPayload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2116:15:106"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2133:4:106",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2112:3:106"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2112:26:106"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "calldataPayload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2146:15:106"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2140:5:106"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2140:22:106"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2164:1:106",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2167:1:106",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2076:12:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2076:93:106"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "2065:7:106",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2190:4:106",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "2196:7:106"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2183:6:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:21:106"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2183:21:106"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2224:4:106",
                              "type": "",
                              "value": "0x20"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2230:14:106"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2230:16:106"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2217:6:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2217:30:106"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2217:30:106"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2275:4:106",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2281:1:106",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2284:14:106"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2284:16:106"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2260:14:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2260:41:106"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2260:41:106"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2321:1:106",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "returndatasize",
                                    "nodeType": "YulIdentifier",
                                    "src": "2328:14:106"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2328:16:106"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2346:4:106",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2324:3:106"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2324:27:106"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2314:6:106"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2314:38:106"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2314:38:106"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 50452,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2116:15:106",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50452,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2146:15:106",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50450,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2096:14:106",
                      "valueSize": 1
                    }
                  ],
                  "id": 50455,
                  "nodeType": "InlineAssembly",
                  "src": "2038:324:106"
                }
              ]
            },
            "documentation": {
              "id": 50448,
              "nodeType": "StructuredDocumentation",
              "src": "1255:622:106",
              "text": " @dev Performs a delegatecall on a targetContract in the context of self.\n Internally reverts execution to avoid side effects (making it static).\n This method reverts with data equal to `abi.encode(bool(success), bytes(response))`.\n Specifically, the `returndata` after a call to this method will be:\n `success:bool || response.length:uint256 || response:bytes`.\n @param targetContract Address of the contract containing the code to execute.\n @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments)."
            },
            "functionSelector": "b4faba09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "simulateAndRevert",
            "nameLocation": "1891:17:106",
            "parameters": {
              "id": 50453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50450,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "1917:14:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50457,
                  "src": "1909:22:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50452,
                  "mutability": "mutable",
                  "name": "calldataPayload",
                  "nameLocation": "1946:15:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50457,
                  "src": "1933:28:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50451,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:5:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:54:106"
            },
            "returnParameters": {
              "id": 50454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:106"
            },
            "scope": 50458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "StorageAccessible",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50412,
          "nodeType": "StructuredDocumentation",
          "src": "75:369:106",
          "text": " @title StorageAccessible - A generic base contract that allows callers to access all internal storage.\n @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\n         It removes a method from the original contract not needed for the Safe contracts.\n @author Gnosis Developers"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50458
        ],
        "name": "StorageAccessible",
        "nameLocation": "463:17:106",
        "scope": 50459,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 106
}