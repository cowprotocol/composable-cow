{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "OrderNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollNever",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollTryAtBlock",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollTryAtEpoch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollTryNextBlock",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "ConditionalOrderCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getTradeableOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "order",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "validateData",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ctx",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "offchainInput",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611063806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806314a2a78414610079578063a6ffa36c1461008e578063b8296fc41461009f575b600080fd5b61006461005f366004610874565b6100bf565b60405190151581526020015b60405180910390f35b61008c610087366004610928565b610158565b005b61008c61009c366004610a45565b50565b6100b26100ad366004610b14565b610275565b6040516100709190610bb3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061015257507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006101698b8b8989898989610275565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461026857604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610ca1565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906102e286860187610d0d565b905060006102f08a83610491565b9050600081604001511161036357604080518082018252600a81527f6e6f742066756e64656400000000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610ca1565b604051806101800160405280826000015173ffffffffffffffffffffffffffffffffffffffff168152602001826020015173ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200182604001518152602001826060015181526020016103ed846040015161070c565b63ffffffff16815260200183608001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020016000151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981525092505050979650505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152815160208301516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152600091908416906370a0823190602401602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190610d9e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529192506000918416906370a0823190602401602060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e69190610d9e565b9050806105f485848661072e565b11156106805760405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200161271088606001516127106106589190610de6565b61066388878961072e565b61066d9190610df9565b6106779190610e3f565b90529450610702565b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200182815260200161271088606001516127106106de9190610de6565b6106e987868a61072e565b6106f39190610df9565b6106fd9190610e3f565b905294505b5050505092915050565b6000818061071a8142610e53565b6107249190610e76565b6101529190610e9e565b6000808473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610ec2565b905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108139190610ec2565b90508060ff168260ff1611156108495761082d8183610ee5565b61083890600a61101e565b6108429086610e3f565b925061086b565b6108538282610ee5565b61085e90600a61101e565b6108689086610df9565b92505b50509392505050565b60006020828403121561088657600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146108b657600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461009c57600080fd5b60008083601f8401126108f157600080fd5b50813567ffffffffffffffff81111561090957600080fd5b60208301915083602082850101111561092157600080fd5b9250929050565b6000806000806000806000806000806102608b8d03121561094857600080fd5b6109528b356108bd565b8a35995060208b0135610964816108bd565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff8082111561099657600080fd5b6109a28e838f016108df565b909750955060c08d01359150808211156109bb57600080fd5b506109c88d828e016108df565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20011215610a0157600080fd5b60e08b0190509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610a5757600080fd5b813567ffffffffffffffff80821115610a6f57600080fd5b818401915084601f830112610a8357600080fd5b813581811115610a9557610a95610a16565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610adb57610adb610a16565b81604052828152876020848701011115610af457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080600080600080600060a0888a031215610b2f57600080fd5b8735610b3a816108bd565b96506020880135610b4a816108bd565b955060408801359450606088013567ffffffffffffffff80821115610b6e57600080fd5b610b7a8b838c016108df565b909650945060808a0135915080821115610b9357600080fd5b50610ba08a828b016108df565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610bf9602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610c21604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610c4d60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610c828285018215159052565b5050610140838101519083015261016092830151929091019190915290565b600060208083528351808285015260005b81811015610cce57858101830151858201604001528201610cb2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060a08284031215610d1f57600080fd5b60405160a0810181811067ffffffffffffffff82111715610d4257610d42610a16565b6040528235610d50816108bd565b81526020830135610d60816108bd565b6020820152604083013563ffffffff81168114610d7c57600080fd5b6040820152606083810135908201526080928301359281019290925250919050565b600060208284031215610db057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561015257610152610db7565b808202811582820484141761015257610152610db7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610e4e57610e4e610e10565b500490565b600063ffffffff80841680610e6a57610e6a610e10565b92169190910492915050565b63ffffffff818116838216028082169190828114610e9657610e96610db7565b505092915050565b63ffffffff818116838216019080821115610ebb57610ebb610db7565b5092915050565b600060208284031215610ed457600080fd5b815160ff811681146108b657600080fd5b60ff828116828216039081111561015257610152610db7565b600181815b80851115610f5757817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f3d57610f3d610db7565b80851615610f4a57918102915b93841c9390800290610f03565b509250929050565b600082610f6e57506001610152565b81610f7b57506000610152565b8160018114610f915760028114610f9b57610fb7565b6001915050610152565b60ff841115610fac57610fac610db7565b50506001821b610152565b5060208310610133831016604e8410600b8410161715610fda575081810a610152565b610fe48383610efe565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561101657611016610db7565b029392505050565b60006108b660ff841683610f5f56fea26469706673582212200c44b326291381ee4ba486b7a4e1347f461d327624ed67d5ca668becc2f1695b64736f6c63430008130033",
    "sourceMap": "569:4317:146:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806314a2a78414610079578063a6ffa36c1461008e578063b8296fc41461009f575b600080fd5b61006461005f366004610874565b6100bf565b60405190151581526020015b60405180910390f35b61008c610087366004610928565b610158565b005b61008c61009c366004610a45565b50565b6100b26100ad366004610b14565b610275565b6040516100709190610bb3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061015257507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006101698b8b8989898989610275565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461026857604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610ca1565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906102e286860187610d0d565b905060006102f08a83610491565b9050600081604001511161036357604080518082018252600a81527f6e6f742066756e64656400000000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610ca1565b604051806101800160405280826000015173ffffffffffffffffffffffffffffffffffffffff168152602001826020015173ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200182604001518152602001826060015181526020016103ed846040015161070c565b63ffffffff16815260200183608001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020016000151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981525092505050979650505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152815160208301516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152600091908416906370a0823190602401602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190610d9e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529192506000918416906370a0823190602401602060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e69190610d9e565b9050806105f485848661072e565b11156106805760405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200161271088606001516127106106589190610de6565b61066388878961072e565b61066d9190610df9565b6106779190610e3f565b90529450610702565b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200182815260200161271088606001516127106106de9190610de6565b6106e987868a61072e565b6106f39190610df9565b6106fd9190610e3f565b905294505b5050505092915050565b6000818061071a8142610e53565b6107249190610e76565b6101529190610e9e565b6000808473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610ec2565b905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108139190610ec2565b90508060ff168260ff1611156108495761082d8183610ee5565b61083890600a61101e565b6108429086610e3f565b925061086b565b6108538282610ee5565b61085e90600a61101e565b6108689086610df9565b92505b50509392505050565b60006020828403121561088657600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146108b657600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461009c57600080fd5b60008083601f8401126108f157600080fd5b50813567ffffffffffffffff81111561090957600080fd5b60208301915083602082850101111561092157600080fd5b9250929050565b6000806000806000806000806000806102608b8d03121561094857600080fd5b6109528b356108bd565b8a35995060208b0135610964816108bd565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff8082111561099657600080fd5b6109a28e838f016108df565b909750955060c08d01359150808211156109bb57600080fd5b506109c88d828e016108df565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20011215610a0157600080fd5b60e08b0190509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610a5757600080fd5b813567ffffffffffffffff80821115610a6f57600080fd5b818401915084601f830112610a8357600080fd5b813581811115610a9557610a95610a16565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610adb57610adb610a16565b81604052828152876020848701011115610af457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080600080600080600060a0888a031215610b2f57600080fd5b8735610b3a816108bd565b96506020880135610b4a816108bd565b955060408801359450606088013567ffffffffffffffff80821115610b6e57600080fd5b610b7a8b838c016108df565b909650945060808a0135915080821115610b9357600080fd5b50610ba08a828b016108df565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610bf9602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610c21604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610c4d60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610c828285018215159052565b5050610140838101519083015261016092830151929091019190915290565b600060208083528351808285015260005b81811015610cce57858101830151858201604001528201610cb2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060a08284031215610d1f57600080fd5b60405160a0810181811067ffffffffffffffff82111715610d4257610d42610a16565b6040528235610d50816108bd565b81526020830135610d60816108bd565b6020820152604083013563ffffffff81168114610d7c57600080fd5b6040820152606083810135908201526080928301359281019290925250919050565b600060208284031215610db057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561015257610152610db7565b808202811582820484141761015257610152610db7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610e4e57610e4e610e10565b500490565b600063ffffffff80841680610e6a57610e6a610e10565b92169190910492915050565b63ffffffff818116838216028082169190828114610e9657610e96610db7565b505092915050565b63ffffffff818116838216019080821115610ebb57610ebb610db7565b5092915050565b600060208284031215610ed457600080fd5b815160ff811681146108b657600080fd5b60ff828116828216039081111561015257610152610db7565b600181815b80851115610f5757817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f3d57610f3d610db7565b80851615610f4a57918102915b93841c9390800290610f03565b509250929050565b600082610f6e57506001610152565b81610f7b57506000610152565b8160018114610f915760028114610f9b57610fb7565b6001915050610152565b60ff841115610fac57610fac610db7565b50506001821b610152565b5060208310610133831016604e8410600b8410161715610fda575081810a610152565b610fe48383610efe565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561101657611016610db7565b029392505050565b60006108b660ff841683610f5f56fea26469706673582212200c44b326291381ee4ba486b7a4e1347f461d327624ed67d5ca668becc2f1695b64736f6c63430008130033",
    "sourceMap": "569:4317:146:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:220:135;;;;;;:::i;:::-;;:::i;:::-;;;612:14:170;;605:22;587:41;;575:2;560:18;1944:220:135;;;;;;;;867:634;;;;;;:::i;:::-;;:::i;:::-;;2170:100;;;;;;:::i;:::-;;;1671:1645:146;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1944:220:135:-;2031:4;2054:59;;;2069:44;2054:59;;:103;;-1:-1:-1;2117:40:135;;;2132:25;2117:40;2054:103;2047:110;1944:220;-1:-1:-1;;1944:220:135:o;867:634::-;1153:36;1192:65;1210:5;1217:6;1225:3;1230:11;;1243:13;;1192:17;:65::i;:::-;5434:14:55;;;5473:16;;5520:9;5502:28;;5578:3;5557:25;;5595:23;;6176:4;6170:11;6220:10;6194:37;;6274:1;6251:25;;6244:50;;;6337:2;6314:26;;6307:46;;;;6410:2;6381:32;;1153:104:135;;-1:-1:-1;1359:5:135;:56;1353:142;;1471:12;;;;;;;;;;;;;;;;1439:45;;;;;;;1471:12;1439:45;;;:::i;:::-;;;;;;;;1353:142;1143:358;867:634;;;;;;;;;;:::o;1671:1645:146:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:31:146;;;;;;:::i;:::-;1959:70;;2106:30;2139:17;2144:5;2151:4;2139;:17::i;:::-;2106:50;;2266:1;2241:11;:22;;;:26;2235:110;;2323:10;;;;;;;;;;;;;;;;2291:43;;;;;;;2323:10;2291:43;;;:::i;2235:110::-;2813:496;;;;;;;;2841:11;:21;;;2813:496;;;;;;2876:11;:20;;;2813:496;;;;;;2918:1;2813:496;;;;;;3014:11;:22;;;2813:496;;;;3050:11;:21;;;2813:496;;;;3085:47;3105:4;:26;;;3085:19;:47::i;:::-;2813:496;;;;;;3146:4;:12;;;2813:496;;;;3172:1;2813:496;;;;3187:19;2813:496;;;;3220:5;2813:496;;;;;;3239:23;2813:496;;;;3276:23;2813:496;;;2805:504;;1870:1446;;1671:1645;;;;;;;;;:::o;3322:1065::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:11:146;;3599;;;;3641:23;;;;;:16;8036:55:170;;;3641:23:146;;;8018:74:170;3482:21:146;;3641:16;;;;;;7991:18:170;;3641:23:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3693;;;;;:16;8036:55:170;;;3693:23:146;;;8018:74:170;3622:42:146;;-1:-1:-1;3674:16:146;;3693;;;;;7991:18:170;;3693:23:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3674:42;;3773:8;3731:39;3745:6;3753:8;3763:6;3731:13;:39::i;:::-;:50;3727:654;;;3811:257;;;;;;;;3852:6;3811:257;;;;;;3886:6;3811:257;;;;;;3922:8;3811:257;;;;271:5:144;4018:4:146;:18;;;271:5:144;4002:34:146;;;;:::i;:::-;3959:39;3973:6;3981:8;3991:6;3959:13;:39::i;:::-;:78;;;;:::i;:::-;:94;;;;:::i;:::-;3811:257;;3797:271;-1:-1:-1;3727:654:146;;;4113:257;;;;;;;;4154:6;4113:257;;;;;;4188:6;4113:257;;;;;;4224:8;4113:257;;;;271:5:144;4320:4:146;:18;;;271:5:144;4304:34:146;;;;:::i;:::-;4261:39;4275:6;4283:8;4293:6;4261:13;:39::i;:::-;:78;;;;:::i;:::-;:94;;;;:::i;:::-;4113:257;;4099:271;-1:-1:-1;3727:654:146;3472:915;;;;3322:1065;;;;:::o;463:166:144:-;526:14;614:8;;564:34;614:8;571:15;564:34;:::i;:::-;563:47;;;;:::i;:::-;562:60;;;;:::i;4393:491:146:-;4533:18;4567:17;4587:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4567:39;;4616:18;4637:9;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4616:41;;4686:12;4672:26;;:11;:26;;;4668:210;;;4747:26;4761:12;4747:11;:26;:::i;:::-;4740:34;;:2;:34;:::i;:::-;4727:48;;:9;:48;:::i;:::-;4714:61;;4668:210;;;4839:26;4854:11;4839:12;:26;:::i;:::-;4832:34;;:2;:34;:::i;:::-;4819:48;;:9;:48;:::i;:::-;4806:61;;4668:210;4557:327;;4393:491;;;;;:::o;14:332:170:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:170:o;639:154::-;725:42;718:5;714:54;707:5;704:65;694:93;;783:1;780;773:12;798:347;849:8;859:6;913:3;906:4;898:6;894:17;890:27;880:55;;931:1;928;921:12;880:55;-1:-1:-1;954:20:170;;997:18;986:30;;983:50;;;1029:1;1026;1019:12;983:50;1066:4;1058:6;1054:17;1042:29;;1118:3;1111:4;1102:6;1094;1090:19;1086:30;1083:39;1080:59;;;1135:1;1132;1125:12;1080:59;798:347;;;;;:::o;1150:1401::-;1319:6;1327;1335;1343;1351;1359;1367;1375;1383;1391;1444:3;1432:9;1423:7;1419:23;1415:33;1412:53;;;1461:1;1458;1451:12;1412:53;1474:49;1512:9;1499:23;1474:49;:::i;:::-;1555:9;1542:23;1532:33;;1615:2;1604:9;1600:18;1587:32;1628:31;1653:5;1628:31;:::i;:::-;1678:5;-1:-1:-1;1730:2:170;1715:18;;1702:32;;-1:-1:-1;1781:2:170;1766:18;;1753:32;;-1:-1:-1;1832:3:170;1817:19;;1804:33;;-1:-1:-1;1888:3:170;1873:19;;1860:33;1912:18;1942:14;;;1939:34;;;1969:1;1966;1959:12;1939:34;2008:58;2058:7;2049:6;2038:9;2034:22;2008:58;:::i;:::-;2085:8;;-1:-1:-1;1982:84:170;-1:-1:-1;2173:3:170;2158:19;;2145:33;;-1:-1:-1;2190:16:170;;;2187:36;;;2219:1;2216;2209:12;2187:36;;2258:60;2310:7;2299:8;2288:9;2284:24;2258:60;:::i;:::-;2337:8;;-1:-1:-1;2232:86:170;-1:-1:-1;;2486:3:170;2392:23;;;2417:66;2388:96;2384:106;2381:126;;;2503:1;2500;2493:12;2381:126;2541:3;2530:9;2526:19;2516:29;;1150:1401;;;;;;;;;;;;;:::o;2556:184::-;2608:77;2605:1;2598:88;2705:4;2702:1;2695:15;2729:4;2726:1;2719:15;2745:980;2813:6;2866:2;2854:9;2845:7;2841:23;2837:32;2834:52;;;2882:1;2879;2872:12;2834:52;2922:9;2909:23;2951:18;2992:2;2984:6;2981:14;2978:34;;;3008:1;3005;2998:12;2978:34;3046:6;3035:9;3031:22;3021:32;;3091:7;3084:4;3080:2;3076:13;3072:27;3062:55;;3113:1;3110;3103:12;3062:55;3149:2;3136:16;3171:2;3167;3164:10;3161:36;;;3177:18;;:::i;:::-;3311:2;3305:9;3373:4;3365:13;;3216:66;3361:22;;;3385:2;3357:31;3353:40;3341:53;;;3409:18;;;3429:22;;;3406:46;3403:72;;;3455:18;;:::i;:::-;3495:10;3491:2;3484:22;3530:2;3522:6;3515:18;3570:7;3565:2;3560;3556;3552:11;3548:20;3545:33;3542:53;;;3591:1;3588;3581:12;3542:53;3647:2;3642;3638;3634:11;3629:2;3621:6;3617:15;3604:46;3692:1;3670:15;;;3687:2;3666:24;3659:35;;;;-1:-1:-1;3674:6:170;2745:980;-1:-1:-1;;;;;2745:980:170:o;3730:1063::-;3847:6;3855;3863;3871;3879;3887;3895;3948:3;3936:9;3927:7;3923:23;3919:33;3916:53;;;3965:1;3962;3955:12;3916:53;4004:9;3991:23;4023:31;4048:5;4023:31;:::i;:::-;4073:5;-1:-1:-1;4130:2:170;4115:18;;4102:32;4143:33;4102:32;4143:33;:::i;:::-;4195:7;-1:-1:-1;4249:2:170;4234:18;;4221:32;;-1:-1:-1;4304:2:170;4289:18;;4276:32;4327:18;4357:14;;;4354:34;;;4384:1;4381;4374:12;4354:34;4423:58;4473:7;4464:6;4453:9;4449:22;4423:58;:::i;:::-;4500:8;;-1:-1:-1;4397:84:170;-1:-1:-1;4588:3:170;4573:19;;4560:33;;-1:-1:-1;4605:16:170;;;4602:36;;;4634:1;4631;4624:12;4602:36;;4673:60;4725:7;4714:8;4703:9;4699:24;4673:60;:::i;:::-;3730:1063;;;;-1:-1:-1;3730:1063:170;;-1:-1:-1;3730:1063:170;;;;4647:86;;-1:-1:-1;;;3730:1063:170:o;5037:1264::-;5257:13;;4883:42;4872:54;4860:67;;5217:3;5202:19;;5329:4;5321:6;5317:17;5311:24;5344:62;5400:4;5389:9;5385:20;5371:12;4883:42;4872:54;4860:67;;4798:135;5344:62;;5455:4;5447:6;5443:17;5437:24;5470:64;5528:4;5517:9;5513:20;5497:14;4883:42;4872:54;4860:67;;4798:135;5470:64;;5590:4;5582:6;5578:17;5572:24;5565:4;5554:9;5550:20;5543:54;5653:4;5645:6;5641:17;5635:24;5628:4;5617:9;5613:20;5606:54;5709:4;5701:6;5697:17;5691:24;5724:55;5773:4;5762:9;5758:20;5742:14;5014:10;5003:22;4991:35;;4938:94;5724:55;;5835:4;5827:6;5823:17;5817:24;5810:4;5799:9;5795:20;5788:54;5898:4;5890:6;5886:17;5880:24;5873:4;5862:9;5858:20;5851:54;5924:6;5984:2;5976:6;5972:15;5966:22;5961:2;5950:9;5946:18;5939:50;;6008:6;6063:2;6055:6;6051:15;6045:22;6076:51;6123:2;6112:9;6108:18;6092:14;421:13;414:21;402:34;;351:91;6076:51;-1:-1:-1;;6146:6:170;6194:15;;;6188:22;6168:18;;;6161:50;6230:6;6278:15;;;6272:22;6252:18;;;;6245:50;;;;5037:1264;:::o;6306:607::-;6418:4;6447:2;6476;6465:9;6458:21;6508:6;6502:13;6551:6;6546:2;6535:9;6531:18;6524:34;6576:1;6586:140;6600:6;6597:1;6594:13;6586:140;;;6695:14;;;6691:23;;6685:30;6661:17;;;6680:2;6657:26;6650:66;6615:10;;6586:140;;;6590:3;6775:1;6770:2;6761:6;6750:9;6746:22;6742:31;6735:42;6904:2;6834:66;6829:2;6821:6;6817:15;6813:88;6802:9;6798:104;6794:113;6786:121;;;;6306:607;;;;:::o;6918:949::-;7000:6;7053:3;7041:9;7032:7;7028:23;7024:33;7021:53;;;7070:1;7067;7060:12;7021:53;7103:2;7097:9;7145:3;7137:6;7133:16;7215:6;7203:10;7200:22;7179:18;7167:10;7164:34;7161:62;7158:88;;;7226:18;;:::i;:::-;7262:2;7255:22;7299:23;;7331:31;7299:23;7331:31;:::i;:::-;7371:21;;7444:2;7429:18;;7416:32;7457:33;7416:32;7457:33;:::i;:::-;7518:2;7506:15;;7499:32;7583:2;7568:18;;7555:32;7631:10;7618:24;;7606:37;;7596:65;;7657:1;7654;7647:12;7596:65;7689:2;7677:15;;7670:32;7763:2;7748:18;;;7735:32;7718:15;;;7711:57;7830:3;7815:19;;;7802:33;7784:16;;;7777:59;;;;-1:-1:-1;7681:6:170;6918:949;-1:-1:-1;6918:949:170:o;8103:184::-;8173:6;8226:2;8214:9;8205:7;8201:23;8197:32;8194:52;;;8242:1;8239;8232:12;8194:52;-1:-1:-1;8265:16:170;;8103:184;-1:-1:-1;8103:184:170:o;8292:::-;8344:77;8341:1;8334:88;8441:4;8438:1;8431:15;8465:4;8462:1;8455:15;8481:125;8546:9;;;8567:10;;;8564:36;;;8580:18;;:::i;8611:168::-;8684:9;;;8715;;8732:15;;;8726:22;;8712:37;8702:71;;8753:18;;:::i;8784:184::-;8836:77;8833:1;8826:88;8933:4;8930:1;8923:15;8957:4;8954:1;8947:15;8973:120;9013:1;9039;9029:35;;9044:18;;:::i;:::-;-1:-1:-1;9078:9:170;;8973:120::o;9098:191::-;9137:1;9163:10;9200:2;9197:1;9193:10;9222:3;9212:37;;9229:18;;:::i;:::-;9267:10;;9263:20;;;;;9098:191;-1:-1:-1;;9098:191:170:o;9294:249::-;9365:10;9407;;;9419;;;9403:27;9450:20;;;;9365:10;9489:24;;;9479:58;;9517:18;;:::i;:::-;9479:58;;9294:249;;;;:::o;9548:172::-;9615:10;9645;;;9657;;;9641:27;;9680:11;;;9677:37;;;9694:18;;:::i;:::-;9677:37;9548:172;;;;:::o;9725:273::-;9793:6;9846:2;9834:9;9825:7;9821:23;9817:32;9814:52;;;9862:1;9859;9852:12;9814:52;9894:9;9888:16;9944:4;9937:5;9933:16;9926:5;9923:27;9913:55;;9964:1;9961;9954:12;10003:151;10093:4;10086:12;;;10072;;;10068:31;;10111:14;;10108:40;;;10128:18;;:::i;10159:482::-;10248:1;10291:5;10248:1;10305:330;10326:7;10316:8;10313:21;10305:330;;;10445:4;10377:66;10373:77;10367:4;10364:87;10361:113;;;10454:18;;:::i;:::-;10504:7;10494:8;10490:22;10487:55;;;10524:16;;;;10487:55;10603:22;;;;10563:15;;;;10305:330;;;10309:3;10159:482;;;;;:::o;10646:866::-;10695:5;10725:8;10715:80;;-1:-1:-1;10766:1:170;10780:5;;10715:80;10814:4;10804:76;;-1:-1:-1;10851:1:170;10865:5;;10804:76;10896:4;10914:1;10909:59;;;;10982:1;10977:130;;;;10889:218;;10909:59;10939:1;10930:10;;10953:5;;;10977:130;11014:3;11004:8;11001:17;10998:43;;;11021:18;;:::i;:::-;-1:-1:-1;;11077:1:170;11063:16;;11092:5;;10889:218;;11191:2;11181:8;11178:16;11172:3;11166:4;11163:13;11159:36;11153:2;11143:8;11140:16;11135:2;11129:4;11126:12;11122:35;11119:77;11116:159;;;-1:-1:-1;11228:19:170;;;11260:5;;11116:159;11307:34;11332:8;11326:4;11307:34;:::i;:::-;11437:6;11369:66;11365:79;11356:7;11353:92;11350:118;;;11448:18;;:::i;:::-;11486:20;;10646:866;-1:-1:-1;;;10646:866:170:o;11517:140::-;11575:5;11604:47;11645:4;11635:8;11631:19;11625:4;11604:47;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getTradeableOrder(address,address,bytes32,bytes,bytes)": "b8296fc4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "validateData(bytes)": "a6ffa36c",
    "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": "14a2a784"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"OrderNotValid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollNever\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollTryAtBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollTryAtEpoch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollTryNextBlock\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"ConditionalOrderCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getTradeableOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"validateData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ctx\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainInput\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OrderNotValid(string)\":[{\"details\":\"This error is returned by the `getTradeableOrder` function if the order condition is not met.      A parameter of `string` type is included to allow the caller to specify the reason for the failure.\"}]},\"events\":{\"ConditionalOrderCreated(address,(address,bytes32,bytes))\":{\"details\":\"This event is emitted when a new conditional order is created.\",\"params\":{\"owner\":\"the address that has created the conditional order\",\"params\":\"the address / salt / data of the conditional order\"}}},\"kind\":\"dev\",\"methods\":{\"getTradeableOrder(address,address,bytes32,bytes,bytes)\":{\"details\":\"Get a tradeable order that can be posted to the CoW Protocol API and would pass signature validation.      **MUST** revert if the order condition is not met.\",\"params\":{\"ctx\":\"the context of the order (bytes32(0) if merkle tree is used, otherwise the H(params))\",\"offchainInput\":\"dynamic off-chain input for a discrete order cut from this conditional order\",\"owner\":\"the contract who is the owner of the order\",\"sender\":\"the `msg.sender` of the parent `isValidSignature` call\",\"staticInput\":\"the static input for all discrete orders cut from this conditional order\"},\"returns\":{\"order\":\"the tradeable order for submission to the CoW Protocol API\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"validateData(bytes)\":{\"details\":\"Throws if the data is invalid.\",\"params\":{\"data\":\"The ABI-encoded concrete order type's `Data` struct to be validated.\"}},\"verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))\":{\"details\":\"As an order generator, the `GPv2Order.Data` passed as a parameter is ignored / not validated.\",\"params\":{\"_hash\":\"the hash of the order\",\"ctx\":\"the context key of the order (bytes32(0) if a merkle tree is used, otherwise H(params)) with which to lookup the cabinet\",\"domainSeparator\":\"the domain separator used to sign the order\",\"offchainInput\":\"dynamic off-chain input for a discrete order cut from this conditional order\",\"order\":\"`GPv2Order.Data` of a discrete order to be verified (if *not* an `IConditionalOrderGenerator`).\",\"owner\":\"the contract who is the owner of the order\",\"sender\":\"the `msg.sender` of the transaction\",\"staticInput\":\"the static input for all discrete orders cut from this conditional order\"}}},\"title\":\"A smart contract that is always willing to trade between tokenA and tokenB 1:1, taking decimals into account (and adding specifiable spread)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateData(bytes)\":{\"notice\":\"A helper function for SDK users to verify if a given conditional order's data is valid.\"},\"verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))\":{\"notice\":\"Verify if a given discrete order is valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/types/PerpetualStableSwap.sol\":\"PerpetualStableSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol\":{\"keccak256\":\"0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f\",\"dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"src/BaseConditionalOrder.sol\":{\"keccak256\":\"0x83d14b5411a5a1adc00da2d3e17703cd7be15de3f5637b2a3f77501df14c5e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c007603000bb506c58265f61863bb90966a210429f2985a2632d4f00c7bbc1f\",\"dweb:/ipfs/QmUz7ikMYiS8MGNsMxvcHzpkX2yYiPidxvcfG97Vpqs73j\"]},\"src/interfaces/IConditionalOrder.sol\":{\"keccak256\":\"0x9ce9ab9b32a1cea3dd9390407f9733458868f0c4e706acbf5373d2c083ec363e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e033e894f26b27544fc11d9cc1cd21351693defc8bd8716a47a74da57c634e28\",\"dweb:/ipfs/QmcC4PtfpCpf3srEqAuU3GNxz4qvgX8bU5B78hAQQjQhMW\"]},\"src/types/ConditionalOrdersUtilsLib.sol\":{\"keccak256\":\"0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777\",\"dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf\"]},\"src/types/PerpetualStableSwap.sol\":{\"keccak256\":\"0x424e6173a794b2e1920fcb84d81453e360cdbc0c44069ed21c7a8a34bcc704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e4468e4c0171925efbdb98845c8b9c6bcafd8c5e59f53effed3ac17f88330eb\",\"dweb:/ipfs/QmVE8eMCzwESuTXNTr9PgZYm3vmoEhnsTXVZfwFssvD5RF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OrderNotValid"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollNever"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollTryAtBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollTryAtEpoch"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollTryNextBlock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConditionalOrderCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTradeableOrder",
          "outputs": [
            {
              "internalType": "struct GPv2Order.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "ctx",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "offchainInput",
              "type": "bytes"
            },
            {
              "internalType": "struct GPv2Order.Data",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getTradeableOrder(address,address,bytes32,bytes,bytes)": {
            "details": "Get a tradeable order that can be posted to the CoW Protocol API and would pass signature validation.      **MUST** revert if the order condition is not met.",
            "params": {
              "ctx": "the context of the order (bytes32(0) if merkle tree is used, otherwise the H(params))",
              "offchainInput": "dynamic off-chain input for a discrete order cut from this conditional order",
              "owner": "the contract who is the owner of the order",
              "sender": "the `msg.sender` of the parent `isValidSignature` call",
              "staticInput": "the static input for all discrete orders cut from this conditional order"
            },
            "returns": {
              "order": "the tradeable order for submission to the CoW Protocol API"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "validateData(bytes)": {
            "details": "Throws if the data is invalid.",
            "params": {
              "data": "The ABI-encoded concrete order type's `Data` struct to be validated."
            }
          },
          "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": {
            "details": "As an order generator, the `GPv2Order.Data` passed as a parameter is ignored / not validated.",
            "params": {
              "_hash": "the hash of the order",
              "ctx": "the context key of the order (bytes32(0) if a merkle tree is used, otherwise H(params)) with which to lookup the cabinet",
              "domainSeparator": "the domain separator used to sign the order",
              "offchainInput": "dynamic off-chain input for a discrete order cut from this conditional order",
              "order": "`GPv2Order.Data` of a discrete order to be verified (if *not* an `IConditionalOrderGenerator`).",
              "owner": "the contract who is the owner of the order",
              "sender": "the `msg.sender` of the transaction",
              "staticInput": "the static input for all discrete orders cut from this conditional order"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "validateData(bytes)": {
            "notice": "A helper function for SDK users to verify if a given conditional order's data is valid."
          },
          "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": {
            "notice": "Verify if a given discrete order is valid."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "balancer/=lib/balancer/src/",
        "canonical-weth/=lib/canonical-weth/src/",
        "cowprotocol/=lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/balancer/src/lib/helpers/",
        "math/=lib/balancer/src/lib/math/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/types/PerpetualStableSwap.sol": "PerpetualStableSwap"
      },
      "libraries": {}
    },
    "sources": {
      "lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol": {
        "keccak256": "0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528",
        "urls": [
          "bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f",
          "dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516",
        "urls": [
          "bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0",
          "dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/BaseConditionalOrder.sol": {
        "keccak256": "0x83d14b5411a5a1adc00da2d3e17703cd7be15de3f5637b2a3f77501df14c5e9c",
        "urls": [
          "bzz-raw://4c007603000bb506c58265f61863bb90966a210429f2985a2632d4f00c7bbc1f",
          "dweb:/ipfs/QmUz7ikMYiS8MGNsMxvcHzpkX2yYiPidxvcfG97Vpqs73j"
        ],
        "license": "MIT"
      },
      "src/interfaces/IConditionalOrder.sol": {
        "keccak256": "0x9ce9ab9b32a1cea3dd9390407f9733458868f0c4e706acbf5373d2c083ec363e",
        "urls": [
          "bzz-raw://e033e894f26b27544fc11d9cc1cd21351693defc8bd8716a47a74da57c634e28",
          "dweb:/ipfs/QmcC4PtfpCpf3srEqAuU3GNxz4qvgX8bU5B78hAQQjQhMW"
        ],
        "license": "GPL-3.0"
      },
      "src/types/ConditionalOrdersUtilsLib.sol": {
        "keccak256": "0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae",
        "urls": [
          "bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777",
          "dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf"
        ],
        "license": "MIT"
      },
      "src/types/PerpetualStableSwap.sol": {
        "keccak256": "0x424e6173a794b2e1920fcb84d81453e360cdbc0c44069ed21c7a8a34bcc704aa",
        "urls": [
          "bzz-raw://9e4468e4c0171925efbdb98845c8b9c6bcafd8c5e59f53effed3ac17f88330eb",
          "dweb:/ipfs/QmVE8eMCzwESuTXNTr9PgZYm3vmoEhnsTXVZfwFssvD5RF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/types/PerpetualStableSwap.sol",
    "id": 55201,
    "exportedSymbols": {
      "BaseConditionalOrder": [
        53578
      ],
      "GPv2Interaction": [
        14303
      ],
      "GPv2Order": [
        14459
      ],
      "IConditionalOrder": [
        54540
      ],
      "IConditionalOrderGenerator": [
        54571
      ],
      "IERC165": [
        52197
      ],
      "IERC20": [
        45820
      ],
      "IERC20Metadata": [
        45845
      ],
      "INVALID_HASH": [
        53472
      ],
      "NOT_FUNDED": [
        54926
      ],
      "PerpetualStableSwap": [
        55200
      ],
      "Utils": [
        54696
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4855:146",
    "nodes": [
      {
        "id": 54916,
        "nodeType": "PragmaDirective",
        "src": "32:31:146",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 54919,
        "nodeType": "ImportDirective",
        "src": "65:93:146",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55201,
        "sourceUnit": 45156,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54917,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45820,
              "src": "73:6:146",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 54918,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45845,
              "src": "81:14:146",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54920,
        "nodeType": "ImportDirective",
        "src": "160:37:146",
        "nodes": [],
        "absolutePath": "src/BaseConditionalOrder.sol",
        "file": "../BaseConditionalOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55201,
        "sourceUnit": 53579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54922,
        "nodeType": "ImportDirective",
        "src": "198:83:146",
        "nodes": [],
        "absolutePath": "src/types/ConditionalOrdersUtilsLib.sol",
        "file": "./ConditionalOrdersUtilsLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55201,
        "sourceUnit": 54697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54921,
              "name": "ConditionalOrdersUtilsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54696,
              "src": "206:25:146",
              "typeDescriptions": {}
            },
            "local": "Utils",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54926,
        "nodeType": "VariableDeclaration",
        "src": "363:41:146",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "NOT_FUNDED",
        "nameLocation": "379:10:146",
        "scope": 55201,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54924,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "363:6:146",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "6e6f742066756e646564",
          "id": 54925,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "392:12:146",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_85e1f6ddab5d66da0f1a6dde094a0fc3a86a7cfa131e6e8478cee7be2cccdad1",
            "typeString": "literal_string \"not funded\""
          },
          "value": "not funded"
        },
        "visibility": "internal"
      },
      {
        "id": 55200,
        "nodeType": "ContractDefinition",
        "src": "569:4317:146",
        "nodes": [
          {
            "id": 54942,
            "nodeType": "StructDefinition",
            "src": "1218:247:146",
            "nodes": [],
            "canonicalName": "PerpetualStableSwap.Data",
            "members": [
              {
                "constant": false,
                "id": 54932,
                "mutability": "mutable",
                "name": "tokenA",
                "nameLocation": "1247:6:146",
                "nodeType": "VariableDeclaration",
                "scope": 54942,
                "src": "1240:13:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$45820",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54931,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54930,
                    "name": "IERC20",
                    "nameLocations": [
                      "1240:6:146"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45820,
                    "src": "1240:6:146"
                  },
                  "referencedDeclaration": 45820,
                  "src": "1240:6:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45820",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54935,
                "mutability": "mutable",
                "name": "tokenB",
                "nameLocation": "1270:6:146",
                "nodeType": "VariableDeclaration",
                "scope": 54942,
                "src": "1263:13:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$45820",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54934,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54933,
                    "name": "IERC20",
                    "nameLocations": [
                      "1263:6:146"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45820,
                    "src": "1263:6:146"
                  },
                  "referencedDeclaration": 45820,
                  "src": "1263:6:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45820",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54937,
                "mutability": "mutable",
                "name": "validityBucketSeconds",
                "nameLocation": "1381:21:146",
                "nodeType": "VariableDeclaration",
                "scope": 54942,
                "src": "1374:28:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 54936,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1374:6:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54939,
                "mutability": "mutable",
                "name": "halfSpreadBps",
                "nameLocation": "1420:13:146",
                "nodeType": "VariableDeclaration",
                "scope": 54942,
                "src": "1412:21:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54938,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1412:7:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54941,
                "mutability": "mutable",
                "name": "appData",
                "nameLocation": "1451:7:146",
                "nodeType": "VariableDeclaration",
                "scope": 54942,
                "src": "1443:15:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 54940,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1443:7:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nameLocation": "1225:4:146",
            "scope": 55200,
            "visibility": "public"
          },
          {
            "id": 54953,
            "nodeType": "StructDefinition",
            "src": "1471:132:146",
            "nodes": [],
            "canonicalName": "PerpetualStableSwap.BuySellData",
            "members": [
              {
                "constant": false,
                "id": 54945,
                "mutability": "mutable",
                "name": "sellToken",
                "nameLocation": "1507:9:146",
                "nodeType": "VariableDeclaration",
                "scope": 54953,
                "src": "1500:16:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$45820",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54944,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54943,
                    "name": "IERC20",
                    "nameLocations": [
                      "1500:6:146"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45820,
                    "src": "1500:6:146"
                  },
                  "referencedDeclaration": 45820,
                  "src": "1500:6:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45820",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54948,
                "mutability": "mutable",
                "name": "buyToken",
                "nameLocation": "1533:8:146",
                "nodeType": "VariableDeclaration",
                "scope": 54953,
                "src": "1526:15:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$45820",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54947,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54946,
                    "name": "IERC20",
                    "nameLocations": [
                      "1526:6:146"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45820,
                    "src": "1526:6:146"
                  },
                  "referencedDeclaration": 45820,
                  "src": "1526:6:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45820",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54950,
                "mutability": "mutable",
                "name": "sellAmount",
                "nameLocation": "1559:10:146",
                "nodeType": "VariableDeclaration",
                "scope": 54953,
                "src": "1551:18:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54949,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1551:7:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54952,
                "mutability": "mutable",
                "name": "buyAmount",
                "nameLocation": "1587:9:146",
                "nodeType": "VariableDeclaration",
                "scope": 54953,
                "src": "1579:17:146",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54951,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1579:7:146",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BuySellData",
            "nameLocation": "1478:11:146",
            "scope": 55200,
            "visibility": "public"
          },
          {
            "id": 55039,
            "nodeType": "FunctionDefinition",
            "src": "1671:1645:146",
            "nodes": [],
            "body": {
              "id": 55038,
              "nodeType": "Block",
              "src": "1870:1446:146",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54975,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1991:4:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55038,
                      "src": "1959:36:146",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                        "typeString": "struct PerpetualStableSwap.Data"
                      },
                      "typeName": {
                        "id": 54974,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54973,
                          "name": "PerpetualStableSwap.Data",
                          "nameLocations": [
                            "1959:19:146",
                            "1979:4:146"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54942,
                          "src": "1959:24:146"
                        },
                        "referencedDeclaration": 54942,
                        "src": "1959:24:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$54942_storage_ptr",
                          "typeString": "struct PerpetualStableSwap.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Decode the payload into the perpetual stable swap parameters.",
                  "id": 54982,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54978,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54962,
                        "src": "2009:11:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 54979,
                            "name": "Data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54942,
                            "src": "2023:4:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Data_$54942_storage_ptr_$",
                              "typeString": "type(struct PerpetualStableSwap.Data storage pointer)"
                            }
                          }
                        ],
                        "id": 54980,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2022:6:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$54942_storage_ptr_$",
                          "typeString": "type(struct PerpetualStableSwap.Data storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Data_$54942_storage_ptr_$",
                          "typeString": "type(struct PerpetualStableSwap.Data storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 54976,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1998:3:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2002:6:146",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1998:10:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 54981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:31:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                      "typeString": "struct PerpetualStableSwap.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1959:70:146"
                },
                {
                  "assignments": [
                    54985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54985,
                      "mutability": "mutable",
                      "name": "buySellData",
                      "nameLocation": "2125:11:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55038,
                      "src": "2106:30:146",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                        "typeString": "struct PerpetualStableSwap.BuySellData"
                      },
                      "typeName": {
                        "id": 54984,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54983,
                          "name": "BuySellData",
                          "nameLocations": [
                            "2106:11:146"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54953,
                          "src": "2106:11:146"
                        },
                        "referencedDeclaration": 54953,
                        "src": "2106:11:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuySellData_$54953_storage_ptr",
                          "typeString": "struct PerpetualStableSwap.BuySellData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54990,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54987,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54956,
                        "src": "2144:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54988,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54975,
                        "src": "2151:4:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                          "typeString": "struct PerpetualStableSwap.Data memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                          "typeString": "struct PerpetualStableSwap.Data memory"
                        }
                      ],
                      "id": 54986,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55143,
                      "src": "2139:4:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_Data_$54942_memory_ptr_$returns$_t_struct$_BuySellData_$54953_memory_ptr_$",
                        "typeString": "function (address,struct PerpetualStableSwap.Data memory) view returns (struct PerpetualStableSwap.BuySellData memory)"
                      }
                    },
                    "id": 54989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:17:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                      "typeString": "struct PerpetualStableSwap.BuySellData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2106:50:146"
                },
                {
                  "condition": {
                    "id": 54996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2239:29:146",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54991,
                              "name": "buySellData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54985,
                              "src": "2241:11:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                                "typeString": "struct PerpetualStableSwap.BuySellData memory"
                              }
                            },
                            "id": 54992,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2253:10:146",
                            "memberName": "sellAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54950,
                            "src": "2241:22:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 54993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2266:1:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2241:26:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 54995,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2240:28:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55004,
                  "nodeType": "IfStatement",
                  "src": "2235:110:146",
                  "trueBody": {
                    "id": 55003,
                    "nodeType": "Block",
                    "src": "2270:75:146",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 55000,
                              "name": "NOT_FUNDED",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54926,
                              "src": "2323:10:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 54997,
                              "name": "IConditionalOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54540,
                              "src": "2291:17:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54540_$",
                                "typeString": "type(contract IConditionalOrder)"
                              }
                            },
                            "id": 54999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2309:13:146",
                            "memberName": "OrderNotValid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54484,
                            "src": "2291:31:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 55001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2291:43:146",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55002,
                        "nodeType": "RevertStatement",
                        "src": "2284:50:146"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 55036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55005,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54969,
                      "src": "2805:5:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 55008,
                            "name": "buySellData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54985,
                            "src": "2841:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "id": 55009,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2853:9:146",
                          "memberName": "sellToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54945,
                          "src": "2841:21:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 55010,
                            "name": "buySellData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54985,
                            "src": "2876:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "id": 55011,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2888:8:146",
                          "memberName": "buyToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54948,
                          "src": "2876:20:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 55014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2918:1:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 55013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2910:7:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 55012,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2910:7:146",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2910:10:146",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 55016,
                            "name": "buySellData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54985,
                            "src": "3014:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "id": 55017,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3026:10:146",
                          "memberName": "sellAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54950,
                          "src": "3014:22:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 55018,
                            "name": "buySellData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54985,
                            "src": "3050:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "id": 55019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3062:9:146",
                          "memberName": "buyAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54952,
                          "src": "3050:21:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 55022,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54975,
                                "src": "3105:4:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                                  "typeString": "struct PerpetualStableSwap.Data memory"
                                }
                              },
                              "id": 55023,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3110:21:146",
                              "memberName": "validityBucketSeconds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54937,
                              "src": "3105:26:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 55020,
                              "name": "Utils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54696,
                              "src": "3085:5:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                "typeString": "type(library ConditionalOrdersUtilsLib)"
                              }
                            },
                            "id": 55021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3091:13:146",
                            "memberName": "validToBucket",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54642,
                            "src": "3085:19:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_uint32_$",
                              "typeString": "function (uint32) view returns (uint32)"
                            }
                          },
                          "id": 55024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3085:47:146",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 55025,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54975,
                            "src": "3146:4:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.Data memory"
                            }
                          },
                          "id": 55026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3151:7:146",
                          "memberName": "appData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54941,
                          "src": "3146:12:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 55027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3172:1:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 55028,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "3187:9:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 55029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3197:9:146",
                          "memberName": "KIND_SELL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14342,
                          "src": "3187:19:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 55030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3220:5:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "expression": {
                            "id": 55031,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "3239:9:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 55032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3249:13:146",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14350,
                          "src": "3239:23:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 55033,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "3276:9:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 55034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3286:13:146",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14350,
                          "src": "3276:23:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 55006,
                          "name": "GPv2Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14459,
                          "src": "2813:9:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                            "typeString": "type(library GPv2Order)"
                          }
                        },
                        "id": 55007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2823:4:146",
                        "memberName": "Data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14334,
                        "src": "2813:14:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$14334_storage_ptr_$",
                          "typeString": "type(struct GPv2Order.Data storage pointer)"
                        }
                      },
                      "id": 55035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2813:496:146",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "src": "2805:504:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "id": 55037,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:504:146"
                }
              ]
            },
            "baseFunctions": [
              53546
            ],
            "documentation": {
              "id": 54954,
              "nodeType": "StructuredDocumentation",
              "src": "1609:57:146",
              "text": " @inheritdoc IConditionalOrderGenerator"
            },
            "functionSelector": "b8296fc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeableOrder",
            "nameLocation": "1680:17:146",
            "overrides": {
              "id": 54966,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1811:8:146"
            },
            "parameters": {
              "id": 54965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54956,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1706:5:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55039,
                  "src": "1698:13:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55039,
                  "src": "1713:7:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55039,
                  "src": "1722:7:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54959,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54962,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "1746:11:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55039,
                  "src": "1731:26:146",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54961,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:5:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55039,
                  "src": "1759:14:146",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:5:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1697:77:146"
            },
            "returnParameters": {
              "id": 54970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54969,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1859:5:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55039,
                  "src": "1837:27:146",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 54968,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54967,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "1837:9:146",
                        "1847:4:146"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14334,
                      "src": "1837:14:146"
                    },
                    "referencedDeclaration": 14334,
                    "src": "1837:14:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$14334_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1836:29:146"
            },
            "scope": 55200,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55143,
            "nodeType": "FunctionDefinition",
            "src": "3322:1065:146",
            "nodes": [],
            "body": {
              "id": 55142,
              "nodeType": "Block",
              "src": "3472:915:146",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55052,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nameLocation": "3497:6:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55142,
                      "src": "3482:21:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                        "typeString": "contract IERC20Metadata"
                      },
                      "typeName": {
                        "id": 55051,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55050,
                          "name": "IERC20Metadata",
                          "nameLocations": [
                            "3482:14:146"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45845,
                          "src": "3482:14:146"
                        },
                        "referencedDeclaration": 45845,
                        "src": "3482:14:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55060,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55056,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55044,
                              "src": "3529:4:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                                "typeString": "struct PerpetualStableSwap.Data memory"
                              }
                            },
                            "id": 55057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3534:6:146",
                            "memberName": "tokenA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54932,
                            "src": "3529:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45820",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45820",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 55055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3521:7:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55054,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3521:7:146",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3521:20:146",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55053,
                      "name": "IERC20Metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45845,
                      "src": "3506:14:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$45845_$",
                        "typeString": "type(contract IERC20Metadata)"
                      }
                    },
                    "id": 55059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3506:36:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3482:60:146"
                },
                {
                  "assignments": [
                    55063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55063,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nameLocation": "3567:6:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55142,
                      "src": "3552:21:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                        "typeString": "contract IERC20Metadata"
                      },
                      "typeName": {
                        "id": 55062,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55061,
                          "name": "IERC20Metadata",
                          "nameLocations": [
                            "3552:14:146"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45845,
                          "src": "3552:14:146"
                        },
                        "referencedDeclaration": 45845,
                        "src": "3552:14:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55071,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 55067,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55044,
                              "src": "3599:4:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                                "typeString": "struct PerpetualStableSwap.Data memory"
                              }
                            },
                            "id": 55068,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3604:6:146",
                            "memberName": "tokenB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54935,
                            "src": "3599:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45820",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$45820",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 55066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3591:7:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55065,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3591:7:146",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3591:20:146",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55064,
                      "name": "IERC20Metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45845,
                      "src": "3576:14:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$45845_$",
                        "typeString": "type(contract IERC20Metadata)"
                      }
                    },
                    "id": 55070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:36:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3552:60:146"
                },
                {
                  "assignments": [
                    55073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55073,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nameLocation": "3630:8:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55142,
                      "src": "3622:16:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3622:7:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55078,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55076,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55041,
                        "src": "3658:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55074,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55052,
                        "src": "3641:6:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 55075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3648:9:146",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45777,
                      "src": "3641:16:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 55077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3641:23:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3622:42:146"
                },
                {
                  "assignments": [
                    55080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55080,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nameLocation": "3682:8:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55142,
                      "src": "3674:16:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55079,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:7:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55083,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55041,
                        "src": "3710:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 55081,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55063,
                        "src": "3693:6:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 55082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3700:9:146",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45777,
                      "src": "3693:16:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 55084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:23:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:42:146"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 55087,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55052,
                          "src": "3745:6:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        {
                          "id": 55088,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55073,
                          "src": "3753:8:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 55089,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55063,
                          "src": "3763:6:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                            "typeString": "contract IERC20Metadata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                            "typeString": "contract IERC20Metadata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                            "typeString": "contract IERC20Metadata"
                          }
                        ],
                        "id": 55086,
                        "name": "convertAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55199,
                        "src": "3731:13:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20Metadata_$45845_$_t_uint256_$_t_contract$_IERC20Metadata_$45845_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20Metadata,uint256,contract IERC20Metadata) view returns (uint256)"
                        }
                      },
                      "id": 55090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3731:39:146",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 55091,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55080,
                      "src": "3773:8:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3731:50:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 55140,
                    "nodeType": "Block",
                    "src": "4085:296:146",
                    "statements": [
                      {
                        "expression": {
                          "id": 55138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55117,
                            "name": "buySellData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55048,
                            "src": "4099:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 55119,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55063,
                                "src": "4154:6:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              {
                                "id": 55120,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55052,
                                "src": "4188:6:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              {
                                "id": 55121,
                                "name": "balanceB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55080,
                                "src": "4224:8:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 55136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 55133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 55123,
                                        "name": "tokenB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55063,
                                        "src": "4275:6:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        }
                                      },
                                      {
                                        "id": 55124,
                                        "name": "balanceB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55080,
                                        "src": "4283:8:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 55125,
                                        "name": "tokenA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55052,
                                        "src": "4293:6:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        }
                                      ],
                                      "id": 55122,
                                      "name": "convertAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55199,
                                      "src": "4261:13:146",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20Metadata_$45845_$_t_uint256_$_t_contract$_IERC20Metadata_$45845_$returns$_t_uint256_$",
                                        "typeString": "function (contract IERC20Metadata,uint256,contract IERC20Metadata) view returns (uint256)"
                                      }
                                    },
                                    "id": 55126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4261:39:146",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 55131,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 55127,
                                            "name": "Utils",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 54696,
                                            "src": "4304:5:146",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                              "typeString": "type(library ConditionalOrdersUtilsLib)"
                                            }
                                          },
                                          "id": 55128,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "4310:7:146",
                                          "memberName": "MAX_BPS",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 54617,
                                          "src": "4304:13:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 55129,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 55044,
                                            "src": "4320:4:146",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                                              "typeString": "struct PerpetualStableSwap.Data memory"
                                            }
                                          },
                                          "id": 55130,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4325:13:146",
                                          "memberName": "halfSpreadBps",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 54939,
                                          "src": "4320:18:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4304:34:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 55132,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4303:36:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4261:78:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 55134,
                                    "name": "Utils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54696,
                                    "src": "4342:5:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                      "typeString": "type(library ConditionalOrdersUtilsLib)"
                                    }
                                  },
                                  "id": 55135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4348:7:146",
                                  "memberName": "MAX_BPS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54617,
                                  "src": "4342:13:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4261:94:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 55118,
                              "name": "BuySellData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54953,
                              "src": "4113:11:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_BuySellData_$54953_storage_ptr_$",
                                "typeString": "type(struct PerpetualStableSwap.BuySellData storage pointer)"
                              }
                            },
                            "id": 55137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "4143:9:146",
                              "4178:8:146",
                              "4212:10:146",
                              "4250:9:146"
                            ],
                            "names": [
                              "sellToken",
                              "buyToken",
                              "sellAmount",
                              "buyAmount"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4113:257:146",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "src": "4099:271:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                            "typeString": "struct PerpetualStableSwap.BuySellData memory"
                          }
                        },
                        "id": 55139,
                        "nodeType": "ExpressionStatement",
                        "src": "4099:271:146"
                      }
                    ]
                  },
                  "id": 55141,
                  "nodeType": "IfStatement",
                  "src": "3727:654:146",
                  "trueBody": {
                    "id": 55116,
                    "nodeType": "Block",
                    "src": "3783:296:146",
                    "statements": [
                      {
                        "expression": {
                          "id": 55114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55093,
                            "name": "buySellData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55048,
                            "src": "3797:11:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 55095,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55052,
                                "src": "3852:6:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              {
                                "id": 55096,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55063,
                                "src": "3886:6:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              {
                                "id": 55097,
                                "name": "balanceA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55073,
                                "src": "3922:8:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 55112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 55109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 55099,
                                        "name": "tokenA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55052,
                                        "src": "3973:6:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        }
                                      },
                                      {
                                        "id": 55100,
                                        "name": "balanceA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55073,
                                        "src": "3981:8:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 55101,
                                        "name": "tokenB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55063,
                                        "src": "3991:6:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                          "typeString": "contract IERC20Metadata"
                                        }
                                      ],
                                      "id": 55098,
                                      "name": "convertAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55199,
                                      "src": "3959:13:146",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20Metadata_$45845_$_t_uint256_$_t_contract$_IERC20Metadata_$45845_$returns$_t_uint256_$",
                                        "typeString": "function (contract IERC20Metadata,uint256,contract IERC20Metadata) view returns (uint256)"
                                      }
                                    },
                                    "id": 55102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3959:39:146",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 55107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 55103,
                                            "name": "Utils",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 54696,
                                            "src": "4002:5:146",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                              "typeString": "type(library ConditionalOrdersUtilsLib)"
                                            }
                                          },
                                          "id": 55104,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "4008:7:146",
                                          "memberName": "MAX_BPS",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 54617,
                                          "src": "4002:13:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 55105,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 55044,
                                            "src": "4018:4:146",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                                              "typeString": "struct PerpetualStableSwap.Data memory"
                                            }
                                          },
                                          "id": 55106,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4023:13:146",
                                          "memberName": "halfSpreadBps",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 54939,
                                          "src": "4018:18:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4002:34:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 55108,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4001:36:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3959:78:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 55110,
                                    "name": "Utils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54696,
                                    "src": "4040:5:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                      "typeString": "type(library ConditionalOrdersUtilsLib)"
                                    }
                                  },
                                  "id": 55111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4046:7:146",
                                  "memberName": "MAX_BPS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54617,
                                  "src": "4040:13:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3959:94:146",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                                  "typeString": "contract IERC20Metadata"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 55094,
                              "name": "BuySellData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54953,
                              "src": "3811:11:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_BuySellData_$54953_storage_ptr_$",
                                "typeString": "type(struct PerpetualStableSwap.BuySellData storage pointer)"
                              }
                            },
                            "id": 55113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3841:9:146",
                              "3876:8:146",
                              "3910:10:146",
                              "3948:9:146"
                            ],
                            "names": [
                              "sellToken",
                              "buyToken",
                              "sellAmount",
                              "buyAmount"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3811:257:146",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                              "typeString": "struct PerpetualStableSwap.BuySellData memory"
                            }
                          },
                          "src": "3797:271:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                            "typeString": "struct PerpetualStableSwap.BuySellData memory"
                          }
                        },
                        "id": 55115,
                        "nodeType": "ExpressionStatement",
                        "src": "3797:271:146"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "side",
            "nameLocation": "3331:4:146",
            "parameters": {
              "id": 55045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55041,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3344:5:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55143,
                  "src": "3336:13:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:7:146",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55044,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3383:4:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55143,
                  "src": "3351:36:146",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$54942_memory_ptr",
                    "typeString": "struct PerpetualStableSwap.Data"
                  },
                  "typeName": {
                    "id": 55043,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55042,
                      "name": "PerpetualStableSwap.Data",
                      "nameLocations": [
                        "3351:19:146",
                        "3371:4:146"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54942,
                      "src": "3351:24:146"
                    },
                    "referencedDeclaration": 54942,
                    "src": "3351:24:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$54942_storage_ptr",
                      "typeString": "struct PerpetualStableSwap.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3335:53:146"
            },
            "returnParameters": {
              "id": 55049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55048,
                  "mutability": "mutable",
                  "name": "buySellData",
                  "nameLocation": "3455:11:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55143,
                  "src": "3436:30:146",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BuySellData_$54953_memory_ptr",
                    "typeString": "struct PerpetualStableSwap.BuySellData"
                  },
                  "typeName": {
                    "id": 55047,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55046,
                      "name": "BuySellData",
                      "nameLocations": [
                        "3436:11:146"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54953,
                      "src": "3436:11:146"
                    },
                    "referencedDeclaration": 54953,
                    "src": "3436:11:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BuySellData_$54953_storage_ptr",
                      "typeString": "struct PerpetualStableSwap.BuySellData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:32:146"
            },
            "scope": 55200,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55199,
            "nodeType": "FunctionDefinition",
            "src": "4393:491:146",
            "nodes": [],
            "body": {
              "id": 55198,
              "nodeType": "Block",
              "src": "4557:327:146",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55157,
                      "mutability": "mutable",
                      "name": "srcDecimals",
                      "nameLocation": "4573:11:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55198,
                      "src": "4567:17:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 55156,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4567:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55161,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55158,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55146,
                        "src": "4587:8:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 55159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4596:8:146",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45844,
                      "src": "4587:17:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 55160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4587:19:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4567:39:146"
                },
                {
                  "assignments": [
                    55163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55163,
                      "mutability": "mutable",
                      "name": "destDecimals",
                      "nameLocation": "4622:12:146",
                      "nodeType": "VariableDeclaration",
                      "scope": 55198,
                      "src": "4616:18:146",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 55162,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4616:5:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55167,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55164,
                        "name": "destToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55151,
                        "src": "4637:9:146",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 55165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4647:8:146",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45844,
                      "src": "4637:18:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 55166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4637:20:146",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4616:41:146"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 55170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55168,
                      "name": "srcDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55157,
                      "src": "4672:11:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 55169,
                      "name": "destDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55163,
                      "src": "4686:12:146",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4672:26:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 55196,
                    "nodeType": "Block",
                    "src": "4792:86:146",
                    "statements": [
                      {
                        "expression": {
                          "id": 55194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55184,
                            "name": "destAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55154,
                            "src": "4806:10:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 55193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 55185,
                              "name": "srcAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55148,
                              "src": "4819:9:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 55191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 55186,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4832:2:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 55189,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 55187,
                                          "name": "destDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55163,
                                          "src": "4839:12:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 55188,
                                          "name": "srcDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55157,
                                          "src": "4854:11:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "4839:26:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "id": 55190,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4838:28:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "4832:34:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 55192,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4831:36:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4819:48:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4806:61:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 55195,
                        "nodeType": "ExpressionStatement",
                        "src": "4806:61:146"
                      }
                    ]
                  },
                  "id": 55197,
                  "nodeType": "IfStatement",
                  "src": "4668:210:146",
                  "trueBody": {
                    "id": 55183,
                    "nodeType": "Block",
                    "src": "4700:86:146",
                    "statements": [
                      {
                        "expression": {
                          "id": 55181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 55171,
                            "name": "destAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55154,
                            "src": "4714:10:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 55180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 55172,
                              "name": "srcAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55148,
                              "src": "4727:9:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 55178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 55173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4740:2:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 55176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 55174,
                                          "name": "srcDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55157,
                                          "src": "4747:11:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 55175,
                                          "name": "destDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55163,
                                          "src": "4761:12:146",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "4747:26:146",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "id": 55177,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4746:28:146",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "4740:34:146",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 55179,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4739:36:146",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4727:48:146",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4714:61:146",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 55182,
                        "nodeType": "ExpressionStatement",
                        "src": "4714:61:146"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertAmount",
            "nameLocation": "4402:13:146",
            "parameters": {
              "id": 55152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55146,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nameLocation": "4431:8:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55199,
                  "src": "4416:23:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 55145,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55144,
                      "name": "IERC20Metadata",
                      "nameLocations": [
                        "4416:14:146"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45845,
                      "src": "4416:14:146"
                    },
                    "referencedDeclaration": 45845,
                    "src": "4416:14:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55148,
                  "mutability": "mutable",
                  "name": "srcAmount",
                  "nameLocation": "4449:9:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55199,
                  "src": "4441:17:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55151,
                  "mutability": "mutable",
                  "name": "destToken",
                  "nameLocation": "4475:9:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55199,
                  "src": "4460:24:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 55150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55149,
                      "name": "IERC20Metadata",
                      "nameLocations": [
                        "4460:14:146"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45845,
                      "src": "4460:14:146"
                    },
                    "referencedDeclaration": 45845,
                    "src": "4460:14:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$45845",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4415:70:146"
            },
            "returnParameters": {
              "id": 55155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55154,
                  "mutability": "mutable",
                  "name": "destAmount",
                  "nameLocation": "4541:10:146",
                  "nodeType": "VariableDeclaration",
                  "scope": 55199,
                  "src": "4533:18:146",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:7:146",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4532:20:146"
            },
            "scope": 55200,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54928,
              "name": "BaseConditionalOrder",
              "nameLocations": [
                "601:20:146"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53578,
              "src": "601:20:146"
            },
            "id": 54929,
            "nodeType": "InheritanceSpecifier",
            "src": "601:20:146"
          }
        ],
        "canonicalName": "PerpetualStableSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54927,
          "nodeType": "StructuredDocumentation",
          "src": "407:161:146",
          "text": " @title A smart contract that is always willing to trade between tokenA and tokenB 1:1,\n taking decimals into account (and adding specifiable spread)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55200,
          53578,
          54571,
          52197,
          54540
        ],
        "name": "PerpetualStableSwap",
        "nameLocation": "578:19:146",
        "scope": 55201,
        "usedErrors": [
          54484,
          54488,
          54494,
          54500,
          54504
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 146
}