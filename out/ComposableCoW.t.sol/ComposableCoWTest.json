{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "ConditionalOrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "location",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ComposableCoW.Proof",
          "name": "proof",
          "type": "tuple"
        }
      ],
      "name": "MerkleRootSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ISwapGuard",
          "name": "swapGuard",
          "type": "address"
        }
      ],
      "name": "SwapGuardSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eHandler",
      "outputs": [
        {
          "internalType": "contract ExtensibleFallbackHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract SafeProxyFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "node",
          "type": "uint256"
        }
      ],
      "name": "getProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "handler",
      "outputs": [
        {
          "internalType": "contract CompatibilityFallbackHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeafPairs",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "leaves",
      "outputs": [
        {
          "internalType": "contract IConditionalOrder",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2ceilBitMagic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multisend",
      "outputs": [
        {
          "internalType": "contract MultiSend",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safe1",
      "outputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safe2",
      "outputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safe3",
      "outputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlement",
      "outputs": [
        {
          "internalType": "contract GPv2Settlement",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signMessageLib",
      "outputs": [
        {
          "internalType": "contract SignMessageLib",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "singleton",
      "outputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SetUpState_ComposableCoWDomainSeparator_is_set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SetUpState_ComposableCoWDomainVerifier_is_set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        }
      ],
      "name": "test_createAndRemove_FuzzSetAndEmit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_createAndRemove_e2e",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "ctxValue",
          "type": "bytes32"
        }
      ],
      "name": "test_createWithContextAndRemove_FuzzSetAndEmit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_create_RevertOnInvalidHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        }
      ],
      "name": "test_getTradeableOrderWithSignature_FuzzRevertInvalidProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        }
      ],
      "name": "test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getTradeableOrderWithSignature_RevertInterfaceNotSupported",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        }
      ],
      "name": "test_isValidSafeSignature_FuzzPassesContextToHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        }
      ],
      "name": "test_isValidSafeSignature_FuzzRevertInvalidProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        }
      ],
      "name": "test_isValidSafeSignature_FuzzRevertInvalidSingleOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "test_setRootWithContext_FuzzSetAndEmit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_setRootWithContext_e2e",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "test_setRoot_FuzzSetAndEmit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_setRoot_e2e",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token2",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "valueToProve",
          "type": "bytes32"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff1991821681179092556004805490911690911790553480156200002e57600080fd5b506040516200003d90620003d5565b604051809103906000f0801580156200005a573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b03929092169190911790556040516200008990620003e3565b604051809103906000f080158015620000a6573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620000d590620003f1565b604051809103906000f080158015620000f2573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03929092169190911790556040516200012190620003ff565b604051809103906000f0801580156200013e573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b03929092169190911790556040516200016d906200040d565b604051809103906000f0801580156200018a573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b0392909216919091179055604051620001b9906200041b565b604051809103906000f080158015620001d6573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b0392909216919091179055604051620002059062000429565b6040808252600790820152660546f6b656e20360cc1b606082015260806020820181905260029082015261054360f41b60a082015260c001604051809103906000f0801580156200025a573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b0392909216919091179055604051620002899062000429565b604080825260079082015266546f6b656e203160c81b606082015260806020820181905260029082015261543160f01b60a082015260c001604051809103906000f080158015620002de573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b03929092169190911790556040516200030d9062000429565b6040808252600790820152662a37b5b2b7101960c91b6060820152608060208201819052600290820152612a1960f11b60a082015260c001604051809103906000f08015801562000362573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b0392909216919091179055604051620003919062000437565b604051809103906000f080158015620003ae573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b039290921691909117905562000445565b613dd1806201eedf83390190565b6109798062022cb083390190565b611168806202362983390190565b6124eb806202479183390190565b6102ec8062026c7c83390190565b6104708062026f6883390190565b610e1380620273d883390190565b610aa780620281eb83390190565b6201ea8980620004566000396000f3fe60806040523480156200001157600080fd5b5060043610620003a95760003560e01c8063945602ce11620001ed578063ba414fa61162000119578063dd6345ec11620000af578063e27d51531162000086578063e27d51531462000784578063ee692c5f146200079b578063fa7626d414620007b2578063fbfa77cf14620007c057600080fd5b8063dd6345ec146200075c578063dfe274a91462000766578063e20c9f71146200077a57600080fd5b8063cf06c7b711620000f0578063cf06c7b71462000706578063d09edf31146200071d578063d21220a71462000731578063dd1d2599146200074557600080fd5b8063ba414fa614620006d4578063c45a015514620006de578063c80916d414620006f257600080fd5b8063aade1182116200018f578063b5508aa91162000166578063b5508aa91462000686578063b62654fb1462000690578063b716db6614620006a4578063b861619514620006ae57600080fd5b8063aade11821462000651578063ad9b0475146200065b578063b379f91a146200066f57600080fd5b8063a19a988911620001c4578063a19a98891462000633578063a3d50ac5146200063d578063a3dc493d146200064757600080fd5b8063945602ce14620005f15780639e3791ff14620006085780639fbcc9ad146200061f57600080fd5b806336a7d48211620002d957806366d9a9a0116200026f5780637db2a8ba11620002465780637db2a8ba14620005b05780638406c07914620005ba57806385226c8114620005ce578063916a17c614620005e757600080fd5b806366d9a9a0146200056c57806370af4cdb14620005855780637d499aa4146200059c57600080fd5b80633f7286f411620002b05780633f7286f414620005125780633fc8cef3146200051c57806351160630146200053057806358161a42146200054457600080fd5b806336a7d48214620004da5780633ba9580614620004f15780633e5e3c23146200050857600080fd5b806325be124e116200034f5780632e08d60211620003265780632e08d6021462000489578063329696ac14620004af578063345e8d4a14620004b957806334d17a7014620004d057600080fd5b806325be124e1462000457578063294402cc146200046b5780632c434b98146200047f57600080fd5b80630dfe168111620003845780630dfe16811462000402578063151bcd2c14620004165780631ed7831c146200043e57600080fd5b80630a9254e414620003ae5780630aa9352914620003ba5780630c8548f514620003d1575b600080fd5b620003b8620007d4565b005b620003b8620003cb36600462009aec565b620007e0565b603554620003e5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b602154620003e5906001600160a01b031681565b6200042d6200042736600462009b60565b6200095b565b604051620003f99392919062009bce565b6200044862000a18565b604051620003f9919062009c3e565b602354620003e5906001600160a01b031681565b601f54620003e5906001600160a01b031681565b620003b862000a7c565b620004a06200049a36600462009ce7565b62000fbd565b604051908152602001620003f9565b620003b862001099565b620003b8620004ca36600462009d28565b620011a5565b620003b8620013cd565b620003b8620004eb36600462009aec565b620015dd565b620003b86200050236600462009dd0565b62001865565b620004486200189a565b62000448620018fc565b602454620003e5906001600160a01b031681565b602754620003e5906001600160a01b031681565b6200055b6200055536600462009dff565b6200195e565b6040519015158152602001620003f9565b62000576620019af565b604051620003f9919062009e53565b620003b86200059636600462009f40565b62001ab7565b603454620003e5906001600160a01b031681565b620003b862001d15565b602c54620003e5906001600160a01b031681565b620005d862002202565b604051620003f9919062009fbc565b62000576620022dc565b620003b86200060236600462009dd0565b620023db565b620003b86200061936600462009aec565b620026c5565b601e54620003e5906001600160a01b031681565b620003b862002814565b620003b862002d1d565b620003b862002ee0565b620003b86200324c565b603354620003e5906001600160a01b031681565b620003b8620006803660046200a040565b6200344a565b620005d86200348f565b601b54620003e5906001600160a01b031681565b620003b862003569565b620006c5620006bf3660046200a078565b620036a5565b604051620003f991906200a0f3565b6200055b6200387d565b601c54620003e5906001600160a01b031681565b601d54620003e5906001600160a01b031681565b620004a06200071736600462009b60565b620039c9565b602554620003e5906001600160a01b031681565b602254620003e5906001600160a01b031681565b620004a0620007563660046200a108565b62003b32565b620003b862003b62565b602054620003e5906001600160a01b031681565b6200044862003cc5565b620004a06200079536600462009b60565b62003d27565b620003b8620007ac36600462009d28565b62003d54565b6000546200055b9060ff1681565b602654620003e5906001600160a01b031681565b620007de62003ff8565b565b604080516060810182526001600160a01b03851681526020810184905280820183905290517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f7a933234000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200088857600080fd5b505af11580156200089d573d6000803e3d6000fd5b5050603654604080516020808201835260008083528351908152908101928390527f26e0a196000000000000000000000000000000000000000000000000000000009092526001600160a01b0390921693506326e0a19692506200090a918991869190602481016200a15f565b600060405180830381865afa15801562000928573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200095291908101906200a22c565b50505050505050565b603b602052600090815260409020805460018201546002830180546001600160a01b039093169391926200098f906200a337565b80601f0160208091040260200160405190810160405280929190818152602001828054620009bd906200a337565b801562000a0e5780601f10620009e25761010080835404028352916020019162000a0e565b820191906000526020600020905b815481529060010190602001808311620009f057829003601f168201915b5050505050905083565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000a7257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000a53575b5050505050905090565b60335460009062000a98906001600160a01b0316603262004378565b90506000808062000ab48482603b62000fbd620036a56200460a565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f4a8214640000000000000000000000000000000000000000000000000000000060048201529295509093509150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801562000b4257600080fd5b505af115801562000b57573d6000803e3d6000fd5b5050603654603354604080516020810182526000815290517f26e0a1960000000000000000000000000000000000000000000000000000000081526001600160a01b0393841695506326e0a196945062000bbd939092169186919088906004016200a15f565b600060405180830381865afa15801562000bdb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c0591908101906200a22c565b50506040805180820182526000808252825160208181019094529081529181019190915260335462000c42906001600160a01b03168583620048fb565b60365460335460408051602081018252600080825291517f26e0a196000000000000000000000000000000000000000000000000000000008152919384936001600160a01b03918216936326e0a1969362000ca8939092169189918b906004016200a15f565b600060405180830381865afa15801562000cc6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cf091908101906200a22c565b9150915060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639711715a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562000d5a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8091906200a38c565b60335460408051808201909152602f546001600160a01b039081168252603054602083015292935062000dbb92909116908585600062004b74565b6040517f44d7f0a400000000000000000000000000000000000000000000000000000000815260048101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906344d7f0a4906024016020604051808303816000875af115801562000e27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e4d91906200a3a6565b5060335462000e68906001600160a01b0316600086620048fb565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f4a821464000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801562000eee57600080fd5b505af115801562000f03573d6000803e3d6000fd5b5050603654603354604080516020810182526000815290517f26e0a1960000000000000000000000000000000000000000000000000000000081526001600160a01b0393841695506326e0a196945062000f6993909216918a91908c906004016200a15f565b600060405180830381865afa15801562000f87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000fb191908101906200a22c565b50505050505050505050565b6000600182511162001056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f776f6e27742067656e657261746520726f6f7420666f722073696e676c65206c60448201527f656166000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60018251111562001074576200106c82620054a2565b915062001056565b816000815181106200108a576200108a6200a3c4565b60200260200101519050919050565b603654604080517ff698da250000000000000000000000000000000000000000000000000000000081529051620007de926001600160a01b03169163f698da259160048083019260209291908290030181865afa158015620010ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200112591906200a38c565b602760009054906101000a90046001600160a01b03166001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001179573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200119f91906200a38c565b6200562e565b84516040517f4c63e5620000000000000000000000000000000000000000000000000000000081529015156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b1580156200120d57600080fd5b505afa15801562001222573d6000803e3d6000fd5b5050505060006040518060600160405280856001600160a01b031681526020018481526020018381525090506200127f878660405180604001604052806000815260200160405180602001604052806000815250815250620048fb565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f4a821464000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200130557600080fd5b505af11580156200131a573d6000803e3d6000fd5b5050603654604080516020810182526000815290517f26e0a1960000000000000000000000000000000000000000000000000000000081526001600160a01b0390921693506326e0a19692506200137a918b9186918c906004016200a15f565b600060405180830381865afa15801562001398573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013c291908101906200a22c565b505050505050505050565b603354600090620013e9906001600160a01b0316603262004378565b905060008080620014058482603b62000fbd620036a56200460a565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f4a8214640000000000000000000000000000000000000000000000000000000060048201529295509093509150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200149357600080fd5b505af1158015620014a8573d6000803e3d6000fd5b5050603654603354604080516020810182526000815290517f26e0a1960000000000000000000000000000000000000000000000000000000081526001600160a01b0393841695506326e0a19694506200150e939092169186919088906004016200a15f565b600060405180830381865afa1580156200152c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200155691908101906200a22c565b50506040805180820182526000808252825160208181018552918152818301526033546038549351929362000c42936001600160a01b0392831693899387931691620015c8917f7465737456616c75650000000000000000000000000000000000000000000000910190815260200190565b60405160208183030381529060405262005740565b6040517f4c63e5620000000000000000000000000000000000000000000000000000000081526001600160a01b03841615156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b1580156200164c57600080fd5b505afa15801562001661573d6000803e3d6000fd5b5050604080516060810182526001600160a01b03871681526020810186905280820185905290517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f7a933234000000000000000000000000000000000000000000000000000000006004820152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063c31eb0e090602401600060405180830381600087803b1580156200170f57600080fd5b505af115801562001724573d6000803e3d6000fd5b50506036546001600160a01b031691506353f00b1490508660007f3e065c237239c100e9e1a76c49e8333afdd19f83903bd9ddcaf0fde32594632d7f26d17eb22ca6b2615b053b942d517a8eb1dc14746ac5059914694f5dd6023a52826200178b62005a67565b6040516020016200179d91906200a4b3565b60408051601f19818403018152600060608401818152608085018452845260208085018d9052835180820185529182528484019190915291519092620017e6929091016200a4c4565b6040516020818303038152906040526040518863ffffffff1660e01b81526004016200181997969594939291906200a522565b602060405180830381865afa15801562001837573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200185d91906200a584565b505050505050565b62001896828260405180604001604052806000815260200160405180602001604052806000815250815250620048fb565b5050565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000a72576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a53575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000a72576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a53575050505050905090565b81516000908290825b81811015620019a35762001998838783815181106200198a576200198a6200a3c4565b602002602001015162003b32565b925060010162001967565b50509093149392505050565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562001aae5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562001a9557602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162001a415790505b50505050508152505081526020019060010190620019d3565b50505050905090565b6040517f4c63e5620000000000000000000000000000000000000000000000000000000081526001600160a01b03851615156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b15801562001b2657600080fd5b505afa15801562001b3b573d6000803e3d6000fd5b5050505060006040518060600160405280866001600160a01b0316815260200185815260200184815250905060008160405160200162001b7c91906200a5c8565b60408051808303601f190181529082905280516020909101206036547f6108c5320000000000000000000000000000000000000000000000000000000083526001600160a01b038a811660048501526024840183905291935062001c3392911690636108c532906044015b602060405180830381865afa15801562001c05573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c2b91906200a3a6565b600062005bf4565b603854604080516020810186905262001c6e928a9286926001600160a01b039092169101604051602081830303815290604052600162005de8565b6036546040517f1c7662c80000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820184905262001d09921690631c7662c890604401602060405180830381865afa15801562001cdc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d0291906200a38c565b846200562e565b62000952878362006098565b60335460009062001d31906001600160a01b0316600162004378565b60008151811062001d465762001d466200a3c4565b6020026020010151905060008067ffffffffffffffff81111562001d6e5762001d6e620099d5565b60405190808252806020026020018201604052801562001d98578160200160208202803683370190505b50905060008260405160200162001db091906200a5c8565b60408051808303601f190181529082905280516020909101206036546033547f6108c5320000000000000000000000000000000000000000000000000000000084526001600160a01b0390811660048501526024840183905291935062001e2392911690636108c5329060440162001be7565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f7a933234000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801562001ea957600080fd5b505af115801562001ebe573d6000803e3d6000fd5b5050603654603354604080516020810182526000815290517f26e0a1960000000000000000000000000000000000000000000000000000000081526001600160a01b0393841695506326e0a196945062001f24939092169188919088906004016200a15f565b600060405180830381865afa15801562001f42573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001f6c91908101906200a22c565b505060335462001f88906001600160a01b031684600162006358565b60007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639711715a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562001fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200201491906200a38c565b60365460335460408051602081018252600080825291517f26e0a196000000000000000000000000000000000000000000000000000000008152949550909384936001600160a01b03908116936326e0a196936200207e9391909216918b918b906004016200a15f565b600060405180830381865afa1580156200209c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620020c691908101906200a22c565b60335460408051808201909152602f546001600160a01b0390811682526030546020830152939550919350620021029216908484600062004b74565b6040517f44d7f0a400000000000000000000000000000000000000000000000000000000815260048101849052737109709ecfa91a80626ff3989d68f67f5b1dd12d906344d7f0a4906024016020604051808303816000875af11580156200216e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200219491906200a3a6565b50603354620021ad906001600160a01b03168762006098565b60335460408051808201909152602f546001600160a01b03908116825260305460208301526200185d92169084847f7a9332340000000000000000000000000000000000000000000000000000000062004b74565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562001aae57838290600052602060002001805462002248906200a337565b80601f016020809104026020016040519081016040528092919081815260200182805462002276906200a337565b8015620022c75780601f106200229b57610100808354040283529160200191620022c7565b820191906000526020600020905b815481529060010190602001808311620022a957829003601f168201915b50505050508152602001906001019062002226565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562001aae5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620023c257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200236e5790505b5050505050815250508152602001906001019062002300565b604080516060810182526039546001600160a01b031681527f5a1b0982e87164f04c07f3e34b873c8bd03f31645cb3c70d611c56ca3d37e6b760208083019190915282519081018352600080825292820152906200243d908490839062006358565b60006200244962005a67565b604080516020808201835260008083526036549351949550919391926001600160a01b0316916353f00b14918991859162002487918991016200a4b3565b60405160208183030381529060405280519060200120896000801b89604051602001620024b591906200a4b3565b60408051601f19818403018152600060608401908152608084018352835260208084018f90528383018d905291519092620024f3929091016200a4c4565b60408051601f198184030181529082905262002518979695949392916024016200a522565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660e09490941b9390931790925260365491519093506000925082916001600160a01b0316906200257e9085906200a5dd565b6000604051808303816000865af19150503d8060008114620025bd576040519150601f19603f3d011682016040523d82523d6000602084013e620025c2565b606091505b5091509150620025d3821562006570565b620026bb816314a2a78460e01b8a600089604051602001620025f691906200a4b3565b604051602081830303815290604052805190602001208c8c6040516020016200262091906200a5c8565b604051602081830303815290604052805190602001208d604001518c8e604051602401620026569897969594939291906200a5fb565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152620065eb565b5050505050505050565b6040517f4c63e5620000000000000000000000000000000000000000000000000000000081526001600160a01b03841615156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b1580156200273457600080fd5b505afa15801562002749573d6000803e3d6000fd5b5050505060006040518060600160405280856001600160a01b031681526020018481526020018381525090506000816040516020016200278a91906200a5c8565b60408051808303601f190181529082905280516020909101206036547f6108c5320000000000000000000000000000000000000000000000000000000083526001600160a01b03898116600485015260248401839052919350620027fa92911690636108c5329060440162001be7565b620028088683600162006358565b6200185d868362006098565b60006200289d604080516060808201835260008083526020808401829052928401829052603754845180850186528281528551808501875283815280860193909352918501839052845192830185526001600160a01b031682527f1434245f20a419a08389ea57c1d65110fbe8fd23fb1852d44a22071f9b8682b3928201929092529182015290565b602d54909150620028ba906001600160a01b031682600062006358565b6000620028c662005a67565b90506000620029f17fef1cc318c031f6538ef09fbcfd6bb018a44dd0852d289c0466c29619432b15176040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810191909152506040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019290925260e082018190527ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee3467756101008301526101208201527f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9610140820181905261016082015290565b90506000603660009054906101000a90046001600160a01b03166001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002a49573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a6f91906200a38c565b604080518082018252600c81527f696e76616c69642068617368000000000000000000000000000000000000000060208201529051919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3917fc8fc2725000000000000000000000000000000000000000000000000000000009162002af491906024016200a671565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e084901b909216825262002b68916004016200a671565b600060405180830381600087803b15801562002b8357600080fd5b505af115801562002b98573d6000803e3d6000fd5b5050603654602d546001600160a01b0391821693506353f00b14925016600062002c298786601f1990910180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b856000801b8960405160200162002c4191906200a4b3565b60408051601f19818403018152600060608401908152608084018352835260208084018f9052825191939283019162002c7d918e91016200a4b3565b60408051601f1981840301815291815291525162002c9f91906020016200a4c4565b6040516020818303038152906040526040518863ffffffff1660e01b815260040162002cd297969594939291906200a522565b602060405180830381865afa15801562002cf0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d1691906200a584565b5050505050565b604080516060810182526039546001600160a01b0390811682527f5a1b0982e87164f04c07f3e34b873c8bd03f31645cb3c70d611c56ca3d37e6b760208084019190915283519081018452600080825293830152602d54919262002d879290911690839062006358565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f2c7ca6d7000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801562002e0d57600080fd5b505af115801562002e22573d6000803e3d6000fd5b5050603654602d54604080516020808201835260008083528351908152908101928390527f26e0a196000000000000000000000000000000000000000000000000000000009092526001600160a01b0393841695506326e0a196945062002e9393909216918691602481016200a15f565b600060405180830381865afa15801562002eb1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002edb91908101906200a22c565b505050565b6036546040516000916001600160a01b03169062002efe90620098fe565b6001600160a01b039091168152602001604051809103906000f08015801562002f2b573d6000803e3d6000fd5b509050600062002fb7604080516060808201835260008083526020808401829052928401829052603754845180850186528281528551808501875283815280860193909352918501839052845192830185526001600160a01b031682527f1434245f20a419a08389ea57c1d65110fbe8fd23fb1852d44a22071f9b8682b3928201929092529182015290565b905062002fc78282600062006358565b60365460009081906001600160a01b03166326e0a196858562002fe962005a67565b60405160200162002ffb91906200a4b3565b60408051601f198184030181526000835260208301918290527fffffffff0000000000000000000000000000000000000000000000000000000060e087901b169091526200304f939291602481016200a15f565b600060405180830381865afa1580156200306d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200309791908101906200a22c565b9150915062003246846001600160a01b0316631626ba7e6200319985603660009054906101000a90046001600160a01b03166001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200312d91906200a38c565b601f1990910180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b846040518363ffffffff1660e01b8152600401620031b99291906200a686565b602060405180830381865afa158015620031d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031fd91906200a584565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e000000000000000000000000000000000000000000000000000000006200562e565b50505050565b6000620032d5604080516060808201835260008083526020808401829052928401829052603754845180850186528281528551808501875283815280860193909352918501839052845192830185526001600160a01b031682527f1434245f20a419a08389ea57c1d65110fbe8fd23fb1852d44a22071f9b8682b3928201929092529182015290565b603354909150620032f2906001600160a01b031682600062006358565b60365460335460009182916001600160a01b03918216916326e0a1969116856200331b62005a67565b6040516020016200332d91906200a4b3565b60408051601f198184030181526000835260208301918290527fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1690915262003381939291602481016200a15f565b600060405180830381865afa1580156200339f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620033c991908101906200a22c565b603354603654604080517ff698da25000000000000000000000000000000000000000000000000000000008152905194965092945062002edb936001600160a01b0392831693631626ba7e936200319993899391169163f698da259160048083019260209291908290030181865afa15801562003107573d6000803e3d6000fd5b604080518082018252600080825282516020808201855291815281830152603854835191820185905262002edb938793879390926001600160a01b03169101620015c8565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562001aae578382906000526020600020018054620034d5906200a337565b80601f016020809104026020016040519081016040528092919081815260200182805462003503906200a337565b8015620035545780601f10620035285761010080835404028352916020019162003554565b820191906000526020600020905b8154815290600101906020018083116200353657829003601f168201915b505050505081526020019060010190620034b3565b601e54603354602754604080517ff698da250000000000000000000000000000000000000000000000000000000081529051620007de946001600160a01b03908116946351cad5ee949082169391169163f698da25916004808201926020929091908290030181865afa158015620035e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200360b91906200a38c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa1580156200366d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200369391906200a6a1565b6036546001600160a01b0316620065f7565b6060600183511162003739576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f776f6e27742067656e65726174652070726f6f6620666f722073696e676c652060448201527f6c6561660000000000000000000000000000000000000000000000000000000060648201526084016200104d565b6000620037478451620039c9565b67ffffffffffffffff811115620037625762003762620099d5565b6040519080825280602002602001820160405280156200378c578160200160208202803683370190505b50905060005b600185511115620038735783600116600103620037f057846001850381518110620037c157620037c16200a3c4565b6020026020010151828281518110620037de57620037de6200a3c4565b60200260200101818152505062003857565b8451846001010362003815576000801b828281518110620037de57620037de6200a3c4565b8484600101815181106200382d576200382d6200a3c4565b60200260200101518282815181106200384a576200384a6200a3c4565b6020026020010181815250505b6001016002840493506200386b85620054a2565b945062003792565b5090505b92915050565b60008054610100900460ff16156200389e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620039c45760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162003946917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200a6c1565b60408051601f198184030181529082905262003962916200a5dd565b6000604051808303816000865af19150503d8060008114620039a1576040519150601f19603f3d011682016040523d82523d6000602084013e620039a6565b606091505b5091505080806020019051810190620039c091906200a3a6565b9150505b919050565b600060018211620039dc57506000919050565b600082700100000000000000000000000000000000811062003a0d57608093841c9362003a0a90836200a73a565b91505b68010000000000000000841062003a3357604093841c9362003a3090836200a73a565b91505b640100000000841062003a5557602093841c9362003a5290836200a73a565b91505b62010000841062003a7557601093841c9362003a7290836200a73a565b91505b610100841062003a9457600893841c9362003a9190836200a73a565b91505b6010841062003ab257600493841c9362003aaf90836200a73a565b91505b6004841062003ad057600293841c9362003acd90836200a73a565b91505b6002841062003ae95762003ae66001836200a73a565b91505b60008162003afa811960016200a73a565b169050818114801562003b0d5750600083115b1562003b1c5750909392505050565b62003b298360016200a73a565b95945050505050565b6000818310801562003b4c57836000528260205262003b55565b82600052836020525b5050604060002092915050565b6040805160608101825260008082527fe091ca7485bb6e74431c68b9a6ccbf864608b8c6f29132be33a88d4a4a02ef53602080840191909152835190810184529081528183015290517fc31eb0e00000000000000000000000000000000000000000000000000000000081527fd8f59fa5000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801562003c2e57600080fd5b505af115801562003c43573d6000803e3d6000fd5b50506036546040517f6bfae1ca0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169250636bfae1ca915062003c959084906001906004016200a750565b600060405180830381600087803b15801562003cb057600080fd5b505af115801562002d16573d6000803e3d6000fd5b6060600c80548060200260200160405190810160405280929190818152602001828054801562000a72576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a53575050505050905090565b6000808219600101831683145b831562003d4c57600193841c93919091019062003d34565b900392915050565b84516040517f4c63e5620000000000000000000000000000000000000000000000000000000081529015156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b15801562003dbc57600080fd5b505afa15801562003dd1573d6000803e3d6000fd5b5050505060006040518060600160405280856001600160a01b0316815260200184815260200183815250905062003e2e878660405180604001604052806000815260200160405180602001604052806000815250815250620048fb565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f4a821464000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801562003eb457600080fd5b505af115801562003ec9573d6000803e3d6000fd5b50506036546001600160a01b031691506353f00b1490508860007f1e19c368b8e9c45999d9dae49fdaf9f9f10d9fa0e52cff7fab17f0afd87d80b07f26d17eb22ca6b2615b053b942d517a8eb1dc14746ac5059914694f5dd6023a528262003f3062005a67565b60405160200162003f4291906200a4b3565b60408051601f198184030181526060830182528f835260208381018c90528251808201845260008152848401529151909262003f81929091016200a4c4565b6040516020818303038152906040526040518863ffffffff1660e01b815260040162003fb497969594939291906200a522565b602060405180830381865afa15801562003fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026bb91906200a584565b6200400262006709565b6027546040516001600160a01b03909116906200401f906200990c565b6001600160a01b039091168152602001604051809103906000f0801580156200404c573d6000803e3d6000fd5b50603680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055603354602754604080517ff698da250000000000000000000000000000000000000000000000000000000081529051620041d494938416936000937f3365582c000000000000000000000000000000000000000000000000000000009391169163f698da25916004808201926020929091908290030181865afa1580156200410d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200413391906200a38c565b60365460405160248101929092526001600160a01b0316604482015260640160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526000620041bd62006acb565b6033546001600160a01b0316949392919062006ba5565b604051620041e2906200991a565b604051809103906000f080158015620041ff573d6000803e3d6000fd5b50603880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055604051620042469062009928565b604051809103906000f08015801562004263573d6000803e3d6000fd5b50603780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055604051620042aa9062009936565b604051809103906000f080158015620042c7573d6000803e3d6000fd5b50603980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055603654604051911690620043109062009944565b6001600160a01b039091168152602001604051809103906000f0801580156200433d573d6000803e3d6000fd5b50603a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60408051610140810182526021546001600160a01b03908116825260225416602082015260009181018290526001606082810182905260808301919091524260a0830152600260c0830152610e1060e08301526101008201929092527f45e1f3e13187da2e43361fe0dca614b8f788ee2208999e5b35d0f0e4085b41426101208201528267ffffffffffffffff811115620044175762004417620099d5565b6040519080825280602002602001820160405280156200446657816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620044365790505b50915060005b8251811015620045155760408051606081018252603a546001600160a01b03168152815160208082018590529192918301910160405160208183030381529060405280519060200120815260200183604051602001620044cd91906200a776565b604051602081830303815290604052815250838281518110620044f457620044f46200a3c4565b602002602001018190525080806200450c906200a810565b9150506200446c565b508051602c54606083015160c08401516200460393926000927f095ea7b300000000000000000000000000000000000000000000000000000000926001600160a01b03909216916200456891906200a84b565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526000620045ee62006acb565b6001600160a01b038a16949392919062006ba5565b5092915050565b60408051606081810183526000808352602083018190529282018190529060005b8851811015620046fa578881815181106200464a576200464a6200a3c4565b60200260200101518760006200467c8c85815181106200466e576200466e6200a3c4565b602002602001015162006dcc565b81526020808201929092526040908101600020835181547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039091161781559183015160018301558201516002820190620046e090826200a8af565b509050508080620046f1906200a810565b9150506200462b565b506000885167ffffffffffffffff8111156200471a576200471a620099d5565b60405190808252806020026020018201604052801562004744578160200160208202803683370190505b50905060005b8951811015620047a2576200476d8a82815181106200466e576200466e6200a3c4565b8282815181106200478257620047826200a3c4565b60209081029190910101528062004799816200a810565b9150506200474a565b506000620047b08262006e1b565b90506000620047c2828963ffffffff16565b90506000620047d5838c8a63ffffffff16565b905060008a6000858e81518110620047f157620047f16200a3c4565b602002602001015181526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820180546200485d906200a337565b80601f01602080910402602001604051908101604052809291908181526020018280546200488b906200a337565b8015620048dc5780601f10620048b057610100808354040283529160200191620048dc565b820191906000526020600020905b815481529060010190602001808311620048be57829003601f168201915b5050509190925250949f939e50909c50919a5050505050505050505050565b6040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200496a57600080fd5b505af11580156200497f573d6000803e3d6000fd5b50506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063491cc7c29150608401600060405180830381600087803b158015620049ff57600080fd5b505af115801562004a14573d6000803e3d6000fd5b50505050826001600160a01b03167f58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e57838360405162004a559291906200a9d9565b60405180910390a26036546040517f1ab0dd9d0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690631ab0dd9d9062004aaa90859085906004016200a9d9565b600060405180830381600087803b15801562004ac557600080fd5b505af115801562004ada573d6000803e3d6000fd5b50506036546040517fa45468760000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015262002edb9450909116915063a454687690602401602060405180830381865afa15801562004b47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b6d91906200a38c565b836200562e565b600060405180610180016040528085602001516001600160a01b0316815260200185600001516001600160a01b0316815260200160006001600160a01b0316815260200185608001518152602001856060015181526020018560a0015163ffffffff1681526020018560c001518152602001600081526020017f6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc81526020016000151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc98152509050600062004ccf62004cc783602760009054906101000a90046001600160a01b03166001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003107573d6000803e3d6000fd5b879062006f3c565b86516040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562004d4457600080fd5b505af115801562004d59573d6000803e3d6000fd5b50508351602c5460608601516040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015260248101919091529116925063095ea7b391506044016020604051808303816000875af115801562004dd1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004df791906200a3a6565b5060408051600280825260608201835260009260208301908036833701905050905085600001518160008151811062004e345762004e346200a3c4565b60200260200101906001600160a01b031690816001600160a01b03168152505085602001518160018151811062004e6f5762004e6f6200a3c4565b6001600160a01b0392909216602092830291909101820152604080516002808252606082018352600093919290918301908036833701905050905083606001518160008151811062004ec55762004ec56200a3c4565b60200260200101818152505083608001518160018151811062004eec5762004eec6200a3c4565b602090810291909101015260408051600280825260608201909252600091816020015b62004f7f604051806101600160405280600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600063ffffffff16815260200160008019168152602001600081526020016000815260200160008152602001606081525090565b81526020019060019003908162004f0f579050509050604051806101600160405280600081526020016001815260200189604001516001600160a01b0316815260200189606001518152602001896080015181526020018960a0015163ffffffff1681526020018960c0015181526020018960e001518152602001620050078a600262007066565b8152602001896060015181526020018b896040516020016200502b9291906200a9f4565b604051602081830303815290604052815250816000815181106200505357620050536200a3c4565b6020026020010181905250604051806101600160405280600181526020016000815260200160006001600160a01b0316815260200186606001518152602001866080015181526020018660a0015163ffffffff1681526020018660c0015181526020018660e001518152602001620050cd87600062007066565b8152602001866060015181526020018581525081600181518110620050f657620050f66200a3c4565b602002602001018190525060006040518060600160405280600067ffffffffffffffff8111156200512b576200512b620099d5565b6040519080825280602002602001820160405280156200517a57816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200514a5790505b5081526020016000604051908082528060200260200182016040528015620051d157816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620051a15790505b50815260200160006040519080825280602002602001820160405280156200522857816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620051f85790505b509052602a546040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620052a157600080fd5b505af1158015620052b6573d6000803e3d6000fd5b5050507fffffffff00000000000000000000000000000000000000000000000000000000881690506200536e576027546040517f13d79a0b0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906313d79a0b90620053349087908790879087906004016200aaf6565b600060405180830381600087803b1580156200534f57600080fd5b505af115801562005364573d6000803e3d6000fd5b5050505062005495565b6040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000088166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b158015620053f657600080fd5b505af11580156200540b573d6000803e3d6000fd5b50506027546040517f13d79a0b0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911692506313d79a0b9150620054609087908790879087906004016200aaf6565b600060405180830381600087803b1580156200547b57600080fd5b505af115801562005490573d6000803e3d6000fd5b505050505b5050505050505050505050565b606080600083519050806001166001036200555f576002810460010167ffffffffffffffff811115620054d957620054d9620099d5565b60405190808252806020026020018201604052801562005503578160200160208202803683370190505b509150620055348460018303815181106200552257620055226200a3c4565b60200260200101516000801b62003b32565b826001845103815181106200554d576200554d6200a3c4565b602002602001018181525050620055ac565b6002810467ffffffffffffffff8111156200557e576200557e620099d5565b604051908082528060200260200182016040528015620055a8578160200160208202803683370190505b5091505b6000805b600183038110156200562457620055f5868281518110620055d557620055d56200a3c4565b60200260200101518783600101815181106200198a576200198a6200a3c4565b8483815181106200560a576200560a6200a3c4565b6020908102919091010152600190910190600201620055b0565b5091949350505050565b80821462001896577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620056bc9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f657333325d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051620056f591906200ac56565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99816040516200572e91906200aca2565b60405180910390a162001896620071b3565b6040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620057af57600080fd5b505af1158015620057c4573d6000803e3d6000fd5b50506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063491cc7c29150608401600060405180830381600087803b1580156200584457600080fd5b505af115801562005859573d6000803e3d6000fd5b50505050846001600160a01b03167f58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e5785856040516200589a9291906200a9d9565b60405180910390a26036546040517f57f1d41a0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906357f1d41a90620058f39087908790879087906004016200ace0565b600060405180830381600087803b1580156200590e57600080fd5b505af115801562005923573d6000803e3d6000fd5b50506036546040517fa45468760000000000000000000000000000000000000000000000000000000081526001600160a01b038981166004830152620059bd9450909116915063a454687690602401602060405180830381865afa15801562005990573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059b691906200a38c565b856200562e565b6036546040517f1c7662c80000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526000602483015262002d16921690631c7662c890604401602060405180830381865afa15801562005a2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a5191906200a38c565b828060200190518101906200119f91906200a38c565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915262005bef7fdfe0aea12481b6861fe85f311f9e24a0b5f7886a445111af3b17dccfa27d99656040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810191909152506040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019290925260e082018190527ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee3467756101008301526101208201527f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9610140820181905261016082015290565b905090565b8015158215151462001896577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162005c869060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f60408201527f6c5d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262005cf1576040518060400160405280600581526020017f66616c736500000000000000000000000000000000000000000000000000000081525062005d28565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b60405162005d3791906200ad1e565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162005da2576040518060400160405280600581526020017f66616c736500000000000000000000000000000000000000000000000000000081525062005dd9565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b6040516200572e91906200ad70565b6040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562005e5757600080fd5b505af115801562005e6c573d6000803e3d6000fd5b50505050801562005f50576040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b15801562005ef357600080fd5b505af115801562005f08573d6000803e3d6000fd5b50505050846001600160a01b03167f2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf3618560405162005f4791906200a5c8565b60405180910390a25b6036546040517f0d0d98000000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690630d0d98009062005fa19087908790879087906004016200adae565b600060405180830381600087803b15801562005fbc57600080fd5b505af115801562005fd1573d6000803e3d6000fd5b505060365460405162002d1693506001600160a01b039091169150636108c532908890620060049089906020016200a5c8565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b81526004016200604c9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200606a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200609091906200a3a6565b600162005bf4565b600081604051602001620060ad91906200a5c8565b60408051808303601f190181529082905280516020909101206036547f1c7662c80000000000000000000000000000000000000000000000000000000083526001600160a01b03868116600485015260248401839052919350600092911690631c7662c890604401602060405180830381865afa15801562006133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200615991906200a38c565b6040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620061cb57600080fd5b505af1158015620061e0573d6000803e3d6000fd5b50506036546040517f95bc2673000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0390911692506395bc26739150602401600060405180830381600087803b1580156200624457600080fd5b505af115801562006259573d6000803e3d6000fd5b50506036546040517f6108c5320000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015260248201879052620062b594509091169150636108c5329060440162001be7565b801562003246576036546040517f1c7662c80000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820185905262003246921690631c7662c890604401602060405180830381865afa1580156200632a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200635091906200a38c565b60006200562e565b6040517fca669fa70000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620063c757600080fd5b505af1158015620063dc573d6000803e3d6000fd5b505050508015620064c0576040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b1580156200646357600080fd5b505af115801562006478573d6000803e3d6000fd5b50505050826001600160a01b03167f2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf36183604051620064b791906200a5c8565b60405180910390a25b6036546040517f6bfae1ca0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690636bfae1ca906200650d90859085906004016200a750565b600060405180830381600087803b1580156200652857600080fd5b505af11580156200653d573d6000803e3d6000fd5b505060365460405162002edb93506001600160a01b039091169150636108c532908690620060049087906020016200a5c8565b80620065e8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620065d69060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620065e8620071b3565b50565b620018968282620072fa565b806001600160a01b0316826001600160a01b03161462001896577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620066979060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620066d091906200adfa565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516200572e91906200ae4f565b6200671362007403565b620067536040518060400160405280600581526020017f616c696365000000000000000000000000000000000000000000000000000000815250620078ca565b8051602d80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909216919091179055602090810151602e5560408051808201909152600381527f626f62000000000000000000000000000000000000000000000000000000000091810191909152620067d690620078ca565b8051602f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390921691909117905560209081015160305560408051808201909152600581527f6361726f6c000000000000000000000000000000000000000000000000000000918101919091526200685990620078ca565b8051603180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055602090910151603255602154602d54620068b8929182169116683635c9adc5dea0000062007a50565b602254602f54620068e0916001600160a01b039081169116683635c9adc5dea0000062007a50565b60408051600380825260808201909252600091602082016060803683375050602d5482519293506001600160a01b0316918391506000906200692657620069266200a3c4565b6001600160a01b039283166020918202929092010152602f548251911690829060019081106200695a576200695a6200a3c4565b6001600160a01b0392831660209182029290920101526031548251911690829060029081106200698e576200698e6200a3c4565b6001600160a01b039283166020918202929092010152601c54601b54601e54620069c8939283169291821691859160029116600062007a5f565b603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601c54601b54601e5462006a20939283169291821691859160029116600162007a5f565b603480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055601c54601b54601e5462006a779392831692918216918591600291168162007a5f565b603580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055602154603354620065e8929182169116683635c9adc5dea0000062007a50565b604080516002808252606082810190935260009190816020015b604080518082019091526000808252602082015281526020019060019003908162006ae557505060408051808201909152602d546001600160a01b03168152602e546020820152815191925090829060009062006b465762006b466200a3c4565b60209081029190910181019190915260408051808201909152602f546001600160a01b031681526030549181019190915281518290600190811062006b8f5762006b8f6200a3c4565b6020026020010181905250620038778162007b63565b6000866001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562006be6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c0c91906200a38c565b90506000876001600160a01b031663d8d11f788888888860008060008060008c6040518b63ffffffff1660e01b815260040162006c539a999897969594939291906200aef8565b602060405180830381865afa15801562006c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c9791906200a38c565b905062006ca48362007b63565b9250606060005b845181101562006d21578162006ce78487848151811062006cd05762006cd06200a3c4565b602002602001015162006f3c90919063ffffffff16565b60405160200162006cfa9291906200af6f565b6040516020818303038152906040529150808062006d18906200a810565b91505062006cab565b50886001600160a01b0316636a7612028989898960008060008060008b60405160200162006d5091906200a5dd565b6040516020818303038152906040526040518b63ffffffff1660e01b815260040162006d869a999897969594939291906200afa2565b6020604051808303816000875af115801562006da6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fb191906200a3a6565b60008160405160200162006de191906200a5c8565b60408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052805190602001209050919050565b606060005b825181101562006f3557600062006e398260016200a73a565b90505b835181101562006f1f5783818151811062006e5b5762006e5b6200a3c4565b602002602001015184838151811062006e785762006e786200a3c4565b6020026020010151111562006f0a57600084838151811062006e9e5762006e9e6200a3c4565b6020026020010151905084828151811062006ebd5762006ebd6200a3c4565b602002602001015185848151811062006eda5762006eda6200a3c4565b6020026020010181815250508085838151811062006efc5762006efc6200a3c4565b602002602001018181525050505b8062006f16816200a810565b91505062006e3c565b508062006f2c816200a810565b91505062006e20565b5090919050565b60208201516040517fe341eaa400000000000000000000000000000000000000000000000000000000815260048101919091526024810182905260609060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa15801562006fbd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006fe391906200b029565b6040805160418082526080820190925293965091945092506000919060208201818036833750506040805160208101969096528581019490945250505060f89290921b7fff000000000000000000000000000000000000000000000000000000000000001660608201528151604181830301815260619091019091529392505050565b60007f6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc8361010001510362007099576001175b82610120015115620070a9576002175b7fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063283610140015103620070df5760081762007110565b7f4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce836101400151036200711057600c175b7f4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce8361016001510362007141576010175b60018260038111156200715857620071586200ae8d565b03620071675760201762003877565b60028260038111156200717e576200717e6200ae8d565b036200718d5760401762003877565b6003826003811115620071a457620071a46200ae8d565b03620038775760601792915050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620072cc5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200726792916020016200a6c1565b60408051601f198184030181529082905262007283916200a5dd565b6000604051808303816000865af19150503d8060008114620072c2576040519150601f19603f3d011682016040523d82523d6000602084013e620072c7565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b62007306828262007c95565b62001896577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620073919060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f65735d0000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1882604051620073ca91906200ad1e565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf18816040516200572e91906200ad70565b620074436040518060400160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250620078ca565b8051602880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0390921691909117905560209081015160295560408051808201909152600681527f736f6c766572000000000000000000000000000000000000000000000000000091810191909152620074c690620078ca565b8051602a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055602090910151602b55602854604051911690620075199062009952565b6001600160a01b039091168152602001604051809103906000f08015801562007546573d6000803e3d6000fd5b50602580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316908117909155602454604051919216906276a7009062278d00906200759d9062009960565b6001600160a01b03948516815293909216602084015260408301526060820152608001604051809103906000f080158015620075dd573d6000803e3d6000fd5b50602680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905560405160009062007627906200996e565b604051809103906000f08015801562007644573d6000803e3d6000fd5b506028546040517f7f7120fe0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152919250821690637f7120fe90602401600060405180830381600087803b158015620076a857600080fd5b505af1158015620076bd573d6000803e3d6000fd5b50506026546040518493506001600160a01b039091169150620076e0906200997c565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562007714573d6000803e3d6000fd5b50602780547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169182179055604080517f9b552cc20000000000000000000000000000000000000000000000000000000081529051639b552cc2916004808201926020929091908290030181865afa158015620077a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620077c791906200a6a1565b602c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039283161790556028546040517fca669fa700000000000000000000000000000000000000000000000000000000815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200786557600080fd5b505af11580156200787a573d6000803e3d6000fd5b5050602a546040517fec58f4b80000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152908416925063ec58f4b8915060240162003c95565b6040805180820190915260008082526020820152600082604051602001620078f391906200a5dd565b60408051808303601f190181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562007978573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200799e91906200a6a1565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620079f590849088906004016200b068565b600060405180830381600087803b15801562007a1057600080fd5b505af115801562007a25573d6000803e3d6000fd5b505050506040518060400160405280826001600160a01b031681526020018381525092505050919050565b62002edb838383600062007d5e565b6000866001600160a01b0316631688f0b98763b63e800d60e01b8888600089600080600060405160240162007a9b97969594939291906200b08c565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b909216825262007b12929187906004016200b0f6565b6020604051808303816000875af115801562007b32573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007b5891906200a6a1565b979650505050505050565b606060005b825181101562006f3557600062007b818260016200a73a565b90505b835181101562007c7f5783818151811062007ba35762007ba36200a3c4565b6020026020010151600001516001600160a01b031684838151811062007bcd5762007bcd6200a3c4565b6020026020010151600001516001600160a01b0316111562007c6a57600084838151811062007c005762007c006200a3c4565b6020026020010151905084828151811062007c1f5762007c1f6200a3c4565b602002602001015185848151811062007c3c5762007c3c6200a3c4565b60200260200101819052508085838151811062007c5d5762007c5d6200a3c4565b6020026020010181905250505b8062007c76816200a810565b91505062007b84565b508062007c8c816200a810565b91505062007b68565b80518251600191900362007d555760005b835181101562007d4e5782818151811062007cc55762007cc56200a3c4565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684828151811062007d075762007d076200a3c4565b01602001517fff00000000000000000000000000000000000000000000000000000000000000161462007d3957600091505b8062007d45816200a810565b91505062007ca6565b5062003877565b50600092915050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f70a0823100000000000000000000000000000000000000000000000000000000179052915160009287169162007de2916200a5dd565b6000604051808303816000865af19150503d806000811462007e21576040519150601f19603f3d011682016040523d82523d6000602084013e62007e26565b606091505b5091505060008180602001905181019062007e4291906200a38c565b905062007e958462007e8e8762007e877f70a082310000000000000000000000000000000000000000000000000000000062007e8060058d62007fe6565b9062008026565b906200805f565b9062008088565b82156200185d5760408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f18160ddd0000000000000000000000000000000000000000000000000000000017905290516000916001600160a01b0389169162007f0e91906200a5dd565b6000604051808303816000865af19150503d806000811462007f4d576040519150601f19603f3d011682016040523d82523d6000602084013e62007f52565b606091505b5091505060008180602001905181019062007f6e91906200a38c565b90508286101562007f995762007f8586846200b12a565b62007f9190826200b12a565b905062007fb4565b62007fa583876200b12a565b62007fb190826200a73a565b90505b620026bb8162007e8e7f18160ddd0000000000000000000000000000000000000000000000000000000062007e8060058d5b6005820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556000825b9392505050565b6003820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001660e083901c1790556000826200801f565b6002820180546001810182556000918252602082206001600160a01b038416910155826200801f565b620018968282600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200810157602002820191906000526020600020905b815481526020019060010190808311620080ec575b50505050509050600083620081168362008562565b604051602001620081299291906200a6c1565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382207fffffffff000000000000000000000000000000000000000000000000000000008a168352815292812091945090929091620081959186918891016200b140565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620081d057620081ce876200860f565b505b6001600160a01b0385166000908152602088815260408083207fffffffff00000000000000000000000000000000000000000000000000000000881684528252808320905190918391620082299187918991016200b140565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516200827091906200a5dd565b600060405180830381855afa9150503d8060008114620082ad576040519150601f19603f3d011682016040523d82523d6000602084013e620082b2565b606091505b509150620082cf905081620082c98860206200a84b565b6200861c565b6040517f667f9d700000000000000000000000000000000000000000000000000000000081526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa1580156200834f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200837591906200a38c565b905080821462008454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e277420737570706f727465642e000000000000000000000000000000000060a482015260c4016200104d565b6040517f70ca10bb0000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015260248101849052604481018a9052737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b158015620084d157600080fd5b505af1158015620084e6573d6000803e3d6000fd5b50505060058b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555060038a0180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001690556200854e60028b0160006200998a565b896004016000905550505050505050505050565b60606000825160206200857691906200a84b565b67ffffffffffffffff811115620085915762008591620099d5565b6040519080825280601f01601f191660200182016040528015620085bc576020820181803683370190505b50905060005b835181101562004603576000848281518110620085e357620085e36200a3c4565b60200260200101519050808260200260200184015250808062008606906200a810565b915050620085c2565b60006200387782620086be565b600080600060208551116200863357845162008636565b60205b905060005b81811015620086b457620086518160086200a84b565b866200865e83886200a73a565b815181106200867157620086716200a3c4565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180620086ab816200a810565b9150506200863b565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200873057602002820191906000526020600020905b8154815260200190600101908083116200871b575b5050506001600160a01b038716600090815260018a01602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a168452825280832090519596509491935062008794925085918791016200b140565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200884b576001600160a01b0384166000908152602087815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832090519092916200881b9185918791016200b140565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836200885983620097b9565b6040516020016200886c9291906200a6c1565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620088dc57600080fd5b505af1158015620088f1573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200891291906200a5dd565b600060405180830381855afa9150503d80600081146200894f576040519150601f19603f3d011682016040523d82523d6000602084013e62008954565b606091505b509150620089719050816200896b8760206200a84b565b62009866565b6040517f65bc94810000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af1158015620089ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262008a1691908101906200b1de565b509050805160010362008e485760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d70898460008151811062008a6e5762008a6e6200a3c4565b60200260200101516040518363ffffffff1660e01b815260040162008aa89291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562008ac6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008aec91906200a38c565b90508062008b57577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062008b2c5762008b2c6200a3c4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b80831462008c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e277420737570706f727465642e000000000000000000000000000000000060a482015260c4016200104d565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162008c6c9291906200b140565b604051602081830303815290604052805190602001208560008151811062008c985762008c986200a3c4565b602090810291909101810151604080516001600160a01b0390961686527fffffffff000000000000000000000000000000000000000000000000000000009094169185019190915291830152606082015260800160405180910390a18160008151811062008d0a5762008d0a6200a3c4565b6020908102919091018101516001600160a01b038a1660009081528c835260408082207fffffffff000000000000000000000000000000000000000000000000000000008c168352845280822090519293909262008d6d918a918c91016200b140565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284207fffffffff000000000000000000000000000000000000000000000000000000008c1685528252828420925190939162008def918a918c91016200b140565b60408051808303601f1901815291815281516020928301208352908201929092520160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550620095b1565b600181511115620095265760005b81518110156200951f5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a85858151811062008eaa5762008eaa6200a3c4565b60200260200101516040518363ffffffff1660e01b815260040162008ee49291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562008f02573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008f2891906200a38c565b90508062008f92577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062008f675762008f676200a3c4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8a85858151811062008fda5762008fda6200a3c4565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201527f13370000000000000000000000000000000000000000000000000000000000006044820152606401600060405180830381600087803b1580156200906a57600080fd5b505af11580156200907f573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051620090a191906200a5dd565b600060405180830381855afa9150503d8060008114620090de576040519150601f19603f3d011682016040523d82523d6000602084013e620090e3565b606091505b509092509050620090fb816200896b8b60206200a84b565b95508180156200912a57507f133700000000000000000000000000000000000000000000000000000000000086145b1562009434577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620091689291906200b140565b604051602081830303815290604052805190602001208888815181106200919357620091936200a3c4565b602090810291909101810151604080516001600160a01b0390961686527fffffffff000000000000000000000000000000000000000000000000000000009094169185019190915291830152606082015260800160405180910390a18484815181106200920457620092046200a3c4565b6020908102919091018101516001600160a01b038d1660009081528f835260408082207fffffffff000000000000000000000000000000000000000000000000000000008f168352845280822090519293909262009267918d918f91016200b140565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008a8c6040516020016200931e9291906200b140565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110620093a157620093a16200a3c4565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b1580156200941257600080fd5b505af115801562009427573d6000803e3d6000fd5b505050505050506200951f565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c8787815181106200947c576200947c6200a3c4565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015620094ed57600080fd5b505af115801562009502573d6000803e3d6000fd5b50505050505050808062009516906200a810565b91505062008e56565b50620095b1565b604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016200104d565b6001600160a01b038716600090815260018a01602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a168452825280832090519092916200960d9188918a91016200b140565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620096c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e000000000000000000000000000000000060648201526084016200104d565b6005890180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556003890180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001690556200972860028a0160006200998a565b600060048a018190556001600160a01b038816815260208a815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a16845282528083209051909291620097869188918a91016200b140565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6060600082516020620097cd91906200a84b565b67ffffffffffffffff811115620097e857620097e8620099d5565b6040519080825280601f01601f19166020018201604052801562009813576020820181803683370190505b50905060005b8351811015620046035760008482815181106200983a576200983a6200a3c4565b6020026020010151905080826020026020018401525080806200985d906200a810565b91505062009819565b600080600060208551116200987d57845162009880565b60205b905060005b81811015620086b4576200989b8160086200a84b565b86620098a883886200a73a565b81518110620098bb57620098bb6200a3c4565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180620098f5816200a810565b91505062009885565b610b98806200b24083390190565b612230806200bdd883390190565b61013c806200e00883390190565b610809806200e14483390190565b610200806200e94d83390190565b611246806200eb4d83390190565b610e0d806200fd9383390190565b617e068062010ba083390190565b610d0680620189a683390190565b6153a880620196ac83390190565b5080546000825590600052602060002090810190620065e891905b80821115620099bb5760008155600101620099a5565b5090565b6001600160a01b0381168114620065e857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171562009a2b5762009a2b620099d5565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562009a5d5762009a5d620099d5565b604052919050565b600067ffffffffffffffff82111562009a825762009a82620099d5565b50601f01601f191660200190565b600082601f83011262009aa257600080fd5b813562009ab962009ab38262009a65565b62009a31565b81815284602083860101111562009acf57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121562009b0357600080fd5b843562009b1081620099bf565b9350602085013562009b2281620099bf565b925060408501359150606085013567ffffffffffffffff81111562009b4657600080fd5b62009b548782880162009a90565b91505092959194509250565b60006020828403121562009b7357600080fd5b5035919050565b60005b8381101562009b9757818101518382015260200162009b7d565b50506000910152565b6000815180845262009bba81602086016020860162009b7a565b601f01601f19169290920160200192915050565b6001600160a01b038416815282602082015260606040820152600062003b29606083018462009ba0565b600081518084526020808501945080840160005b8381101562009c335781516001600160a01b03168752958201959082019060010162009c0c565b509495945050505050565b6020815260006200801f602083018462009bf8565b600067ffffffffffffffff82111562009c705762009c70620099d5565b5060051b60200190565b600082601f83011262009c8c57600080fd5b8135602062009c9f62009ab38362009c53565b82815260059290921b8401810191818101908684111562009cbf57600080fd5b8286015b8481101562009cdc578035835291830191830162009cc3565b509695505050505050565b60006020828403121562009cfa57600080fd5b813567ffffffffffffffff81111562009d1257600080fd5b62009d208482850162009c7a565b949350505050565b60008060008060008060c0878903121562009d4257600080fd5b863562009d4f81620099bf565b9550602087013567ffffffffffffffff8082111562009d6d57600080fd5b62009d7b8a838b0162009c7a565b9650604089013595506060890135915062009d9682620099bf565b9093506080880135925060a0880135908082111562009db457600080fd5b5062009dc389828a0162009a90565b9150509295509295509295565b6000806040838503121562009de457600080fd5b823562009df181620099bf565b946020939093013593505050565b60008060006060848603121562009e1557600080fd5b83359250602084013567ffffffffffffffff81111562009e3457600080fd5b62009e428682870162009c7a565b925050604084013590509250925092565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562009f31578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562009f1b5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062009ed7565b50978a0197955050509187019160010162009e7b565b50919998505050505050505050565b600080600080600060a0868803121562009f5957600080fd5b853562009f6681620099bf565b9450602086013562009f7881620099bf565b935060408601359250606086013567ffffffffffffffff81111562009f9c57600080fd5b62009faa8882890162009a90565b95989497509295608001359392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200a033577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526200a02085835162009ba0565b9450928501929085019060010162009fe3565b5092979650505050505050565b6000806000606084860312156200a05657600080fd5b83356200a06381620099bf565b95602085013595506040909401359392505050565b600080604083850312156200a08c57600080fd5b823567ffffffffffffffff8111156200a0a457600080fd5b6200a0b28582860162009c7a565b95602094909401359450505050565b600081518084526020808501945080840160005b8381101562009c33578151875295820195908201906001016200a0d5565b6020815260006200801f60208301846200a0c1565b600080604083850312156200a11c57600080fd5b50508035926020909101359150565b6001600160a01b03815116825260208101516020830152600060408201516060604085015262009d20606085018262009ba0565b6001600160a01b03851681526080602082015260006200a18360808301866200a12b565b82810360408401526200a197818662009ba0565b9050828103606084015262007b5881856200a0c1565b8051620039c481620099bf565b805163ffffffff81168114620039c457600080fd5b80518015158114620039c457600080fd5b600082601f8301126200a1f257600080fd5b81516200a20362009ab38262009a65565b8181528460208386010111156200a21957600080fd5b62009d2082602083016020870162009b7a565b6000808284036101a08112156200a24257600080fd5b610180808212156200a25357600080fd5b6200a25d62009a04565b91506200a26a856200a1ad565b82526200a27a602086016200a1ad565b60208301526200a28d604086016200a1ad565b604083015260608501516060830152608085015160808301526200a2b460a086016200a1ba565b60a083015260c085015160c083015260e085015160e08301526101008086015181840152506101206200a2e98187016200a1cf565b908301526101408581015190830152610160808601519083015284015190925067ffffffffffffffff8111156200a31f57600080fd5b6200a32d858286016200a1e0565b9150509250929050565b600181811c908216806200a34c57607f821691505b6020821081036200a386577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000602082840312156200a39f57600080fd5b5051919050565b6000602082840312156200a3b957600080fd5b6200801f826200a1cf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80516001600160a01b0316825260208101516200a41b60208401826001600160a01b03169052565b5060408101516200a43760408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a08101516200a46460a084018263ffffffff169052565b5060c081015160c083015260e081015160e0830152610100808201518184015250610120808201516200a49a8285018215159052565b5050610140818101519083015261016090810151910152565b61018081016200387782846200a3f3565b6020815260008251606060208401526200a4e260808401826200a0c1565b90506020840151601f19808584030160408601526200a50283836200a12b565b925060408601519150808584030160608601525062003b29828262009ba0565b60006001600160a01b03808a16835280891660208401525086604083015285606083015284608083015260e060a08301526200a56260e083018562009ba0565b82810360c08401526200a576818562009ba0565b9a9950505050505050505050565b6000602082840312156200a59757600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146200801f57600080fd5b6020815260006200801f60208301846200a12b565b600082516200a5f181846020870162009b7a565b9190910192915050565b60006102606001600160a01b03808c168452808b166020850152508860408401528760608401528660808401528060a08401526200a63c8184018762009ba0565b905082810360c08401526200a652818662009ba0565b9150506200a66460e08301846200a3f3565b9998505050505050505050565b6020815260006200801f602083018462009ba0565b82815260406020820152600062009d20604083018462009ba0565b6000602082840312156200a6b457600080fd5b81516200801f81620099bf565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516200a6fd81600485016020870162009b7a565b919091016004019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156200387757620038776200a70b565b6040815260006200a76560408301856200a12b565b905082151560208301529392505050565b81516001600160a01b03168152610140810160208301516200a7a360208401826001600160a01b03169052565b5060408301516200a7bf60408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200a844576200a8446200a70b565b5060010190565b80820281158282048414176200387757620038776200a70b565b601f82111562002edb57600081815260208120601f850160051c810160208610156200a88e5750805b601f850160051c820191505b818110156200185d578281556001016200a89a565b815167ffffffffffffffff8111156200a8cc576200a8cc620099d5565b6200a8e4816200a8dd84546200a337565b846200a865565b602080601f8311600181146200a93a57600084156200a9035750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556200185d565b600085815260208120601f198616915b828110156200a96b578886015182559484019460019091019084016200a94a565b50858210156200a9a857878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b80518252600060208201516040602085015262009d20604085018262009ba0565b82815260406020820152600062009d2060408301846200a9b8565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b168152600082516200aa3381601485016020870162009b7a565b919091016014019392505050565b6000826060808201846000805b60038110156200aae9578584038952825180518086526020918201918087019190600582901b88018101865b838110156200aad157898203601f19018552855180516001600160a01b0316835283810151848401526040908101519083018c90526200aabd8c84018262009ba0565b96840196958401959250506001016200aa7a565b509c81019c975095909501945050506001016200aa4e565b5091979650505050505050565b608080825285518282018190526000919060a090818501906020808b01865b838110156200ab3c5781516001600160a01b0316855293820193908201906001016200ab15565b5050868303818801526200ab51838b6200a0c1565b925060409150868303828801528289518085528285019150828160051b860101838c0160005b838110156200ac2e57601f198884030185528151610160815185528782015188860152888201516200abb38a8701826001600160a01b03169052565b50606082810151908601528b8201518c8601528a82015163ffffffff168b86015260c0808301519086015260e0808301519086015261010080830151908601526101208083015190860152610140918201519185018190526200ac198186018362009ba0565b9688019694505050908501906001016200ab77565b505089810360608b01526200ac44818c6200aa41565b9e9d5050505050505050505050505050565b6040815260006200ac9460408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b6040815260006200ac9460408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b8481526080602082015260006200acfb60808301866200a9b8565b6001600160a01b0385166040840152828103606084015262007b58818562009ba0565b6040815260006200ad5c60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b828103602084015262009d20818562009ba0565b6040815260006200ad5c60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b6080815260006200adc360808301876200a12b565b6001600160a01b038616602084015282810360408401526200ade6818662009ba0565b915050821515606083015295945050505050565b6040815260006200ae3860408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b90506001600160a01b038316602083015292915050565b6040815260006200ae3860408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106200aef4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60006101406001600160a01b03808e1684528c60208501528160408501526200af248285018d62009ba0565b92506200af35606085018c6200aebc565b60808401999099525060a082019690965260c081019490945291851660e08401529093166101008201526101200191909152949350505050565b600083516200af8381846020880162009b7a565b8351908301906200af9981836020880162009b7a565b01949350505050565b60006101406001600160a01b03808e1684528c60208501528160408501526200afce8285018d62009ba0565b91506200afdf606085018c6200aebc565b8960808501528860a08501528760c085015280871660e0850152808616610100850152508281036101208401526200b018818562009ba0565b9d9c50505050505050505050505050565b6000806000606084860312156200b03f57600080fd5b835160ff811681146200b05157600080fd5b602085015160409095015190969495509392505050565b6001600160a01b038316815260406020820152600062009d20604083018462009ba0565b60006101008083526200b0a28184018b62009bf8565b60208481019a909a526001600160a01b0398891660408501528381036060850152600081529688166080840152505092851660a084015260ff9190911660c083015290921660e09092019190915201919050565b6001600160a01b03841681526060602082015260006200b11a606083018562009ba0565b9050826040830152949350505050565b818103818111156200387757620038776200a70b565b825160009082906020808701845b838110156200b16c578151855293820193908201906001016200b14e565b5050948252509092019392505050565b600082601f8301126200b18e57600080fd5b815160206200b1a162009ab38362009c53565b82815260059290921b840181019181810190868411156200b1c157600080fd5b8286015b8481101562009cdc57805183529183019183016200b1c5565b600080604083850312156200b1f257600080fd5b825167ffffffffffffffff808211156200b20b57600080fd5b6200b219868387016200b17c565b935060208501519150808211156200b23057600080fd5b506200a32d858286016200b17c56fe60a060405234801561001057600080fd5b50604051610b98380380610b9883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610b016100976000396000818160890152818160f101526102490152610b016000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631626ba7e1461003b5780638b0f483414610084575b600080fd5b61004e610049366004610449565b6100d0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b6000806000838060200190518101906100e991906106ee565b9150915060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017e91906107e8565b90508561021084837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090910180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b14610247576040517f0af806e000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166353f00b14303389856000801b8960405160200161029c9190610801565b604051602081830303815290604052896040516020016102bc9190610939565b6040516020818303038152906040526040518863ffffffff1660e01b81526004016102ed9796959493929190610a17565b602060405180830381865afa15801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e9190610a82565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561038a5761038a610338565b60405290565b604051610180810167ffffffffffffffff8111828210171561038a5761038a610338565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156103fb576103fb610338565b604052919050565b600067ffffffffffffffff82111561041d5761041d610338565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000806040838503121561045c57600080fd5b82359150602083013567ffffffffffffffff81111561047a57600080fd5b8301601f8101851361048b57600080fd5b803561049e61049982610403565b6103b4565b8181528660208385010111156104b357600080fd5b816020840160208301376000602083830101528093505050509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146104f557600080fd5b50565b8051610503816104d3565b919050565b805163ffffffff8116811461050357600080fd5b8051801515811461050357600080fd5b60005b8381101561054757818101518382015260200161052f565b50506000910152565b600082601f83011261056157600080fd5b815161056f61049982610403565b81815284602083860101111561058457600080fd5b61059582602083016020870161052c565b949350505050565b6000606082840312156105af57600080fd5b6105b7610367565b905081516105c4816104d3565b815260208281015190820152604082015167ffffffffffffffff8111156105ea57600080fd5b6105f684828501610550565b60408301525092915050565b60006060828403121561061457600080fd5b61061c610367565b9050815167ffffffffffffffff8082111561063657600080fd5b818401915084601f83011261064a57600080fd5b815160208282111561065e5761065e610338565b8160051b61066d8282016103b4565b928352848101820192828101908985111561068757600080fd5b958301955b848710156106a55786518252958301959083019061068c565b87525050858101519350828411156106bc57600080fd5b6106c88785880161059d565b908501525060408401519150808211156106e157600080fd5b506105f684828501610550565b6000808284036101a081121561070357600080fd5b6101808082121561071357600080fd5b61071b610390565b9150610726856104f8565b8252610734602086016104f8565b6020830152610745604086016104f8565b6040830152606085015160608301526080850151608083015261076a60a08601610508565b60a083015260c085015160c083015260e085015160e083015261010080860151818401525061012061079d81870161051c565b908301526101408581015190830152610160808601519083015284015190925067ffffffffffffffff8111156107d257600080fd5b6107de85828601610602565b9150509250929050565b6000602082840312156107fa57600080fd5b5051919050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610847602084018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161086f604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a083015161089b60a084018263ffffffff169052565b5060c083015160c083015260e083015160e0830152610100808401518184015250610120808401516108d08285018215159052565b5050610140838101519083015261016092830151929091019190915290565b6000815180845261090781602086016020860161052c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101561097e578351825292840192600192909201919084019061095e565b508387015192507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe091508186820301604087015273ffffffffffffffffffffffffffffffffffffffff8351168152838301518482015260408301519350606060408201526109ef60608201856108ef565b935050604086015191508085840301606086015250610a0e82826108ef565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808a16835280891660208401525086604083015285606083015284608083015260e060a0830152610a6260e08301856108ef565b82810360c0840152610a7481856108ef565b9a9950505050505050505050565b600060208284031215610a9457600080fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114610ac457600080fd5b939250505056fea2646970667358221220d4ef54169c20efa07af52e11f57935f827101751a2c078ce18e69e7748af00b464736f6c6343000813003360a06040523480156200001157600080fd5b5060405162002230380380620022308339810160408190526200003491620000a3565b806001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000073573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000999190620000d5565b60805250620000ef565b600060208284031215620000b657600080fd5b81516001600160a01b0381168114620000ce57600080fd5b9392505050565b600060208284031215620000e857600080fd5b5051919050565b60805161211e6200011260003960008181610328015261092a015261211e6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063595001b21161008c5780638f7984ed116100665780638f7984ed1461028c57806395bc26731461029f578063a454687614610303578063f698da251461032357600080fd5b8063595001b2146101e05780636108c5321461023b5780636bfae1ca1461027957600080fd5b806326e0a196116100c857806326e0a1961461015557806353f00b14146101765780635500079d146101ba57806357f1d41a146101cd57600080fd5b80630d0d9800146100ef5780631ab0dd9d146101045780631c7662c814610117575b600080fd5b6101026100fd366004611216565b61034a565b005b6101026101123660046112bb565b61041d565b61014261012536600461130d565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610168610163366004611339565b61046d565b60405161014c929190611556565b610189610184366004611578565b610afd565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161014c565b6101426101c83660046117ea565b610c3f565b6101026101db366004611827565b610c6f565b6102166101ee3660046118b0565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014c565b61026961024936600461130d565b600160209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161014c565b6101026102873660046118cd565b610d30565b61010261029a3660046118b0565b610e38565b6101026102ad36600461191f565b336000818152600160209081526040808320858452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559282526003815282822093825292909252812055565b6101426103113660046118b0565b60006020819052908152604090205481565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b6103548582610d30565b6040517fb6576bdf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063b6576bdf906103a89086908690600401611981565b602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190611995565b336000908152600360205260408120906104056101c8896119ae565b81526020810191909152604001600020555050505050565b3360008181526020819052604090819020849055517f58662f46b4a87d0f96d929b24c37fe25c55d52c0025d0b2bec3936534cc31e57906104619085908590611a1e565b60405180910390a25050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915260606000610518896104df8a6119ae565b878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610ebf92505050565b905061052760208901896118b0565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fb8296fc400000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff91909116906301ffc9a790602401602060405180830381865afa9250505080156105ed575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105ea91810190611a68565b60015b610623576040517f2c7ca6d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061065a576040517f2c7ca6d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061066860208901896118b0565b73ffffffffffffffffffffffffffffffffffffffff1663b8296fc48a338461069360408e018e611a85565b8d8d6040518863ffffffff1660e01b81526004016106b79796959493929190611aea565b61018060405180830381865afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190611b73565b925061074789826107098b6119ae565b8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611001915050565b61077d576040517f03fc2a7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f62af8dc200000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8a16906301ffc9a790602401602060405180830381865afa925050508015610841575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261083e91810190611a68565b60015b6108f15760408051608060208702808301820190935260608201878152869383928a918a9182919086019084908082843760009201919091525050509082525060200161088d8b6119ae565b815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040516108db929190602001611ce0565b6040516020818303038152906040529150610af1565b80610928576040517f79ac63cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e4898560405160200161097b9190611d02565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152608060208b028085018201909352606084018b81529193928392918d918d918291908601908490808284376000920191909152505050908252506020016109ec8e6119ae565b81526020018c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250604051610a399190602001611d11565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a7794939291602401611d24565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5fd7e97d000000000000000000000000000000000000000000000000000000001790529250505b50965096945050505050565b600080610b0c83850185611d60565b90506000610b238c83602001518460000151610ebf565b90506000610b3387890189611e82565b9050610b4a8d838560200151866040015185611001565b610b80576040517f03fc2a7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82602001516000015173ffffffffffffffffffffffffffffffffffffffff166314a2a7848e8e8e8e878960200151604001518a60400151896040518963ffffffff1660e01b8152600401610bdb989796959493929190611f40565b60006040518083038186803b158015610bf357600080fd5b505afa158015610c07573d6000803e3d6000fd5b507f1626ba7e0000000000000000000000000000000000000000000000000000000096505050505050505b9998505050505050505050565b600081604051602001610c529190611fb0565b604051602081830303815290604052805190602001209050919050565b610c79858561041d565b6040517fb6576bdf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063b6576bdf90610ccd9085908590600401611981565b602060405180830381865afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190611995565b3360009081526003602090815260408083208380529091529020555050505050565b6000610d3f60208401846118b0565b73ffffffffffffffffffffffffffffffffffffffff1603610d8c576040517fd8f59fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260016020819052604082209091610dab6101c8866119ae565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558015610e34573373ffffffffffffffffffffffffffffffffffffffff167f2cceac5555b0ca45a3744ced542f54b56ad2eb45e521962372eef212a2cbf361836040516104619190611fc3565b5050565b3360008181526002602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915591519182527f41f583e2d25b3921afe66987b63b0b5e4cf2acbbbed4a477fd19a22180f3f859910160405180910390a250565b60008151600014610f84576000610ed584610c3f565b604051602001610ee791815260200190565b604051602081830303815290604052805190602001209050610f48836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836110e1565b610f7e576040517f4a82146400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610ffa565b610f8d83610c3f565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020908152604080832084845290915290205490915060ff16610ffa576040517f7a93323400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526002602052604081205490911680156110d2576040517ff9ae35a200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f9ae35a2906110899086908a908a908a9060040161201c565b602060405180830381865afa1580156110a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ca9190611a68565b9150506110d8565b60019150505b95945050505050565b6000826110ee85846110f7565b14949350505050565b600081815b845181101561113c576111288286838151811061111b5761111b61205a565b6020026020010151611146565b91508061113481612089565b9150506110fc565b5090505b92915050565b6000818310611162576000828152602084905260409020610ffa565b5060009182526020526040902090565b60006060828403121561118457600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146111ac57600080fd5b50565b60008083601f8401126111c157600080fd5b50813567ffffffffffffffff8111156111d957600080fd5b6020830191508360208285010111156111f157600080fd5b9250929050565b80151581146111ac57600080fd5b8035611211816111f8565b919050565b60008060008060006080868803121561122e57600080fd5b853567ffffffffffffffff8082111561124657600080fd5b61125289838a01611172565b9650602088013591506112648261118a565b9094506040870135908082111561127a57600080fd5b50611287888289016111af565b909450925050606086013561129b816111f8565b809150509295509295909350565b60006040828403121561118457600080fd5b600080604083850312156112ce57600080fd5b82359150602083013567ffffffffffffffff8111156112ec57600080fd5b6112f8858286016112a9565b9150509250929050565b80356112118161118a565b6000806040838503121561132057600080fd5b823561132b8161118a565b946020939093013593505050565b6000806000806000806080878903121561135257600080fd5b863561135d8161118a565b9550602087013567ffffffffffffffff8082111561137a57600080fd5b6113868a838b01611172565b9650604089013591508082111561139c57600080fd5b6113a88a838b016111af565b909650945060608901359150808211156113c157600080fd5b818901915089601f8301126113d557600080fd5b8135818111156113e457600080fd5b8a60208260051b85010111156113f957600080fd5b6020830194508093505050509295509295509295565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151611450602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040810151611478604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606081015160608301526080810151608083015260a08101516114a460a084018263ffffffff169052565b5060c081015160c083015260e081015160e0830152610100808201518184015250610120808201516114d98285018215159052565b5050610140818101519083015261016090810151910152565b6000815180845260005b81811015611518576020818501810151868301820152016114fc565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60006101a0611565838661140f565b806101808401526110d8818401856114f2565b600080600080600080600080600060e08a8c03121561159657600080fd5b89356115a18161118a565b985060208a01356115b18161118a565b975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff808211156115e357600080fd5b6115ef8d838e016111af565b909650945060c08c013591508082111561160857600080fd5b506116158c828d016111af565b915080935050809150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561167e5761167e61162c565b60405290565b604051610180810167ffffffffffffffff8111828210171561167e5761167e61162c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156116ef576116ef61162c565b604052919050565b600082601f83011261170857600080fd5b813567ffffffffffffffff8111156117225761172261162c565b61175360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016116a8565b81815284602083860101111561176857600080fd5b816020850160208301376000918101602001919091529392505050565b60006060828403121561179757600080fd5b61179f61165b565b905081356117ac8161118a565b815260208281013590820152604082013567ffffffffffffffff8111156117d257600080fd5b6117de848285016116f7565b60408301525092915050565b6000602082840312156117fc57600080fd5b813567ffffffffffffffff81111561181357600080fd5b61181f84828501611785565b949350505050565b60008060008060006080868803121561183f57600080fd5b85359450602086013567ffffffffffffffff8082111561185e57600080fd5b61186a89838a016112a9565b95506040880135915061187c8261118a565b9093506060870135908082111561189257600080fd5b5061189f888289016111af565b969995985093965092949392505050565b6000602082840312156118c257600080fd5b8135610ffa8161118a565b600080604083850312156118e057600080fd5b823567ffffffffffffffff8111156118f757600080fd5b61190385828601611172565b9250506020830135611914816111f8565b809150509250929050565b60006020828403121561193157600080fd5b5035919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60208152600061181f602083018486611938565b6000602082840312156119a757600080fd5b5051919050565b60006111403683611785565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119ef57600080fd5b830160208101925035905067ffffffffffffffff811115611a0f57600080fd5b8036038213156111f157600080fd5b82815260406020820152813560408201526000611a3e60208401846119ba565b60406060850152611a53608085018284611938565b9695505050505050565b8051611211816111f8565b600060208284031215611a7a57600080fd5b8151610ffa816111f8565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611aba57600080fd5b83018035915067ffffffffffffffff821115611ad557600080fd5b6020019150368190038213156111f157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff808a16835280891660208401525086604083015260a06060830152611b2a60a083018688611938565b8281036080840152611b3d818587611938565b9a9950505050505050505050565b80516112118161118a565b63ffffffff811681146111ac57600080fd5b805161121181611b56565b60006101808284031215611b8657600080fd5b611b8e611684565b611b9783611b4b565b8152611ba560208401611b4b565b6020820152611bb660408401611b4b565b60408201526060830151606082015260808301516080820152611bdb60a08401611b68565b60a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120611c0e818501611a5d565b908201526101408381015190820152610160928301519281019290925250919050565b73ffffffffffffffffffffffffffffffffffffffff815116825260208101516020830152600060408201516060604085015261181f60608501826114f2565b805160608084528151908401819052600091602091908201906080860190845b81811015611cac57835183529284019291840191600101611c90565b505082850151915085810383870152611cc58183611c31565b92505050604083015184820360408601526110d882826114f2565b60006101a0611cef838661140f565b806101808401526110d881840185611c70565b6101808101611140828461140f565b602081526000610ffa6020830184611c70565b848152836020820152608060408201526000611d4360808301856114f2565b8281036060840152611d5581856114f2565b979650505050505050565b60006020808385031215611d7357600080fd5b823567ffffffffffffffff80821115611d8b57600080fd5b9084019060608287031215611d9f57600080fd5b611da761165b565b823582811115611db657600080fd5b8301601f81018813611dc757600080fd5b803583811115611dd957611dd961162c565b8060051b611de88782016116a8565b918252828101870191878101908b841115611e0257600080fd5b938801935b83851015611e2057843582529388019390880190611e07565b8552505050508284013582811115611e3757600080fd5b611e4388828601611785565b85830152506040830135935081841115611e5c57600080fd5b611e68878585016116f7565b60408201529695505050505050565b803561121181611b56565b60006101808284031215611e9557600080fd5b611e9d611684565b611ea683611302565b8152611eb460208401611302565b6020820152611ec560408401611302565b60408201526060830135606082015260808301356080820152611eea60a08401611e77565b60a082015260c083013560c082015260e083013560e0820152610100808401358183015250610120611f1d818501611206565b908201526101408381013590820152610160928301359281019290925250919050565b600061026073ffffffffffffffffffffffffffffffffffffffff808c168452808b166020850152508860408401528760608401528660808401528060a0840152611f8c818401876114f2565b905082810360c0840152611fa081866114f2565b915050610c3260e083018461140f565b602081526000610ffa6020830184611c31565b6020815260008235611fd48161118a565b73ffffffffffffffffffffffffffffffffffffffff81166020840152506020830135604083015261200860408401846119ba565b6060808501526110d8608085018284611938565b60006101e061202b838861140f565b85610180840152806101a084015261204581840186611c31565b90508281036101c0840152611d5581856114f2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e23d95217a10665974c83c4ea22bd347daab0570e397236749f8f5063e1b702164736f6c63430008130033608060405234801561001057600080fd5b5061011c806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b6576bdf14602d575b600080fd5b603c60383660046061565b604e565b60405190815260200160405180910390f35b6000605a8284018460ce565b9392505050565b60008060208385031215607357600080fd5b823567ffffffffffffffff80821115608a57600080fd5b818501915085601f830112609d57600080fd5b81358181111560ab57600080fd5b86602082850101111560bc57600080fd5b60209290920196919550909350505050565b60006020828403121560df57600080fd5b503591905056fea26469706673582212205ee976c6d7f83068ad9200db4fa3a35696cf6d3378cc55bbb67378cebd77520c64736f6c63430008130033608060405234801561001057600080fd5b506107e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806314a2a7841461006e578063b8296fc414610083575b600080fd5b6100596100543660046102d2565b6100a3565b60405190151581526020015b60405180910390f35b61008161007c366004610399565b61013c565b005b610096610091366004610487565b610259565b6040516100659190610526565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061013657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061014d8b8b8989898989610259565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461024c57604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610614565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091526102c6828401846106f5565b98975050505050505050565b6000602082840312156102e457600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461031457600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461033d57600080fd5b50565b803561034b8161031b565b919050565b60008083601f84011261036257600080fd5b50813567ffffffffffffffff81111561037a57600080fd5b60208301915083602082850101111561039257600080fd5b9250929050565b6000806000806000806000806000806102608b8d0312156103b957600080fd5b6103c38b3561031b565b8a35995060208b01356103d58161031b565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff8082111561040757600080fd5b6104138e838f01610350565b909750955060c08d013591508082111561042c57600080fd5b506104398d828e01610350565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561047257600080fd5b60e08b0190509295989b9194979a5092959850565b600080600080600080600060a0888a0312156104a257600080fd5b87356104ad8161031b565b965060208801356104bd8161031b565b955060408801359450606088013567ffffffffffffffff808211156104e157600080fd5b6104ed8b838c01610350565b909650945060808a013591508082111561050657600080fd5b506105138a828b01610350565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff1681526101808101602083015161056c602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610594604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a08301516105c060a084018263ffffffff169052565b5060c083015160c083015260e083015160e0830152610100808401518184015250610120808401516105f58285018215159052565b5050610140838101519083015261016092830151929091019190915290565b600060208083528351808285015260005b8181101561064157858101830151858201604001528201610625565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b604051610180810167ffffffffffffffff811182821017156106cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b803563ffffffff8116811461034b57600080fd5b8035801515811461034b57600080fd5b6000610180828403121561070857600080fd5b610710610680565b61071983610340565b815261072760208401610340565b602082015261073860408401610340565b6040820152606083013560608201526080830135608082015261075d60a084016106d1565b60a082015260c083013560c082015260e083013560e08201526101008084013581830152506101206107908185016106e5565b90820152610140838101359082015261016092830135928101929092525091905056fea264697066735822122077e86153d11b92768cac9f8b48af0228c489686e1f2d2a29887d4fc2c90774a864736f6c63430008130033608060405234801561001057600080fd5b506101e0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806314a2a78414610030575b600080fd5b61004361003e3660046100c1565b610045565b005b3660008037366000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461007357600080fd5b919050565b60008083601f84011261008a57600080fd5b50813567ffffffffffffffff8111156100a257600080fd5b6020830191508360208285010111156100ba57600080fd5b9250929050565b6000806000806000806000806000806102608b8d0312156100e157600080fd5b6100ea8b61004f565b99506100f860208c0161004f565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff8082111561012a57600080fd5b6101368e838f01610078565b909750955060c08d013591508082111561014f57600080fd5b5061015c8d828e01610078565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561019557600080fd5b60e08b0190509295989b9194979a509295985056fea26469706673582212202d2cb2ef58f3fa059d964484c8740fc9f7413e9605f756b008cc8b06c6bdbb5664736f6c6343000813003360a060405234801561001057600080fd5b5060405161124638038061124683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516111b5610091600039600081816093015261037701526111b56000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806314a2a7841461007957806393504c521461008e578063b8296fc4146100da575b600080fd5b61006461005f366004610c70565b6100fa565b60405190151581526020015b60405180910390f35b61008c610087366004610d34565b610193565b005b6100b57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610070565b6100ed6100e8366004610e22565b6102b0565b6040516100709190610ec1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061018d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006101a48b8b89898989896102b0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b905260228101919091526042902090915089146102a357604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290529061031d8686018761106c565b90508060a001516000036103e8576040517f1c7662c800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018990527f00000000000000000000000000000000000000000000000000000000000000001690631c7662c890604401602060405180830381865afa1580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190611108565b60a08201525b6103f181610476565b91508160a0015163ffffffff1642111561046a57604080518082018252600f81527f6e6f742077697468696e207370616e0000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b50979650505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091526104e082610622565b604051806101800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff16815260200183606001518152602001836080015181526020016105856105808560a001518660c001518760e00151886101000151610a43565b610bd6565b63ffffffff1681526020018361012001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020016000151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc98152509050919050565b806020015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036106c257604080518082018252600a81527f73616d6520746f6b656e00000000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b805173ffffffffffffffffffffffffffffffffffffffff16158015906107015750602081015173ffffffffffffffffffffffffffffffffffffffff1615155b61076a57604080518082018252600d81527f696e76616c696420746f6b656e00000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b60008160600151116107db57604080518082018252601881527f696e76616c696420706172742073656c6c20616d6f756e740000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b600081608001511161084c57604080518082018252601681527f696e76616c6964206d696e2070617274206c696d697400000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b60a081015163ffffffff116108c057604080518082018252601281527f696e76616c69642073746172742074696d650000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b60018160c001511180156108dc575060c081015163ffffffff10155b61094557604080518082018252601181527f696e76616c6964206e756d207061727473000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b60008160e0015111801561096157506301e133808160e0015111155b6109ca57604080518082018252601181527f696e76616c6964206672657175656e6379000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b8060e001518161010001511115610a4057604080518082018252600c81527f696e76616c6964207370616e0000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b50565b6000600184118015610a59575063ffffffff8411155b610a6557610a65611121565b600083118015610a7957506301e133808311155b610a8557610a85611121565b82821115610a9557610a95611121565b42851115610b0257604080518082018252601181527f6265666f72652074776170207374617274000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b82840285014210610b7257604080518082018252601181527f616674657220747761702066696e697368000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261029a9190600401610faf565b60008386420381610b8557610b85611150565b04905082600003610ba3576001848260010102870103915050610bce565b8302850182017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190505b949350505050565b600063ffffffff821115610c6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161029a565b5090565b600060208284031215610c8257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610cb257600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a4057600080fd5b8035610ce681610cb9565b919050565b60008083601f840112610cfd57600080fd5b50813567ffffffffffffffff811115610d1557600080fd5b602083019150836020828501011115610d2d57600080fd5b9250929050565b6000806000806000806000806000806102608b8d031215610d5457600080fd5b610d5e8b35610cb9565b8a35995060208b0135610d7081610cb9565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff80821115610da257600080fd5b610dae8e838f01610ceb565b909750955060c08d0135915080821115610dc757600080fd5b50610dd48d828e01610ceb565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20011215610e0d57600080fd5b60e08b0190509295989b9194979a5092959850565b600080600080600080600060a0888a031215610e3d57600080fd5b8735610e4881610cb9565b96506020880135610e5881610cb9565b955060408801359450606088013567ffffffffffffffff80821115610e7c57600080fd5b610e888b838c01610ceb565b909650945060808a0135915080821115610ea157600080fd5b50610eae8a828b01610ceb565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610f07602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610f2f604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610f5b60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610f908285018215159052565b5050610140838101519083015261016092830151929091019190915290565b600060208083528351808285015260005b81811015610fdc57858101830151858201604001528201610fc0565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b604051610140810167ffffffffffffffff81118282101715611066577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b6000610140828403121561107f57600080fd5b61108761101b565b61109083610cdb565b815261109e60208401610cdb565b60208201526110af60408401610cdb565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152506101208084013581830152508091505092915050565b60006020828403121561111a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220733968f1120306412e0bbb577306c40acd8fc83ab6a227fc90457b832d7d29f964736f6c63430008130033608060405234801561001057600080fd5b50604051610e0d380380610e0d83398101604081905261002f9161011b565b61003a600082610040565b5061014b565b61004a828261004e565b5050565b600082815260208190526040902061006690826100a7565b1561004a5760405133906001600160a01b0383169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b6001600160a01b038116600090815260018301602052604081205461011157508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03861690811790915585549082528286019093526040902091909155610115565b5060005b92915050565b60006020828403121561012d57600080fd5b81516001600160a01b038116811461014457600080fd5b9392505050565b610cb38061015a6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063988360a31161008c578063a73cb2ab11610066578063a73cb2ab146101de578063ca15c873146101f1578063d547741f14610204578063fcd7627e1461021757600080fd5b8063988360a3146101b05780639be2a884146101c3578063a217fddf146101d657600080fd5b806336568abe116100bd57806336568abe146101425780639010d07c1461015557806391d148541461018d57600080fd5b806318b2cde9146100e4578063248a9ca3146100f95780632f2ff15d1461012f575b600080fd5b6100f76100f23660046109e8565b61022a565b005b61011c610107366004610aaa565b60009081526020819052604090206002015490565b6040519081526020015b60405180910390f35b6100f761013d366004610ac3565b610295565b6100f7610150366004610ac3565b6102cb565b610168610163366004610aef565b6102f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610126565b6101a061019b366004610ac3565b61031a565b6040519015158152602001610126565b6100f76101be366004610b11565b610352565b6101a06101d1366004610b56565b610393565b61011c600081565b6100f76101ec3660046109e8565b6103a7565b61011c6101ff366004610aaa565b61040d565b6100f7610212366004610ac3565b610421565b6100f7610225366004610b11565b610449565b6102368251825161048a565b60005b82518110156102905761027e83828151811061025757610257610b92565b602002602001015183838151811061027157610271610b92565b6020026020010151610421565b8061028881610bf0565b915050610239565b505050565b6000828152602081905260409020600201546102bd906102b5903361031a565b6101a6610493565b6102c782826104a1565b5050565b6102ef73ffffffffffffffffffffffffffffffffffffffff821633146101a8610493565b6102c78282610507565b6000828152602081905260408120610311908361056d565b90505b92915050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684526001019091528120541515610311565b60005b82518110156102905761038183828151811061037357610373610b92565b602002602001015183610421565b8061038b81610bf0565b915050610355565b600061039f848461031a565b949350505050565b6103b38251825161048a565b60005b8251811015610290576103fb8382815181106103d4576103d4610b92565b60200260200101518383815181106103ee576103ee610b92565b6020026020010151610295565b8061040581610bf0565b9150506103b6565b600081815260208190526040812054610314565b6000828152602081905260409020600201546102ef90610441903361031a565b6101a7610493565b60005b82518110156102905761047883828151811061046a5761046a610b92565b602002602001015183610295565b8061048281610bf0565b91505061044c565b6102c781831460675b816102c7576102c781610589565b60008281526020819052604090206104b990826105fd565b156102c757604051339073ffffffffffffffffffffffffffffffffffffffff83169084907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a45050565b600082815260208190526040902061051f90826106a1565b156102c757604051339073ffffffffffffffffffffffffffffffffffffffff83169084907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90600090a45050565b815460009061057f9083106064610493565b6103118383610872565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b925050507f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205461069957508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915585549082528286019093526040902091909155610314565b506000610314565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205480156108685760006106dc600183610c28565b85549091506000906106f090600190610c28565b9050600086600001828154811061070957610709610b92565b600091825260209091200154875473ffffffffffffffffffffffffffffffffffffffff9091169150819088908590811061074557610745610b92565b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905561079e836001610c3b565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260018901602052604090205586548790806107d7576107d7610c4e565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff881682526001898101909152604082209190915594506103149350505050565b6000915050610314565b600082600001828154811061088957610889610b92565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610928576109286108b2565b604052919050565b600067ffffffffffffffff82111561094a5761094a6108b2565b5060051b60200190565b600082601f83011261096557600080fd5b8135602061097a61097583610930565b6108e1565b82815260059290921b8401810191818101908684111561099957600080fd5b8286015b848110156109b4578035835291830191830161099d565b509695505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109e357600080fd5b919050565b600080604083850312156109fb57600080fd5b823567ffffffffffffffff80821115610a1357600080fd5b610a1f86838701610954565b9350602091508185013581811115610a3657600080fd5b85019050601f81018613610a4957600080fd5b8035610a5761097582610930565b81815260059190911b82018301908381019088831115610a7657600080fd5b928401925b82841015610a9b57610a8c846109bf565b82529284019290840190610a7b565b80955050505050509250929050565b600060208284031215610abc57600080fd5b5035919050565b60008060408385031215610ad657600080fd5b82359150610ae6602084016109bf565b90509250929050565b60008060408385031215610b0257600080fd5b50508035926020909101359150565b60008060408385031215610b2457600080fd5b823567ffffffffffffffff811115610b3b57600080fd5b610b4785828601610954565b925050610ae6602084016109bf565b600080600060608486031215610b6b57600080fd5b83359250610b7b602085016109bf565b9150610b89604085016109bf565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c2157610c21610bc1565b5060010190565b8181038181111561031457610314610bc1565b8082018082111561031457610314610bc1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201beae7a0def6b5ed8cb25e7a517be64ca8c45817837dc6afd3881c6b541a181d64736f6c634300081300336101806040523480156200001257600080fd5b5060405162007e0638038062007e0683398101604081905262000035916200028c565b8382826040518060400160405280601181526020017010985b185b98d95c88158c8815985d5b1d607a1b81525080604051806040016040528060018152602001603160f81b815250306001600160a01b031660001b89806001600160a01b03166080816001600160a01b0316815250505030604051620000b59062000265565b6001600160a01b039091168152602001604051809103906000f080158015620000e2573d6000803e3d6000fd5b506001600160a01b031660a052600160005560c052815160209283012060e052805191012061010052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61012052620001456276a7008311156101946200019a565b6200015962278d008211156101956200019a565b6000620001678342620002d9565b61014081905290506200017b8282620002d9565b61016052506200018f9150829050620001af565b505050505062000301565b81620001ab57620001ab816200020b565b5050565b6040516001600160a01b038216907f94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef90600090a2600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b9250505062461bcd60e51b600052602060045260076024528060445260646000fd5b610ce3806200712383390190565b6001600160a01b03811681146200028957600080fd5b50565b60008060008060808587031215620002a357600080fd5b8451620002b08162000273565b6020860151909450620002c38162000273565b6040860151606090960151949790965092505050565b80820180821115620002fb57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e05161010051610120516101405161016051616d61620003c26000396000818161094f01528181611e410152611ed301526000818161092c0152611e0e0152600081816117ae015261555b0152600081816117f0015261559d0152600081816117cf015261557c0152600061136e01526000818161049e01528181612294015281816123fc0152614f7c0152600081816101b80152818161040f01528181611f6d015281816120cb01526121e20152616d616000f3fe6080604052600436106101a55760003560e01c8063945bcec9116100e1578063e6c460921161008a578063f84d066e11610064578063f84d066e14610525578063f94d466814610545578063fa6e671d14610574578063fec90d721461059457600080fd5b8063e6c46092146104c2578063ed24911d146104e2578063f6c00927146104f757600080fd5b8063b05f8e48116100bb578063b05f8e4814610433578063b95cac281461047c578063d2946c2b1461048f57600080fd5b8063945bcec9146103b6578063aaabadc5146103c9578063ad5c46481461040057600080fd5b806352bbbe291161014e5780637d3aeb96116101285780637d3aeb9614610320578063851c1bb3146103405780638bdb39131461036057806390193b7c1461038057600080fd5b806352bbbe29146102cd5780635c38449e146102e057806366a9c7d21461030057600080fd5b80630f5a6efa1161017f5780630f5a6efa1461024e57806316c38b3c1461027b5780631c0de0511461029b57600080fd5b8063058a628f146101e857806309b2760f146102085780630e8e3e841461023b57600080fd5b366101e3576101e1336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102066105c4565b005b600080fd5b3480156101f457600080fd5b506101e16102033660046159d2565b6105d6565b34801561021457600080fd5b506102286102233660046159fc565b6105fc565b6040519081526020015b60405180910390f35b6101e1610249366004615b2a565b6106de565b34801561025a57600080fd5b5061026e610269366004615c99565b61082e565b6040516102329190615d24565b34801561028757600080fd5b506101e1610296366004615d45565b610901565b3480156102a757600080fd5b506102b061091a565b604080519315158452602084019290925290820152606001610232565b6102286102db366004615e67565b610976565b3480156102ec57600080fd5b506101e16102fb366004615f9d565b610b6f565b34801561030c57600080fd5b506101e161031b366004616038565b610ff5565b34801561032c57600080fd5b506101e161033b366004616104565b6111d8565b34801561034c57600080fd5b5061022861035b366004616135565b61136a565b34801561036c57600080fd5b506101e161037b366004616213565b6113e7565b34801561038c57600080fd5b5061022861039b3660046159d2565b6001600160a01b031660009081526002602052604090205490565b61026e6103c4366004616376565b6113fd565b3480156103d557600080fd5b5060035461010090046001600160a01b03165b6040516001600160a01b039091168152602001610232565b34801561040c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e8565b34801561043f57600080fd5b5061045361044e366004616481565b611558565b604080519485526020850193909352918301526001600160a01b03166060820152608001610232565b6101e161048a366004616213565b61163f565b34801561049b57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e8565b3480156104ce57600080fd5b506101e16104dd3660046164b1565b611658565b3480156104ee57600080fd5b506102286117a5565b34801561050357600080fd5b50610517610512366004616582565b611850565b6040516102329291906165de565b34801561053157600080fd5b5061026e6105403660046165fb565b61187b565b34801561055157600080fd5b50610565610560366004616582565b611990565b604051610232939291906166ba565b34801561058057600080fd5b506101e161058f3660046166f0565b6119c4565b3480156105a057600080fd5b506105b46105af36600461673b565b611a72565b6040519015158152602001610232565b816105d2576105d281611aa7565b5050565b6105de611b1b565b6105e6611b34565b6105ef81611b7a565b6105f96001600055565b50565b6000610606611b1b565b61060e611bed565b600061061d3384600654611c02565b60008181526005602052604090205490915061063f9060ff16156101f46105c4565b600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600680549192909161068c908490616798565b9091555050604051339082907f3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e906106c59087906167ab565b60405180910390a390506106d96001600055565b919050565b6106e6611b1b565b6000806000805b84518110156108175760008060008060006107218a8781518110610713576107136167b9565b602002602001015189611c5a565b9c5093985091965094509250905060018560038111156107435761074361659b565b036107595761075484838386611cf0565b6107ff565b8661076b57610766611bed565b600196505b600085600381111561077f5761077f61659b565b036107af5761079084838386611d13565b6001600160a01b038416610754576107a88984611d33565b98506107ff565b6107c66001600160a01b03851615156102076105c4565b8360028660038111156107db576107db61659b565b036107f1576107ec81848487611d50565b6107fd565b6107fd81848487611d69565b505b5050505050808061080f906167e8565b9150506106ed565b5061082183611dd6565b5050506105f96001600055565b6060815167ffffffffffffffff81111561084a5761084a615a19565b604051908082528060200260200182016040528015610873578160200160208202803683370190505b50905060005b82518110156108fa576108cb84848381518110610898576108986167b9565b60200260200101516001600160a01b039182166000908152600b6020908152604080832093909416825291909152205490565b8282815181106108dd576108dd6167b9565b6020908102919091010152806108f2816167e8565b915050610879565b5092915050565b610909611b1b565b610911611b34565b6105ef81611e03565b6000806000610927611ecf565b1592507f000000000000000000000000000000000000000000000000000000000000000091507f00000000000000000000000000000000000000000000000000000000000000005b9050909192565b6000610980611b1b565b610988611bed565b835161099381611f05565b6109a2834211156101fc6105c4565b6109b560008760800151116101fe6105c4565b60006109c48760400151611f54565b905060006109d58860600151611f54565b90506109f8816001600160a01b0316836001600160a01b031614156101fd6105c4565b60408051610120810182526000808252602080830182905292820181905260608083018290526080830182815260a0840183905260c0840183905260e08401929092526101008301528a5190529089015181906001811115610a5c57610a5c61659b565b90816001811115610a6f57610a6f61659b565b9052506001600160a01b03808416602083015282811660408084019190915260808b0151606084015260a08b01516101008401528951821660c08401528901511660e0820152600080610ac183611f91565b91985092509050610afe60008c602001516001811115610ae357610ae361659b565b14610af15789831115610af6565b898210155b6101fb6105c4565b610b168b60400151838c600001518d60200151612099565b610b2e8b60600151828c604001518d6060015161218a565b610b57610b468c604001516001600160a01b03161590565b610b51576000611dd6565b82611dd6565b505050505050610b676001600055565b949350505050565b610b77611b1b565b610b7f611bed565b610b8b83518351612282565b6000835167ffffffffffffffff811115610ba757610ba7615a19565b604051908082528060200260200182016040528015610bd0578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610bef57610bef615a19565b604051908082528060200260200182016040528015610c18578160200160208202803683370190505b5090506000805b8651811015610dbe576000878281518110610c3c57610c3c6167b9565b602002602001015190506000878381518110610c5a57610c5a6167b9565b60200260200101519050610ca4846001600160a01b0316836001600160a01b03161160006001600160a01b0316846001600160a01b031614610c9d5760666105c4565b60686105c4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291935083916001600160a01b038316906370a0823190602401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190616820565b858481518110610d3c57610d3c6167b9565b602002602001018181525050610d518161228f565b868481518110610d6357610d636167b9565b602002602001018181525050610d9781868581518110610d8557610d856167b9565b602002602001015110156102106105c4565b610dab6001600160a01b0383168b83612320565b505080610db7906167e8565b9050610c1f565b506040517ff04f27070000000000000000000000000000000000000000000000000000000081526001600160a01b0388169063f04f270790610e0a908990899088908a906004016168a7565b600060405180830381600087803b158015610e2457600080fd5b505af1158015610e38573d6000803e3d6000fd5b5050505060005b8651811015610fe1576000878281518110610e5c57610e5c6167b9565b602002602001015190506000848381518110610e7a57610e7a6167b9565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c9190616820565b9050610f1d828210156102036105c4565b6000610f2983836168f4565b9050610f53888681518110610f4057610f406167b9565b602002602001015182101561025a6105c4565b610f5d84826123e7565b836001600160a01b03168c6001600160a01b03167f0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f08c8881518110610fa457610fa46167b9565b602002602001015184604051610fc4929190918252602082015260400190565b60405180910390a35050505080610fda906167e8565b9050610e3f565b50505050610fef6001600055565b50505050565b610ffd611b1b565b611005611bed565b8261100f81612421565b61101b83518351612282565b60005b83518110156110e557600084828151811061103b5761103b6167b9565b6020026020010151905061106760006001600160a01b0316826001600160a01b031614156101356105c4565b838281518110611079576110796167b9565b6020908102919091018101516000888152600a835260408082206001600160a01b0395861683529093529190912080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790556110de816167e8565b905061101e565b5060006110f185612453565b905060028160028111156111075761110761659b565b036111605761111c845160021461020c6105c4565b61115b8585600081518110611133576111336167b9565b60200260200101518660018151811061114e5761114e6167b9565b602002602001015161246d565b61118d565b60018160028111156111745761117461659b565b036111835761115b8585612531565b61118d8585612597565b847ff5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec485856040516111bf929190616907565b60405180910390a250506111d36001600055565b505050565b6111e0611b1b565b6111e8611bed565b816111f281612421565b60006111fd84612453565b905060028160028111156112135761121361659b565b0361126c57611228835160021461020c6105c4565b611267848460008151811061123f5761123f6167b9565b60200260200101518560018151811061125a5761125a6167b9565b60200260200101516125fa565b611299565b60018160028111156112805761128061659b565b0361128f5761126784846126b5565b611299848461278b565b60005b835181101561132557600a600086815260200190815260200160002060008583815181106112cc576112cc6167b9565b6020908102919091018101516001600160a01b0316825281019190915260400160002080547fffffffffffffffffffffffff000000000000000000000000000000000000000016905561131e816167e8565b905061129c565b50837f7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610846040516113569190616967565b60405180910390a250506105d26001600055565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016113ca9291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b604051602081830303815290604052805190602001209050919050565b610fef60018585856113f886612816565b612847565b6060611407611b1b565b61140f611bed565b835161141a81611f05565b611429834211156101fc6105c4565b61143586518551612282565b6114418787878b6129f7565b91506000805b8751811015611533576000888281518110611464576114646167b9565b602002602001015190506000858381518110611482576114826167b9565b602002602001015190506114b48884815181106114a1576114a16167b9565b60200260200101518213156101fb6105c4565b60008113156114f457885160208a015182916114d39185918491612099565b6001600160a01b0383166114ee576114eb8582611d33565b94505b50611520565b60008112156115205760006115088261697a565b905061151e83828c604001518d6060015161218a565b505b50508061152c906167e8565b9050611447565b5061153d81611dd6565b50506115496001600055565b9695505050505050565b905090565b6000806000808561156881612d30565b60008061157489612453565b9050600281600281111561158a5761158a61659b565b036115a0576115998989612d4e565b91506115d0565b60018160028111156115b4576115b461659b565b036115c3576115998989612dc6565b6115cd8989612e5d565b91505b6dffffffffffffffffffffffffffff821696506115fd8260701c6dffffffffffffffffffffffffffff1690565b95506116098260e01c90565b6000998a52600a60209081526040808c206001600160a01b039b8c168d5290915290992054969995989796909616955050505050565b611647611bed565b610fef60008585856113f886612816565b611660611b1b565b611668611bed565b6040805160808101825260008082526020820181905291810182905260608101829052905b8251811015611799578281815181106116a8576116a86167b9565b602002602001015191506000826020015190506116c481612d30565b60408301516116de6116d68383612e75565b6102096105c4565b6000828152600a602090815260408083206001600160a01b038581168552925290912054611711911633146101f66105c4565b8351606085015160008061172784878786612edb565b91509150846001600160a01b0316336001600160a01b0316877f6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a858560405161177a929190918252602082015260400190565b60405180910390a450505050505080611792906167e8565b905061168d565b50506105f96001600055565b600061155360007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000808261185d81612d30565b6118678460601c90565b61187085612453565b925092505b50915091565b6060333014611966576000306001600160a01b03166000366040516118a19291906169b2565b6000604051808303816000865af19150503d80600081146118de576040519150601f19603f3d011682016040523d82523d6000602084013e6118e3565b606091505b5050905080600081146118f257fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167ffa61cc1200000000000000000000000000000000000000000000000000000000811461194e573d6000803e3d6000fd5b50602060005260043d0380600460203e602081016000f35b6000611974858585896129f7565b9050602081510263fa61cc126020830352600482036024820181fd5b60608060008361199f81612d30565b60606119aa86612f54565b90955090506119b881612fb1565b95979096509350505050565b6119cc611b1b565b6119d4611bed565b826119de81611f05565b6001600160a01b0384811660008181526004602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687151590811790915591519182529192917f46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8910160405180910390a3506111d36001600055565b6001600160a01b03808316600090815260046020908152604080832093851683529290529081205460ff165b90505b92915050565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b925050507f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b611b2d600260005414156101906105c4565b6002600055565b6000611b636000357fffffffff000000000000000000000000000000000000000000000000000000001661136a565b90506105f9611b728233613079565b6101916105c4565b6040516001600160a01b038216907f94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef90600090a2600380546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b611c00611bf8611ecf565b6101926105c4565b565b600069ffffffffffffffffffff82166050846002811115611c2557611c2561659b565b901b17606085901b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000161790505b9392505050565b600080600080600080600088606001519050336001600160a01b0316816001600160a01b031614611cca5787611c9757611c92611b34565b600197505b6001600160a01b0381166000908152600460209081526040808320338452909152902054611cca9060ff166101f76105c4565b885160208a015160408b01516080909b0151919b909a9992985090965090945092505050565b611d0583611cfd86611f54565b836000613113565b50610fef848284600061218a565b611d2682611d2086611f54565b83613193565b610fef8482856000612099565b600080611d408385616798565b9050611a9e8482101560006105c4565b611d5d8385836000613113565b50610fef828583613193565b8015610fef57611d846001600160a01b0385168484846131d7565b604080516001600160a01b0384811682526020820184905280861692908716917f540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c91015b60405180910390a350505050565b611de5813410156102046105c4565b6000611df182346168f4565b905080156105d2576105d23382613228565b8015611e3c57611e377f000000000000000000000000000000000000000000000000000000000000000042106101936105c4565b611e6a565b611e6a7f000000000000000000000000000000000000000000000000000000000000000042106101a96105c4565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215159081179091556040519081527f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649060200160405180910390a150565b60007f000000000000000000000000000000000000000000000000000000000000000042118061155357505060035460ff161590565b336001600160a01b038216146105f957611f1d611b34565b6001600160a01b038116600090815260046020908152604080832033845290915290205460ff166105f9576105f9816101f7613299565b60006001600160a01b03821615611f6b5781611aa1565b7f0000000000000000000000000000000000000000000000000000000000000000611aa1565b600080600080611fa5856080015160601c90565b90506000611fb68660800151612453565b90506002816002811115611fcc57611fcc61659b565b03611fe257611fdb86836132d7565b9450612012565b6001816002811115611ff657611ff661659b565b0361200557611fdb8683613387565b61200f868361341a565b94505b6120258660000151876060015187613680565b809450819550505085604001516001600160a01b031686602001516001600160a01b031687608001517f2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b8787604051612088929190918252602082015260400190565b60405180910390a450509193909250565b8215610fef576001600160a01b038416612142576120ba81156102026105c4565b6120c9834710156102046105c4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561212457600080fd5b505af1158015612138573d6000803e3d6000fd5b5050505050610fef565b8381156121685760006121588483876001613113565b905061216481866168f4565b9450505b8315612183576121836001600160a01b0382168430876131d7565b5050505050565b8215610fef576001600160a01b038416612257576121ab81156102026105c4565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90602401600060405180830381600087803b15801561222657600080fd5b505af115801561223a573d6000803e3d6000fd5b50612252925050506001600160a01b03831684613228565b610fef565b83811561226e57612269838286613193565b612183565b6121836001600160a01b0382168486612320565b6105d281831460676105c4565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d877845c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123149190616820565b9050611c5383826136b3565b6040516001600160a01b0383166024820152604481018290526111d39084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261371c565b80156105d2576105d26001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000083612320565b61242a81612d30565b6105f96124378260601c90565b6001600160a01b0316336001600160a01b0316146101f56105c4565b600061ffff605083901c16611aa1600382106101f46105c4565b61248e816001600160a01b0316836001600160a01b0316141561020a6105c4565b6124ad816001600160a01b0316836001600160a01b03161060666105c4565b600083815260096020526040902080546124ea906001600160a01b03161580156124e2575060018201546001600160a01b0316155b61020b6105c4565b80546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782556001909101805492909316911617905550565b6000828152600860205260408120905b8251811015610fef576000612578848381518110612561576125616167b9565b6020026020010151846137b890919063ffffffff16565b90506125868161020a6105c4565b50612590816167e8565b9050612541565b6000828152600160205260408120905b8251811015610fef5760006125db8483815181106125c7576125c76167b9565b602090810291909101015184906000613842565b90506125e98161020a6105c4565b506125f3816167e8565b90506125a7565b600080600061260a86868661393b565b925092509250612669612639847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff161590565b801561266157507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316155b61020d6105c4565b600095865260096020526040862080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001909101805490911690559490945550505050565b6000828152600860205260408120905b8251811015610fef5760008382815181106126e2576126e26167b9565b60209081029190910181015160008781526007835260408082206001600160a01b0384168352909352919091205490915061273b907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615612661565b60008581526007602090815260408083206001600160a01b0385168452909152812081905561276a8483613a8b565b9050612778816102096105c4565b505080612784906167e8565b90506126c5565b6000828152600160205260408120905b8251811015610fef5760008382815181106127b8576127b86167b9565b6020026020010151905060006127ce8483613c1b565b90506127f87bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821615612661565b6128028483613c2a565b5050508061280f906167e8565b905061279b565b61284360405180608001604052806060815260200160608152602001606081526020016000151581525090565b5090565b61284f611b1b565b8361285981612d30565b8361286381611f05565b612877836000015151846020015151612282565b60006128868460000151613d44565b905060006128948883613de9565b905060008060006128a98c8c8c8c8c89613e8e565b92509250925060006128ba8c612453565b905060028160028111156128d0576128d061659b565b0361294f5761294a8c876000815181106128ec576128ec6167b9565b602002602001015186600081518110612907576129076167b9565b602002602001015189600181518110612922576129226167b9565b60200260200101518860018151811061293d5761293d6167b9565b602002602001015161407e565b61297d565b60018160028111156129635761296361659b565b036129735761294a8c8786614104565b61297d8c8561418e565b6000808e60018111156129925761299261659b565b1490508b6001600160a01b03168d7fe5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78896129cc88866141e5565b876040516129dc939291906169c2565b60405180910390a35050505050505050506121836001600055565b6060835167ffffffffffffffff811115612a1357612a13615a19565b604051908082528060200260200182016040528015612a3c578160200160208202803683370190505b509050612a746040518060a0016040528060008019168152602001600081526020016000815260200160008152602001606081525090565b604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018390526101008201529080805b8951811015612d2357898181518110612ada57612ada6167b9565b60200260200101519450600089518660200151108015612afe575089518660400151105b9050612b0b8160646105c4565b6000612b338b886020015181518110612b2657612b266167b9565b6020026020010151611f54565b90506000612b508c896040015181518110612b2657612b266167b9565b9050612b73816001600160a01b0316836001600160a01b031614156101fd6105c4565b8760600151600003612bc657612b8e600085116101fe6105c4565b6000612b9b8b84846142b0565b6001600160a01b0316876001600160a01b0316149050612bbd816101ff6105c4565b50606088018590525b87516080880152868a6001811115612be057612be061659b565b90816001811115612bf357612bf361659b565b9052506001600160a01b0380831660208901528181166040808a01919091526060808b0151908a015260808a01516101008a01528c51821660c08a01528c01511660e0880152600080612c4589611f91565b91985092509050612c578c85856142d8565b9750612c91612c65836142f8565b8c8c6020015181518110612c7b57612c7b6167b9565b602002602001015161432890919063ffffffff16565b8b8b6020015181518110612ca757612ca76167b9565b602002602001018181525050612ceb612cbf826142f8565b8c8c6040015181518110612cd557612cd56167b9565b602002602001015161436790919063ffffffff16565b8b8b6040015181518110612d0157612d016167b9565b602002602001018181525050505050505080612d1c906167e8565b9050612abf565b5050505050949350505050565b6000818152600560205260409020546105f99060ff166101f46105c4565b6000806000806000612d5f876143a6565b945094509450945050836001600160a01b0316866001600160a01b031603612d8d5782945050505050611aa1565b816001600160a01b0316866001600160a01b031603612db1579350611aa192505050565b612dbc610209611aa7565b5050505092915050565b60008281526007602090815260408083206001600160a01b0385168452909152812054817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8216151580612e3a575060008581526008602090815260408083206001600160a01b038816845260010190915290205415155b905080612e5557612e4a85612d30565b612e55610209611aa7565b509392505050565b6000828152600160205260408120610b678184613c1b565b600080612e8184612453565b90506002816002811115612e9757612e9761659b565b03612eae57612ea68484614474565b915050611aa1565b6001816002811115612ec257612ec261659b565b03612ed157612ea684846144c5565b612ea684846144f3565b6000806000612ee986612453565b90506000876002811115612eff57612eff61659b565b03612f1a57612f1086828787614521565b9250925050612f4b565b6001876002811115612f2e57612f2e61659b565b03612f3f57612f10868287876145ab565b612f1086828787614638565b94509492505050565b6060806000612f6284612453565b90506002816002811115612f7857612f7861659b565b03612f8657611870846146a5565b6001816002811115612f9a57612f9a61659b565b03612fa857611870846147f1565b61187084614927565b60606000825167ffffffffffffffff811115612fcf57612fcf615a19565b604051908082528060200260200182016040528015612ff8578160200160208202803683370190505b5091506000905060005b825181101561187557600084828151811061301f5761301f6167b9565b6020026020010151905061303281614a4b565b848381518110613044576130446167b9565b6020026020010181815250506130638361305e8360e01c90565b614a81565b9250508080613071906167e8565b915050613002565b6003546040517f9be2a884000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03838116602483015230604483015260009261010090041690639be2a88490606401602060405180830381865afa1580156130ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e91906169fb565b6001600160a01b038085166000908152600b60209081526040808320938716835292905290812054613152838061314a5750848210155b6102016105c4565b61315c8185614a98565b9150600061316a83836168f4565b905061318987878361317b876142f8565b6131849061697a565b614aa7565b5050949350505050565b6001600160a01b038381166000908152600b60209081526040808320938616835292905290812054906131c68284611d33565b9050612183858583613184876142f8565b6040516001600160a01b0380851660248301528316604482015260648101829052610fef9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612365565b613237814710156101a36105c4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613284576040519150601f19603f3d011682016040523d82523d6000602084013e613289565b606091505b505090506111d3816101a46105c4565b6001600160a01b0382166000908152600260205260408120805490826132be836167e8565b9190505590506111d36132d18483614b00565b836105c4565b6000806000806132f486608001518760200151886040015161393b565b92509250925060008087604001516001600160a01b031688602001516001600160a01b0316101561332957508390508261332f565b50829050835b61333b88888484614c8b565b60408b015160208c01519199509294509092506001600160a01b0391821691161061336f5761336a8183614d94565b613379565b6133798282614d94565b909255509295945050505050565b60008061339c84608001518560200151612dc6565b905060006133b285608001518660400151612dc6565b90506133c085858484614c8b565b6080880180516000908152600760208181526040808420828e01516001600160a01b03908116865290835281852098909855935183529081528282209a830151909516815298909352919096209590955550929392505050565b60808201516000908152600160209081526040808320828601516001600160a01b0316845260028101909252822054829182916000613466886040015184614de190919063ffffffff16565b9050811580613473575080155b15613490576134858860800151612d30565b613490610209611aa7565b61349b6001836168f4565b91506134a86001826168f4565b905060006134b4845490565b905060008167ffffffffffffffff8111156134d1576134d1615a19565b6040519080825280602002602001820160405280156134fa578160200160208202803683370190505b50600060a08c018190529091505b8281101561358f57600081815260018781016020526040909120015461352d81614a4b565b83838151811061353f5761353f6167b9565b60200260200101818152505061355d8c60a0015161305e8360e01c90565b60a08d01528582036135715780985061357c565b84820361357c578097505b5080613587816167e8565b915050613508565b506040517f01ec954a0000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906301ec954a906135db908d90859089908990600401616ad5565b6020604051808303816000875af11580156135fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061361e9190616820565b97506000806136368c600001518d606001518c613680565b90925090506136458983614e00565b98506136518882614e4b565b60009687526001978801602052604080882089019a909a55948652505050949091209091015550909392505050565b600080808560018111156136965761369661659b565b036136a55750829050816136ab565b50819050825b935093915050565b6000806136c08385616b0e565b90506136e18415806136da5750836136d88684616b25565b145b60036105c4565b806000036136f3576000915050611aa1565b670de0b6b3a76400006137076001836168f4565b6137119190616b25565b612ea6906001616798565b600080836001600160a01b0316836040516137379190616b60565b6000604051808303816000865af19150503d8060008114613774576040519150601f19603f3d011682016040523d82523d6000602084013e613779565b606091505b5090925090508161378e573d6000803e3d6000fd5b610fef8151600014806137b05750818060200190518101906137b091906169fb565b6101a26105c4565b6001600160a01b038116600090815260018301602052604081205461383a57508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03861690811790915585549082528286019093526040902091909155611aa1565b506000611aa1565b6001600160a01b03821660009081526002840160205260408120548082036139085784546040805180820182526001600160a01b038781168252602080830188815260008681526001808d0190935294909420925183547fffffffffffffffffffffffff00000000000000000000000000000000000000001692169190911782559151908201556138d4908290616798565b86556138e1816001616798565b6001600160a01b03861660009081526002880160205260409020555060019150611c539050565b8285600101600060018461391c91906168f4565b8152602001908152602001600020600101819055506000915050611c53565b600080600080600061394d8787614e82565b9150915060006139b583836040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015260009060480160405160208183030381529060405280519060200120905092915050565b60008a8152600960209081526040808320848452600201909152812080546001820154919750929350907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316151580613a2857507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821615155b80613a495750613a388c87614474565b8015613a495750613a498c86614474565b905080613a6457613a598c612d30565b613a64610209611aa7565b613a6e8383614eb3565b9850613a7a8383614eea565b975050505050505093509350939050565b6001600160a01b03811660009081526001830160205260408120548015613c11576000613ab96001836168f4565b8554909150600090613acd906001906168f4565b90506000866000018281548110613ae657613ae66167b9565b60009182526020909120015487546001600160a01b0390911691508190889085908110613b1557613b156167b9565b600091825260209091200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055613b61836001616798565b6001600160a01b03821660009081526001890160205260409020558654879080613b8d57613b8d616b7c565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b0388168252600189810190915260408220919091559450611aa19350505050565b6000915050611aa1565b6000611a9e8383610209614f23565b6001600160a01b03811660009081526002830160205260408120548015613c11576000613c586001836168f4565b9050600060018660000154613c6d91906168f4565b6000818152600180890160205260408083208684529220825481547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178155828201549082015591925090613ccf908490616798565b90546001600160a01b0390811660009081526002890160208181526040808420959095558583526001808c01825285842080547fffffffffffffffffffffffff00000000000000000000000000000000000000001681558101849055958b559289168252909152908120559250611aa1915050565b60606000825167ffffffffffffffff811115613d6257613d62615a19565b604051908082528060200260200182016040528015613d8b578160200160208202803683370190505b50905060005b83518110156108fa57613daf848281518110612b2657612b266167b9565b828281518110613dc157613dc16167b9565b6001600160a01b0390921660209283029190910190910152613de2816167e8565b9050613d91565b6060600080613df785612f54565b91509150613e0782518551612282565b613e17600083511161020f6105c4565b60005b8251811015613e8557613e75858281518110613e3857613e386167b9565b60200260200101516001600160a01b0316848381518110613e5b57613e5b6167b9565b60200260200101516001600160a01b0316146102086105c4565b613e7e816167e8565b9050613e1a565b50949350505050565b6060806060600080613e9f86612fb1565b915091506000613eaf8b60601c90565b905060008c6001811115613ec557613ec561659b565b14613f7757806001600160a01b03166374f3b0098c8c8c8787613ee6614f78565b8f604001516040518863ffffffff1660e01b8152600401613f0d9796959493929190616bab565b6000604051808303816000875af1158015613f2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613f729190810190616c64565b61401f565b806001600160a01b031663d5c096c48c8c8c8787613f93614f78565b8f604001516040518863ffffffff1660e01b8152600401613fba9796959493929190616bab565b6000604051808303816000875af1158015613fd9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261401f9190810190616c64565b8095508196505050614035875186518651614ffc565b60008c60018111156140495761404961659b565b146140605761405b8989898888615014565b61406d565b61406d8a89898888615186565b955050505096509650969350505050565b60408051606086811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529186901b16603483015282516028818403018152604890920183528151918101919091206000888152600983528381208282526002019092529190206140fa8584614d94565b9055505050505050565b60005b8251811015610fef57818181518110614122576141226167b9565b6020026020010151600760008681526020019081526020016000206000858481518110614151576141516167b9565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080614187906167e8565b9050614107565b6000828152600160205260408120905b8251811015610fef576141d5818483815181106141bd576141bd6167b9565b602002602001015184614e6a9092919063ffffffff16565b6141de816167e8565b905061419e565b6060825167ffffffffffffffff81111561420157614201615a19565b60405190808252806020026020018201604052801561422a578160200160208202803683370190505b50905060005b83518110156108fa578261426657838181518110614250576142506167b9565b60200260200101516142619061697a565b614281565b838181518110614278576142786167b9565b60200260200101515b828281518110614293576142936167b9565b6020908102919091010152806142a8816167e8565b915050614230565b6000808460018111156142c5576142c561659b565b146142d05781610b67565b509092915050565b6000808460018111156142ed576142ed61659b565b146108fa5782610b67565b60006128437f800000000000000000000000000000000000000000000000000000000000000083106101a56105c4565b6000806143358385616cbe565b9050611a9e6000841215801561434b5750848212155b80614360575060008412801561436057508482125b60006105c4565b6000806143748385616ce6565b9050611a9e6000841215801561438a5750848213155b8061439f575060008412801561439f57508482135b60016105c4565b6000818152600960205260408120805460018201546001600160a01b039182169284929091169082908161443286856040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015260009060480160405160208183030381529060405280519060200120905092915050565b60008181526002840160205260409020805460018201549199509192506144598282614eb3565b96506144658282614eea565b94505050505091939590929450565b600082815260096020526040812080546001600160a01b03848116911614806144ac575060018101546001600160a01b038481169116145b8015610b67575050506001600160a01b03161515919050565b60008281526008602090815260408083206001600160a01b0385168452600181019092528220541515610b67565b60008281526001602090815260408083206001600160a01b0385168452600281019092528220541515610b67565b60008060028560028111156145385761453861659b565b0361454d5761454886858561533b565b61457c565b60018560028111156145615761456161659b565b0361457157614548868585615349565b61457c868585615357565b8215614596576145966001600160a01b0385163385612320565b61459f8361697a565b96929550919350505050565b60008060028560028111156145c2576145c261659b565b036145d7576145d2868585615365565b614606565b60018560028111156145eb576145eb61659b565b036145fb576145d2868585615373565b614606868585615381565b8215614621576146216001600160a01b0385163330866131d7565b82915061462d8261697a565b905094509492505050565b600080600285600281111561464f5761464f61659b565b036146665761465f86858561538f565b9050614698565b600185600281111561467a5761467a61659b565b0361468a5761465f86858561539f565b6146958685856153af565b90505b6000915094509492505050565b6060806000806000806146b7876143a6565b92975090955093509150506001600160a01b03841615806146df57506001600160a01b038216155b1561470757505060408051600080825260208201908152818301909252969095509350505050565b6040805160028082526060820183529091602083019080368337019050509550838660008151811061473b5761473b6167b9565b60200260200101906001600160a01b031690816001600160a01b031681525050818660018151811061476f5761476f6167b9565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835290929091908301908036833701905050945082856000815181106147bc576147bc6167b9565b60200260200101818152505080856001815181106147dc576147dc6167b9565b60200260200101818152505050505050915091565b60008181526008602052604090208054606091829167ffffffffffffffff81111561481e5761481e615a19565b604051908082528060200260200182016040528015614847578160200160208202803683370190505b509250825167ffffffffffffffff81111561486457614864615a19565b60405190808252806020026020018201604052801561488d578160200160208202803683370190505b50915060005b83518110156149205760006148a883836153bf565b9050808583815181106148bd576148bd6167b9565b6001600160a01b03928316602091820292909201810191909152600088815260078252604080822093851682529290915220548451859084908110614904576149046167b9565b602090810291909101015250614919816167e8565b9050614893565b5050915091565b60008181526001602052604090208054606091829167ffffffffffffffff81111561495457614954615a19565b60405190808252806020026020018201604052801561497d578160200160208202803683370190505b509250825167ffffffffffffffff81111561499a5761499a615a19565b6040519080825280602002602001820160405280156149c3578160200160208202803683370190505b50915060005b83518110156149205760008181526001808401602052604090912080549101546001600160a01b0390911690858381518110614a0757614a076167b9565b60200260200101858481518110614a2057614a206167b9565b60209081029190910101919091526001600160a01b039091169052614a44816167e8565b90506149c9565b6000614a678260701c6dffffffffffffffffffffffffffff1690565b611aa1906dffffffffffffffffffffffffffff8416616798565b600081831015614a915781611a9e565b5090919050565b6000818310614a915781611a9e565b6001600160a01b038481166000818152600b602090815260408083209488168084529482529182902086905590518481527f18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c429101611dc8565b6000367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80013542811015614b38576000915050611aa1565b6000614b426153f2565b905080614b5457600092505050611aa1565b600081614b5f615502565b80516020918201206040805192830193909352918101919091523360608201526080810186905260a0810184905260c0016040516020818303038152906040528051906020012090506000614bb382615552565b90506000806000614bc261563d565b925092509250600060018585858560405160008152602001604052604051614c06949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015614c28573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811615801590614c7c57508a6001600160a01b0316816001600160a01b0316145b9b9a5050505050505050505050565b600080600080614c9a86614a4b565b90506000614ca786614a4b565b9050614cc0614cb68860e01c90565b61305e8860e01c90565b60a08a01526040517f9d2c110c0000000000000000000000000000000000000000000000000000000081526001600160a01b03891690639d2c110c90614d0e908c9086908690600401616d06565b6020604051808303816000875af1158015614d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614d519190616820565b9250600080614d698b600001518c6060015187613680565b9092509050614d788983614e00565b9650614d848882614e4b565b9550505050509450945094915050565b600080614dae614da48560e01c90565b61305e8560e01c90565b9050610b676dffffffffffffffffffffffffffff85166dffffffffffffffffffffffffffff85168363ffffffff166156b3565b6001600160a01b03166000908152600291909101602052604090205490565b600080614e1f836dffffffffffffffffffffffffffff86165b90611d33565b90506000614e3d8560701c6dffffffffffffffffffffffffffff1690565b9050436115498383836156d2565b600080614e1f836dffffffffffffffffffffffffffff86165b90615715565b60009182526001928301602052604090912090910155565b600080826001600160a01b0316846001600160a01b031610614ea5578284614ea8565b83835b915091509250929050565b6000611a9e6dffffffffffffffffffffffffffff84166dffffffffffffffffffffffffffff84165b614ee58660e01c90565b6156d2565b6000611a9e614f098460701c6dffffffffffffffffffffffffffff1690565b614edb8460701c6dffffffffffffffffffffffffffff1690565b6001600160a01b0382166000908152600284016020526040812054614f4a811515846105c4565b614f6f85614f596001846168f4565b6000908152600191820160205260409020015490565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166355c676286040518163ffffffff1660e01b8152600401602060405180830381865afa158015614fd8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115539190616820565b6111d3828414801561500d57508183145b60676105c4565b6060835167ffffffffffffffff81111561503057615030615a19565b604051908082528060200260200182016040528015615059578160200160208202803683370190505b50905060005b85515181101561517c57600084828151811061507d5761507d6167b9565b602002602001015190506150b3876020015183815181106150a0576150a06167b9565b60200260200101518210156101f96105c4565b6000876000015183815181106150cb576150cb6167b9565b602002602001015190506150e581838b8b6060015161218a565b60008584815181106150f9576150f96167b9565b6020026020010151905061511561510f83611f54565b826123e7565b61514a6151228483611d33565b898681518110615134576151346167b9565b6020026020010151614e4b90919063ffffffff16565b85858151811061515c5761515c6167b9565b60200260200101818152505050505080615175906167e8565b905061505f565b5095945050505050565b60606000845167ffffffffffffffff8111156151a4576151a4615a19565b6040519080825280602002602001820160405280156151cd578160200160208202803683370190505b50915060005b8651518110156153315760008582815181106151f1576151f16167b9565b6020026020010151905061522788602001518381518110615214576152146167b9565b60200260200101518211156101fa6105c4565b60008860000151838151811061523f5761523f6167b9565b6020026020010151905061525981838c8c60600151612099565b6001600160a01b038116615274576152718483611d33565b93505b6000868481518110615288576152886167b9565b6020026020010151905061529e61510f83611f54565b808310156152ca576152c56152b384836168f4565b8a8681518110615134576151346167b9565b6152ff565b6152ff6152d782856168f4565b8a86815181106152e9576152e96167b9565b6020026020010151614e0090919063ffffffff16565b868581518110615311576153116167b9565b6020026020010181815250505050508061532a906167e8565b90506151d3565b5061517c81611dd6565b610fef83836157318461578b565b610fef838361573184615835565b610fef838361573184615890565b610fef83836158df8461578b565b610fef83836158df84615835565b610fef83836158df84615890565b6000610b67848461591e8561578b565b6000610b67848461591e85615835565b6000610b67848461591e85615890565b60008260000182815481106153d6576153d66167b9565b6000918252602090912001546001600160a01b03169392505050565b6000803560e01c8063b95cac28811461543a57638bdb39138114615462576352bbbe29811461548a5763945bcec981146154b25763fa6e671d81146154da5760009250505090565b7f3f7b71252bd19113ff48c19c6e004a9bcfcca320a0d74d58e85877cbd7dcae589250505090565b7f8bbc57f66ea936902f50a71ce12b92c43f3c5340bb40c27c4e90ab84eeae33539250505090565b7fe192dcbc143b1e244ad73b813fd3c097b832ad260a157340b4e5e5beda067abe9250505090565b7f9bfc43a4d98313c6766986ffd7c916c7481566d9f224c6819af0a53388aced3a9250505090565b7fa3f865aa351e51cfeb40f5178d1564bb629fe9030b83caf6361d1baaf5b90b5a9250505090565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050506080101561554f576080360381525b90565b60006155fd60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810191909152604281018390526062016113ca565b367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0810135906000907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0013561096f565b6000836156c8607085901b60e085901b616798565b610b679190616798565b6000806156df8486616798565b905061570a85821015801561570257506e01000000000000000000000000000082105b61020e6105c4565b614f6f8585856156b3565b60006157258383111560016105c4565b6000610b6783856168f4565b60008061574e836dffffffffffffffffffffffffffff8616614e64565b9050600061577084614e198760701c6dffffffffffffffffffffffffffff1690565b9050600061577e8660e01c90565b90506115498383836156d2565b600080600080600061579c896143a6565b9450509350935093506000836001600160a01b0316896001600160a01b0316036157e65760006157d084898b63ffffffff16565b90506157dc818561593d565b9093509050615808565b60006157f683898b63ffffffff16565b9050615802818461593d565b90925090505b6158128383614d94565b855561581e838361597d565b600190950194909455509192505050949350505050565b6000806158428686612dc6565b9050600061585482858763ffffffff16565b60008881526007602090815260408083206001600160a01b038b16845290915290208190559050615885818361593d565b979650505050505050565b6000848152600160205260408120816158a98287613c1b565b905060006158bb82868863ffffffff16565b90506158c8838883613842565b506158d3818361593d565b98975050505050505050565b6000806158fc836dffffffffffffffffffffffffffff8616614e19565b9050600061577084614e648760701c6dffffffffffffffffffffffffffff1690565b60006dffffffffffffffffffffffffffff831643614f6f8285836156d2565b60006159598260701c6dffffffffffffffffffffffffffff1690565b6159738460701c6dffffffffffffffffffffffffffff1690565b611a9e9190616ce6565b6000611a9e61599c8460701c6dffffffffffffffffffffffffffff1690565b6159b68460701c6dffffffffffffffffffffffffffff1690565b60006156b3565b6001600160a01b03811681146105f957600080fd5b6000602082840312156159e457600080fd5b8135611a9e816159bd565b600381106105f957600080fd5b600060208284031215615a0e57600080fd5b8135611a9e816159ef565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715615a6b57615a6b615a19565b60405290565b6040516080810167ffffffffffffffff81118282101715615a6b57615a6b615a19565b60405160c0810167ffffffffffffffff81118282101715615a6b57615a6b615a19565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715615afe57615afe615a19565b604052919050565b600067ffffffffffffffff821115615b2057615b20615a19565b5060051b60200190565b60006020808385031215615b3d57600080fd5b823567ffffffffffffffff811115615b5457600080fd5b8301601f81018513615b6557600080fd5b8035615b78615b7382615b06565b615ab7565b81815260a09182028301840191848201919088841115615b9757600080fd5b938501935b83851015615c1e5780858a031215615bb45760008081fd5b615bbc615a48565b853560048110615bcc5760008081fd5b815285870135615bdb816159bd565b8188015260408681013590820152606080870135615bf8816159bd565b90820152608086810135615c0b816159bd565b9082015283529384019391850191615b9c565b50979650505050505050565b600082601f830112615c3b57600080fd5b81356020615c4b615b7383615b06565b82815260059290921b84018101918181019086841115615c6a57600080fd5b8286015b84811015615c8e578035615c81816159bd565b8352918301918301615c6e565b509695505050505050565b60008060408385031215615cac57600080fd5b8235615cb7816159bd565b9150602083013567ffffffffffffffff811115615cd357600080fd5b615cdf85828601615c2a565b9150509250929050565b600081518084526020808501945080840160005b83811015615d1957815187529582019590820190600101615cfd565b509495945050505050565b602081526000611a9e6020830184615ce9565b80151581146105f957600080fd5b600060208284031215615d5757600080fd5b8135611a9e81615d37565b8035600281106106d957600080fd5b600082601f830112615d8257600080fd5b813567ffffffffffffffff811115615d9c57615d9c615a19565b615dcd60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601615ab7565b818152846020838601011115615de257600080fd5b816020850160208301376000918101602001919091529392505050565b600060808284031215615e1157600080fd5b615e19615a71565b90508135615e26816159bd565b81526020820135615e3681615d37565b60208201526040820135615e49816159bd565b60408201526060820135615e5c81615d37565b606082015292915050565b60008060008060e08587031215615e7d57600080fd5b843567ffffffffffffffff80821115615e9557600080fd5b9086019060c08289031215615ea957600080fd5b615eb1615a94565b82358152615ec160208401615d62565b60208201526040830135615ed4816159bd565b60408201526060830135615ee7816159bd565b60608201526080838101359082015260a083013582811115615f0857600080fd5b615f148a828601615d71565b60a083015250809650505050615f2d8660208701615dff565b939693955050505060a08201359160c0013590565b600082601f830112615f5357600080fd5b81356020615f63615b7383615b06565b82815260059290921b84018101918181019086841115615f8257600080fd5b8286015b84811015615c8e5780358352918301918301615f86565b60008060008060808587031215615fb357600080fd5b8435615fbe816159bd565b9350602085013567ffffffffffffffff80821115615fdb57600080fd5b615fe788838901615c2a565b94506040870135915080821115615ffd57600080fd5b61600988838901615f42565b9350606087013591508082111561601f57600080fd5b5061602c87828801615d71565b91505092959194509250565b60008060006060848603121561604d57600080fd5b8335925060208085013567ffffffffffffffff8082111561606d57600080fd5b61607988838901615c2a565b9450604087013591508082111561608f57600080fd5b508501601f810187136160a157600080fd5b80356160af615b7382615b06565b81815260059190911b820183019083810190898311156160ce57600080fd5b928401925b828410156160f55783356160e6816159bd565b825292840192908401906160d3565b80955050505050509250925092565b6000806040838503121561611757600080fd5b82359150602083013567ffffffffffffffff811115615cd357600080fd5b60006020828403121561614757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a9e57600080fd5b60006080828403121561618957600080fd5b616191615a71565b9050813567ffffffffffffffff808211156161ab57600080fd5b6161b785838601615c2a565b835260208401359150808211156161cd57600080fd5b6161d985838601615f42565b602084015260408401359150808211156161f257600080fd5b506161ff84828501615d71565b6040830152506060820135615e5c81615d37565b6000806000806080858703121561622957600080fd5b84359350602085013561623b816159bd565b9250604085013561624b816159bd565b9150606085013567ffffffffffffffff81111561626757600080fd5b61602c87828801616177565b600082601f83011261628457600080fd5b81356020616294615b7383615b06565b82815260059290921b840181019181810190868411156162b357600080fd5b8286015b84811015615c8e57803567ffffffffffffffff808211156162d85760008081fd5b818901915060a0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848d030112156163115760008081fd5b616319615a48565b878401358152604080850135898301526060808601358284015260809150818601358184015250828501359250838311156163545760008081fd5b6163628d8a85880101615d71565b9082015286525050509183019183016162b7565b600080600080600080610120878903121561639057600080fd5b61639987615d62565b955060208088013567ffffffffffffffff808211156163b757600080fd5b6163c38b838c01616273565b975060408a01359150808211156163d957600080fd5b6163e58b838c01615c2a565b96506163f48b60608c01615dff565b955060e08a013591508082111561640a57600080fd5b508801601f81018a1361641c57600080fd5b803561642a615b7382615b06565b81815260059190911b8201830190838101908c83111561644957600080fd5b928401925b828410156164675783358252928401929084019061644e565b809650505050505061010087013590509295509295509295565b6000806040838503121561649457600080fd5b8235915060208301356164a6816159bd565b809150509250929050565b600060208083850312156164c457600080fd5b823567ffffffffffffffff8111156164db57600080fd5b8301601f810185136164ec57600080fd5b80356164fa615b7382615b06565b81815260079190911b8201830190838101908783111561651957600080fd5b928401925b8284101561588557608084890312156165375760008081fd5b61653f615a71565b843561654a816159ef565b81528486013586820152604080860135616563816159bd565b908201526060858101359082015282526080909301929084019061651e565b60006020828403121561659457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106165da576165da61659b565b9052565b6001600160a01b038316815260408101611c5360208301846165ca565b60008060008060e0858703121561661157600080fd5b61661a85615d62565b9350602085013567ffffffffffffffff8082111561663757600080fd5b61664388838901616273565b9450604087013591508082111561665957600080fd5b5061666687828801615c2a565b9250506166768660608701615dff565b905092959194509250565b600081518084526020808501945080840160005b83811015615d195781516001600160a01b031687529582019590820190600101616695565b6060815260006166cd6060830186616681565b82810360208401526166df8186615ce9565b915050826040830152949350505050565b60008060006060848603121561670557600080fd5b8335616710816159bd565b92506020840135616720816159bd565b9150604084013561673081615d37565b809150509250925092565b6000806040838503121561674e57600080fd5b8235616759816159bd565b915060208301356164a6816159bd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611aa157611aa1616769565b60208101611aa182846165ca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361681957616819616769565b5060010190565b60006020828403121561683257600080fd5b5051919050565b60005b8381101561685457818101518382015260200161683c565b50506000910152565b60008151808452616875816020860160208601616839565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6080815260006168ba6080830187616681565b82810360208401526168cc8187615ce9565b905082810360408401526168e08186615ce9565b90508281036060840152615885818561685d565b81810381811115611aa157611aa1616769565b60408152600061691a6040830185616681565b82810360208481019190915284518083528582019282019060005b8181101561695a5784516001600160a01b031683529383019391830191600101616935565b5090979650505050505050565b602081526000611a9e6020830184616681565b60007f800000000000000000000000000000000000000000000000000000000000000082036169ab576169ab616769565b5060000390565b8183823760009101908152919050565b6060815260006169d56060830186616681565b82810360208401526169e78186615ce9565b905082810360408401526115498185615ce9565b600060208284031215616a0d57600080fd5b8151611a9e81615d37565b6000610120825160028110616a2f57616a2f61659b565b808552506020830151616a4d60208601826001600160a01b03169052565b506040830151616a6860408601826001600160a01b03169052565b50606083015160608501526080830151608085015260a083015160a085015260c0830151616aa160c08601826001600160a01b03169052565b5060e0830151616abc60e08601826001600160a01b03169052565b506101008084015182828701526115498387018261685d565b608081526000616ae86080830187616a18565b8281036020840152616afa8187615ce9565b604084019590955250506060015292915050565b8082028115828204841417611aa157611aa1616769565b600082616b5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008251616b72818460208701616839565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b87815260006001600160a01b03808916602084015280881660408401525060e06060830152616bdd60e0830187615ce9565b8560808401528460a084015282810360c0840152616bfb818561685d565b9a9950505050505050505050565b600082601f830112616c1a57600080fd5b81516020616c2a615b7383615b06565b82815260059290921b84018101918181019086841115616c4957600080fd5b8286015b84811015615c8e5780518352918301918301616c4d565b60008060408385031215616c7757600080fd5b825167ffffffffffffffff80821115616c8f57600080fd5b616c9b86838701616c09565b93506020850151915080821115616cb157600080fd5b50615cdf85828601616c09565b8082018281126000831280158216821582161715616cde57616cde616769565b505092915050565b81810360008312801583831316838312821617156108fa576108fa616769565b606081526000616d196060830186616a18565b6020830194909452506040015291905056fea2646970667358221220e27d8b6ab4c8cefc075524af2be4ebc32ad1914f703418febfbfa41d9931e46c64736f6c6343000813003360c060405234801561001057600080fd5b50604051610ce3380380610ce383398101604081905261002f91610049565b3060805260016000556001600160a01b031660a052610079565b60006020828403121561005b57600080fd5b81516001600160a01b038116811461007257600080fd5b9392505050565b60805160a051610c3e6100a56000396000818161016701526105c3015260006102f10152610c3e6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063851c1bb311610076578063d877845c1161005b578063d877845c1461013a578063e42abf3514610142578063fbfa77cf1461016257600080fd5b8063851c1bb3146100fa578063aaabadc51461010d57600080fd5b806338e9922e146100a857806355c67628146100bd5780636b6b9f69146100d45780636daefab6146100e7575b600080fd5b6100bb6100b6366004610823565b610189565b005b6001545b6040519081526020015b60405180910390f35b6100bb6100e2366004610823565b6101e4565b6100bb6100f53660046108aa565b610237565b6100c161010836600461092e565b6102ed565b61011561036a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cb565b6002546100c1565b6101556101503660046109af565b610379565b6040516100cb9190610a92565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b6101916104ac565b6101a86706f05b59d3b200008211156102586104f5565b60018190556040518181527fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906020015b60405180910390a150565b6101ec6104ac565b610202662386f26fc100008211156102596104f5565b60028190556040518181527f5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a906020016101d9565b61023f610507565b6102476104ac565b6102518483610520565b60005b848110156102db57600086868381811061027057610270610ad6565b90506020020160208101906102859190610b05565b9050600085858481811061029b5761029b610ad6565b602002919091013591506102c8905073ffffffffffffffffffffffffffffffffffffffff8316858361052d565b5050806102d490610b22565b9050610254565b506102e66001600055565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000008260405160200161034d9291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b604051602081830303815290604052805190602001209050919050565b60006103746105bf565b905090565b6060815167ffffffffffffffff81111561039557610395610970565b6040519080825280602002602001820160405280156103be578160200160208202803683370190505b50905060005b82518110156104a6578281815181106103df576103df610ad6565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610b81565b82828151811061048b5761048b610ad6565b602090810291909101015261049f81610b22565b90506103c4565b50919050565b60006104db6000357fffffffff00000000000000000000000000000000000000000000000000000000166102ed565b90506104f26104ea8233610650565b6101916104f5565b50565b816105035761050381610700565b5050565b610519600260005414156101906104f5565b6002600055565b61050381831460676104f5565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105ba908490610774565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610b9a565b600061065a6105bf565b6040517f9be2a8840000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff84811660248301523060448301529190911690639be2a88490606401602060405180830381865afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190610bb7565b9392505050565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b925050507f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161079c9190610bd9565b6000604051808303816000865af19150503d80600081146107d9576040519150601f19603f3d011682016040523d82523d6000602084013e6107de565b606091505b509092509050816107f3573d6000803e3d6000fd5b61081d8151600014806108155750818060200190518101906108159190610bb7565b6101a26104f5565b50505050565b60006020828403121561083557600080fd5b5035919050565b60008083601f84011261084e57600080fd5b50813567ffffffffffffffff81111561086657600080fd5b6020830191508360208260051b850101111561088157600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146104f257600080fd5b6000806000806000606086880312156108c257600080fd5b853567ffffffffffffffff808211156108da57600080fd5b6108e689838a0161083c565b909750955060208801359150808211156108ff57600080fd5b5061090c8882890161083c565b909450925050604086013561092081610888565b809150509295509295909350565b60006020828403121561094057600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146106f957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80356109aa81610888565b919050565b600060208083850312156109c257600080fd5b823567ffffffffffffffff808211156109da57600080fd5b818501915085601f8301126109ee57600080fd5b813581811115610a0057610a00610970565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610a4357610a43610970565b604052918252848201925083810185019188831115610a6157600080fd5b938501935b82851015610a8657610a778561099f565b84529385019392850192610a66565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610aca57835183529284019291840191600101610aae565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610b1757600080fd5b81356106f981610888565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215610b9357600080fd5b5051919050565b600060208284031215610bac57600080fd5b81516106f981610888565b600060208284031215610bc957600080fd5b815180151581146106f957600080fd5b6000825160005b81811015610bfa5760208186018101518583015201610be0565b50600092019182525091905056fea2646970667358221220913fccc5ab7c8e0e94a2c58fd46d096a7aafe1797f75060a689ad0384bab102f64736f6c63430008130033608060405234801561001057600080fd5b50610ce6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80637f7120fe11610076578063d0ebdbe71161005b578063d0ebdbe71461019c578063ec58f4b8146101af578063f84436bd146101c257600080fd5b80637f7120fe146101745780638fd57b921461018957600080fd5b806302cc250d146100a857806343218e19146100f6578063481c6a75146101165780635624b25b14610161575b600080fd5b6100e16100b63660046109a1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101096101043660046109f2565b6101d5565b6040516100ed9190610b40565b60005461013c9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b61010961016f366004610b53565b610277565b6101876101823660046109a1565b6102ff565b005b6101876101973660046109a1565b610483565b6101876101aa3660046109a1565b61058d565b6101876101bd3660046109a1565b6106e8565b6101096101d03660046109f2565b6107ef565b606060008373ffffffffffffffffffffffffffffffffffffffff16836040516101fe9190610b75565b600060405180830381855af49150503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b506040519093509091506102709061025c9084908490602001610b91565b604051602081830303815290604052610970565b5092915050565b60606000610286836020610be8565b67ffffffffffffffff81111561029e5761029e6109c3565b6040519080825280601f01601f1916602001820160405280156102c8576020820181803683370190505b50905060005b838110156102f55784810154602080830284010152806102ed81610bff565b9150506102ce565b5090505b92915050565b600054610100900460ff16806103145750303b155b80610322575060005460ff16155b61038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e697469616c697a61626c653a20696e697469616c697a656400000000000060448201526064015b60405180910390fd5b600054610100900460ff161580156103cc57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff85169081029190911782556040805191825260208201929092527f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350910160405180910390a1801561047f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff16331461050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f475076323a2063616c6c6572206e6f74206d616e6167657200000000000000006044820152606401610384565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f640e18a2587e1d83e4fdabf70257d0a800ca4b2c1aaad1dfc485a4ad8bbbd6c691015b60405180910390a150565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314806105f55750336105dd7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff16145b61065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f475076323a206e6f7420617574686f72697a65640000000000000000000000006044820152606401610384565b6000805473ffffffffffffffffffffffffffffffffffffffff838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff85161790945560408051918252939092041660208201819052917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350910160405180910390a15050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff16331461076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f475076323a2063616c6c6572206e6f74206d616e6167657200000000000000006044820152606401610384565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602081815260409283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690921790915590519182527f41f9d09dd5159251f8a8e482bbe097b7c01a5e6f70c5a0ddb494906464fc9dd79101610582565b606060006343218e1960e01b848460405160240161080e929190610c37565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051909150309061089d908390610b75565b6000604051808303816000865af19150503d80600081146108da576040519150601f19603f3d011682016040523d82523d6000602084013e6108df565b606091505b50905080925050600082600184516108f79190610c6e565b8151811061090757610907610c81565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600160f81b149050610952836001855161094e9190610c6e565b9052565b801561095f5750506102f9565b61096883610970565b505092915050565b805160208201fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461099c57600080fd5b919050565b6000602082840312156109b357600080fd5b6109bc82610978565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610a0557600080fd5b610a0e83610978565b9150602083013567ffffffffffffffff80821115610a2b57600080fd5b818501915085601f830112610a3f57600080fd5b813581811115610a5157610a516109c3565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610a9757610a976109c3565b81604052828152886020848701011115610ab057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015610aed578181015183820152602001610ad5565b50506000910152565b60008151808452610b0e816020860160208601610ad2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109bc6020830184610af6565b60008060408385031215610b6657600080fd5b50508035926020909101359150565b60008251610b87818460208701610ad2565b9190910192915050565b60008351610ba3818460208801610ad2565b92151560f81b9190920190815260010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176102f9576102f9610bb9565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c3057610c30610bb9565b5060010190565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610c666040830184610af6565b949350505050565b818103818111156102f9576102f9610bb9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207771b6c48d0a0ad454198039f7dadf22b3747a0ac4e6bbd7f309feaa1328d60e64736f6c634300081300336101006040523480156200001257600080fd5b50604051620053a8380380620053a883398101604081905262000035916200016a565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190523060a08301529060c00160408051601f19818403018152908290528051602090910120608052600180556001600160a01b0380851660a052831660c052829150620001009062000143565b6001600160a01b039091168152602001604051809103906000f0801580156200012d573d6000803e3d6000fd5b506001600160a01b031660e05250620001a99050565b6114958062003f1383390190565b6001600160a01b03811681146200016757600080fd5b50565b600080604083850312156200017e57600080fd5b82516200018b8162000151565b60208401519092506200019e8162000151565b809150509250929050565b60805160a05160c05160e051613cff620002146000396000818161025d0152818161056401528181610d7001526114a701526000818161037d01526105fb01526000818161014c01528181610429015261092401526000818161032901526124f80152613cff6000f3fe6080604052600436106100ec5760003560e01c80639b552cc21161008a578063ed9f35ce11610059578063ed9f35ce146102f7578063f698da2514610317578063f84436bd1461034b578063fbfa77cf1461036b57600080fd5b80639b552cc21461024b578063a2a7d51b1461027f578063d08d33d11461029f578063ec6cb13f146102d757600080fd5b80632479fb6e116100c65780632479fb6e1461019857806343218e19146101de5780635624b25b1461020b578063845a101f1461022b57600080fd5b806313d79a0b146100f857806315337bc01461011a5780632335c76b1461013a57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004612e7d565b61039f565b005b34801561012657600080fd5b50610118610135366004612f84565b610666565b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101a457600080fd5b506101d06101b33660046130d2565b805160208183018101805160028252928201919093012091525481565b60405190815260200161018f565b3480156101ea57600080fd5b506101fe6101f936600461312c565b610775565b60405161018f91906131ea565b34801561021757600080fd5b506101fe6102263660046131fd565b610817565b34801561023757600080fd5b5061011861024636600461321f565b61089f565b34801561025757600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561028b57600080fd5b5061011861029a3660046132bb565b6110e1565b3480156102ab57600080fd5b506101d06102ba3660046130d2565b805160208183018101805160008252928201919093012091525481565b3480156102e357600080fd5b506101186102f23660046132ff565b611140565b34801561030357600080fd5b506101186103123660046132bb565b611282565b34801561032357600080fd5b506101d07f000000000000000000000000000000000000000000000000000000000000000081565b34801561035757600080fd5b506101fe61036636600461312c565b6112dd565b34801561037757600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b6002600154036103f65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556040517f02cc250d0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906302cc250d90602401602060405180830381865afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190613356565b6104f55760405162461bcd60e51b815260206004820152601260248201527f475076323a206e6f74206120736f6c766572000000000000000000000000000060448201526064016103ed565b6105118160005b60200281019061050c91906133a2565b61145e565b6000806105228989898989896115e3565b6040517f7d10d11f000000000000000000000000000000000000000000000000000000008152919350915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637d10d11f9061059990859060040161340a565b600060405180830381600087803b1580156105b357600080fd5b505af11580156105c7573d6000803e3d6000fd5b505050506105e1836001600381106104fc576104fc613373565b61062173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016826117e2565b61062c8360026104fc565b60405133907f40338ce1a7c49204f0099533b1e9a7ee0a3d261f84974ab7af36105b8c4e9db490600090a250506001805550505050505050565b60006106728383611b26565b5091505073ffffffffffffffffffffffffffffffffffffffff811633146106db5760405162461bcd60e51b815260206004820152601f60248201527f475076323a2063616c6c657220646f6573206e6f74206f776e206f726465720060448201526064016103ed565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6002848460405161070e929190613493565b9081526020016040518091039020819055508073ffffffffffffffffffffffffffffffffffffffff167f875b6cb035bbd4ac6500fabc6d1e4ca5bdc58a3e2b424ccb5c24cdbebeb009a984846040516107689291906134ec565b60405180910390a2505050565b606060008373ffffffffffffffffffffffffffffffffffffffff168360405161079e9190613500565b600060405180830381855af49150503d80600081146107d9576040519150601f19603f3d011682016040523d82523d6000602084013e6107de565b606091505b50604051909350909150610810906107fc908490849060200161351c565b604051602081830303815290604052611b95565b5092915050565b60606000610826836020613573565b67ffffffffffffffff81111561083e5761083e612fc6565b6040519080825280601f01601f191660200182016040528015610868576020820181803683370190505b50905060005b8381101561089557848101546020808302840101528061088d8161358a565b91505061086e565b5090505b92915050565b6002600154036108f15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103ed565b60026001556040517f02cc250d0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906302cc250d90602401602060405180830381865afa158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a49190613356565b6109f05760405162461bcd60e51b815260206004820152601260248201527f475076323a206e6f74206120736f6c766572000000000000000000000000000060448201526064016103ed565b60006109fa611b9d565b8051909150610a0b82868686611c43565b60007ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677582610100015114610a40576001610a43565b60005b604080516080810182526000808252602082018181528284018281526060808501848152958a015173ffffffffffffffffffffffffffffffffffffffff90811686526101408a01517f4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce908114909452908a0151169052610160870151149092529192508667ffffffffffffffff811115610adf57610adf612fc6565b604051908082528060200260200182016040528015610b08578160200160208202803683370190505b50610100850151909150610120870135907f0c4d888d74c0118b6b7e14c1f4c4b767f24454879a703be6fda34e9111cb988b01610bfb578460800151811015610b935760405162461bcd60e51b815260206004820152601360248201527f475076323a206c696d697420746f6f206c6f770000000000000000000000000060448201526064016103ed565b610ba08560600151611ce1565b82886000013581518110610bb657610bb6613373565b602002602001018181525050610bcb81611ce1565b610bd4906135c2565b82886020013581518110610bea57610bea613373565b602002602001018181525050610cb3565b8460600151811115610c4f5760405162461bcd60e51b815260206004820152601460248201527f475076323a206c696d697420746f6f206869676800000000000000000000000060448201526064016103ed565b610c5881611ce1565b82886000013581518110610c6e57610c6e613373565b602002602001018181525050610c878560800151611ce1565b610c90906135c2565b82886020013581518110610ca657610ca6613373565b6020026020010181815250505b6040805160808101825260008082526020820181905291810182905260608101919091528660400151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508560000151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508560e0015181604001818152505085610140015181606001818152505060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634817a286878f8f8f8f8b8b8f60a001518b6040518a63ffffffff1660e01b8152600401610ddb999897969594939291906136af565b6000604051808303816000875af1158015610dfa573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e4091908101906138d7565b90506000886020015190506000610e73838c6000013581518110610e6657610e66613373565b6020026020010151611d57565b90506000610ea6848d6020013581518110610e9057610e90613373565b6020026020010151610ea1906135c2565b611d57565b9050600283604051610eb89190613500565b908152602001604051809103902054600014610f165760405162461bcd60e51b815260206004820152601260248201527f475076323a206f726465722066696c6c6564000000000000000000000000000060448201526064016103ed565b7ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee3467758a610100015103610fbf5789606001518214610f955760405162461bcd60e51b815260206004820152601f60248201527f475076323a2073656c6c20616d6f756e74206e6f74207265737065637465640060448201526064016103ed565b8960600151600284604051610faa9190613500565b90815260405190819003602001902055611038565b896080015181146110125760405162461bcd60e51b815260206004820152601e60248201527f475076323a2062757920616d6f756e74206e6f7420726573706563746564000060448201526064016103ed565b89608001516002846040516110279190613500565b908152604051908190036020019020555b8a6040015173ffffffffffffffffffffffffffffffffffffffff167fa07a543ab8a018198e99ca0184c93fe9050a79400a0a723441f84de1d972cc178b600001518c6020015185858f60e00151896040516110989695949392919061397d565b60405180910390a260405133907f40338ce1a7c49204f0099533b1e9a7ee0a3d261f84974ab7af36105b8c4e9db490600090a25050600180555050505050505050505050505050565b3033146111305760405162461bcd60e51b815260206004820152601860248201527f475076323a206e6f7420616e20696e746572616374696f6e000000000000000060448201526064016103ed565b61113c60008383611da9565b5050565b600061114c8484611b26565b5091505073ffffffffffffffffffffffffffffffffffffffff811633146111b55760405162461bcd60e51b815260206004820152601a60248201527f475076323a2063616e6e6f74207072657369676e206f7264657200000000000060448201526064016103ed565b8115611206577ff59c009283ff87aa78203fc4d9c2df025ee851130fb69cc3e068941f6b5e2d6f60001c600085856040516111f1929190613493565b9081526040519081900360200190205561122a565b6000808585604051611219929190613493565b908152604051908190036020019020555b8073ffffffffffffffffffffffffffffffffffffffff167f01bf7c8b0ca55deecbea89d7e58295b7ffbf685fd0d96801034ba8c6ffe1c68d858585604051611274939291906139c8565b60405180910390a250505050565b3033146112d15760405162461bcd60e51b815260206004820152601860248201527f475076323a206e6f7420616e20696e746572616374696f6e000000000000000060448201526064016103ed565b61113c60028383611da9565b606060006343218e1960e01b84846040516024016112fc9291906139ee565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051909150309061138b908390613500565b6000604051808303816000865af19150503d80600081146113c8576040519150601f19603f3d011682016040523d82523d6000602084013e6113cd565b606091505b50905080925050600082600184516113e59190613a1d565b815181106113f5576113f5613373565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600160f81b149050611440836001855161143c9190613a1d565b9052565b801561144d575050610899565b61145683611b95565b505092915050565b60005b818110156115de573683838381811061147c5761147c613373565b905060200281019061148e9190613a30565b905073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166114d46020830183613a64565b73ffffffffffffffffffffffffffffffffffffffff16036115375760405162461bcd60e51b815260206004820152601b60248201527f475076323a20666f7262696464656e20696e746572616374696f6e000000000060448201526064016103ed565b61154081611e7e565b61154d6020820182613a64565b73ffffffffffffffffffffffffffffffffffffffff167fed99827efb37016f2275f98c4bcf71c7551c75d59e9b450f79fa32e60be672c2826020013561159284611ece565b604080519283527fffffffff0000000000000000000000000000000000000000000000000000000090911660208301520160405180910390a250806115d68161358a565b915050611461565b505050565b60608060006115f0611b9d565b90508367ffffffffffffffff81111561160b5761160b612fc6565b60405190808252806020026020018201604052801561167b57816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816116295790505b5092508367ffffffffffffffff81111561169757611697612fc6565b60405190808252806020026020018201604052801561170757816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816116b55790505b50915060005b848110156117d5573686868381811061172857611728613373565b905060200281019061173a9190613a81565b9050611748838c8c84611c43565b6117c2838a8a843581811061175f5761175f613373565b905060200201358b8b856020013581811061177c5761177c613373565b9050602002013584610120013589878151811061179b5761179b613373565b60200260200101518988815181106117b5576117b5613373565b6020026020010151611ef8565b50806117cd8161358a565b91505061170d565b5050965096945050505050565b6000815167ffffffffffffffff8111156117fe576117fe612fc6565b60405190808252806020026020018201604052801561187557816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161181c5790505b5090506000805b8351811015611a9157600084828151811061189957611899613373565b6020026020010151905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16036119b1577f4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce8160600151036119615760405162461bcd60e51b815260206004820152601e60248201527f475076323a20756e737570706f7274656420696e7465726e616c20455448000060448201526064016103ed565b8051604080830151905173ffffffffffffffffffffffffffffffffffffffff9092169181156108fc0291906000818181858888f193505050501580156119ab573d6000803e3d6000fd5b50611a7e565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9816060015103611a0f57805160408201516020830151611a0a9273ffffffffffffffffffffffffffffffffffffffff9091169161229a565b611a7e565b60008484611a1c8161358a565b955081518110611a2e57611a2e613373565b602090810291909101810151600081528382015173ffffffffffffffffffffffffffffffffffffffff90811692820192909252604080850151908201523060608201528351909116608090910152505b5080611a898161358a565b91505061187c565b508015611b20578082526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851690630e8e3e8490611aed908590600401613ab5565b600060405180830381600087803b158015611b0757600080fd5b505af1158015611b1b573d6000803e3d6000fd5b505050505b50505050565b6000808060388414611b7a5760405162461bcd60e51b815260206004820152601160248201527f475076323a20696e76616c69642075696400000000000000000000000000000060448201526064016103ed565b5050823593602084013560601c936034013560e01c92509050565b805160208201fd5b604080516102008101825260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301829052610160830182905261018083018290526101a083018290526101c083018290526101e083018290528252606060208301819052928201819052918101919091526040805160388082526060820190925290602082018180368337505050602082015290565b83516000611c5383868685612353565b9050600080611c708484611c6b610140890189613b4e565b612481565b91509150611c9382828660a001518b602001516125b8909392919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff81166040890152611cb9848261261b565b73ffffffffffffffffffffffffffffffffffffffff1660609098019790975250505050505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115611d535760405162461bcd60e51b815260206004820152601960248201527f53616665436173743a20696e74323536206f766572666c6f770000000000000060448201526064016103ed565b5090565b600080821215611d535760405162461bcd60e51b815260206004820152601660248201527f53616665436173743a206e6f7420706f7369746976650000000000000000000060448201526064016103ed565b60005b81811015611b2057366000848484818110611dc957611dc9613373565b9050602002810190611ddb9190613b4e565b915091506000611deb8383611b26565b92505050428163ffffffff1610611e445760405162461bcd60e51b815260206004820152601760248201527f475076323a206f72646572207374696c6c2076616c696400000000000000000060448201526064016103ed565b6000878484604051611e57929190613493565b9081526040519081900360200190205550829150611e7690508161358a565b915050611dac565b6000611e8d6020830183613a64565b90506020820135366000611ea46040860186613b4e565b9150915060405181838237600080838387895af1611ec6573d6000803e3d6000fd5b505050505050565b60003681611edf6040850185613b4e565b909250905060048110611ef157813592505b5050919050565b8551602087015160a08201514263ffffffff9091161015611f5b5760405162461bcd60e51b815260206004820152601360248201527f475076323a206f7264657220657870697265640000000000000000000000000060448201526064016103ed565b6080820151611f6a908761264d565b6060830151611f79908961264d565b1015611fc75760405162461bcd60e51b815260206004820152601f60248201527f475076323a206c696d6974207072696365206e6f74207265737065637465640060448201526064016103ed565b6000806000807ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775866101000151036120dd57856101200151156120335788935061202c8660600151612026868960e0015161264d90919063ffffffff16565b906126cc565b9150612042565b856060015193508560e0015191505b6120568a612050868e61264d565b90612727565b92506120828460028760405161206c9190613500565b90815260405190819003602001902054906127a8565b905085606001518111156120d85760405162461bcd60e51b815260206004820152601260248201527f475076323a206f726465722066696c6c6564000000000000000000000000000060448201526064016103ed565b61219a565b856101200151156121115788925061210a8660800151612026858960e0015161264d90919063ffffffff16565b9150612120565b856080015192508560e0015191505b61212e8b612026858d61264d565b93506121448360028760405161206c9190613500565b9050856080015181111561219a5760405162461bcd60e51b815260206004820152601260248201527f475076323a206f726465722066696c6c6564000000000000000000000000000060448201526064016103ed565b6121a484836127a8565b9350806002866040516121b79190613500565b9081526020016040518091039020819055508b6040015173ffffffffffffffffffffffffffffffffffffffff167fa07a543ab8a018198e99ca0184c93fe9050a79400a0a723441f84de1d972cc17876000015188602001518787878b6040516122259695949392919061397d565b60405180910390a250506040808b015173ffffffffffffffffffffffffffffffffffffffff9081168852855181166020808a0191909152888301949094526101408601516060988901529a8701518b16865282850151909a169185019190915297830197909752610160015191015250505050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff84166004830152602482018390529060008060448382895af16122fd573d6000803e3d6000fd5b5061230784612807565b611b205760405162461bcd60e51b815260206004820152601560248201527f475076323a206661696c6564207472616e73666572000000000000000000000060448201526064016103ed565b60008383863581811061236857612368613373565b905060200201602081019061237d9190613a64565b73ffffffffffffffffffffffffffffffffffffffff168252838360208701358181106123ab576123ab613373565b90506020020160208101906123c09190613a64565b73ffffffffffffffffffffffffffffffffffffffff1660208301526123eb6060860160408701613a64565b73ffffffffffffffffffffffffffffffffffffffff166040830152606080860135908301526080808601359083015261242a60c0860160a08701613bb3565b63ffffffff1660a083015260c0808601359083015260e080860135908301526124576101008601356128b8565b61016087019190915261014086019190915290151561012085015261010090930152509392505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0840180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101919091526042902060008085600381111561253d5761253d6135fa565b036125545761254d828585612a21565b90506125af565b6001856003811115612568576125686135fa565b036125785761254d828585612a36565b600285600381111561258c5761258c6135fa565b0361259c5761254d828585612a9a565b6125ac8285858960a00151612bc5565b90505b94509492505050565b60388451146126095760405162461bcd60e51b815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f770000000000000060448201526064016103ed565b60388401526034830152602090910152565b604082015160009073ffffffffffffffffffffffffffffffffffffffff16612644575080610899565b50506040015190565b60008260000361265f57506000610899565b600061266b8385613573565b9050826126788583613c08565b146126c55760405162461bcd60e51b815260206004820152601660248201527f536166654d6174683a206d756c206f766572666c6f770000000000000000000060448201526064016103ed565b9392505050565b600080821161271d5760405162461bcd60e51b815260206004820152601760248201527f536166654d6174683a206469766973696f6e206279203000000000000000000060448201526064016103ed565b6126c58284613c08565b60008082116127785760405162461bcd60e51b815260206004820152601f60248201527f536166654d6174683a206365696c696e67206469766973696f6e20627920300060448201526064016103ed565b6127828284613c1c565b1561278e576001612791565b60005b60ff1661279e8385613c08565b6126c59190613c30565b6000806127b58385613c30565b9050838110156126c55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ed565b600061282c565b62461bcd60e51b600052602060045280602452508060445260646000fd5b3d801561286b57602081146128a5576128667f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f61280e565b6128b2565b823b61289c5761289c7f475076323a206e6f74206120636f6e7472616374000000000000000000000000601461280e565b600191506128b2565b3d6000803e600051151591505b50919050565b6000806000806000856001166000036128f3577ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee3467759450612917565b7f6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc94505b600286161515935060088616600003612952577f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc992506129a9565b85600416600003612985577fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063292506129a9565b7f4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce92505b856010166000036129dc577f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc99150612a00565b7f4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce91505b600586901c6003811115612a1657612a166135fa565b905091939590929450565b6000612a2e848484612ce7565b949350505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018490526000908190605c01604051602081830303815290604052805190602001209050612a91818585612ce7565b95945050505050565b813560601c366000612aaf8460148188613c43565b6040517f1626ba7e0000000000000000000000000000000000000000000000000000000080825292945090925073ffffffffffffffffffffffffffffffffffffffff851690631626ba7e90612b0c908a9087908790600401613c6d565b602060405180830381865afa158015612b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4d9190613c87565b7fffffffff000000000000000000000000000000000000000000000000000000001614612bbc5760405162461bcd60e51b815260206004820152601f60248201527f475076323a20696e76616c69642065697031323731207369676e61747572650060448201526064016103ed565b50509392505050565b600060148314612c175760405162461bcd60e51b815260206004820152601c60248201527f475076323a206d616c666f726d6564207072657369676e61747572650000000060448201526064016103ed565b506040805160388082526060828101909352853590921c9160009190602082018180368337019050509050612c4e818784866125b8565b7ff59c009283ff87aa78203fc4d9c2df025ee851130fb69cc3e068941f6b5e2d6f60001c600082604051612c829190613500565b90815260200160405180910390205414612cde5760405162461bcd60e51b815260206004820152601960248201527f475076323a206f72646572206e6f74207072657369676e65640000000000000060448201526064016103ed565b50949350505050565b600060418214612d395760405162461bcd60e51b815260206004820152601f60248201527f475076323a206d616c666f726d6564206563647361207369676e61747572650060448201526064016103ed565b604080516000815260208082018084528790528583013560f81c92820183905285356060830181905290860135608083018190529092909160019060a0016020604051602081039080840390855afa158015612d99573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015194505073ffffffffffffffffffffffffffffffffffffffff8416612e275760405162461bcd60e51b815260206004820152601d60248201527f475076323a20696e76616c6964206563647361207369676e617475726500000060448201526064016103ed565b5050509392505050565b60008083601f840112612e4357600080fd5b50813567ffffffffffffffff811115612e5b57600080fd5b6020830191508360208260051b8501011115612e7657600080fd5b9250929050565b60008060008060008060006080888a031215612e9857600080fd5b873567ffffffffffffffff80821115612eb057600080fd5b612ebc8b838c01612e31565b909950975060208a0135915080821115612ed557600080fd5b612ee18b838c01612e31565b909750955060408a0135915080821115612efa57600080fd5b612f068b838c01612e31565b909550935060608a0135915080821115612f1f57600080fd5b508801606081018a1015612f3257600080fd5b8091505092959891949750929550565b60008083601f840112612f5457600080fd5b50813567ffffffffffffffff811115612f6c57600080fd5b602083019150836020828501011115612e7657600080fd5b60008060208385031215612f9757600080fd5b823567ffffffffffffffff811115612fae57600080fd5b612fba85828601612f42565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561303c5761303c612fc6565b604052919050565b600082601f83011261305557600080fd5b813567ffffffffffffffff81111561306f5761306f612fc6565b6130a060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612ff5565b8181528460208386010111156130b557600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156130e457600080fd5b813567ffffffffffffffff8111156130fb57600080fd5b612a2e84828501613044565b73ffffffffffffffffffffffffffffffffffffffff8116811461312957600080fd5b50565b6000806040838503121561313f57600080fd5b823561314a81613107565b9150602083013567ffffffffffffffff81111561316657600080fd5b61317285828601613044565b9150509250929050565b60005b8381101561319757818101518382015260200161317f565b50506000910152565b600081518084526131b881602086016020860161317c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006126c560208301846131a0565b6000806040838503121561321057600080fd5b50508035926020909101359150565b60008060008060006060868803121561323757600080fd5b853567ffffffffffffffff8082111561324f57600080fd5b61325b89838a01612e31565b9097509550602088013591508082111561327457600080fd5b61328089838a01612e31565b9095509350604088013591508082111561329957600080fd5b50860161016081890312156132ad57600080fd5b809150509295509295909350565b600080602083850312156132ce57600080fd5b823567ffffffffffffffff8111156132e557600080fd5b612fba85828601612e31565b801515811461312957600080fd5b60008060006040848603121561331457600080fd5b833567ffffffffffffffff81111561332b57600080fd5b61333786828701612f42565b909450925050602084013561334b816132f1565b809150509250925092565b60006020828403121561336857600080fd5b81516126c5816132f1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126133d757600080fd5b83018035915067ffffffffffffffff8211156133f257600080fd5b6020019150600581901b3603821315612e7657600080fd5b6020808252825182820181905260009190848201906040850190845b818110156134875761347483855173ffffffffffffffffffffffffffffffffffffffff8082511683528060208301511660208401525060408101516040830152606081015160608301525050565b9284019260809290920191600101613426565b50909695505050505050565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081526000612a2e6020830184866134a3565b6000825161351281846020870161317c565b9190910192915050565b6000835161352e81846020880161317c565b92151560f81b9190920190815260010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761089957610899613544565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135bb576135bb613544565b5060010190565b60007f800000000000000000000000000000000000000000000000000000000000000082036135f3576135f3613544565b5060000390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8183526000602080850194508260005b8581101561367457813561364c81613107565b73ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101613639565b509495945050505050565b600081518084526020808501945080840160005b8381101561367457815187529582019590820190600101613693565b60006101a0820160028c106136c6576136c66135fa565b8b83526101a060208401528990526101c060058a901b830181019083018b60005b8c8110156137fb577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4086850301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618f360301811261374857600080fd5b8e810190508035855260208101356020860152604081013560408601526060810135606086015260808101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181126137a457600080fd5b0160208101903567ffffffffffffffff8111156137c057600080fd5b8036038213156137cf57600080fd5b60a060808701526137e460a0870182846134a3565b9550505060209283019291909101906001016136e7565b505050828103604084015261381181898b613629565b905061385f606084018873ffffffffffffffffffffffffffffffffffffffff808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e0840152613871818761367f565b91505061388761010083018563ffffffff169052565b825173ffffffffffffffffffffffffffffffffffffffff908116610120840152602084015116610140830152604083015161016083015260608301516101808301529a9950505050505050505050565b600060208083850312156138ea57600080fd5b825167ffffffffffffffff8082111561390257600080fd5b818501915085601f83011261391657600080fd5b81518181111561392857613928612fc6565b8060051b9150613939848301612ff5565b818152918301840191848101908884111561395357600080fd5b938501935b8385101561397157845182529385019390850190613958565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015283608083015260c060a083015261397160c08301846131a0565b6040815260006139dc6040830185876134a3565b90508215156020830152949350505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000612a2e60408301846131a0565b8181038181111561089957610899613544565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261351257600080fd5b600060208284031215613a7657600080fd5b81356126c581613107565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261351257600080fd5b602080825282518282018190526000919060409081850190868401855b82811015613b41578151805160048110613aee57613aee6135fa565b85528087015173ffffffffffffffffffffffffffffffffffffffff908116888701528682015187870152606080830151821690870152608091820151169085015260a09093019290850190600101613ad2565b5091979650505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112613b8357600080fd5b83018035915067ffffffffffffffff821115613b9e57600080fd5b602001915036819003821315612e7657600080fd5b600060208284031215613bc557600080fd5b813563ffffffff811681146126c557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082613c1757613c17613bd9565b500490565b600082613c2b57613c2b613bd9565b500690565b8082018082111561089957610899613544565b60008085851115613c5357600080fd5b83861115613c6057600080fd5b5050820193919092039150565b838152604060208201526000612a916040830184866134a3565b600060208284031215613c9957600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146126c557600080fdfea2646970667358221220216557c7a90738eb93ef69fbc9a64a14b855be6987abe6f1708cad92ac53d82b64736f6c6343000813003360c060405234801561001057600080fd5b5060405161149538038061149583398101604081905261002f91610044565b336080526001600160a01b031660a052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160a0516113e86100ad6000396000818161015c0152818161021e015261030a0152600081816093015261026901526113e86000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634817a2861461003b5780637d10d11f14610064575b600080fd5b61004e610049366004610da7565b610079565b60405161005b9190610eb6565b60405180910390f35b610077610072366004610ed0565b610251565b005b60603373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461011f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f475076323a206e6f742063726561746f7200000000000000000000000000000060448201526064015b60405180910390fd5b6040517f945bcec900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063945bcec99061019d908c908c908c908c908c908c908c90600401611003565b6000604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261020291908101906111dd565b905061024573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168333610336565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f475076323a206e6f742063726561746f720000000000000000000000000000006044820152606401610116565b61033273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001683833361061b565b5050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61035b604084016020850161126e565b73ffffffffffffffffffffffffffffffffffffffff16036103d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f475076323a2063616e6e6f74207472616e73666572206e6174697665204554486044820152606401610116565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc982606001350361044b57610446610413602084018461126e565b8260408501803590610428906020880161126e565b73ffffffffffffffffffffffffffffffffffffffff1692919061096d565b505050565b604080516001808252818301909252600091816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104625790505090506000816000815181106104d2576104d261128b565b602002602001015190507fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063284606001351461050e576002610511565b60035b8190600381111561052457610524610f45565b9081600381111561053757610537610f45565b90525061054a604085016020860161126e565b73ffffffffffffffffffffffffffffffffffffffff166020808301919091526040808601359083015261057f9085018561126e565b73ffffffffffffffffffffffffffffffffffffffff908116606083015283811660808301526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815290861690630e8e3e84906105e29085906004016112ba565b600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505050505050505050565b60008267ffffffffffffffff81111561063657610636610b66565b6040519080825280602002602001820160405280156106ad57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816106545790505b5090506000805b848110156108d657368686838181106106cf576106cf61128b565b60800291909101915073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90506106ff604083016020840161126e565b73ffffffffffffffffffffffffffffffffffffffff160361077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f475076323a2063616e6e6f74207472616e73666572206e6174697665204554486044820152606401610116565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc98160600135036107d1576107cc6107b7602083018361126e565b8660408401803590610428906020870161126e565b6108c3565b600084846107de81611353565b9550815181106107f0576107f061128b565b602002602001015190507fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063282606001351461082c57600161082f565b60035b8190600381111561084257610842610f45565b9081600381111561085557610855610f45565b905250610868604083016020840161126e565b73ffffffffffffffffffffffffffffffffffffffff166020808301919091526040808401359083015261089d9083018361126e565b73ffffffffffffffffffffffffffffffffffffffff908116606083015286166080909101525b50806108ce81611353565b9150506106b4565b508015610965578082526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871690630e8e3e84906109329085906004016112ba565b600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050505b505050505050565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8581166004840152841660248301526044820183905290600080606483828a5af16109d8573d6000803e3d6000fd5b506109e285610a4f565b610a48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610116565b5050505050565b6000610a8e565b7f08c379a000000000000000000000000000000000000000000000000000000000600052602060045280602452508060445260646000fd5b3d8015610acd5760208114610b0757610ac87f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f610a56565b610b14565b823b610afe57610afe7f475076323a206e6f74206120636f6e74726163740000000000000000000000006014610a56565b60019150610b14565b3d6000803e600051151591505b50919050565b60008083601f840112610b2c57600080fd5b50813567ffffffffffffffff811115610b4457600080fd5b6020830191508360208260051b8501011115610b5f57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bdc57610bdc610b66565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b66565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610c2a57600080fd5b50565b600082601f830112610c3e57600080fd5b81356020610c53610c4e83610be4565b610b95565b82815260059290921b84018101918181019086841115610c7257600080fd5b8286015b84811015610c96578035610c8981610c08565b8352918301918301610c76565b509695505050505050565b80358015158114610cb157600080fd5b919050565b600060808284031215610cc857600080fd5b6040516080810181811067ffffffffffffffff82111715610ceb57610ceb610b66565b6040529050808235610cfc81610c08565b8152610d0a60208401610ca1565b60208201526040830135610d1d81610c08565b6040820152610d2e60608401610ca1565b60608201525092915050565b600082601f830112610d4b57600080fd5b81356020610d5b610c4e83610be4565b82815260059290921b84018101918181019086841115610d7a57600080fd5b8286015b84811015610c965780358352918301918301610d7e565b600060808284031215610b1457600080fd5b6000806000806000806000806101a0898b031215610dc457600080fd5b883560028110610dd357600080fd5b9750602089013567ffffffffffffffff80821115610df057600080fd5b610dfc8c838d01610b1a565b909950975060408b0135915080821115610e1557600080fd5b610e218c838d01610c2d565b9650610e308c60608d01610cb6565b955060e08b0135915080821115610e4657600080fd5b50610e538b828c01610d3a565b9350506101008901359150610e6c8a6101208b01610d95565b90509295985092959890939650565b600081518084526020808501945080840160005b83811015610eab57815187529582019590820190600101610e8f565b509495945050505050565b602081526000610ec96020830184610e7b565b9392505050565b60008060208385031215610ee357600080fd5b823567ffffffffffffffff80821115610efb57600080fd5b818501915085601f830112610f0f57600080fd5b813581811115610f1e57600080fd5b8660208260071b8501011115610f3357600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600081518084526020808501945080840160005b83811015610eab57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610fd1565b600061012080830160028b1061101b5761101b610f45565b8a84526020808501929092528890526101408084019160058a901b8501909101908a60005b8b811015611151577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec087850301855281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618e36030181126110a157600080fd5b8d01803585528381013584860152604080820135908601526060808201359086015260a0608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126110fc57600080fd5b90920185810192903567ffffffffffffffff81111561111a57600080fd5b80360384131561112957600080fd5b828289015261113b8389018286610f74565b9887019897505050928401925050600101611040565b50505083810360408501526111668189610fbd565b9150506111b5606084018773ffffffffffffffffffffffffffffffffffffffff808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e08401526111c78186610e7b565b9150508261010083015298975050505050505050565b600060208083850312156111f057600080fd5b825167ffffffffffffffff81111561120757600080fd5b8301601f8101851361121857600080fd5b8051611226610c4e82610be4565b81815260059190911b8201830190838101908783111561124557600080fd5b928401925b828410156112635783518252928401929084019061124a565b979650505050505050565b60006020828403121561128057600080fd5b8135610ec981610c08565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602080825282518282018190526000919060409081850190868401855b828110156113465781518051600481106112f3576112f3610f45565b85528087015173ffffffffffffffffffffffffffffffffffffffff908116888701528682015187870152606080830151821690870152608091820151169085015260a090930192908501906001016112d7565b5091979650505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122004adc15dd1d35c2bfa3dce7fd2d81bebbfbd818bb0fe0cbf0471642fd2d0766964736f6c63430008130033a26469706673582212203d71b6f39d8a3ee9b15e305e119eb2c6243d403a6221c13ab1f5cc7d49f14d8264736f6c63430008130033608060405234801561001057600080fd5b506001600455613dac806100256000396000f3fe6080604052600436106101d15760003560e01c8063affed0e0116100f7578063e19a9dd911610095578063f08a032311610064578063f08a0323146105f5578063f698da2514610615578063f8dc5dd91461067c578063ffa1ad741461069c5761020d565b8063e19a9dd914610580578063e318b52b146105a0578063e75235b8146105c0578063e86637db146105d55761020d565b8063cc2f8452116100d1578063cc2f8452146104f2578063d4d9bdcd14610520578063d8d11f7814610540578063e009cfde146105605761020d565b8063affed0e01461049c578063b4faba09146104b2578063b63e800d146104d25761020d565b80635624b25b1161016f5780636a7612021161013e5780636a7612021461040f5780637d83297414610422578063934f3a111461045a578063a0e67e2b1461047a5761020d565b80635624b25b146103755780635ae6bd37146103a2578063610b5925146103cf578063694e80c3146103ef5761020d565b80632f54bf6e116101ab5780632f54bf6e146102ea5780633408e4701461030a578063468721a7146103275780635229073f146103475761020d565b80630d582f131461027357806312fb68e0146102955780632d9ad53d146102b55761020d565b3661020d5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561021957600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061024457005b36600080373360601b365260008060143601600080855af190503d6000803e8061026d573d6000fd5b503d6000f35b34801561027f57600080fd5b5061029361028e36600461312a565b6106e5565b005b3480156102a157600080fd5b506102936102b0366004613230565b6108ff565b3480156102c157600080fd5b506102d56102d03660046132a5565b610ef3565b60405190151581526020015b60405180910390f35b3480156102f657600080fd5b506102d56103053660046132a5565b610f48565b34801561031657600080fd5b50465b6040519081526020016102e1565b34801561033357600080fd5b506102d56103423660046132d1565b610f9a565b34801561035357600080fd5b506103676103623660046132d1565b6110b6565b6040516102e192919061339f565b34801561038157600080fd5b506103956103903660046133ba565b6110ec565b6040516102e191906133dc565b3480156103ae57600080fd5b506103196103bd3660046133ef565b60076020526000908152604090205481565b3480156103db57600080fd5b506102936103ea3660046132a5565b611172565b3480156103fb57600080fd5b5061029361040a3660046133ef565b611327565b6102d561041d366004613451565b61140d565b34801561042e57600080fd5b5061031961043d36600461312a565b600860209081526000928352604080842090915290825290205481565b34801561046657600080fd5b5061029361047536600461352a565b6117d5565b34801561048657600080fd5b5061048f611837565b6040516102e191906135e8565b3480156104a857600080fd5b5061031960055481565b3480156104be57600080fd5b506102936104cd3660046135fb565b61194f565b3480156104de57600080fd5b506102936104ed36600461364b565b611972565b3480156104fe57600080fd5b5061051261050d36600461312a565b611a8e565b6040516102e1929190613740565b34801561052c57600080fd5b5061029361053b3660046133ef565b611cc8565b34801561054c57600080fd5b5061031961055b366004613778565b611d82565b34801561056c57600080fd5b5061029361057b366004613839565b611daf565b34801561058c57600080fd5b5061029361059b3660046132a5565b611f4d565b3480156105ac57600080fd5b506102936105bb366004613872565b6120d4565b3480156105cc57600080fd5b50600454610319565b3480156105e157600080fd5b506103956105f0366004613778565b6123e4565b34801561060157600080fd5b506102936106103660046132a5565b61257d565b34801561062157600080fd5b5061031960007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b34801561068857600080fd5b506102936106973660046138bd565b6125d2565b3480156106a857600080fd5b506103956040518060400160405280600581526020017f312e342e3100000000000000000000000000000000000000000000000000000081525081565b6106ed61280e565b73ffffffffffffffffffffffffffffffffffffffff821615801590610729575073ffffffffffffffffffffffffffffffffffffffff8216600114155b801561074b575073ffffffffffffffffffffffffffffffffffffffff82163014155b61079c5760405162461bcd60e51b815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82811660009081526002602052604090205416156108115760405162461bcd60e51b815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610793565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0805473ffffffffffffffffffffffffffffffffffffffff8481166000818152604081208054939094167fffffffffffffffffffffffff0000000000000000000000000000000000000000938416179093556001835283549091161790915560038054916108a38361392d565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a280600454146108fb576108fb81611327565b5050565b61090a81604161285f565b8251101561095a5760405162461bcd60e51b815260206004820152600560248201527f47533032300000000000000000000000000000000000000000000000000000006044820152606401610793565b6000808060008060005b86811015610ee7576041818102890160208101516040820151919092015160ff16955090935091506000849003610c2857885160208a01208a146109ea5760405162461bcd60e51b815260206004820152600560248201527f47533032370000000000000000000000000000000000000000000000000000006044820152606401610793565b91935083916109fa87604161285f565b821015610a495760405162461bcd60e51b815260206004820152600560248201527f47533032310000000000000000000000000000000000000000000000000000006044820152606401610793565b8751610a5683602061289b565b1115610aa45760405162461bcd60e51b815260206004820152600560248201527f47533032320000000000000000000000000000000000000000000000000000006044820152606401610793565b602082890181015189519091610ac7908390610ac190879061289b565b9061289b565b1115610b155760405162461bcd60e51b815260206004820152600560248201527f47533032330000000000000000000000000000000000000000000000000000006044820152606401610793565b6040517f20c13b0b000000000000000000000000000000000000000000000000000000008082528a85016020019173ffffffffffffffffffffffffffffffffffffffff8916906320c13b0b90610b71908f908690600401613965565b602060405180830381865afa158015610b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb2919061398a565b7fffffffff000000000000000000000000000000000000000000000000000000001614610c215760405162461bcd60e51b815260206004820152600560248201527f47533032340000000000000000000000000000000000000000000000000000006044820152606401610793565b5050610e01565b8360ff16600103610cdc5791935083913373ffffffffffffffffffffffffffffffffffffffff84161480610c8b575073ffffffffffffffffffffffffffffffffffffffff851660009081526008602090815260408083208d845290915290205415155b610cd75760405162461bcd60e51b815260206004820152600560248201527f47533032350000000000000000000000000000000000000000000000000000006044820152606401610793565b610e01565b601e8460ff161115610da1576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610d4191906139cc565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610d90573d6000803e3d6000fd5b505050602060405103519450610e01565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610df4573d6000803e3d6000fd5b5050506020604051035194505b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16118015610e62575073ffffffffffffffffffffffffffffffffffffffff8581166000908152600260205260409020541615155b8015610e85575073ffffffffffffffffffffffffffffffffffffffff8516600114155b610ed15760405162461bcd60e51b815260206004820152600560248201527f47533032360000000000000000000000000000000000000000000000000000006044820152606401610793565b8495508080610edf9061392d565b915050610964565b50505050505050505050565b6000600173ffffffffffffffffffffffffffffffffffffffff831614801590610f42575073ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020541615155b92915050565b600073ffffffffffffffffffffffffffffffffffffffff8216600114801590610f4257505073ffffffffffffffffffffffffffffffffffffffff90811660009081526002602052604090205416151590565b600033600114801590610fd157503360009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1615155b61101d5760405162461bcd60e51b815260206004820152600560248201527f47533130340000000000000000000000000000000000000000000000000000006044820152606401610793565b61104a858585857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6128b7565b905080156110825760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a26110ae565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b600060606110c686868686610f9a565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b606060006110fb8360206139e5565b67ffffffffffffffff81111561111357611113613156565b6040519080825280601f01601f19166020018201604052801561113d576020820181803683370190505b50905060005b8381101561116a5784810154602080830284010152806111628161392d565b915050611143565b509392505050565b61117a61280e565b73ffffffffffffffffffffffffffffffffffffffff8116158015906111b6575073ffffffffffffffffffffffffffffffffffffffff8116600114155b6112025760405162461bcd60e51b815260206004820152600560248201527f47533130310000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526001602052604090205416156112775760405162461bcd60e51b815260206004820152600560248201527f47533130320000000000000000000000000000000000000000000000000000006044820152606401610793565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805473ffffffffffffffffffffffffffffffffffffffff848116600081815260408082208054949095167fffffffffffffffffffffffff000000000000000000000000000000000000000094851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b61132f61280e565b6003548111156113815760405162461bcd60e51b815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610793565b60018110156113d25760405162461bcd60e51b815260206004820152600560248201527f47533230320000000000000000000000000000000000000000000000000000006044820152606401610793565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60008060006114278e8e8e8e8e8e8e8e8e8e6005546123e4565b6005805491925060006114398361392d565b90915550508051602082012091506114528282866117d5565b50600061147d7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b905073ffffffffffffffffffffffffffffffffffffffff81161561151d578073ffffffffffffffffffffffffffffffffffffffff166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b81526004016114ea9c9b9a99989796959493929190613a66565b600060405180830381600087803b15801561150457600080fd5b505af1158015611518573d6000803e3d6000fd5b505050505b61154961152c8a6109c4613b7c565b603f6115398c60406139e5565b6115439190613b8f565b906128fe565b611555906101f4613b7c565b5a10156115a45760405162461bcd60e51b815260206004820152600560248201527f47533031300000000000000000000000000000000000000000000000000000006044820152606401610793565b60005a90506116158f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c600014611602578e6128b7565b6109c45a6116109190613bca565b6128b7565b93506116225a8290612915565b9050838061162f57508915155b8061163957508715155b6116855760405162461bcd60e51b815260206004820152600560248201527f47533031330000000000000000000000000000000000000000000000000000006044820152606401610793565b6000881561169d5761169a828b8b8b8b612930565b90505b84156116e257837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e826040516116d591815260200190565b60405180910390a261171d565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d238260405161171491815260200190565b60405180910390a25b505073ffffffffffffffffffffffffffffffffffffffff8116156117c4576040517f9327136800000000000000000000000000000000000000000000000000000000815260048101839052831515602482015273ffffffffffffffffffffffffffffffffffffffff821690639327136890604401600060405180830381600087803b1580156117ab57600080fd5b505af11580156117bf573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b600454806118255760405162461bcd60e51b815260206004820152600560248201527f47533030310000000000000000000000000000000000000000000000000000006044820152606401610793565b611831848484846108ff565b50505050565b6060600060035467ffffffffffffffff81111561185657611856613156565b60405190808252806020026020018201604052801561187f578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0549192509073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff811660011461194757808383815181106118fa576118fa613bdd565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920181019190915291811660009081526002909252604090912054168161193f8161392d565b9250506118c9565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b6119b08a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612a8d915050565b73ffffffffffffffffffffffffffffffffffffffff8416156119d5576119d584612dd8565b611a158787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612e6192505050565b8115611a2c57611a2a82600060018685612930565b505b3373ffffffffffffffffffffffffffffffffffffffff167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611a7a959493929190613c0c565b60405180910390a250505050505050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff841660011480611abb5750611abb84610ef3565b611b075760405162461bcd60e51b815260206004820152600560248201527f47533130350000000000000000000000000000000000000000000000000000006044820152606401610793565b60008311611b575760405162461bcd60e51b815260206004820152600560248201527f47533130360000000000000000000000000000000000000000000000000000006044820152606401610793565b8267ffffffffffffffff811115611b7057611b70613156565b604051908082528060200260200182016040528015611b99578160200160208202803683370190505b5073ffffffffffffffffffffffffffffffffffffffff808616600090815260016020526040812054929450911691505b73ffffffffffffffffffffffffffffffffffffffff821615801590611c05575073ffffffffffffffffffffffffffffffffffffffff8216600114155b8015611c1057508381105b15611c785781838281518110611c2857611c28613bdd565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152928116600090815260019093526040909220549091169080611c708161392d565b915050611bc9565b73ffffffffffffffffffffffffffffffffffffffff8216600114611cbd5782611ca2600183613bca565b81518110611cb257611cb2613bdd565b602002602001015191505b808352509250929050565b3360009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16611d3a5760405162461bcd60e51b815260206004820152600560248201527f47533033300000000000000000000000000000000000000000000000000000006044820152606401610793565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611d978c8c8c8c8c8c8c8c8c8c8c6123e4565b8051906020012090509b9a5050505050505050505050565b611db761280e565b73ffffffffffffffffffffffffffffffffffffffff811615801590611df3575073ffffffffffffffffffffffffffffffffffffffff8116600114155b611e3f5760405162461bcd60e51b815260206004820152600560248201527f47533130310000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260016020526040902054811690821614611eb85760405162461bcd60e51b815260206004820152600560248201527f47533130330000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260016020526040808220805487861684528284208054919096167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b611f5561280e565b73ffffffffffffffffffffffffffffffffffffffff81161561206b576040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fe6d7a83a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa158015611ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201f9190613c92565b61206b5760405162461bcd60e51b815260206004820152600560248201527f47533330300000000000000000000000000000000000000000000000000000006044820152606401610793565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c881815560405173ffffffffffffffffffffffffffffffffffffffff8316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b6120dc61280e565b73ffffffffffffffffffffffffffffffffffffffff811615801590612118575073ffffffffffffffffffffffffffffffffffffffff8116600114155b801561213a575073ffffffffffffffffffffffffffffffffffffffff81163014155b6121865760405162461bcd60e51b815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526002602052604090205416156121fb5760405162461bcd60e51b815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff821615801590612237575073ffffffffffffffffffffffffffffffffffffffff8216600114155b6122835760405162461bcd60e51b815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260205260409020548116908316146122fc5760405162461bcd60e51b815260206004820152600560248201527f47533230350000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805486861680855283852080549288167fffffffffffffffffffffffff00000000000000000000000000000000000000009384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a260405173ffffffffffffffffffffffffffffffffffffffff8216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d60405161241e929190613cb4565b604051908190038120612444949392918e908e908e908e908e908e908e90602001613cc4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012090507f19000000000000000000000000000000000000000000000000000000000000007f010000000000000000000000000000000000000000000000000000000000000061251860007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff0000000000000000000000000000000000000000000000000000000000000093841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b61258561280e565b61258e81612dd8565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b6125da61280e565b8060016003546125ea9190613bca565b10156126385760405162461bcd60e51b815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff821615801590612674575073ffffffffffffffffffffffffffffffffffffffff8216600114155b6126c05760405162461bcd60e51b815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260205260409020548116908316146127395760405162461bcd60e51b815260206004820152600560248201527f47533230350000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805488861684529183208054929095167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909455918152825490911690915560038054916127b183613d41565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a280600454146128095761280981611327565b505050565b33301461285d5760405162461bcd60e51b815260206004820152600560248201527f47533033310000000000000000000000000000000000000000000000000000006044820152606401610793565b565b60008260000361287157506000610f42565b600061287d83856139e5565b90508261288a8583613b8f565b1461289457600080fd5b9392505050565b6000806128a88385613b7c565b90508381101561289457600080fd5b600060018360018111156128cd576128cd6139fc565b036128e5576000808551602087018986f490506128f5565b600080855160208701888a87f190505b95945050505050565b60008183101561290e5781612894565b5090919050565b60008282111561292457600080fd5b60006110ae8385613bca565b60008073ffffffffffffffffffffffffffffffffffffffff8316156129555782612957565b325b905073ffffffffffffffffffffffffffffffffffffffff8416612a1c576129963a8610612984573a612986565b855b612990898961289b565b9061285f565b60405190925073ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f19350505050612a175760405162461bcd60e51b815260206004820152600560248201527f47533031310000000000000000000000000000000000000000000000000000006044820152606401610793565b612a83565b612a2a85612990898961289b565b9150612a3784828461302b565b612a835760405162461bcd60e51b815260206004820152600560248201527f47533031320000000000000000000000000000000000000000000000000000006044820152606401610793565b5095945050505050565b60045415612add5760405162461bcd60e51b815260206004820152600560248201527f47533230300000000000000000000000000000000000000000000000000000006044820152606401610793565b8151811115612b2e5760405162461bcd60e51b815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610793565b6001811015612b7f5760405162461bcd60e51b815260206004820152600560248201527f47533230320000000000000000000000000000000000000000000000000000006044820152606401610793565b600160005b8351811015612d80576000848281518110612ba157612ba1613bdd565b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015612bff575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015612c21575073ffffffffffffffffffffffffffffffffffffffff81163014155b8015612c5957508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b612ca55760405162461bcd60e51b815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600260205260409020541615612d1a5760405162461bcd60e51b815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610793565b73ffffffffffffffffffffffffffffffffffffffff928316600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169382169390931790925580612d788161392d565b915050612b84565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001660011790559051600355600455565b3073ffffffffffffffffffffffffffffffffffffffff821603612e3d5760405162461bcd60e51b815260206004820152600560248201527f47533430300000000000000000000000000000000000000000000000000000006044820152606401610793565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5473ffffffffffffffffffffffffffffffffffffffff1615612ef05760405162461bcd60e51b815260206004820152600560248201527f47533130300000000000000000000000000000000000000000000000000000006044820152606401610793565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80547fffffffffffffffffffffffff000000000000000000000000000000000000000016909117905573ffffffffffffffffffffffffffffffffffffffff8216156108fb57813b612fb05760405162461bcd60e51b815260206004820152600560248201527f47533030320000000000000000000000000000000000000000000000000000006044820152606401610793565b612fdf8260008360017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6128b7565b6108fb5760405162461bcd60e51b815260206004820152600560248201527f47533030300000000000000000000000000000000000000000000000000000006044820152606401610793565b6040805173ffffffffffffffffffffffffffffffffffffffff841660248201526044808201849052825180830390910181526064909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781528251600093929184919082896127105a03f13d80156130d857602081146130e057600093506130eb565b8193506130eb565b600051158215171593505b5050509392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461311757600080fd5b50565b8035613125816130f5565b919050565b6000806040838503121561313d57600080fd5b8235613148816130f5565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261319657600080fd5b813567ffffffffffffffff808211156131b1576131b1613156565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156131f7576131f7613156565b8160405283815286602085880101111561321057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561324657600080fd5b84359350602085013567ffffffffffffffff8082111561326557600080fd5b61327188838901613185565b9450604087013591508082111561328757600080fd5b5061329487828801613185565b949793965093946060013593505050565b6000602082840312156132b757600080fd5b8135612894816130f5565b80356002811061312557600080fd5b600080600080608085870312156132e757600080fd5b84356132f2816130f5565b935060208501359250604085013567ffffffffffffffff81111561331557600080fd5b61332187828801613185565b925050613330606086016132c2565b905092959194509250565b6000815180845260005b8181101561336157602081850181015186830182015201613345565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b82151581526040602082015260006110ae604083018461333b565b600080604083850312156133cd57600080fd5b50508035926020909101359150565b602081526000612894602083018461333b565b60006020828403121561340157600080fd5b5035919050565b60008083601f84011261341a57600080fd5b50813567ffffffffffffffff81111561343257600080fd5b60208301915083602082850101111561344a57600080fd5b9250929050565b60008060008060008060008060008060006101408c8e03121561347357600080fd5b61347c8c61311a565b9a5060208c0135995067ffffffffffffffff8060408e0135111561349f57600080fd5b6134af8e60408f01358f01613408565b909a5098506134c060608e016132c2565b975060808d0135965060a08d0135955060c08d013594506134e360e08e0161311a565b93506134f26101008e0161311a565b9250806101208e0135111561350657600080fd5b506135188d6101208e01358e01613185565b90509295989b509295989b9093969950565b60008060006060848603121561353f57600080fd5b83359250602084013567ffffffffffffffff8082111561355e57600080fd5b61356a87838801613185565b9350604086013591508082111561358057600080fd5b5061358d86828701613185565b9150509250925092565b600081518084526020808501945080840160005b838110156135dd57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016135ab565b509495945050505050565b6020815260006128946020830184613597565b6000806040838503121561360e57600080fd5b8235613619816130f5565b9150602083013567ffffffffffffffff81111561363557600080fd5b61364185828601613185565b9150509250929050565b6000806000806000806000806000806101008b8d03121561366b57600080fd5b8a3567ffffffffffffffff8082111561368357600080fd5b818d0191508d601f83011261369757600080fd5b8135818111156136a657600080fd5b8e60208260051b85010111156136bb57600080fd5b60208381019d50909b508d013599506136d660408e0161311a565b985060608d01359150808211156136ec57600080fd5b506136f98d828e01613408565b909750955061370c905060808c0161311a565b935061371a60a08c0161311a565b925060c08b0135915061372f60e08c0161311a565b90509295989b9194979a5092959850565b6040815260006137536040830185613597565b905073ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b60008060008060008060008060008060006101408c8e03121561379a57600080fd5b8b356137a5816130f5565b9a5060208c0135995060408c013567ffffffffffffffff8111156137c857600080fd5b6137d48e828f01613408565b909a5098506137e7905060608d016132c2565b965060808c0135955060a08c0135945060c08c0135935060e08c013561380c816130f5565b92506101008c013561381d816130f5565b809250506101208c013590509295989b509295989b9093969950565b6000806040838503121561384c57600080fd5b8235613857816130f5565b91506020830135613867816130f5565b809150509250929050565b60008060006060848603121561388757600080fd5b8335613892816130f5565b925060208401356138a2816130f5565b915060408401356138b2816130f5565b809150509250925092565b6000806000606084860312156138d257600080fd5b83356138dd816130f5565b925060208401356138ed816130f5565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361395e5761395e6138fe565b5060010190565b604081526000613978604083018561333b565b82810360208401526128f5818561333b565b60006020828403121561399c57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461289457600080fd5b60ff8281168282160390811115610f4257610f426138fe565b8082028115828204841417610f4257610f426138fe565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110613a62577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600061016073ffffffffffffffffffffffffffffffffffffffff8f1683528d60208401528060408401528b81840152506101808b8d828501376000818d850101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8d01168301613adc606085018d613a2b565b8a60808501528960a08501528860c0850152613b1060e085018973ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff87166101008501528184820301610120850152613b448282018761333b565b92505050613b6b61014083018473ffffffffffffffffffffffffffffffffffffffff169052565b9d9c50505050505050505050505050565b80820180821115610f4257610f426138fe565b600082613bc5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b81810381811115610f4257610f426138fe565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6080808252810185905260008660a08301825b88811015613c5c578235613c32816130f5565b73ffffffffffffffffffffffffffffffffffffffff16825260209283019290910190600101613c1f565b506020840196909652505073ffffffffffffffffffffffffffffffffffffffff9283166040820152911660609091015292915050565b600060208284031215613ca457600080fd5b8151801515811461289457600080fd5b8183823760009101908152919050565b6000610160820190508c825273ffffffffffffffffffffffffffffffffffffffff808d1660208401528b60408401528a6060840152613d06608084018b613a2b565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b600081613d5057613d506138fe565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212209e2f181150ba67537d2d99fdfb2ec0c80638c3bc7d23e709c951e528b791935664736f6c63430008130033608060405234801561001057600080fd5b50610959806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353e5d9351161005057806353e5d935146100b7578063d18af54d146100cc578063ec9e80bb146100df57600080fd5b80631688f0b91461006c5780633408e470146100a9575b600080fd5b61007f61007a3660046105d2565b6100f2565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6040514681526020016100a0565b6100bf610194565b6040516100a09190610699565b61007f6100da3660046106b3565b6101dc565b61007f6100ed3660046105d2565b6102f8565b600080838051906020012083604051602001610118929190918252602082015260400190565b60405160208183030381529060405280519060200120905061013b85858361032a565b60405173ffffffffffffffffffffffffffffffffffffffff8781168252919350908316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b6060604051806020016101a6906104c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052919050565b600080838360405160200161022092919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b6040516020818303038152906040528051906020012060001c90506102468686836100f2565b915073ffffffffffffffffffffffffffffffffffffffff8316156102ef576040517f1e52b51800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690631e52b518906102bc9085908a908a908a9060040161071f565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208361030b4690565b6040805160208101949094528301919091526060820152608001610118565b6000833b610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b6000604051806020016103ab906104c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f909101166040819052610403919073ffffffffffffffffffffffffffffffffffffffff881690602001610769565b6040516020818303038152906040529050828151826020016000f5915073ffffffffffffffffffffffffffffffffffffffff821661049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152606401610390565b8351156104be5760008060008651602088016000875af1036104be57600080fd5b509392505050565b6101988061078c83390190565b73ffffffffffffffffffffffffffffffffffffffff811681146104f557600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261053857600080fd5b813567ffffffffffffffff80821115610553576105536104f8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610599576105996104f8565b816040528381528660208588010111156105b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105e757600080fd5b83356105f2816104d3565b9250602084013567ffffffffffffffff81111561060e57600080fd5b61061a86828701610527565b925050604084013590509250925092565b60005b8381101561064657818101518382015260200161062e565b50506000910152565b6000815180845261066781602086016020860161062b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106ac602083018461064f565b9392505050565b600080600080608085870312156106c957600080fd5b84356106d4816104d3565b9350602085013567ffffffffffffffff8111156106f057600080fd5b6106fc87828801610527565b935050604085013591506060850135610714816104d3565b939692955090935050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060806040830152610758608083018561064f565b905082606083015295945050505050565b6000835161077b81846020880161062b565b919091019182525060200191905056fe608060405234801561001057600080fd5b5060405161019838038061019883398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b60a1806100f76000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea2646970667358221220c86ded872d479dbeb416df0363bbc070973ed044145f9fce0dce01e47c13850164736f6c63430008130033a2646970667358221220295db15837eab9f23bd68ac1ec8733135a9404b320497741c2162f57a4d664d664736f6c63430008130033608060405234801561001057600080fd5b50611148806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c80632303164011610081578063bc197c811161005b578063bc197c8114610212578063bd61951d1461024d578063f23a6e611461026057600080fd5b806323031640146101ca5780636ac24784146101ea578063b2494df3146101fd57600080fd5b8063150b7a02116100b2578063150b7a021461013b5780631626ba7e146101a457806320c13b0b146101b757600080fd5b806223de29146100d857806301ffc9a7146100f25780630a1028c41461011a575b600080fd5b6100f06100e6366004610955565b5050505050505050565b005b610105610100366004610a34565b610299565b60405190151581526020015b60405180910390f35b61012d610128366004610b5d565b61037e565b604051908152602001610111565b610173610149366004610b9a565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610111565b6101736101b2366004610c0d565b61038a565b6101736101c5366004610c59565b6104ab565b6101dd6101d8366004610cbd565b610680565b6040516101119190610d67565b61012d6101f8366004610cbd565b6107b7565b6102056107d2565b6040516101119190610d7a565b610173610220366004610e19565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6101dd61025b366004610eb7565b610884565b61017361026e366004610ef3565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061032c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061037857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061037833836107b7565b60408051602080820186905282518083039091018152818301928390527f20c13b0b000000000000000000000000000000000000000000000000000000009092526000913391839183916320c13b0b916103ea9189908990604401610f6f565b602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610fd3565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f20c13b0b000000000000000000000000000000000000000000000000000000001461047d57600061049f565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b925050505b9392505050565b600033816104b98286610680565b805160208201208551919250906000036105ce576040517f5ae6bd370000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff841690635ae6bd3790602401602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190610ff0565b6000036105c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f48617368206e6f7420617070726f766564000000000000000000000000000000604482015260640160405180910390fd5b610655565b6040517f934f3a1100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063934f3a119061062490849086908a90600401611009565b60006040518083038186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050505b507f20c13b0b0000000000000000000000000000000000000000000000000000000095945050505050565b606060007f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016106ca929190918252602082015260400190565b604051602081830303815290604052805190602001209050601960f81b600160f81b8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610ff0565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505092915050565b60006107c38383610680565b80519060200120905092915050565b6040517fcc2f845200000000000000000000000000000000000000000000000000000000815260016004820152600a60248201526060903390600090829063cc2f845290604401600060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261087c919081019061104e565b509392505050565b60606040517fb4faba09000000000000000000000000000000000000000000000000000000008152600436036004808301376020600036836000335af1505060203d036040519150808201604052806020833e506000516104a457805160208201fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461090957600080fd5b50565b60008083601f84011261091e57600080fd5b50813567ffffffffffffffff81111561093657600080fd5b60208301915083602082850101111561094e57600080fd5b9250929050565b60008060008060008060008060c0898b03121561097157600080fd5b883561097c816108e7565b9750602089013561098c816108e7565b9650604089013561099c816108e7565b955060608901359450608089013567ffffffffffffffff808211156109c057600080fd5b6109cc8c838d0161090c565b909650945060a08b01359150808211156109e557600080fd5b506109f28b828c0161090c565b999c989b5096995094979396929594505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461090957600080fd5b600060208284031215610a4657600080fd5b81356104a481610a06565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ac757610ac7610a51565b604052919050565b600082601f830112610ae057600080fd5b813567ffffffffffffffff811115610afa57610afa610a51565b610b2b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610a80565b818152846020838601011115610b4057600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610b6f57600080fd5b813567ffffffffffffffff811115610b8657600080fd5b610b9284828501610acf565b949350505050565b600080600080600060808688031215610bb257600080fd5b8535610bbd816108e7565b94506020860135610bcd816108e7565b935060408601359250606086013567ffffffffffffffff811115610bf057600080fd5b610bfc8882890161090c565b969995985093965092949392505050565b600080600060408486031215610c2257600080fd5b83359250602084013567ffffffffffffffff811115610c4057600080fd5b610c4c8682870161090c565b9497909650939450505050565b60008060408385031215610c6c57600080fd5b823567ffffffffffffffff80821115610c8457600080fd5b610c9086838701610acf565b93506020850135915080821115610ca657600080fd5b50610cb385828601610acf565b9150509250929050565b60008060408385031215610cd057600080fd5b8235610cdb816108e7565b9150602083013567ffffffffffffffff811115610cf757600080fd5b610cb385828601610acf565b6000815180845260005b81811015610d2957602081850181015186830182015201610d0d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006104a46020830184610d03565b6020808252825182820181905260009190848201906040850190845b81811015610dc857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610d96565b50909695505050505050565b60008083601f840112610de657600080fd5b50813567ffffffffffffffff811115610dfe57600080fd5b6020830191508360208260051b850101111561094e57600080fd5b60008060008060008060008060a0898b031215610e3557600080fd5b8835610e40816108e7565b97506020890135610e50816108e7565b9650604089013567ffffffffffffffff80821115610e6d57600080fd5b610e798c838d01610dd4565b909850965060608b0135915080821115610e9257600080fd5b610e9e8c838d01610dd4565b909650945060808b01359150808211156109e557600080fd5b600080600060408486031215610ecc57600080fd5b8335610ed7816108e7565b9250602084013567ffffffffffffffff811115610c4057600080fd5b60008060008060008060a08789031215610f0c57600080fd5b8635610f17816108e7565b95506020870135610f27816108e7565b94506040870135935060608701359250608087013567ffffffffffffffff811115610f5157600080fd5b610f5d89828a0161090c565b979a9699509497509295939492505050565b604081526000610f826040830186610d03565b82810360208401528381528385602083013760006020858301015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116820101915050949350505050565b600060208284031215610fe557600080fd5b81516104a481610a06565b60006020828403121561100257600080fd5b5051919050565b8381526060602082015260006110226060830185610d03565b82810360408401526110348185610d03565b9695505050505050565b8051611049816108e7565b919050565b6000806040838503121561106157600080fd5b825167ffffffffffffffff8082111561107957600080fd5b818501915085601f83011261108d57600080fd5b81516020828211156110a1576110a1610a51565b8160051b92506110b2818401610a80565b82815292840181019281810190898511156110cc57600080fd5b948201945b848610156110f657855193506110e6846108e7565b83825294820194908201906110d1565b9650611105905087820161103e565b945050505050925092905056fea26469706673582212206ffa81b83c1fa79278fb17839513a8c9e65f4cae41c1b8fd463d2ed04fcb0cec64736f6c63430008130033608060405234801561001057600080fd5b506124cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806351cad5ee1161008c5780637f73528b116100665780637f73528b14610514578063b435a13b14610527578063bc197c8114610555578063f23a6e6114610590576100df565b806351cad5ee1461048857806361f5401b146104ee57806364f95acc14610501576100df565b80631626ba7e116100bd5780631626ba7e1461044d578063327b533c146104605780633365582c14610475576100df565b806301ffc9a7146103865780630a3fe054146103ae578063150b7a02146103e4575b60003660606018821015610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f696e76616c6964206d6574686f642073656c6563746f7200000000000000000060448201526064015b60405180910390fd5b6000806000806101626105c9565b9296509094509250905073ffffffffffffffffffffffffffffffffffffffff81166101e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6d6574686f642068616e646c6572206e6f742073657400000000000000000000604482015260640161014b565b81156102b45773ffffffffffffffffffffffffffffffffffffffff81166325d6803f8585600080803661021d601482611bc3565b9261022a93929190611bd6565b6040518663ffffffff1660e01b815260040161024a959493929190611c00565b600060405180830381865afa158015610267573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102ad9190810190611d67565b9450610377565b73ffffffffffffffffffffffffffffffffffffffff81166325d6803f858560008080366102e2601482611bc3565b926102ef93929190611bd6565b6040518663ffffffff1660e01b815260040161030f959493929190611c00565b6000604051808303816000875af115801561032e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103749190810190611d67565b94505b50505050915050805190602001f35b610399610394366004611e14565b610641565b60405190151581526020015b60405180910390f35b6103d66103bc366004611e53565b600060208181529281526040808220909352908152205481565b6040519081526020016103a5565b61041c6103f2366004611ed5565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016103a5565b61041c61045b366004611f48565b610730565b61047361046e366004611fd9565b610926565b005b610473610483366004612021565b610b11565b6104c9610496366004612046565b600160209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016103a5565b6104736104fc366004611fd9565b610dc0565b61047361050f366004612072565b610f9c565b610473610522366004612090565b611038565b610399610535366004611e53565b600260209081526000928352604080842090915290825290205460ff1681565b61041c6105633660046120c3565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b61041c61059e366004612182565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b6000806000806105d7611312565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008435168452909152902054929791965060f883901c1595509190911692509050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a70000000000000000000000000000000000000000000000000000000014806106d457507fffffffff0000000000000000000000000000000000000000000000000000000082167f98c8e09700000000000000000000000000000000000000000000000000000000145b806106e357506106e382611323565b8061072a57503360009081526002602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b92915050565b600080600061073d611312565b9092509050600484106108d9577fffffffff000000000000000000000000000000000000000000000000000000008535167f5fd7e97d000000000000000000000000000000000000000000000000000000008114801561079e575060448510155b156108d7576000806107b460446004898b611bd6565b8101906107c191906121fe565b73ffffffffffffffffffffffffffffffffffffffff80881660009081526001602090815260408083208684529091529020549294509092501680156108d3576000806108108a6004818e611bd6565b81019061081d9190612271565b9350935050508b61082f8686856114eb565b80519060200120036108d0578273ffffffffffffffffffffffffffffffffffffffff166353f00b1489898f898988886040518863ffffffff1660e01b81526004016108809796959493929190612332565b602060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c1919061239d565b9850505050505050505061091f565b50505b5050505b505b61091a828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061159b92505050565b925050505b9392505050565b3361092f611850565b73ffffffffffffffffffffffffffffffffffffffff16146109ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161014b565b60006109b6611850565b90506000805b83811015610a70576000806000610a2d8888868181106109de576109de6123ba565b9050602002013560f881901c15917fffffffffffffffffffffff000000000000000000000000000000000000000000600883901b169173ffffffffffffffffffffffffffffffffffffffff1690565b925092509250610a478683610a4286856118e8565b61193b565b8315610a565793811893610a5a565b8194505b5050508080610a68906123e9565b9150506109bc565b507fffffffff0000000000000000000000000000000000000000000000000000000081811690861614610aff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f696e74657266616365206964206d69736d617463680000000000000000000000604482015260640161014b565b610b0a856001611038565b5050505050565b33610b1a611850565b73ffffffffffffffffffffffffffffffffffffffff1614610b97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161014b565b6000610ba1611850565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600160209081526040808320888452909152902054919250908116908316158015610bfe575073ffffffffffffffffffffffffffffffffffffffff811615155b15610c905773ffffffffffffffffffffffffffffffffffffffff8216600081815260016020908152604080832088845282529182902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590518681527ff1984d1a49cc75dcbf01cd175870cb7eb9a4fd87b538a87007e4dbb0399b61a991015b60405180910390a2610dba565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600160209081526040808320888452909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168583161790558116610d40576040805185815273ffffffffffffffffffffffffffffffffffffffff85811660208301528416917fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c9101610c83565b8173ffffffffffffffffffffffffffffffffffffffff167f06341ac2f62eb79165de8c8b54ab89a8825b12746c2b98e01dff1007837d2ba8858386604051610db19392919092835273ffffffffffffffffffffffffffffffffffffffff918216602084015216604082015260600190565b60405180910390a25b50505050565b33610dc9611850565b73ffffffffffffffffffffffffffffffffffffffff1614610e46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161014b565b6000610e50611850565b90506000805b83811015610f0257610e9083868684818110610e7457610e746123ba565b9050602002016020810190610e899190611e14565b600061193b565b8015610ec657848482818110610ea857610ea86123ba565b9050602002016020810190610ebd9190611e14565b82189150610ef0565b848482818110610ed857610ed86123ba565b9050602002016020810190610eed9190611e14565b91505b80610efa816123e9565b915050610e56565b507fffffffff0000000000000000000000000000000000000000000000000000000081811690861614610f91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f696e74657266616365206964206d69736d617463680000000000000000000000604482015260640161014b565b610b0a856000611038565b33610fa5611850565b73ffffffffffffffffffffffffffffffffffffffff1614611022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161014b565b61103461102d611850565b838361193b565b5050565b33611041611850565b73ffffffffffffffffffffffffffffffffffffffff16146110be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161014b565b337fffffffff00000000000000000000000000000000000000000000000000000000838116900361114b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f696e76616c696420696e74657266616365206964000000000000000000000000604482015260640161014b565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008716845290915290205460ff168280156111ac575080155b1561125b5773ffffffffffffffffffffffffffffffffffffffff821660008181526002602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000089168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055519182527f3d5024c13f12fa602dbf52b1979058940c224ebf170c83a4e358725ae50db36d9101610c83565b821580156112665750805b15610dba5773ffffffffffffffffffffffffffffffffffffffff821660008181526002602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000089168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527ff159d834f487747c1b3f17e2107743e42e6eecff444d894e511c18943072b29f9101610db1565b33600061131d611850565b90509091565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f1626ba7e0000000000000000000000000000000000000000000000000000000014806113b657507fffffffff0000000000000000000000000000000000000000000000000000000082167f62af8dc200000000000000000000000000000000000000000000000000000000145b8061140257507fffffffff0000000000000000000000000000000000000000000000000000000082167f9937293000000000000000000000000000000000000000000000000000000000145b8061144e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f64f95acc00000000000000000000000000000000000000000000000000000000145b8061149a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061072a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e0000000000000000000000000000000000000000000000000000000001492915050565b6060601960f81b600160f81b85858560405160200161150b929190612421565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020918201207fff00000000000000000000000000000000000000000000000000000000000000958616918301919091529290931660218401526022830152604282015260620160405160208183030381529060405290509392505050565b60008061168d8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116109190612447565b60408051602081018890527f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca9101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012090830152016040516020818303038152906040526114eb565b8051602082012084519192509060000361179e576040517f5ae6bd370000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff871690635ae6bd3790602401602060405180830381865afa15801561170c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117309190612447565b600003611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f48617368206e6f7420617070726f766564000000000000000000000000000000604482015260640161014b565b611825565b6040517f934f3a1100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063934f3a11906117f490849086908990600401612460565b60006040518083038186803b15801561180c57600080fd5b505afa158015611820573d6000803e3d6000fd5b505050505b507f1626ba7e0000000000000000000000000000000000000000000000000000000095945050505050565b600060143610156118bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e677468000000000000000000604482015260640161014b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b600082611915577f0100000000000000000000000000000000000000000000000000000000000000611918565b60005b8273ffffffffffffffffffffffffffffffffffffffff161760001b905092915050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452909152902054818316918116821580156119b6575073ffffffffffffffffffffffffffffffffffffffff811615155b15611a465773ffffffffffffffffffffffffffffffffffffffff86166000818152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a1680855290835281842093909355519182527fdba980ab8ee19d95f57ee25cf5a9a7f3d7f950dc6075d5e204fbaaf37e5260aa91015b60405180910390a2611b8c565b73ffffffffffffffffffffffffffffffffffffffff8087166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a16845290915290208590558116611b1057604080517fffffffff00000000000000000000000000000000000000000000000000000000871681526020810186905273ffffffffffffffffffffffffffffffffffffffff8816917f16072a299c25042299e9bb90f6a7b2ccaa8b8fbbceeaa0512f323de45f9d59eb9101611a39565b604080517fffffffff00000000000000000000000000000000000000000000000000000000871681526020810184905290810185905273ffffffffffffffffffffffffffffffffffffffff8716907fe6e8ad7e5547dc860775f9f0638e195a4751a4cfbb7fd2ab60a52eb6c07082ec9060600160405180910390a25b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561072a5761072a611b94565b60008085851115611be657600080fd5b83861115611bf357600080fd5b5050820193919092039150565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611cf557611cf5611c7f565b604052919050565b600067ffffffffffffffff821115611d1757611d17611c7f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015611d5e578181015183820152602001611d46565b50506000910152565b600060208284031215611d7957600080fd5b815167ffffffffffffffff811115611d9057600080fd5b8201601f81018413611da157600080fd5b8051611db4611daf82611cfd565b611cae565b818152856020838501011115611dc957600080fd5b611dda826020830160208601611d43565b95945050505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114611e1157600080fd5b50565b600060208284031215611e2657600080fd5b813561091f81611de3565b73ffffffffffffffffffffffffffffffffffffffff81168114611e1157600080fd5b60008060408385031215611e6657600080fd5b8235611e7181611e31565b91506020830135611e8181611de3565b809150509250929050565b60008083601f840112611e9e57600080fd5b50813567ffffffffffffffff811115611eb657600080fd5b602083019150836020828501011115611ece57600080fd5b9250929050565b600080600080600060808688031215611eed57600080fd5b8535611ef881611e31565b94506020860135611f0881611e31565b935060408601359250606086013567ffffffffffffffff811115611f2b57600080fd5b611f3788828901611e8c565b969995985093965092949392505050565b600080600060408486031215611f5d57600080fd5b83359250602084013567ffffffffffffffff811115611f7b57600080fd5b611f8786828701611e8c565b9497909650939450505050565b60008083601f840112611fa657600080fd5b50813567ffffffffffffffff811115611fbe57600080fd5b6020830191508360208260051b8501011115611ece57600080fd5b600080600060408486031215611fee57600080fd5b8335611ff981611de3565b9250602084013567ffffffffffffffff81111561201557600080fd5b611f8786828701611f94565b6000806040838503121561203457600080fd5b823591506020830135611e8181611e31565b6000806040838503121561205957600080fd5b823561206481611e31565b946020939093013593505050565b6000806040838503121561208557600080fd5b823561206481611de3565b600080604083850312156120a357600080fd5b82356120ae81611de3565b915060208301358015158114611e8157600080fd5b60008060008060008060008060a0898b0312156120df57600080fd5b88356120ea81611e31565b975060208901356120fa81611e31565b9650604089013567ffffffffffffffff8082111561211757600080fd5b6121238c838d01611f94565b909850965060608b013591508082111561213c57600080fd5b6121488c838d01611f94565b909650945060808b013591508082111561216157600080fd5b5061216e8b828c01611e8c565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561219b57600080fd5b86356121a681611e31565b955060208701356121b681611e31565b94506040870135935060608701359250608087013567ffffffffffffffff8111156121e057600080fd5b6121ec89828a01611e8c565b979a9699509497509295939492505050565b6000806040838503121561221157600080fd5b50508035926020909101359150565b600082601f83011261223157600080fd5b813561223f611daf82611cfd565b81815284602083860101111561225457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561228757600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156122ad57600080fd5b6122b988838901612220565b935060608701359150808211156122cf57600080fd5b506122dc87828801612220565b91505092959194509250565b60008151808452612300816020860160208601611d43565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808a16835280891660208401525086604083015285606083015284608083015260e060a083015261237d60e08301856122e8565b82810360c084015261238f81856122e8565b9a9950505050505050505050565b6000602082840312156123af57600080fd5b815161091f81611de3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361241a5761241a611b94565b5060010190565b82815260008251612439816020850160208701611d43565b919091016020019392505050565b60006020828403121561245957600080fd5b5051919050565b83815260606020820152600061247960608301856122e8565b828103604084015261248b81856122e8565b969550505050505056fea2646970667358221220493b6d14b8029fe7885a865ca816f2a40f3ab729e327203eba9eeb3c35b3603064736f6c6343000813003360a060405234801561001057600080fd5b50306080526080516102bd61002f6000396000604f01526102bd6000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100366100313660046101b8565b610038565b005b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201527f7669612064656c656761746563616c6c00000000000000000000000000000000606482015260840160405180910390fd5b805160205b81811015610184578083015160f81c6001820184015160601c60158301850151603584018601516055850187016000856000811461014b576001811461015b57610166565b6000808585888a5af19150610166565b6000808585895af491505b508061017157600080fd5b5050806055018501945050505050610106565b505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156101ca57600080fd5b813567ffffffffffffffff808211156101e257600080fd5b818401915084601f8301126101f657600080fd5b81358181111561020857610208610189565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561024e5761024e610189565b8160405282815287602084870101111561026757600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220a6d256370a2b522196c41eee07d652dab8c37c9361f78e612c6f504c5a5246fa64736f6c63430008130033608060405234801561001057600080fd5b50610450806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a1028c41461003b57806385a5affe14610060575b600080fd5b61004e6100493660046102c0565b610075565b60405190815260200160405180910390f35b61007361006e36600461038f565b61020e565b005b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016100be929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201207ff698da2500000000000000000000000000000000000000000000000000000000845291519193507f1900000000000000000000000000000000000000000000000000000000000000927f010000000000000000000000000000000000000000000000000000000000000092309263f698da2592600480820193918290030181865afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac9190610401565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405280519060200120915050919050565b600061024f83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061007592505050565b600081815260076020526040808220600190555191925082917fe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e49190a2505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102d257600080fd5b813567ffffffffffffffff808211156102ea57600080fd5b818401915084601f8301126102fe57600080fd5b81358181111561031057610310610291565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561035657610356610291565b8160405282815287602084870101111561036f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156103a257600080fd5b823567ffffffffffffffff808211156103ba57600080fd5b818501915085601f8301126103ce57600080fd5b8135818111156103dd57600080fd5b8660208285010111156103ef57600080fd5b60209290920196919550909350505050565b60006020828403121561041357600080fd5b505191905056fea2646970667358221220bfa8bffcabe089b95aaa4083a2f4d68caed76a193c6664ec0a46d95cca6ca3a964736f6c6343000813003360806040523480156200001157600080fd5b5060405162000e1338038062000e13833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b1b80620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610908565b60405180910390f35b6100ff6100fa36600461099d565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046109c7565b6102ac565b604051601281526020016100e3565b6100ff61015136600461099d565b6102d0565b610113610164366004610a03565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a236600461099d565b61032b565b6100ff6101b536600461099d565b610401565b6101136101c8366004610a25565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a58565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a58565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610aab565b61040f565b60606004805461020f90610a58565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610693565b600060208083528351808285015260005b8181101561093557858101830151858201604001528201610919565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461099857600080fd5b919050565b600080604083850312156109b057600080fd5b6109b983610974565b946020939093013593505050565b6000806000606084860312156109dc57600080fd5b6109e584610974565b92506109f360208501610974565b9150604084013590509250925092565b600060208284031215610a1557600080fd5b610a1e82610974565b9392505050565b60008060408385031215610a3857600080fd5b610a4183610974565b9150610a4f60208401610974565b90509250929050565b600181811c90821680610a6c57607f821691505b602082108103610aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122095233dfc39d172723c10236e7dd3a58e549c5e58a0b0b62231dace25dc222bd864736f6c6343000813003360c0604052600d60809081526c2bb930b83832b21022ba3432b960991b60a05260009061002c9082610114565b506040805180820190915260048152630ae8aa8960e31b60208201526001906100559082610114565b506002805460ff1916601217905534801561006f57600080fd5b506101d3565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009f57607f821691505b6020821081036100bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010f57600081815260208120601f850160051c810160208610156100ec5750805b601f850160051c820191505b8181101561010b578281556001016100f8565b5050505b505050565b81516001600160401b0381111561012d5761012d610075565b6101418161013b845461008b565b846100c5565b602080601f831160018114610176576000841561015e5750858301515b600019600386901b1c1916600185901b17855561010b565b600085815260208120601f198616915b828110156101a557888601518255948401946001909101908401610186565b50858210156101c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108c5806101e26000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101ec578063d0e30db0146100bc578063dd62ed3e1461020c576100bc565b8063313ce5671461017e57806370a08231146101aa57806395d89b41146101d7576100bc565b806318160ddd116100a557806318160ddd1461012157806323b872dd1461013e5780632e1a7d4d1461015e576100bc565b806306fdde03146100c6578063095ea7b3146100f1575b6100c4610244565b005b3480156100d257600080fd5b506100db61029f565b6040516100e89190610685565b60405180910390f35b3480156100fd57600080fd5b5061011161010c36600461071a565b61032d565b60405190151581526020016100e8565b34801561012d57600080fd5b50475b6040519081526020016100e8565b34801561014a57600080fd5b50610111610159366004610744565b6103a7565b34801561016a57600080fd5b506100c4610179366004610780565b6105be565b34801561018a57600080fd5b506002546101989060ff1681565b60405160ff90911681526020016100e8565b3480156101b657600080fd5b506101306101c5366004610799565b60036020526000908152604090205481565b3480156101e357600080fd5b506100db610664565b3480156101f857600080fd5b5061011161020736600461071a565b610671565b34801561021857600080fd5b506101306102273660046107b4565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610263908490610816565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102ac90610829565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610829565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103959086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120548211156103d957600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416331480159061044f575073ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156104d75773ffffffffffffffffffffffffffffffffffffffff8416600090815260046020908152604080832033845290915290205482111561049157600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152812080548492906104d190849061087c565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000908152600360205260408120805484929061050c90849061087c565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054849290610546908490610816565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105ac91815260200190565b60405180910390a35060019392505050565b336000908152600360205260409020548111156105da57600080fd5b33600090815260036020526040812080548392906105f990849061087c565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561062b573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102ac90610829565b600061067e3384846103a7565b9392505050565b600060208083528351808285015260005b818110156106b257858101830151858201604001528201610696565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461071557600080fd5b919050565b6000806040838503121561072d57600080fd5b610736836106f1565b946020939093013593505050565b60008060006060848603121561075957600080fd5b610762846106f1565b9250610770602085016106f1565b9150604084013590509250925092565b60006020828403121561079257600080fd5b5035919050565b6000602082840312156107ab57600080fd5b61067e826106f1565b600080604083850312156107c757600080fd5b6107d0836106f1565b91506107de602084016106f1565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103a1576103a16107e7565b600181811c9082168061083d57607f821691505b602082108103610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b818103818111156103a1576103a16107e756fea264697066735822122074b5e91e69ab264715d7a1a3de6308139bc78b2b2e546719eaa046ab0e16a22964736f6c63430008130033",
    "sourceMap": "107:19409:159:-:0;;;1572:26:73;;;1594:4;-1:-1:-1;;1572:26:73;;;;;;;;3288:44:77;;;;;;;;;;;107:19409:159;;;;;;;;;;1106:10:162;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1094:9:162;:22;;-1:-1:-1;;;;;;1094:22:162;-1:-1:-1;;;;;1094:22:162;;;;;;;;;;1136;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1126:7:162;:32;;-1:-1:-1;;;;;;1126:32:162;-1:-1:-1;;;;;1126:32:162;;;;;;;;;;1178:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1168:7:162;:44;;-1:-1:-1;;;;;;1168:44:162;-1:-1:-1;;;;;1168:44:162;;;;;;;;;;1272:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1261:8:162;:42;;-1:-1:-1;;;;;;1261:42:162;-1:-1:-1;;;;;1261:42:162;;;;;;;;;;1325:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1313:9:162;:27;;-1:-1:-1;;;;;;1313:27:162;-1:-1:-1;;;;;1313:27:162;;;;;;;;;;1367:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1350:14:162;:37;;-1:-1:-1;;;;;;1350:37:162;-1:-1:-1;;;;;1350:37:162;;;;;;;;;;815:30:163;;;;;:::i;:::-;317:2:168;299:21;;;356:1;336:18;;;329:29;-1:-1:-1;;;389:2:168;374:18;;367:37;442:3;435:4;420:20;;413:33;;;483:1;462:19;;;455:30;-1:-1:-1;;;516:3:168;501:19;;494:33;559:3;544:19;815:30:163;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;791:6:163;:56;;-1:-1:-1;;;;;;791:56:163;-1:-1:-1;;;;;791:56:163;;;;;;;;;;881:30;;;;;:::i;:::-;877:2:168;859:21;;;916:1;896:18;;;889:29;-1:-1:-1;;;949:2:168;934:18;;927:37;1002:3;995:4;980:20;;973:33;;;1043:1;1022:19;;;1015:30;-1:-1:-1;;;1076:3:168;1061:19;;1054:33;1119:3;1104:19;881:30:163;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;857:6:163;:56;;-1:-1:-1;;;;;;857:56:163;-1:-1:-1;;;;;857:56:163;;;;;;;;;;947:30;;;;;:::i;:::-;1437:2:168;1419:21;;;1476:1;1456:18;;;1449:29;-1:-1:-1;;;1509:2:168;1494:18;;1487:37;1562:3;1555:4;1540:20;;1533:33;;;1603:1;1582:19;;;1575:30;-1:-1:-1;;;1636:3:168;1621:19;;1614:33;1679:3;1664:19;947:30:163;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;923:6:163;:56;;-1:-1:-1;;;;;;923:56:163;-1:-1:-1;;;;;923:56:163;;;;;;;;;;1331:11:161;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1324:4:161;:18;;-1:-1:-1;;;;;;1324:18:161;-1:-1:-1;;;;;1324:18:161;;;;;;;;;;107:19409:159;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1134:555:168:-;107:19409:159;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "107:19409:159:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;241:116;;;:::i;:::-;;16807:656;;;;;;:::i;:::-;;:::i;531:17:153:-;;;;;-1:-1:-1;;;;;531:17:153;;;;;;-1:-1:-1;;;;;2672:55:168;;;2654:74;;2642:2;2627:18;531:17:153;;;;;;;;688:20:163;;;;;-1:-1:-1;;;;;688:20:163;;;1560:74:154;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2161:134:80:-;;;:::i;:::-;;;;;;;:::i;740:20:163:-;;;;;-1:-1:-1;;;;;740:20:163;;;963:26:162;;;;;-1:-1:-1;;;;;963:26:162;;;1232:1505:159;;;:::i;987:253:92:-;;;;;;:::i;:::-;;:::i;:::-;;;6557:25:168;;;6545:2;6530:18;987:253:92;6411:177:168;2998:158:154;;;:::i;15821:887:159:-;;;;;;:::i;:::-;;:::i;3143:1579::-;;;:::i;11738:1028::-;;;;;;:::i;:::-;;:::i;412:157::-;;;;;;:::i;:::-;;:::i;2930:133:80:-;;;:::i;2631:141::-;;;:::i;1077:17:161:-;;;;;-1:-1:-1;;;;;1077:17:161;;;1164:32;;;;;-1:-1:-1;;;;;1164:32:161;;;452:451:92;;;;;;:::i;:::-;;:::i;:::-;;;9159:14:168;;9152:22;9134:41;;9122:2;9107:18;452:451:92;8994:187:168;2447:178:80;;;:::i;:::-;;;;;;;:::i;6178:1011:159:-;;;;;;:::i;:::-;;:::i;508:17:153:-;;;;;-1:-1:-1;;;;;508:17:153;;;7556:1525:159;;;:::i;1271:22:161:-;;;;;-1:-1:-1;;;;;1271:22:161;;;2301:140:80;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;12852:2075:159:-;;;;;;:::i;:::-;;:::i;5354:754::-;;;;;;:::i;:::-;;:::i;916:41:162:-;;;;;-1:-1:-1;;;;;916:41:162;;;9161:1260:159;;;:::i;15027:702::-;;;:::i;18565:949::-;;;:::i;17523:959::-;;;:::i;485:17:153:-;;;;;-1:-1:-1;;;;;485:17:153;;;575:251:159;;;;;;:::i;:::-;;:::i;1866:141:80:-;;;:::i;803:21:162:-;;;;;-1:-1:-1;;;;;803:21:162;;;2718:190:154;;;:::i;1246:1168:92:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:584:73:-;;;:::i;830:31:162:-;;;;;-1:-1:-1;;;;;830:31:162;;;867:43;;;;;-1:-1:-1;;;;;867:43:162;;;5179:952:92;;;;;;:::i;:::-;;:::i;1100:29:161:-;;;;;-1:-1:-1;;;;;1100:29:161;;;714:20:163;;;;;-1:-1:-1;;;;;714:20:163;;;407:409:91;;;;;;:::i;:::-;;:::i;4794:490:159:-;;;:::i;995:36:162:-;;;;;-1:-1:-1;;;;;995:36:162;;;2013:142:80;;;:::i;3606:1421:92:-;;;;;;:::i;:::-;;:::i;10468:1216:159:-;;;;;;:::i;:::-;;:::i;1572:26:73:-;;;;;;;;;1135:23:161;;;;;-1:-1:-1;;;;;1135:23:161;;;241:116:159;337:13;:11;:13::i;:::-;241:116::o;16807:656::-;17065:163;;;;;;;;-1:-1:-1;;;;;17065:163:159;;;;;;;;;;;;;;;;17298:60;;;;;17314:43;17298:60;;;16549:98:168;17298:15:159;;;;16522:18:168;;17298:60:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17368:13:159;;17428:9;;;;;;;;;-1:-1:-1;17428:9:159;;;17439:16;;;;;;;;;;;;17368:88;;;;-1:-1:-1;;;;;17368:13:159;;;;-1:-1:-1;17368:44:159;;-1:-1:-1;17368:88:159;;17413:5;;17420:6;;17428:9;17368:88;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17368:88:159;;;;;;;;;;;;:::i;:::-;;;16998:465;16807:656;;;;:::o;1560:74:154:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1560:74:154;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2161:134:80:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:80;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1232:1505:159:-;1347:5;;1277:57;;1337:20;;-1:-1:-1;;;;;1347:5:159;1354:2;1337:9;:20::i;:::-;1277:80;-1:-1:-1;1368:12:159;;;1476:53;1277:80;1368:12;1503:6;1511:7;1520:8;1476:23;:53::i;:::-;1617:54;;;;;1633:37;1617:54;;;16549:98:168;1367:162:159;;-1:-1:-1;1367:162:159;;-1:-1:-1;1367:162:159;-1:-1:-1;1617:15:159;;;;16522:18:168;;1617:54:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1681:13:159;;1734:5;;1750:9;;;;;;;;-1:-1:-1;1750:9:159;;1681:86;;;;;-1:-1:-1;;;;;1681:13:159;;;;-1:-1:-1;1681:44:159;;-1:-1:-1;1681:86:159;;1734:5;;;;1742:6;;1750:9;1761:5;;1681:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1681:86:159;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1860:44:159;;;;;;;;1819:38;1860:44;;;;;;;;;;;;;;;;;;;;;;1931:5;;1914:43;;-1:-1:-1;;;;;1931:5:159;1939:4;1860:44;1914:8;:43::i;:::-;2087:13;;2140:5;;2156:9;;;;;;;;-1:-1:-1;2156:9:159;;;2087:86;;;;;-1:-1:-1;;;;;;;;;2087:13:159;;;;:44;;:86;;2140:5;;;;2148:6;;2167:5;;2087:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2087:86:159;;;;;;;;;;;;:::i;:::-;2019:154;;;;2210:16;317:28:74;309:37;;-1:-1:-1;;;;;2229:11:159;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2317:5;;2302:56;;;;;;;;;2325:3;2302:56;-1:-1:-1;;;;;2302:56:159;;;;;;;;;;;2210:32;;-1:-1:-1;2302:56:159;;2317:5;;;;2330;2337:9;2317:5;2302:6;:56::i;:::-;2398:21;;;;;;;;6557:25:168;;;2398:11:159;;;;6530:18:168;;2398:21:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2481:5:159;;2464:49;;-1:-1:-1;;;;;2481:5:159;;2501:11;2464:8;:49::i;:::-;2580:54;;;;;2596:37;2580:54;;;16549:98:168;2580:15:159;;;;16522:18:168;;2580:54:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2644:13:159;;2697:5;;2713:9;;;;;;;;-1:-1:-1;2713:9:159;;2644:86;;;;;-1:-1:-1;;;;;2644:13:159;;;;-1:-1:-1;2644:44:159;;-1:-1:-1;2644:86:159;;2697:5;;;;2705:6;;2713:9;2724:5;;2644:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2644:86:159;;;;;;;;;;;;:::i;:::-;;;1267:1470;;;;;;;;1232:1505::o;987:253:92:-;1048:7;1089:1;1075:4;:11;:15;1067:63;;;;;;;21265:2:168;1067:63:92;;;21247:21:168;21304:2;21284:18;;;21277:30;21343:34;21323:18;;;21316:62;21414:5;21394:18;;;21387:33;21437:19;;1067:63:92;;;;;;;;;1160:1;1146:4;:11;:15;1140:70;;;1184:15;1194:4;1184:9;:15::i;:::-;1177:22;;1140:70;;;1226:4;1231:1;1226:7;;;;;;;;:::i;:::-;;;;;;;1219:14;;987:253;;;:::o;2998:158:154:-;3087:13;;:31;;;;;;;;3078:71;;-1:-1:-1;;;;;3087:13:154;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3120:10;;;;;;;;;-1:-1:-1;;;;;3120:10:154;-1:-1:-1;;;;;3120:26:154;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3078:8;:71::i;15821:887:159:-;16143:12;;16133:27;;;;;16143:16;;;16133:27;;;9134:41:168;16133:9:159;;;;9107:18:168;;16133:27:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16171:54;16228:163;;;;;;;;16310:7;-1:-1:-1;;;;;16228:163:159;;;;;16338:4;16228:163;;;;16369:11;16228:163;;;16171:220;;16433:67;16442:5;16449:4;16455:44;;;;;;;;16486:1;16455:44;;;;;;;;;;;;;;;;;;;16433:8;:67::i;:::-;16560:54;;;;;16576:37;16560:54;;;16549:98:168;16560:15:159;;;;16522:18:168;;16560:54:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16624:13:159;;16684:9;;;;;;;;16624:13;16684:9;;16624:77;;;;;-1:-1:-1;;;;;16624:13:159;;;;-1:-1:-1;16624:44:159;;-1:-1:-1;16624:77:159;;16669:5;;16676:6;;16695:5;;16624:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16624:77:159;;;;;;;;;;;;:::i;:::-;;;16060:648;15821:887;;;;;;:::o;3143:1579::-;3269:5;;3199:57;;3259:20;;-1:-1:-1;;;;;3269:5:159;3276:2;3259:9;:20::i;:::-;3199:80;-1:-1:-1;3290:12:159;;;3398:53;3199:80;3290:12;3425:6;3433:7;3442:8;3398:23;:53::i;:::-;3539:54;;;;;3555:37;3539:54;;;16549:98:168;3289:162:159;;-1:-1:-1;3289:162:159;;-1:-1:-1;3289:162:159;-1:-1:-1;3539:15:159;;;;16522:18:168;;3539:54:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3603:13:159;;3656:5;;3672:9;;;;;;;;-1:-1:-1;3672:9:159;;3603:86;;;;;-1:-1:-1;;;;;3603:13:159;;;;-1:-1:-1;3603:44:159;;-1:-1:-1;3603:86:159;;3656:5;;;;3664:6;;3672:9;3683:5;;3603:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3603:86:159;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3782:44:159;;;;;;;;3741:38;3782:44;;;;;;;;;;;;;;;;;;3864:5;;3891:16;;3909:32;;3782:44;;3836:106;;-1:-1:-1;;;;;3864:5:159;;;;3872:4;;3782:44;;3891:16;;3909:32;;3920:20;;3909:32;6557:25:168;;;6545:2;6530:18;;6411:177;3909:32:159;;;;;;;;;;;;;3836:19;:106::i;11738:1028::-;11929:32;;;;;-1:-1:-1;;;;;11939:21:159;;;;11929:32;;;9134:41:168;11929:9:159;;;;9107:18:168;;11929:32:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12029:163:159;;;;;;;;-1:-1:-1;;;;;12029:163:159;;;;;;;;;;;;;;;;12262:60;;;;;12278:43;12262:60;;;16549:98:168;12029:163:159;;-1:-1:-1;12262:15:159;;-1:-1:-1;12262:15:159;;16522:18:168;;12262:60:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12332:13:159;;-1:-1:-1;;;;;12332:13:159;;-1:-1:-1;12332:34:159;;-1:-1:-1;12393:5:159;12332:13;12459:32;12505:34;12332:13;12611:15;:13;:15::i;:::-;12600:27;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12600:27:159;;;;;;-1:-1:-1;12652:96:159;;;12688:16;;;;;;;;12652:96;;-1:-1:-1;;;;12652:96:159;;;12737:9;;;;;;;;;;12652:96;;;;;;;12641:108;;12600:27;;12641:108;;12600:27;;12641:108;;:::i;:::-;;;;;;;;;;;;;12332:427;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11919:847;11738:1028;;;;:::o;412:157::-;495:67;504:5;511:4;517:44;;;;;;;;548:1;517:44;;;;;;;;;;;;;;;;;;;495:8;:67::i;:::-;412:157;;:::o;2930:133:80:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:80;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:80;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;452:451:92:-;690:12;;556:4;;651:12;;556:4;736:115;756:6;752:1;:10;736:115;;;800:36;814:11;827:5;833:1;827:8;;;;;;;;:::i;:::-;;;;;;;800:13;:36::i;:::-;786:50;-1:-1:-1;764:3:92;;736:115;;;-1:-1:-1;;877:19:92;;;;452:451;-1:-1:-1;;;452:451:92:o;2447:178:80:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;6178:1011:159:-;6432:32;;;;;-1:-1:-1;;;;;6442:21:159;;;;6432:32;;;9134:41:168;6432:9:159;;;;9107:18:168;;6432:32:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6475:54;6532:163;;;;;;;;6614:7;-1:-1:-1;;;;;6532:163:159;;;;;6642:4;6532:163;;;;6673:11;6532:163;;;6475:220;;6705:17;6746:6;6735:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6735:18:159;;;;;;;6725:29;;6735:18;6725:29;;;;6808:13;;:44;;;-1:-1:-1;;;;;25768:55:168;;;6808:44:159;;;25750:74:168;25840:18;;;25833:34;;;6725:29:159;;-1:-1:-1;6799:61:159;;6808:13;;;:26;;25723:18:168;;6808:44:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6854:5;6799:8;:61::i;:::-;6933:16;;6951:20;;;;;;6557:25:168;;;6899:79:159;;6918:5;;6925:6;;-1:-1:-1;;;;;6933:16:159;;;;6530:18:168;6951:20:159;;;;;;;;;;;;6973:4;6899:18;:79::i;:::-;7071:13;;:39;;;;;-1:-1:-1;;;;;25768:55:168;;;7071:39:159;;;25750:74:168;25840:18;;;25833:34;;;7062:59:159;;7071:13;;:21;;25723:18:168;;7071:39:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7112:8;7062;:59::i;:::-;7160:22;7168:5;7175:6;7160:7;:22::i;7556:1525::-;7676:5;;7609:54;;7666:19;;-1:-1:-1;;;;;7676:5:159;;7666:9;:19::i;:::-;7686:1;7666:22;;;;;;;;:::i;:::-;;;;;;;7609:79;;7840:22;7879:1;7865:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7865:16:159;;7840:41;;7891:17;7932:6;7921:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;7921:18:159;;;;;;;7911:29;;7921:18;7911:29;;;;7994:13;;8029:5;;7994:53;;;-1:-1:-1;;;;;8029:5:159;;;7994:53;;;25750:74:168;25840:18;;;25833:34;;;7911:29:159;;-1:-1:-1;7985:70:159;;7994:13;;;:26;;25723:18:168;;7994:53:159;25576:297:168;7985:70:159;8133:60;;;;;8149:43;8133:60;;;16549:98:168;8133:15:159;;;;16522:18:168;;8133:60:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8203:13:159;;8256:5;;8272:9;;;;;;;;-1:-1:-1;8272:9:159;;8203:86;;;;;-1:-1:-1;;;;;8203:13:159;;;;-1:-1:-1;8203:44:159;;-1:-1:-1;8203:86:159;;8256:5;;;;8264:6;;8272:9;8283:5;;8203:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8203:86:159;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;8348:5:159;;8332:37;;-1:-1:-1;;;;;8348:5:159;8356:6;8348:5;8332:7;:37::i;:::-;8406:16;317:28:74;309:37;;-1:-1:-1;;;;;8425:11:159;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8570;;8623:5;;8639:9;;;;;;;;8503:27;8639:9;;;8570:86;;;;;8406:32;;-1:-1:-1;8503:27:159;;;;-1:-1:-1;;;;;8570:13:159;;;;:44;;:86;;8623:5;;;;;8631:6;;8650:5;;8570:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8570:86:159;;;;;;;;;;;;:::i;:::-;8730:5;;8715:56;;;;;;;;;8738:3;8715:56;-1:-1:-1;;;;;8715:56:159;;;;;;;;;;;8502:154;;-1:-1:-1;8502:154:159;;-1:-1:-1;8715:56:159;;8730:5;;8502:154;;8730:5;8715:6;:56::i;:::-;8812:21;;;;;;;;6557:25:168;;;8812:11:159;;;;6530:18:168;;8812:21:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8892:5:159;;8876:31;;-1:-1:-1;;;;;8892:5:159;8900:6;8876:7;:31::i;:::-;8999:5;;8984:90;;;;;;;;;9007:3;8984:90;-1:-1:-1;;;;;8984:90:159;;;;;;;;;;;;;8999:5;;9012;9019:9;9030:43;8984:6;:90::i;2301:140:80:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12852:2075:159;13137:175;;;;;;;;13219:6;;-1:-1:-1;;;;;13219:6:159;13137:175;;13246:19;13137:175;;;;;;;;13292:9;;;;;;;13080:54;13292:9;;;13137:175;;;;;13363:29;;13371:5;;13137:175;;13363:7;:29::i;:::-;13432:27;13462:15;:13;:15::i;:::-;13516:9;;;;;;;;;13487:26;13516:9;;;13664:13;;13836:17;;13432:45;;-1:-1:-1;13516:9:159;;13487:26;;-1:-1:-1;;;;;13664:13:159;;:34;;13751:5;;13487:26;;13836:17;;13432:45;;13836:17;;:::i;:::-;;;;;;;;;;;;;13826:28;;;;;;13872:15;13913:1;13905:10;;13967:5;13956:17;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13956:17:159;;;;;;-1:-1:-1;14023:100:159;;;14059:16;;;;;;;;14023:100;;-1:-1:-1;;;;14023:100:159;;;;;;;;;13991:154;;13956:17;;13991:154;;13956:17;;13991:154;;:::i;:::-;;;;-1:-1:-1;;13991:154:159;;;;;;;;;;13636:533;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13636:533:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;14230:13;;14222:31;;13636:533;;-1:-1:-1;;;;;;;;;;;14230:13:159;;14222:31;;13636:533;;14222:31;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14180:73;;;;14330:20;14342:7;14341:8;14330:10;:20::i;:::-;14450:470;14472:10;14536:33;;;14587:5;14618:1;14680:5;14669:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;14659:28;;;;;;14705:15;14759:6;14748:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;14738:29;;;;;;14824:6;:18;;;14860:13;14891:5;14496:414;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14496:414:159;;;;;;;;;;;;;;;;;;;;;;;;;;;14450:8;:470::i;:::-;12961:1966;;;;;;12852:2075;;:::o;5354:754::-;5545:32;;;;;-1:-1:-1;;;;;5555:21:159;;;;5545:32;;;9134:41:168;5545:9:159;;;;9107:18:168;;5545:32:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5588:54;5645:163;;;;;;;;5727:7;-1:-1:-1;;;;;5645:163:159;;;;;5755:4;5645:163;;;;5786:11;5645:163;;;5588:220;;5818:17;5859:6;5848:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;5848:18:159;;;;;;;5838:29;;5848:18;5838:29;;;;5921:13;;:44;;;-1:-1:-1;;;;;25768:55:168;;;5921:44:159;;;25750:74:168;25840:18;;;25833:34;;;5838:29:159;;-1:-1:-1;5912:61:159;;5921:13;;;:26;;25723:18:168;;5921:44:159;25576:297:168;5912:61:159;6012:28;6020:5;6027:6;6035:4;6012:7;:28::i;:::-;6079:22;6087:5;6094:6;6079:7;:22::i;9161:1260::-;9256:54;9313:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;7543:11:154;;7589:9;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;7235:163:154;;;;;;;-1:-1:-1;;;;;7543:11:154;7235:163;;7556:31;7235:163;;;;;;;;;;;;6260:146;9313:21:159;9388:5;:10;9256:78;;-1:-1:-1;9380:34:159;;-1:-1:-1;;;;;9388:10:159;9256:78;9388:10;9380:7;:34::i;:::-;9465:28;9496:15;:13;:15::i;:::-;9465:46;;9521:28;9552:40;9572:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6528:464:154;;;;;;;;-1:-1:-1;6528:464:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6815:19;6528:464;;;;;;;;6904:23;6528:464;;;;;;;;;;;6412:587;9552:40:159;9521:71;;9772:23;9798:13;;;;;;;;;-1:-1:-1;;;;;9798:13:159;-1:-1:-1;;;;;9798:29:159;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9975:12;;;;;;;;;;;;;;;;9910:78;;9772:57;;-1:-1:-1;9894:15:159;;;;9933:40;;9910:78;;9975:12;9910:78;;;:::i;:::-;;;;-1:-1:-1;;9910:78:159;;;;;;;;;;;;;;;;;;;;;;;9894:95;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9999:13:159;;10068:5;:10;-1:-1:-1;;;;;9999:13:159;;;;-1:-1:-1;9999:34:159;;-1:-1:-1;10068:10:159;9999:13;10119:39;10134:6;10142:15;-1:-1:-1;;5434:14:63;;;5473:16;;5520:9;5502:28;;5578:3;5557:25;;5595:23;;6176:4;6170:11;6220:10;6194:37;;6274:1;6251:25;;6244:50;;;;6337:2;6314:26;;6307:46;6410:2;6381:32;;;4840:1589;10119:39:159;10172:15;10209:1;10201:10;;10236:6;10225:18;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10225:18:159;;;;;;-1:-1:-1;10285:105:159;;;10321:16;;;;;;;;10285:105;;-1:-1:-1;;;;10285:105:159;;;10370:18;;10225;;;10285:105;;;10370:18;;10381:6;;10370:18;;:::i;:::-;;;;-1:-1:-1;;10370:18:159;;;;;;;;;10285:105;;10257:147;;;;10370:18;10257:147;;:::i;:::-;;;;;;;;;;;;;9999:415;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9246:1175;;;;9161:1260::o;15027:702::-;15247:156;;;;;;;;15311:6;;-1:-1:-1;;;;;15311:6:159;;;15247:156;;15337:19;15247:156;;;;;;;;15383:9;;;;;;;15190:54;15383:9;;;15247:156;;;;15462:5;:10;15247:156;;15454:34;;15462:10;;;;15247:156;;15454:7;:34::i;:::-;15558:61;;;;;15574:44;15558:61;;;16549:98:168;15558:15:159;;;;16522:18:168;;15558:61:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15629:13:159;;15674:5;:10;15694:9;;;;;;;;;-1:-1:-1;15694:9:159;;;15705:16;;;;;;;;;;;;15629:93;;;;-1:-1:-1;;;;;15629:13:159;;;;-1:-1:-1;15629:44:159;;-1:-1:-1;15629:93:159;;15674:10;;;;15686:6;;15629:93;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15629:93:159;;;;;;;;;;;;:::i;:::-;;;15109:620;15027:702::o;18565:949::-;18783:13;;18753:45;;18725:25;;-1:-1:-1;;;;;18783:13:159;;18753:45;;;:::i;:::-;-1:-1:-1;;;;;2672:55:168;;;2654:74;;2642:2;2627:18;18753:45:159;;;;;;;;;;;;;;;;;;;;;;;18725:73;;18808:54;18865:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;7543:11:154;;7589:9;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;7235:163:154;;;;;;;-1:-1:-1;;;;;7543:11:154;7235:163;;7556:31;7235:163;;;;;;;;;;;;6260:146;18865:21:159;18808:78;;18937:40;18953:7;18963:6;18971:5;18937:7;:40::i;:::-;19097:13;;19042:27;;;;-1:-1:-1;;;;;19097:13:159;:44;19163:7;19173:6;19192:15;:13;:15::i;:::-;19181:27;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19181:27:159;;;;;;19224:1;19210:16;;;;;;;;;19097:139;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19097:139:159;;;;;;;;;;;;:::i;:::-;19041:195;;;;19337:170;19359:7;-1:-1:-1;;;;;19359:24:159;;19384:54;19399:5;19406:13;;;;;;;;;-1:-1:-1;;;;;19406:13:159;-1:-1:-1;;;;;19406:29:159;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5434:14:63;;;5473:16;;5520:9;5502:28;;5578:3;5557:25;;5595:23;;6176:4;6170:11;6220:10;6194:37;;6274:1;6251:25;;6244:50;;;;6337:2;6314:26;;6307:46;6410:2;6381:32;;;4840:1589;19384:54:159;19440:9;19359:91;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19337:170;;19464:33;19337:8;:170::i;:::-;18649:865;;;;18565:949::o;17523:959::-;17720:54;17777:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;7543:11:154;;7589:9;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;7235:163:154;;;;;;;-1:-1:-1;;;;;7543:11:154;7235:163;;7556:31;7235:163;;;;;;;;;;;;6260:146;17777:21:159;17865:5;;17720:78;;-1:-1:-1;17849:38:159;;-1:-1:-1;;;;;17865:5:159;17720:78;17865:5;17849:7;:38::i;:::-;18007:13;;18073:5;;17952:27;;;;-1:-1:-1;;;;;18007:13:159;;;;:44;;18073:5;18081:6;18100:15;:13;:15::i;:::-;18089:27;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18089:27:159;;;;;;18132:1;18118:16;;;;;;;;;18007:137;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18007:137:159;;;;;;;;;;;;:::i;:::-;18297:5;;18361:13;;:31;;;;;;;;17951:193;;-1:-1:-1;17951:193:159;;-1:-1:-1;18241:234:159;;-1:-1:-1;;;;;18297:5:159;;;;18263:58;;18339:54;;17951:193;;18361:13;;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;575:251;729:44;;;;;;;;-1:-1:-1;729:44:159;;;;;;;;;;;;;;;;;;775:16;;793;;;;;6557:25:168;;;683:136:159;;716:5;;723:4;;729:44;;-1:-1:-1;;;;;775:16:159;;6530:18:168;793:16:159;6411:177:168;1866:141:80;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2718:190:154;2814:8;;2839:5;;2846:10;;:28;;;;;;;;2797:104;;-1:-1:-1;;;;;2814:8:154;;;;:24;;2839:5;;;;2846:10;;;:26;;:28;;;;;;;;;;;;;;;:10;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2814:61;;;;;;;;;;-1:-1:-1;;;;;25768:55:168;;;2814:61:154;;;25750:74:168;25840:18;;;25833:34;25723:18;;2814:61:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2886:13;;-1:-1:-1;;;;;2886:13:154;2797:8;:104::i;1246:1168:92:-;1322:16;1372:1;1358:4;:11;:15;1350:64;;;;;;;28698:2:168;1350:64:92;;;28680:21:168;28737:2;28717:18;;;28710:30;28776:34;28756:18;;;28749:62;28847:6;28827:18;;;28820:34;28871:19;;1350:64:92;28496:400:168;1350:64:92;1501:23;1541:29;1558:4;:11;1541:16;:29::i;:::-;1527:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1527:44:92;;1501:70;;1581:11;1910:475;1930:1;1916:4;:11;:15;1910:475;;;1978:4;1985:3;1978:10;1992:1;1978:15;1975:300;;2031:4;2043:1;2036:4;:8;2031:14;;;;;;;;:::i;:::-;;;;;;;2017:6;2024:3;2017:11;;;;;;;;:::i;:::-;;;;;;:28;;;;;1975:300;;;2103:4;:11;2091:4;2098:1;2091:8;:23;2087:188;;2160:1;2152:10;;2138:6;2145:3;2138:11;;;;;;;;:::i;2087:188::-;2242:4;2247;2254:1;2247:8;2242:14;;;;;;;;:::i;:::-;;;;;;;2228:6;2235:3;2228:11;;;;;;;;:::i;:::-;;;;;;:28;;;;;2087:188;2292:5;;2323:1;2315:9;;;;2359:15;2369:4;2359:9;:15::i;:::-;2352:22;;1910:475;;;-1:-1:-1;2401:6:92;-1:-1:-1;1246:1168:92;;;;;:::o;1819:584:73:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:73;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;25750:74:168;;;2221:17:73;25840:18:168;;;25833:34;2196:43:73;;;;;;;;;25723:18:168;;;2196:43:73;;;-1:-1:-1;;1671:64:73;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:73;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:73:o;5179:952:92:-;5237:7;5264:1;5259;:6;5255:45;;-1:-1:-1;5288:1:92;;5179:952;-1:-1:-1;5179:952:92:o;5255:45::-;5309:11;5347:1;5367:6;5362:11;;5358:75;;5395:3;5389:9;;;;5412:10;;;;:::i;:::-;;;5358:75;5451:5;5446:1;:10;5442:72;;5478:2;5472:8;;;;5494:9;;;;:::i;:::-;;;5442:72;5532:5;5527:1;:10;5523:72;;5559:2;5553:8;;;;5575:9;;;;:::i;:::-;;;5523:72;5613:5;5608:1;:10;5604:72;;5640:2;5634:8;;;;5656:9;;;;:::i;:::-;;;5604:72;5694:4;5689:1;:9;5685:69;;5720:1;5714:7;;;;5735:8;;;;:::i;:::-;;;5685:69;5772:4;5767:1;:9;5763:69;;5798:1;5792:7;;;;5813:8;;;;:::i;:::-;;;5763:69;5850:4;5845:1;:9;5841:69;;5876:1;5870:7;;;;5891:8;;;;:::i;:::-;;;5841:69;5928:4;5923:1;:9;5919:48;;5948:8;5955:1;5948:8;;:::i;:::-;;;5919:48;5977:11;6003:2;5992:7;:3;;5998:1;5992:7;:::i;:::-;5991:14;5977:28;;6027:2;6020:3;:9;6019:24;;;;;6041:1;6035:3;:7;6019:24;6015:110;;;-1:-1:-1;6066:3:92;;5179:952;-1:-1:-1;;;5179:952:92:o;6015:110::-;6107:7;:3;6113:1;6107:7;:::i;:::-;6100:14;5179:952;-1:-1:-1;;;;;5179:952:92:o;407:409:91:-;489:13;542:15;;;569:89;;;;707:4;702:3;695:17;741:5;735:4;728:19;535:225;;569:89;605:5;600:3;593:18;640:4;634;627:18;535:225;-1:-1:-1;;796:4:91;791:3;781:20;;407:409;-1:-1:-1;;407:409:91:o;4794:490:159:-;4914:189;;;;;;;;-1:-1:-1;4914:189:159;;;5027:36;4914:189;;;;;;;;;;;;;;;;;;;;;;5114:54;;;;;5130:37;5114:54;;;16549:98:168;5114:15:159;;;;16522:18:168;;5114:54:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5243:13:159;;:34;;;;;-1:-1:-1;;;;;5243:13:159;;;;-1:-1:-1;5243:20:159;;-1:-1:-1;5243:34:159;;5264:6;;5243:13;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142:80;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:80;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;3606:1421:92:-;3656:7;;4677:6;;4685:1;4673:14;4669:22;;4666:29;;4873:78;4880:5;;4873:78;;4911:1;4905:7;;;;4930:6;;;;;4873:78;;;4964:12;;;3606:1421;-1:-1:-1;;3606:1421:92:o;10468:1216:159:-;10780:12;;10770:27;;;;;10780:16;;;10770:27;;;9134:41:168;10770:9:159;;;;9107:18:168;;10770:27:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10808:54;10865:163;;;;;;;;10947:7;-1:-1:-1;;;;;10865:163:159;;;;;10975:4;10865:163;;;;11006:11;10865:163;;;10808:220;;11070:67;11079:5;11086:4;11092:44;;;;;;;;11123:1;11092:44;;;;;;;;;;;;;;;;;;;11070:8;:67::i;:::-;11197:54;;;;;11213:37;11197:54;;;16549:98:168;11197:15:159;;;;16522:18:168;;11197:54:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11261:13:159;;-1:-1:-1;;;;;11261:13:159;;-1:-1:-1;11261:34:159;;-1:-1:-1;11322:5:159;11261:13;11388:32;11434:34;11261:13;11540:15;:13;:15::i;:::-;11529:27;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11529:27:159;;;;;;11581:85;;;;;;;;11529:27;11581:85;;;;;;11655:9;;;;;;;-1:-1:-1;11655:9:159;;11581:85;;;;11570:97;;11529:27;;11570:97;;11529:27;;11570:97;;:::i;:::-;;;;;;;;;;;;;11261:416;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1641:955:154:-;1720:13;:11;:13::i;:::-;1819:10;;1793:38;;-1:-1:-1;;;;;1819:10:154;;;;1793:38;;;:::i;:::-;-1:-1:-1;;;;;2672:55:168;;;2654:74;;2642:2;2627:18;1793:38:154;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1777:13:154;:54;;;;-1:-1:-1;;;;;1777:54:154;;;;;;2040:5;;2152:10;;:28;;;;;;;;2005:279;;2040:5;;;;-1:-1:-1;;2115:35:154;;2152:10;;;:26;;:28;;;;;;;;;;;;;;;:10;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2190:13;;2075:143;;;;;30409:25:168;;;;-1:-1:-1;;;;;2190:13:154;30450:18:168;;;30443:83;30382:18;;2075:143:154;;;-1:-1:-1;;2075:143:154;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2265:9:154;:7;:9::i;:::-;2005:5;;-1:-1:-1;;;;;2005:5:154;;:279;;;;:13;:279::i;:::-;2359:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2340:16:154;:48;;;;-1:-1:-1;;;;;2340:48:154;;;;;;;;;;2466:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2452:11:154;:49;;;;-1:-1:-1;;;;;2452:49:154;;;;;;;;;;2520:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2511:6:154;:37;;;;-1:-1:-1;;;;;2511:37:154;;;;;;2575:13;;2566:23;;2575:13;;;2566:23;;;:::i;:::-;-1:-1:-1;;;;;2672:55:168;;;2654:74;;2642:2;2627:18;2566:23:154;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2559:4:154;:30;;;;-1:-1:-1;;;;;2559:30:154;;;;;;;;;;1641:955::o;7612:1252::-;7793:319;;;;;;;;7833:6;;-1:-1:-1;;;;;7833:6:154;;;7793:319;;7863:6;;;7793:319;;;;7760:30;7793:319;;;;;;7833:6;7687:57;7793:319;;;;;;;;;;;;;7981:15;7793:319;;;;8013:1;7793:319;;;;8031:4;7793:319;;;;7833:6;7793:319;;;;;;8079:22;7793:319;;;;8253:1;8206:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;8206:49:154;;;;;;;;;;;;;;;;8196:59;;8270:9;8265:278;8289:7;:14;8285:1;:18;8265:278;;;8337:195;;;;;;;;8405:4;;-1:-1:-1;;;;;8405:4:154;8337:195;;8443:22;;8337:195;8443:22;;;6557:25:168;;;8337:195:154;;;;;;6530:18:168;8443:22:154;;;;;;;;;;;;8433:33;;;;;;8337:195;;;;8508:8;8497:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;8337:195;;;8324:7;8332:1;8324:10;;;;;;;;:::i;:::-;;;;;;:208;;;;8305:3;;;;;:::i;:::-;;;;8265:278;;;-1:-1:-1;8640:18:154;;8744:7;;8767:23;;;;8754:10;;;;8606:251;;8640:18;;;8711:23;;-1:-1:-1;;;;;8744:7:154;;;;8754:36;;8767:23;8754:36;:::i;:::-;8688:103;;-1:-1:-1;;;;;25768:55:168;;;8688:103:154;;;25750:74:168;25840:18;;;25833:34;25723:18;;8688:103:154;;;-1:-1:-1;;8688:103:154;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8838:9:154;:7;:9::i;:::-;-1:-1:-1;;;;;8606:12:154;;;:251;;;;:12;:251::i;:::-;7750:1114;7612:1252;;;;:::o;1408:1319:164:-;-1:-1:-1;;;1804:16:164;-1:-1:-1;;;;;1795:7:164;-1:-1:-1;;;;;;;;;;;;;;;1804:16:164;1937:9;1932:99;1956:6;:13;1952:1;:17;1932:99;;;2011:6;2018:1;2011:9;;;;;;;;:::i;:::-;;;;;;;1990:1;:18;1992:15;1997:6;2004:1;1997:9;;;;;;;;:::i;:::-;;;;;;;1992:4;:15::i;:::-;1990:18;;;;;;;;;;;;;;-1:-1:-1;1990:18:164;:30;;;;;;-1:-1:-1;;;;;1990:30:164;;;;;;;;;;-1:-1:-1;1990:30:164;;;;;;;;;;;;;;:::i;:::-;;;;;1971:3;;;;;:::i;:::-;;;;1932:99;;;;2093:23;2133:6;:13;2119:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2119:28:164;;2093:54;;2162:9;2157:96;2181:6;:13;2177:1;:17;2157:96;;;2227:15;2232:6;2239:1;2232:9;;;;;;;;:::i;2227:15::-;2215:6;2222:1;2215:9;;;;;;;;:::i;:::-;;;;;;;;;;:27;2196:3;;;;:::i;:::-;;;;2157:96;;;;2293:29;2325:12;2330:6;2325:4;:12::i;:::-;2293:44;;2385:12;2400:21;2408:12;2400:7;:21;;:::i;:::-;2385:36;;2488:22;2513:25;2522:12;2536:1;2513:8;:25;;:::i;:::-;2488:50;;2610:52;2665:1;:18;2667:12;2680:1;2667:15;;;;;;;;:::i;:::-;;;;;;;2665:18;;;;;;;;;;;2610:73;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2610:73:164;-1:-1:-1;;;;;2610:73:164;-1:-1:-1;;;;;2610:73:164;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2610:73:164;;;;-1:-1:-1;2702:4:164;;2708:5;;-1:-1:-1;2610:73:164;;-1:-1:-1;1408:1319:164;;-1:-1:-1;;;;;;;;;;;1408:1319:164:o;3239:313:154:-;3339:15;;;;;-1:-1:-1;;;;;2672:55:168;;3339:15:154;;;2654:74:168;3339:8:154;;;;2627:18:168;;3339:15:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3364:37:154;;;;;3378:4;3364:37;;;35035:41:168;;;35092:18;;;35085:50;;;35151:18;;;35144:50;;;35210:18;;;35203:50;3364:13:154;;-1:-1:-1;3364:13:154;;-1:-1:-1;35007:19:168;;3364:37:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3430:5;-1:-1:-1;;;;;3416:33:154;;3437:4;3443:5;3416:33;;;;;;;:::i;:::-;;;;;;;;3459:13;;:34;;;;;-1:-1:-1;;;;;3459:13:154;;;;:21;;:34;;3481:4;;3487:5;;3459:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3512:13:154;;:26;;;;;-1:-1:-1;;;;;2672:55:168;;;3512:26:154;;;2654:74:168;3503:42:154;;-1:-1:-1;3512:13:154;;;;-1:-1:-1;3512:19:154;;2627:18:168;;3512:26:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3540:4;3503:8;:42::i;3494:3375:161:-;3742:34;3779:503;;;;;;;;3819:5;:14;;;-1:-1:-1;;;;;3779:503:161;;;;;3857:5;:15;;;-1:-1:-1;;;;;3779:503:161;;;;;3904:1;-1:-1:-1;;;;;3779:503:161;;;;;3932:5;:15;;;3779:503;;;;3972:5;:16;;;3779:503;;;;4011:5;:13;;;3779:503;;;;;;4047:5;:13;;;3779:503;;;;4085:1;3779:503;;;;4106:18;3779:503;;;;4157:5;3779:503;;;;;;4248:23;3779:503;;;;4193:23;3779:503;;;3742:540;;4293:28;4336:83;4360:58;4375:12;4389:10;;;;;;;;;-1:-1:-1;;;;;4389:10:161;-1:-1:-1;;;;;4389:26:161;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:58;4336:12;;:23;:83::i;:::-;4507:17;;4498:27;;;;;-1:-1:-1;;;;;2672:55:168;;;4498:27:161;;;2654:74:168;4293:126:161;;-1:-1:-1;4498:8:161;;;;2627:18:168;;4498:27:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4542:22:161;;4582:7;;4592:23;;;;4535:81;;;;;-1:-1:-1;;;;;4582:7:161;;;4535:81;;;25750:74:168;25840:18;;;25833:34;;;;4535:38:161;;;-1:-1:-1;4535:38:161;;-1:-1:-1;25723:18:168;;4535:81:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4707:15:161;;;4720:1;4707:15;;;;;;;;4682:22;;4707:15;;;;;;;;;;-1:-1:-1;4707:15:161;4682:40;;4751:5;:15;;;4732:6;4739:1;4732:9;;;;;;;;:::i;:::-;;;;;;:35;-1:-1:-1;;;;;4732:35:161;;;-1:-1:-1;;;;;4732:35:161;;;;;4796:5;:14;;;4777:6;4784:1;4777:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4777:34:161;;;;:9;;;;;;;;;;:34;4902:16;;;4916:1;4902:16;;;;;;;;4868:31;;4902:16;;4916:1;;4902:16;;;;;;;;;-1:-1:-1;4902:16:161;4868:50;;4948:12;:23;;;4928:14;4943:1;4928:17;;;;;;;;:::i;:::-;;;;;;:43;;;;;5001:12;:22;;;4981:14;4996:1;4981:17;;;;;;;;:::i;:::-;;;;;;;;;;:42;5103:23;;;5124:1;5103:23;;;;;;;;;5070:30;;5103:23;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5103:23:161;;;;;;;;;;;;;;;;5070:56;;5196:508;;;;;;;;5241:1;5196:508;;;;5271:1;5196:508;;;;5296:5;:14;;;-1:-1:-1;;;;;5196:508:161;;;;;5336:5;:16;;;5196:508;;;;5377:5;:15;;;5196:508;;;;5415:5;:13;;;5196:508;;;;;;5451:5;:13;;;5196:508;;;;5489:5;:15;;;5196:508;;;;5525:63;5554:5;5561:26;5525:28;:63::i;:::-;5196:508;;;;5618:5;:16;;;5196:508;;;;5676:3;5681:11;5659:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5196:508;;;5184:6;5191:1;5184:9;;;;;;;;:::i;:::-;;;;;;:520;;;;5770:533;;;;;;;;5815:1;5770:533;;;;5845:1;5770:533;;;;5878:1;-1:-1:-1;;;;;5770:533:161;;;;;5906:12;:23;;;5770:533;;;;5954:12;:22;;;5770:533;;;;5999:12;:20;;;5770:533;;;;;;6042:12;:20;;;5770:533;;;;6087:12;:22;;;5770:533;;;;6130:69;6159:12;6173:25;6130:28;:69::i;:::-;5770:533;;;;6229:12;:23;;;5770:533;;;;6277:15;5770:533;;;5758:6;5765:1;5758:9;;;;;;;;:::i;:::-;;;;;;:545;;;;6357:45;:153;;;;;;;;6445:1;6418:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6418:29:161;;;;;;;;;;;;;;;-1:-1:-1;6357:153:161;;;;6476:1;6449:29;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6449:29:161;;;;;;;;;;;;;;;-1:-1:-1;6357:153:161;;;;6507:1;6480:29;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6480:29:161;;;;;;;;;;;;;;;-1:-1:-1;6357:153:161;;6579:6;:11;6570:21;;;;;-1:-1:-1;;;;;6579:11:161;;;6570:21;;;2654:74:168;6357:153:161;;-1:-1:-1;6570:8:161;;;;2627:18:168;;6570:21:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6605:28:161;;;;-1:-1:-1;6601:262:161;;6649:10;;:63;;;;;-1:-1:-1;;;;;6649:10:161;;;;:17;;:63;;6667:6;;6675:14;;6691:6;;6699:12;;6649:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6601:262;;;6743:32;;;;;16579:66:168;16567:79;;6743:32:161;;;16549:98:168;6743:15:161;;;;16522:18:168;;6743:32:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6789:10:161;;:63;;;;;-1:-1:-1;;;;;6789:10:161;;;;-1:-1:-1;6789:17:161;;-1:-1:-1;6789:63:161;;6807:6;;6815:14;;6831:6;;6839:12;;6789:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6601:262;3690:3179;;;;;;3494:3375;;;;;:::o;2493:990:92:-;2557:16;2585:23;2878:14;2895:4;:11;2878:28;;2924:6;2933:3;2924:12;2940:1;2924:17;2920:251;;2992:1;2983:6;:10;2996:1;2983:14;2969:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2969:29:92;;2960:38;;3044:43;3058:4;3072:1;3063:6;:10;3058:16;;;;;;;;:::i;:::-;;;;;;;3084:1;3076:10;;3044:13;:43::i;:::-;3016:6;3039:1;3023:6;:13;:17;3016:25;;;;;;;;:::i;:::-;;;;;;:71;;;;;2920:251;;;3158:1;3149:6;:10;3135:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3135:25:92;;3126:34;;2920:251;3273:11;3307:9;3302:142;3333:1;3326:6;:8;3322:1;:12;3302:142;;;3373:33;3387:4;3392:1;3387:7;;;;;;;;:::i;:::-;;;;;;;3396:4;3401:1;3403;3401:3;3396:9;;;;;;;;:::i;3373:33::-;3359:6;3366:3;3359:11;;;;;;;;:::i;:::-;;;;;;;;;;:47;3424:5;;;;;3339:1;3336:4;3302:142;;;-1:-1:-1;3470:6:92;;2493:990;-1:-1:-1;;;;2493:990:92:o;4095:277:73:-;4163:1;4158;:6;4154:212;;4185:44;;;;;41028:2:168;41010:21;;;41067:2;41047:18;;;41040:30;41106:34;41101:2;41086:18;;41079:62;41177:7;41172:2;41157:18;;41150:35;41217:3;41202:19;;40826:401;4185:44:73;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;:::-;;;;;;;;4349:6;:4;:6::i;3624:537:154:-;3828:15;;;;;-1:-1:-1;;;;;2672:55:168;;3828:15:154;;;2654:74:168;3828:8:154;;;;2627:18:168;;3828:15:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3853:37:154;;;;;3867:4;3853:37;;;35035:41:168;;;35092:18;;;35085:50;;;35151:18;;;35144:50;;;35210:18;;;35203:50;3853:13:154;;-1:-1:-1;3853:13:154;;-1:-1:-1;35007:19:168;;3853:37:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:5;-1:-1:-1;;;;;3905:33:154;;3926:4;3932:5;3905:33;;;;;;;:::i;:::-;;;;;;;;3948:13;;:65;;;;;-1:-1:-1;;;;;3948:13:154;;;;:32;;:65;;3981:4;;3987:5;;3994:12;;4008:4;;3948:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4032:13:154;;:26;;;;;-1:-1:-1;;;;;2672:55:168;;;4032:26:154;;;2654:74:168;4023:42:154;;-1:-1:-1;4032:13:154;;;;-1:-1:-1;4032:19:154;;2627:18:168;;4032:26:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4060:4;4023:8;:42::i;:::-;4084:13;;:40;;;;;-1:-1:-1;;;;;25768:55:168;;;4084:40:154;;;25750:74:168;4084:13:154;25840:18:168;;;25833:34;4075:79:154;;4084:13;;:21;;25723:18:168;;4084:40:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4137:4;4126:27;;;;;;;;;;;;:::i;6260:146::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6354:45:154;6374:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6528:464:154;;;;;;;;-1:-1:-1;6528:464:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6815:19;6528:464;;;;;;;;6904:23;6528:464;;;;;;;;;;;6412:587;6354:45;6347:52;;6260:146;:::o;789:312:76:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;43103:2:168;43085:21;;;43142:2;43122:18;;;43115:30;43181:34;43176:2;43161:18;;43154:62;43252:4;43247:2;43232:18;;43225:32;43289:3;43274:19;;42901:398;881:41:76;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:52;;;;;;:::i;5103:560:154:-;5329:15;;;;;-1:-1:-1;;;;;2672:55:168;;5329:15:154;;;2654:74:168;5329:8:154;;;;2627:18:168;;5329:15:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5358:8;5354:133;;;5382:37;;;;;5396:4;5382:37;;;35035:41:168;;;35092:18;;;35085:50;;;35151:18;;;35144:50;;;35210:18;;;35203:50;5382:13:154;;;;35007:19:168;;5382:37:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5462:5;-1:-1:-1;;;;;5438:38:154;;5469:6;5438:38;;;;;;:::i;:::-;;;;;;;;5354:133;5497:13;;:69;;;;;-1:-1:-1;;;;;5497:13:154;;;;:31;;:69;;5529:6;;5537:12;;5551:4;;5557:8;;5497:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5585:13:154;;5629:18;;5576:80;;-1:-1:-1;;;;;;5585:13:154;;;;-1:-1:-1;5585:26:154;;5612:5;;5629:18;;5640:6;;5629:18;;;:::i;:::-;;;;;;;;;;;;;5619:29;;;;;;5585:64;;;;;;;;;;;;;;;-1:-1:-1;;;;;25768:55:168;;;;25750:74;;25855:2;25840:18;;25833:34;25738:2;25723:18;;25576:297;5585:64:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5651:4;5576:8;:80::i;5722:532::-;5829:17;5870:6;5859:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;5859:18:154;;;;;;;5849:29;;5859:18;5849:29;;;;5902:13;;:39;;;-1:-1:-1;;;;;25768:55:168;;;5902:39:154;;;25750:74:168;25840:18;;;25833:34;;;5849:29:154;;-1:-1:-1;5888:11:154;;5902:13;;;:21;;25723:18:168;;5902:39:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5951:15;;;;;-1:-1:-1;;;;;2672:55:168;;5951:15:154;;;2654:74:168;5888:53:154;;-1:-1:-1;5951:8:154;;;;2627:18:168;;5951:15:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5976:13:154;;:31;;;;;;;;6557:25:168;;;-1:-1:-1;;;;;5976:13:154;;;;-1:-1:-1;5976:20:154;;-1:-1:-1;6530:18:168;;5976:31:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6026:13:154;;:44;;;;;-1:-1:-1;;;;;25768:55:168;;;6026:44:154;;;25750:74:168;25840:18;;;25833:34;;;6017:61:154;;-1:-1:-1;6026:13:154;;;;-1:-1:-1;6026:26:154;;25723:18:168;;6026:44:154;25576:297:168;6017:61:154;6092:17;;6088:160;;6185:13;;:39;;;;;-1:-1:-1;;;;;25768:55:168;;;6185:39:154;;;25750:74:168;25840:18;;;25833:34;;;6176:61:154;;6185:13;;:21;;25723:18:168;;6185:39:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6234:1;6176:8;:61::i;4598:424::-;4720:15;;;;;-1:-1:-1;;;;;2672:55:168;;4720:15:154;;;2654:74:168;4720:8:154;;;;2627:18:168;;4720:15:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4749:8;4745:133;;;4773:37;;;;;4787:4;4773:37;;;35035:41:168;;;35092:18;;;35085:50;;;35151:18;;;35144:50;;;35210:18;;;35203:50;4773:13:154;;;;35007:19:168;;4773:37:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4853:5;-1:-1:-1;;;;;4829:38:154;;4860:6;4829:38;;;;;;:::i;:::-;;;;;;;;4745:133;4887:13;;:38;;;;;-1:-1:-1;;;;;4887:13:154;;;;:20;;:38;;4908:6;;4916:8;;4887:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4944:13:154;;4988:18;;4935:80;;-1:-1:-1;;;;;;4944:13:154;;;;-1:-1:-1;4944:26:154;;4971:5;;4988:18;;4999:6;;4988:18;;;:::i;3262:157:73:-;3322:9;3317:96;;3352:30;;;;;45090:2:168;45072:21;;;45129:2;45109:18;;;45102:30;45168:25;45163:2;45148:18;;45141:53;45226:2;45211:18;;44888:347;3352:30:73;;;;;;;;3396:6;:4;:6::i;:::-;3262:157;:::o;1299:99:76:-;1376:15;1386:1;1389;1376:9;:15::i;3622:277:73:-;3690:1;-1:-1:-1;;;;;3685:6:73;:1;-1:-1:-1;;;;;3685:6:73;;3681:212;;3712:44;;;;;45442:2:168;45424:21;;;45481:2;45461:18;;;45454:30;45520:34;45515:2;45500:18;;45493:62;45591:7;45586:2;45571:18;;45564:35;45631:3;45616:19;;45240:401;3712:44:73;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;555:1105:153:-;648:13;:11;:13::i;:::-;711:41;;;;;;;;;;;;;;;;;;:32;:41::i;:::-;703:49;;:5;:49;;;;-1:-1:-1;;;;;703:49:153;;;;;;;;;;;;;;;;768:39;;;;;;;;;;;;;;;;;;;;;;:32;:39::i;:::-;762:45;;:3;:45;;;;-1:-1:-1;;;;;762:45:153;;;;;;;;;;;;;;;;825:41;;;;;;;;;;;;;;;;;;;;;;:32;:41::i;:::-;817:49;;:5;:49;;;;-1:-1:-1;;;;;817:49:153;;;;;;;;;;;;;935:6;;944:5;:10;922:42;;935:6;;;;944:10;956:7;922:4;:42::i;:::-;987:6;;996:3;:8;974:40;;-1:-1:-1;;;;;987:6:153;;;;996:8;1006:7;974:4;:40::i;:::-;1133:16;;;1147:1;1133:16;;;;;;;;;1107:23;;1133:16;;;;;;;;-1:-1:-1;;1171:5:153;:10;1159:9;;;;-1:-1:-1;;;;;;1171:10:153;;1159:9;;-1:-1:-1;1171:10:153;;1159:9;;;;:::i;:::-;-1:-1:-1;;;;;1159:22:153;;;:9;;;;;;;;;:22;1203:3;:8;1191:9;;1203:8;;;1191:6;;1203:8;;1191:9;;;;;;:::i;:::-;-1:-1:-1;;;;;1191:20:153;;;:9;;;;;;;;;:20;1233:5;:10;1221:9;;1233:10;;;1221:6;;1228:1;;1221:9;;;;;;:::i;:::-;-1:-1:-1;;;;;1221:22:153;;;:9;;;;;;;;;:22;1294:7;;1303:9;;1333:8;;1275:71;;1294:7;;;;1303:9;;;;1314:6;;1322:1;;1333:8;1294:7;1275:18;:71::i;:::-;1254:5;:94;;;;-1:-1:-1;;;;;1254:94:153;;;;;;1398:7;;1407:9;;1437:8;;1379:71;;1398:7;;;;1407:9;;;;1418:6;;1426:1;;1437:8;-1:-1:-1;1379:18:153;:71::i;:::-;1358:5;:94;;;;-1:-1:-1;;;;;1358:94:153;;;;;;1502:7;;1511:9;;1541:8;;1483:71;;1502:7;;;;1511:9;;;;1522:6;;1530:1;;1541:8;1530:1;1483:18;:71::i;:::-;1462:5;:94;;;;-1:-1:-1;;;;;1462:94:153;;;;;;1620:6;;1637:5;;1607:46;;1620:6;;;;1637:5;1645:7;1607:4;:46::i;1666:281::-;1781:20;;;1799:1;1781:20;;;1717;1781;;;;;;1749:29;;1781:20;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1781:20:153;;;;;;;;;;;;-1:-1:-1;;1811:19:153;;;;;;;;;1825:5;1811:19;-1:-1:-1;;;;;1811:19:153;;;;;;;;;:11;;;;-1:-1:-1;1811:19:153;:11;;-1:-1:-1;;1811:11:153;;;;:::i;:::-;;;;;;;;;;;:19;;;;1840:17;;;;;;;;;1854:3;1840:17;-1:-1:-1;;;;;1840:17:153;;;;;;;;;;;;:11;;:8;;:17;;:11;;;;;;:::i;:::-;;;;;;:17;;;;1878:37;1906:8;1878:27;:37::i;2031:854:165:-;2234:13;2250:4;-1:-1:-1;;;;;2250:10:165;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2234:28;;2272:20;2307:4;-1:-1:-1;;;;;2307:23:165;;2331:2;2335:5;2342:4;2348:9;2359:1;2362;2365;2376;2388;2392:5;2307:91;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2272:126;;2508:22;:7;:20;:22::i;:::-;2498:32;;2541:23;2579:9;2574:148;2598:7;:14;2594:1;:18;2574:148;;;2663:10;2675:35;2697:12;2675:7;2683:1;2675:10;;;;;;;;:::i;:::-;;;;;;;:21;;:35;;;;:::i;:::-;2646:65;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2633:78;;2614:3;;;;;:::i;:::-;;;;2574:148;;;;2767:4;-1:-1:-1;;;;;2767:20:165;;2788:2;2792:5;2799:4;2805:9;2816:1;2819;2822;2833;2845;2866:10;2849:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;2767:111;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;220:180:164:-;313:7;383:6;372:18;;;;;;;;:::i;:::-;;;;-1:-1:-1;;372:18:164;;;;;;;;;362:29;;372:18;362:29;;;;349:43;;;49735:19:168;49770:12;349:43:164;;;;;;;;;;;;339:54;;;;;;332:61;;220:180;;;:::o;406:430::-;467:16;500:9;495:313;519:5;:12;515:1;:16;495:313;;;557:9;569:5;:1;573;569:5;:::i;:::-;557:17;;552:246;580:5;:12;576:1;:16;552:246;;;632:5;638:1;632:8;;;;;;;;:::i;:::-;;;;;;;621:5;627:1;621:8;;;;;;;;:::i;:::-;;;;;;;:19;617:167;;;664:12;679:5;685:1;679:8;;;;;;;;:::i;:::-;;;;;;;664:23;;720:5;726:1;720:8;;;;;;;;:::i;:::-;;;;;;;709:5;715:1;709:8;;;;;;;;:::i;:::-;;;;;;:19;;;;;761:4;750:5;756:1;750:8;;;;;;;;:::i;:::-;;;;;;:15;;;;;642:142;617:167;594:3;;;;:::i;:::-;;;;552:246;;;-1:-1:-1;533:3:164;;;;:::i;:::-;;;;495:313;;;-1:-1:-1;824:5:164;;406:430;-1:-1:-1;406:430:164:o;829:297:166:-;980:10;;;;972:25;;;;;;;;49967::168;;;;50008:18;;;50001:34;;;914:12:166;;939:7;;;;;;206:42;;972:7;;49940:18:168;;972:25:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1033:13;;;1043:2;1033:13;;;;;;;;;938:59;;-1:-1:-1;938:59:166;;-1:-1:-1;938:59:166;-1:-1:-1;1008:22:166;;1033:13;;;;;;;;;-1:-1:-1;;1068:25:166;;;;;;50627:19:168;;;;50662:12;;;50655:28;;;;-1:-1:-1;;;50721:3:168;50717:16;;;;50735:66;50713:89;50699:12;;;50692:111;1068:25:166;;;;;;;;;50819:12:168;;;;1068:25:166;;;;;-1:-1:-1;;;829:297:166:o;3811:1483:167:-;3942:13;4051:18;4037:5;:10;;;:32;4033:91;;801:4;4085:28;4033:91;4208:5;:23;;;4204:80;;;895:4;4247:26;4204:80;4404:26;4378:5;:22;;;:52;4374:256;;1027:4;4446:42;4374:256;;;4535:26;4509:5;:22;;;:52;4505:125;;1090:4;4577:42;4505:125;4738:26;4713:5;:21;;;:51;4709:123;;1220:4;4780:41;4709:123;4938:26;4921:13;:43;;;;;;;;:::i;:::-;;4917:348;;1341:4;4980:38;4917:348;;;5056:26;5039:13;:43;;;;;;;;:::i;:::-;;5035:230;;1400:4;5098:38;5035:230;;;5174:26;5157:13;:43;;;;;;;;:::i;:::-;;5153:112;;1459:4;5216:38;3811:1483;;;;:::o;2409:432:73:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;51044:74:168;;;2677:17:73;51134:18:168;;;51127:34;;;;2712:4:73;51177:18:168;;;51170:34;2489:11:73;;1671:64;2586:43;;51017:18:168;;2652:67:73;;;-1:-1:-1;;2652:67:73;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:73;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:73;2820:7;:14;;;;;;;;2409:432::o;15654:291::-;15729:14;15738:1;15741;15729:8;:14::i;:::-;15724:215;;15764:42;;;;;51417:2:168;51399:21;;;51456:2;51436:18;;;51429:30;51495:34;51490:2;51475:18;;51468:62;51566:5;51561:2;51546:18;;51539:33;51604:3;51589:19;;51215:399;15764:42:73;;;;;;;;15825:32;15855:1;15825:32;;;;;;:::i;:::-;;;;;;;;15876;15906:1;15876:32;;;;;;:::i;1426:1654:161:-;1599:41;;;;;;;;;;;;;;;;;;:32;:41::i;:::-;1591:49;;:5;:49;;;;-1:-1:-1;;;;;1591:49:161;;;;;;;;;;;;;;;;1732:42;;;;;;;;;;;;;;;;;;;;;;:32;:42::i;:::-;1723:51;;:6;:51;;;;-1:-1:-1;;;;;1723:51:161;;;;;;;;;;;;;1813:5;:10;1798:26;;1813:10;;;1798:26;;;:::i;:::-;-1:-1:-1;;;;;2672:55:168;;;2654:74;;2642:2;2627:18;1798:26:161;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1785:10:161;:39;;;;-1:-1:-1;;;;;1785:39:161;;;;;;;;;2344:4;;2281:172;;1785:39;;2344:4;;987:7;;1042;;2281:172;;;:::i;:::-;-1:-1:-1;;;;;52849:15:168;;;52831:34;;52901:15;;;;52896:2;52881:18;;52874:43;52948:2;52933:18;;52926:34;52991:2;52976:18;;52969:34;52757:3;52742:19;2281:172:161;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2224:5:161;:253;;;;-1:-1:-1;;;;;2224:253:161;;;;;;;;;;2569:33;;-1:-1:-1;;2569:33:161;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2640:5:161;:10;2612:39;;;;;-1:-1:-1;;;;;2640:10:161;;;2612:39;;;2654:74:168;2529:73:161;;-1:-1:-1;2612:27:161;;;;;2627:18:168;;2612:39:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2816:5:161;;2761:70;;2793:9;;-1:-1:-1;;;;;;2816:5:161;;;;-1:-1:-1;2761:70:161;;;:::i;:::-;-1:-1:-1;;;;;53320:15:168;;;53302:34;;53372:15;;53367:2;53352:18;;53345:43;53229:2;53214:18;2761:70:161;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2748:10:161;:83;;;;-1:-1:-1;;;;;2748:83:161;;;;;;;;;2942:25;;;;;;;;:23;;:25;;;;;;;;;;;;;;;2748:83;2942:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2924:7;:44;;;;-1:-1:-1;;;;;2924:44:161;;;;;;3020:5;:10;3011:20;;;;;3020:10;;3011:20;;;2654:74:168;3011:8:161;;;;2627:18:168;;3011:20:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3061:6:161;:11;3041:32;;;;;-1:-1:-1;;;;;3061:11:161;;;3041:32;;;2654:74:168;3041:19:161;;;;-1:-1:-1;3041:19:161;;-1:-1:-1;2627:18:168;;3041:32:161;2486:248:168;373:261:166;-1:-1:-1;;;;;;;;;;;;;;;;;468:10:166;516:4;499:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;499:22:166;;;;;;;489:33;;499:22;489:33;;;;548:11;;;;;;6557:25:168;;;489:33:166;-1:-1:-1;481:42:166;;206;;548:7;;6530:18:168;;548:11:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;569:20;;;;;533:26;;-1:-1:-1;206:42:166;;569:8;;:20;;533:26;;584:4;;569:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:21;;;;;;;;618:4;-1:-1:-1;;;;;606:21:166;;;;;624:2;606:21;;;599:28;;;;373:261;;;:::o;20040:117:78:-;20122:28;20127:5;20134:2;20138:4;20144:5;20122:4;:28::i;953:558:165:-;1163:9;1214:7;-1:-1:-1;;;;;1214:28:165;;1268:9;1340:19;;;1361:6;1369:9;1388:1;1396:7;1413:1;1417;1428;1296:152;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1296:152:165;;;;;;;;;;;;;;;;;;;;;;;1214:280;;;;;;;;;;;;;1466:5;;1214:280;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1184:320;953:558;-1:-1:-1;;;;;;;953:558:165:o;1297:495:166:-;1373:20;1410:9;1405:356;1429:8;:15;1425:1;:19;1405:356;;;1470:9;1482:5;:1;1486;1482:5;:::i;:::-;1470:17;;1465:286;1493:8;:15;1489:1;:19;1465:286;;;1556:8;1565:1;1556:11;;;;;;;;:::i;:::-;;;;;;;:16;;;-1:-1:-1;;;;;1537:35:166;:8;1546:1;1537:11;;;;;;;;:::i;:::-;;;;;;;:16;;;-1:-1:-1;;;;;1537:35:166;;1533:204;;;1596:22;1621:8;1630:1;1621:11;;;;;;;;:::i;:::-;;;;;;;1596:36;;1668:8;1677:1;1668:11;;;;;;;;:::i;:::-;;;;;;;1654:8;1663:1;1654:11;;;;;;;;:::i;:::-;;;;;;:25;;;;1715:3;1701:8;1710:1;1701:11;;;;;;;;:::i;:::-;;;;;;:17;;;;1574:163;1533:204;1510:3;;;;:::i;:::-;;;;1465:286;;;-1:-1:-1;1446:3:166;;;;:::i;:::-;;;;1405:356;;15304:345:73;15431:8;;15419;;15401:4;;15419:20;;15415:228;;15460:6;15455:137;15476:1;:8;15472:1;:12;15455:137;;;15521:1;15523;15521:4;;;;;;;;:::i;:::-;;;;;;;;;15513:12;;;:1;15515;15513:4;;;;;;;;:::i;:::-;;;;;;;:12;15509:69;;15554:5;15549:10;;15509:69;15486:3;;;;:::i;:::-;;;;15455:137;;;;15415:228;;;-1:-1:-1;15627:5:73;15304:345;;;;:::o;20436:825:78:-;20600:38;;;-1:-1:-1;;;;;2672:55:168;;;20600:38:78;;;;2654:74:168;;;;20600:38:78;;;;;;;;;;2627:18:168;;;;20600:38:78;;;;;;;;;;;;;20589:50;;20565:20;;20589:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20562:77;;;20649:15;20678:7;20667:30;;;;;;;;;;;;:::i;:::-;20649:48;-1:-1:-1;20734:71:78;20800:4;20734:51;20782:2;20734:38;;:22;:8;20750:5;20734:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;20851:6;20847:408;;;20914:34;;;;;;;;;;;;;;;;;;;;;;20903:46;;20876:23;;-1:-1:-1;;;;;20903:10:78;;;:46;;20914:34;20903:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20873:76;;;20963:14;20991:10;20980:33;;;;;;;;;;;;:::i;:::-;20963:50;;21038:7;21031:4;:14;21027:144;;;21076:14;21086:4;21076:7;:14;:::i;:::-;21065:26;;;;:::i;:::-;;;21027:144;;;21141:14;21148:7;21141:4;:14;:::i;:::-;21130:26;;;;:::i;:::-;;;21027:144;21184:60;21237:6;21184:38;;:22;:8;21200:5;7700:156:83;4573:12;;;:22;;;;-1:-1:-1;;;;;4573:22:83;;;;;-1:-1:-1;4573:12:83;7813:36;7806:43;7700:156;-1:-1:-1;;;7700:156:83:o;7862:143::-;4728:9;;;:16;;;;;;;;;;;-1:-1:-1;4728:9:83;7968:30;4629:143;8167:152;5044:10;;;:47;;;;;;;8241:18;5044:47;;;;;;-1:-1:-1;;;;;5068:21:83;;5044:47;;;8302:4;8278:34;4940:179;8943:120;9023:33;9037:4;9051:3;9391:12;;;;9427:9;;;;9468:11;;;;9512:10;;;9489:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9391:12:83;;;;9427:9;;;;;;9377:11;;9489:33;;9512:10;;9489:33;;9512:10;9489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9533:17;9570:4;9576:12;9584:3;9576:7;:12::i;:::-;9553:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9553:36:83;;;;;;;;;-1:-1:-1;;;;;9604:15:83;;;;;;:10;;;9553:36;9604:15;;;;;;:21;;;;;;;;;;9553:36;;-1:-1:-1;9604:21:83;;:15;;9636:34;;9653:3;;9658:11;;9636:34;;:::i;:::-;;;;-1:-1:-1;;9636:34:83;;;;;;;;;9626:45;;9636:34;9626:45;;;;9604:68;;;;;;;;;;-1:-1:-1;9604:68:83;;;;9599:110;;9688:10;9693:4;9688;:10::i;:::-;;9599:110;-1:-1:-1;;;;;9741:15:83;;9718:12;9741:15;;;;;;;;;;;:21;;;;;;;;;;9773:34;;9741:21;;9718:12;;9773:34;;9790:3;;9795:11;;9773:34;;:::i;:::-;;;;;;;;;;;;;9763:45;;;;;;9741:68;;;;;;;;;;;;9733:77;;9718:92;;9821:12;9860:17;9881:3;-1:-1:-1;;;;;9881:14:83;9896:4;9881:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9857:44:83;-1:-1:-1;9922:38:83;;-1:-1:-1;9857:44:83;9943:16;9948:11;9943:2;:16;:::i;:::-;9922:14;:38::i;:::-;9995:18;;;;;-1:-1:-1;;;;;25768:55:168;;9995:18:83;;;25750:74:168;25840:18;;;25833:34;;;9915:45:83;;-1:-1:-1;9980:12:83;;-1:-1:-1;9995:7:83;;;;25723:18:168;;9995::83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9980:33;;10036:4;10028;:12;10024:218;;10056:175;;;;;57269:2:168;10056:175:83;;;57251:21:168;57308:3;57288:18;;;57281:31;57348:34;57328:18;;;57321:62;57419:34;57399:18;;;57392:62;57491:34;57470:19;;;57463:63;57563:17;57542:19;;;57535:46;57598:19;;10056:175:83;57067:556:168;10056:175:83;10251:24;;;;;-1:-1:-1;;;;;51062:55:168;;10251:24:83;;;51044:74:168;51134:18;;;51127:34;;;51177:18;;;51170:34;;;10251:8:83;;;;51017:18:168;;10251:24:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10292:12:83;;;10285:19;;;;;;-1:-1:-1;10321:9:83;;;10314:16;;;;;;10340:17;-1:-1:-1;10347:10:83;;10292:12;10340:17;:::i;:::-;10374:4;:11;;10367:18;;;9367:1025;;;;;;;;9297:1095;;:::o;11471:393::-;11530:12;11554:19;11586:1;:8;11597:2;11586:13;;;;:::i;:::-;11576:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11576:24:83;;11554:46;;11615:9;11610:224;11634:1;:8;11630:1;:12;11610:224;;;11663:9;11675:1;11677;11675:4;;;;;;;;:::i;:::-;;;;;;;11663:16;;11808:1;11802;11798:2;11794:10;11790:2;11786:19;11778:6;11774:32;11767:43;11749:75;11644:3;;;;;:::i;:::-;;;;11610:224;;7579:115;7636:7;7662:25;7682:4;7662:19;:25::i;11110:304::-;11188:7;11207:11;11229;11254:2;11243:1;:8;:13;:29;;11264:1;:8;11243:29;;;11259:2;11243:29;11229:43;;11287:9;11282:106;11306:3;11302:1;:7;11282:106;;;11371:5;:1;11375;11371:5;:::i;:::-;11345:1;11347:10;11356:1;11347:6;:10;:::i;:::-;11345:13;;;;;;;;:::i;:::-;;;;;;;11337:40;;11330:47;;;;;11311:3;;;;:::i;:::-;;;;11282:106;;;-1:-1:-1;11404:3:83;;11110:304;-1:-1:-1;;;;11110:304:83:o;1264:3197::-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:83;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:83;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:83;:15;;-1:-1:-1;1568:34:83;;-1:-1:-1;1452:33:83;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:83;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:83;;;;1532:174;;;-1:-1:-1;;;;;1627:15:83;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3197;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;588:28;580:37;;-1:-1:-1;;;;;1781:9:83;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:83;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:83;-1:-1:-1;1903:38:83;;-1:-1:-1;1838:44:83;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;;;;-1:-1:-1;;;;;2672:55:168;;1990:25:83;;;2654:74:168;1896:45:83;;-1:-1:-1;1963:22:83;;-1:-1:-1;1990:11:83;;;;2627:18:168;;1990:25:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:83;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2060;;2062:12;588:28;580:37;;-1:-1:-1;;;;;2077:7:83;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;25768:55:168;;;;25750:74;;25855:2;25840:18;;25833:34;25738:2;25723:18;;25576:297;2077:22:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:83;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;-1:-1:-1;;;;;25768:55:168;;;25750:74;;25840:18;;;25833:34;25723:18;2160:44:83;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;;;;57269:2:168;2268:187:83;;;57251:21:168;57308:3;57288:18;;;57281:31;57348:34;57328:18;;;57321:62;57419:34;57399:18;;;57392:62;57491:34;57470:19;;;57463:63;57563:17;57542:19;;;57535:46;57598:19;;2268:187:83;57067:556:168;2268:187:83;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2488:86;;;-1:-1:-1;;;;;59158:55:168;;;59140:74;;59262:66;59250:79;;;59230:18;;;59223:107;;;;59346:18;;;59339:34;59404:2;59389:18;;59382:34;59127:3;59112:19;2488:86:83;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:83;;2659:17;2588:15;;;;;;;;;;:21;;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:83;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:83;;;:88;;;;-1:-1:-1;;;;;2690:15:83;;;;2761:4;2690:10;;;:15;;;;;:21;;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:83;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:83;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:83;:75;;;;;;;;;;;;;-1:-1:-1;2025:2060:83;;;2801:1;2786:5;:12;:16;2782:1303;;;2823:9;2818:1152;2842:5;:12;2838:1;:16;2818:1152;;;2879:12;588:28;580:37;;-1:-1:-1;;;;;2894:7:83;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;25768:55:168;;;;25750:74;;25855:2;25840:18;;25833:34;25738:2;25723:18;;25576:297;2894:22:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:83;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;-1:-1:-1;;;;;25768:55:168;;;25750:74;;25840:18;;;25833:34;25723:18;2985:44:83;;;;;;;2934:114;588:28;580:37;;-1:-1:-1;;;;;3090:8:83;;3099:3;3104:5;3110:1;3104:8;;;;;;;;:::i;:::-;;;;;;;;;;;3090:43;;;;;;;;;;-1:-1:-1;;;;;51062:55:168;;;3090:43:83;;;51044:74:168;51134:18;;;51127:34;3114:18:83;51177::168;;;51170:34;51017:18;;3090:43:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:12;3181:17;3256:3;-1:-1:-1;;;;;3256:14:83;3271:4;3256:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3238:38:83;;-1:-1:-1;3238:38:83;-1:-1:-1;3305:38:83;3238;3326:16;3331:11;3326:2;:16;:::i;3305:38::-;3298:45;;3384:7;:37;;;;;3403:18;3395:4;:26;3384:37;3380:529;;;3519:86;3529:3;3534:4;3567:3;3572:11;3550:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3540:45;;;;;;3595:5;3601:1;3595:8;;;;;;;;:::i;:::-;;;;;;;;;;;;3519:86;;;-1:-1:-1;;;;;59158:55:168;;;59140:74;;59262:66;59250:79;;;59230:18;;;59223:107;;;;59346:18;;;59339:34;59404:2;59389:18;;59382:34;59127:3;59112:19;3519:86:83;;;;;;;3706:5;3712:1;3706:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3627:15:83;;3698:17;3627:15;;;;;;;;;;:21;;;;;;;;;;3659:34;;3706:8;;3627:21;;3659:34;;3676:3;;3681:11;;3659:34;;:::i;:::-;;;;;;;;;;;;;3649:45;;;;;;3627:68;;;;;;;;;;;:88;;;;3808:4;3737;:10;;:15;3748:3;-1:-1:-1;;;;;3737:15:83;-1:-1:-1;;;;;3737:15:83;;;;;;;;;;;;:21;3753:4;3737:21;;;;;;;;;;;;;;;;;:68;3786:3;3791:11;3769:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3759:45;;;;;;3737:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;588:28;580:37;;-1:-1:-1;;;;;3834:8:83;;3843:3;3848:5;3854:1;3848:8;;;;;;;;:::i;:::-;;;;;;;;;;;3834:29;;;;;;;;;;-1:-1:-1;;;;;51062:55:168;;;3834:29:83;;;51044:74:168;51134:18;;;51127:34;51177:18;;;51170:34;;;51017:18;;3834:29:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3885:5;;;;;3380:529;588:28;580:37;;-1:-1:-1;;;;;3926:8:83;;3935:3;3940:5;3946:1;3940:8;;;;;;;;:::i;:::-;;;;;;;;;;;3926:29;;;;;;;;;;-1:-1:-1;;;;;51062:55:168;;;3926:29:83;;;51044:74:168;51134:18;;;51127:34;51177:18;;;51170:34;;;51017:18;;3926:29:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1109;;;2856:3;;;;;:::i;:::-;;;;2818:1152;;;;2782:1303;;;4000:74;;;;;;59629:2:168;4000:74:83;;;59611:21:168;59648:18;;;59641:30;;;;59707:34;59687:18;;;59680:62;59778:34;59758:18;;;59751:62;59830:19;;4000:74:83;59427:428:168;2782:1303:83;-1:-1:-1;;;;;4116:15:83;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;4148:34;;4116:21;;:15;4148:34;;4165:3;;4170:11;;4148:34;;:::i;:::-;;;;-1:-1:-1;;4148:34:83;;;;;;;;;4138:45;;4148:34;4138:45;;;;4116:68;;;;;;;;;;-1:-1:-1;4116:68:83;;;;4095:162;;;;;;;60062:2:168;4095:162:83;;;60044:21:168;60101:2;60081:18;;;60074:30;60140:34;60120:18;;;60113:62;60211:17;60191:18;;;60184:45;60246:19;;4095:162:83;59860:411:168;4095:162:83;4275:12;;;4268:19;;;;;;4304:9;;;4297:16;;;;;;4323:17;-1:-1:-1;4330:10:83;;4275:12;4323:17;:::i;:::-;4350:18;4357:11;;;4350:18;;;-1:-1:-1;;;;;4386:15:83;;;;;;;;;;;;:21;;;;;;;;;;4418:34;;4386:21;;4350:18;4418:34;;4435:3;;4440:11;;4418:34;;:::i;:::-;;;;;;;;;;;;;4408:45;;;;;;4386:68;;;;;;;;;;;;4379:75;;;;;;;;;1264:3197;;;:::o;6942:393::-;7001:12;7025:19;7057:1;:8;7068:2;7057:13;;;;:::i;:::-;7047:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7047:24:83;;7025:46;;7086:9;7081:224;7105:1;:8;7101:1;:12;7081:224;;;7134:9;7146:1;7148;7146:4;;;;;;;;:::i;:::-;;;;;;;7134:16;;7279:1;7273;7269:2;7265:10;7261:2;7257:19;7249:6;7245:32;7238:43;7220:75;7115:3;;;;;:::i;:::-;;;;7081:224;;6632:304;6710:7;6729:11;6751;6776:2;6765:1;:8;:13;:29;;6786:1;:8;6765:29;;;6781:2;6765:29;6751:43;;6809:9;6804:106;6828:3;6824:1;:7;6804:106;;;6893:5;:1;6897;6893:5;:::i;:::-;6867:1;6869:10;6878:1;6869:6;:10;:::i;:::-;6867:13;;;;;;;;:::i;:::-;;;;;;;6859:40;;6852:47;;;;;6833:3;;;;:::i;:::-;;;;6804:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:154:168:-;-1:-1:-1;;;;;93:5:168;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:184;225:77;222:1;215:88;322:4;319:1;312:15;346:4;343:1;336:15;362:255;434:2;428:9;476:6;464:19;;513:18;498:34;;534:22;;;495:62;492:88;;;560:18;;:::i;:::-;596:2;589:22;362:255;:::o;622:334::-;693:2;687:9;749:2;739:13;;-1:-1:-1;;735:86:168;723:99;;852:18;837:34;;873:22;;;834:62;831:88;;;899:18;;:::i;:::-;935:2;928:22;622:334;;-1:-1:-1;622:334:168:o;961:245::-;1009:4;1042:18;1034:6;1031:30;1028:56;;;1064:18;;:::i;:::-;-1:-1:-1;1121:2:168;1109:15;-1:-1:-1;;1105:88:168;1195:4;1101:99;;961:245::o;1211:462::-;1253:5;1306:3;1299:4;1291:6;1287:17;1283:27;1273:55;;1324:1;1321;1314:12;1273:55;1360:6;1347:20;1391:48;1407:31;1435:2;1407:31;:::i;:::-;1391:48;:::i;:::-;1464:2;1455:7;1448:19;1510:3;1503:4;1498:2;1490:6;1486:15;1482:26;1479:35;1476:55;;;1527:1;1524;1517:12;1476:55;1592:2;1585:4;1577:6;1573:17;1566:4;1557:7;1553:18;1540:55;1640:1;1615:16;;;1633:4;1611:27;1604:38;;;;1619:7;1211:462;-1:-1:-1;;;1211:462:168:o;1678:665::-;1773:6;1781;1789;1797;1850:3;1838:9;1829:7;1825:23;1821:33;1818:53;;;1867:1;1864;1857:12;1818:53;1906:9;1893:23;1925:31;1950:5;1925:31;:::i;:::-;1975:5;-1:-1:-1;2032:2:168;2017:18;;2004:32;2045:33;2004:32;2045:33;:::i;:::-;2097:7;-1:-1:-1;2151:2:168;2136:18;;2123:32;;-1:-1:-1;2206:2:168;2191:18;;2178:32;2233:18;2222:30;;2219:50;;;2265:1;2262;2255:12;2219:50;2288:49;2329:7;2320:6;2309:9;2305:22;2288:49;:::i;:::-;2278:59;;;1678:665;;;;;;;:::o;2984:180::-;3043:6;3096:2;3084:9;3075:7;3071:23;3067:32;3064:52;;;3112:1;3109;3102:12;3064:52;-1:-1:-1;3135:23:168;;2984:180;-1:-1:-1;2984:180:168:o;3169:250::-;3254:1;3264:113;3278:6;3275:1;3272:13;3264:113;;;3354:11;;;3348:18;3335:11;;;3328:39;3300:2;3293:10;3264:113;;;-1:-1:-1;;3411:1:168;3393:16;;3386:27;3169:250::o;3424:329::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:76;3615:6;3608:4;3603:3;3599:14;3592:4;3585:5;3581:16;3546:76;:::i;:::-;3667:2;3655:15;-1:-1:-1;;3651:88:168;3642:98;;;;3742:4;3638:109;;3424:329;-1:-1:-1;;3424:329:168:o;3758:435::-;-1:-1:-1;;;;;3992:6:168;3988:55;3977:9;3970:74;4080:6;4075:2;4064:9;4060:18;4053:34;4123:2;4118;4107:9;4103:18;4096:30;3951:4;4143:44;4183:2;4172:9;4168:18;4160:6;4143:44;:::i;4198:484::-;4251:3;4289:5;4283:12;4316:6;4311:3;4304:19;4342:4;4371:2;4366:3;4362:12;4355:19;;4408:2;4401:5;4397:14;4429:1;4439:218;4453:6;4450:1;4447:13;4439:218;;;4518:13;;-1:-1:-1;;;;;4514:62:168;4502:75;;4597:12;;;;4632:15;;;;4475:1;4468:9;4439:218;;;-1:-1:-1;4673:3:168;;4198:484;-1:-1:-1;;;;;4198:484:168:o;4687:261::-;4866:2;4855:9;4848:21;4829:4;4886:56;4938:2;4927:9;4923:18;4915:6;4886:56;:::i;5203:183::-;5263:4;5296:18;5288:6;5285:30;5282:56;;;5318:18;;:::i;:::-;-1:-1:-1;5363:1:168;5359:14;5375:4;5355:25;;5203:183::o;5391:662::-;5445:5;5498:3;5491:4;5483:6;5479:17;5475:27;5465:55;;5516:1;5513;5506:12;5465:55;5552:6;5539:20;5578:4;5602:60;5618:43;5658:2;5618:43;:::i;5602:60::-;5696:15;;;5782:1;5778:10;;;;5766:23;;5762:32;;;5727:12;;;;5806:15;;;5803:35;;;5834:1;5831;5824:12;5803:35;5870:2;5862:6;5858:15;5882:142;5898:6;5893:3;5890:15;5882:142;;;5964:17;;5952:30;;6002:12;;;;5915;;5882:142;;;-1:-1:-1;6042:5:168;5391:662;-1:-1:-1;;;;;;5391:662:168:o;6058:348::-;6142:6;6195:2;6183:9;6174:7;6170:23;6166:32;6163:52;;;6211:1;6208;6201:12;6163:52;6251:9;6238:23;6284:18;6276:6;6273:30;6270:50;;;6316:1;6313;6306:12;6270:50;6339:61;6392:7;6383:6;6372:9;6368:22;6339:61;:::i;:::-;6329:71;6058:348;-1:-1:-1;;;;6058:348:168:o;6593:982::-;6731:6;6739;6747;6755;6763;6771;6824:3;6812:9;6803:7;6799:23;6795:33;6792:53;;;6841:1;6838;6831:12;6792:53;6880:9;6867:23;6899:31;6924:5;6899:31;:::i;:::-;6949:5;-1:-1:-1;7005:2:168;6990:18;;6977:32;7028:18;7058:14;;;7055:34;;;7085:1;7082;7075:12;7055:34;7108:61;7161:7;7152:6;7141:9;7137:22;7108:61;:::i;:::-;7098:71;;7216:2;7205:9;7201:18;7188:32;7178:42;;7272:2;7261:9;7257:18;7244:32;7229:47;;7285:33;7310:7;7285:33;:::i;:::-;7337:7;;-1:-1:-1;7391:3:168;7376:19;;7363:33;;-1:-1:-1;7449:3:168;7434:19;;7421:33;;7466:16;;;7463:36;;;7495:1;7492;7485:12;7463:36;;7518:51;7561:7;7550:8;7539:9;7535:24;7518:51;:::i;:::-;7508:61;;;6593:982;;;;;;;;:::o;7580:315::-;7648:6;7656;7709:2;7697:9;7688:7;7684:23;7680:32;7677:52;;;7725:1;7722;7715:12;7677:52;7764:9;7751:23;7783:31;7808:5;7783:31;:::i;:::-;7833:5;7885:2;7870:18;;;;7857:32;;-1:-1:-1;;;7580:315:168:o;8409:484::-;8511:6;8519;8527;8580:2;8568:9;8559:7;8555:23;8551:32;8548:52;;;8596:1;8593;8586:12;8548:52;8632:9;8619:23;8609:33;;8693:2;8682:9;8678:18;8665:32;8720:18;8712:6;8709:30;8706:50;;;8752:1;8749;8742:12;8706:50;8775:61;8828:7;8819:6;8808:9;8804:22;8775:61;:::i;:::-;8765:71;;;8883:2;8872:9;8868:18;8855:32;8845:42;;8409:484;;;;;:::o;9186:1697::-;9390:4;9419:2;9459;9448:9;9444:18;9489:2;9478:9;9471:21;9512:6;9547;9541:13;9578:6;9570;9563:22;9604:2;9594:12;;9637:2;9626:9;9622:18;9615:25;;9699:2;9689:6;9686:1;9682:14;9671:9;9667:30;9663:39;9737:2;9729:6;9725:15;9758:1;9779;9789:1065;9805:6;9800:3;9797:15;9789:1065;;;9874:22;;;9898:66;9870:95;9858:108;;9989:13;;10076:9;;-1:-1:-1;;;;;10072:58:168;10057:74;;10170:11;;10164:18;10202:15;;;10195:27;;;10283:19;;10029:15;;;10315:24;;;10405:21;;;;10450:1;;10373:2;10361:15;;;10464:282;10480:8;10475:3;10472:17;10464:282;;;10561:15;;10578:66;10557:88;10543:103;;10715:17;;;;10508:1;10499:11;;;;;10672:14;;;;10464:282;;;-1:-1:-1;10832:12:168;;;;10769:5;-1:-1:-1;;;10797:15:168;;;;9831:1;9822:11;9789:1065;;;-1:-1:-1;10871:6:168;;9186:1697;-1:-1:-1;;;;;;;;;9186:1697:168:o;10888:734::-;10992:6;11000;11008;11016;11024;11077:3;11065:9;11056:7;11052:23;11048:33;11045:53;;;11094:1;11091;11084:12;11045:53;11133:9;11120:23;11152:31;11177:5;11152:31;:::i;:::-;11202:5;-1:-1:-1;11259:2:168;11244:18;;11231:32;11272:33;11231:32;11272:33;:::i;:::-;11324:7;-1:-1:-1;11378:2:168;11363:18;;11350:32;;-1:-1:-1;11433:2:168;11418:18;;11405:32;11460:18;11449:30;;11446:50;;;11492:1;11489;11482:12;11446:50;11515:49;11556:7;11547:6;11536:9;11532:22;11515:49;:::i;:::-;10888:734;;;;-1:-1:-1;10888:734:168;;11611:3;11596:19;11583:33;;10888:734;-1:-1:-1;;;10888:734:168:o;11858:861::-;12020:4;12049:2;12089;12078:9;12074:18;12119:2;12108:9;12101:21;12142:6;12177;12171:13;12208:6;12200;12193:22;12246:2;12235:9;12231:18;12224:25;;12308:2;12298:6;12295:1;12291:14;12280:9;12276:30;12272:39;12258:53;;12346:2;12338:6;12334:15;12367:1;12377:313;12391:6;12388:1;12385:13;12377:313;;;12480:66;12468:9;12460:6;12456:22;12452:95;12447:3;12440:108;12571:39;12603:6;12594;12588:13;12571:39;:::i;:::-;12561:49;-1:-1:-1;12668:12:168;;;;12633:15;;;;12413:1;12406:9;12377:313;;;-1:-1:-1;12707:6:168;;11858:861;-1:-1:-1;;;;;;;11858:861:168:o;12990:383::-;13067:6;13075;13083;13136:2;13124:9;13115:7;13111:23;13107:32;13104:52;;;13152:1;13149;13142:12;13104:52;13191:9;13178:23;13210:31;13235:5;13210:31;:::i;:::-;13260:5;13312:2;13297:18;;13284:32;;-1:-1:-1;13363:2:168;13348:18;;;13335:32;;12990:383;-1:-1:-1;;;12990:383:168:o;13378:416::-;13471:6;13479;13532:2;13520:9;13511:7;13507:23;13503:32;13500:52;;;13548:1;13545;13538:12;13500:52;13588:9;13575:23;13621:18;13613:6;13610:30;13607:50;;;13653:1;13650;13643:12;13607:50;13676:61;13729:7;13720:6;13709:9;13705:22;13676:61;:::i;:::-;13666:71;13784:2;13769:18;;;;13756:32;;-1:-1:-1;;;;13378:416:168:o;13799:435::-;13852:3;13890:5;13884:12;13917:6;13912:3;13905:19;13943:4;13972:2;13967:3;13963:12;13956:19;;14009:2;14002:5;13998:14;14030:1;14040:169;14054:6;14051:1;14048:13;14040:169;;;14115:13;;14103:26;;14149:12;;;;14184:15;;;;14076:1;14069:9;14040:169;;14239:261;14418:2;14407:9;14400:21;14381:4;14438:56;14490:2;14479:9;14475:18;14467:6;14438:56;:::i;15650:248::-;15718:6;15726;15779:2;15767:9;15758:7;15754:23;15750:32;15747:52;;;15795:1;15792;15785:12;15747:52;-1:-1:-1;;15818:23:168;;;15888:2;15873:18;;;15860:32;;-1:-1:-1;15650:248:168:o;16658:370::-;-1:-1:-1;;;;;16763:5:168;16757:12;16753:61;16748:3;16741:74;16864:4;16857:5;16853:16;16847:23;16840:4;16835:3;16831:14;16824:47;16723:3;16917:4;16910:5;16906:16;16900:23;16955:4;16948;16943:3;16939:14;16932:28;16976:46;17016:4;17011:3;17007:14;16993:12;16976:46;:::i;17033:791::-;-1:-1:-1;;;;;17400:6:168;17396:55;17385:9;17378:74;17488:3;17483:2;17472:9;17468:18;17461:31;17359:4;17515:69;17579:3;17568:9;17564:19;17556:6;17515:69;:::i;:::-;17632:9;17624:6;17620:22;17615:2;17604:9;17600:18;17593:50;17666:32;17691:6;17683;17666:32;:::i;:::-;17652:46;;17746:9;17738:6;17734:22;17729:2;17718:9;17714:18;17707:50;17774:44;17811:6;17803;17774:44;:::i;17829:146::-;17916:13;;17938:31;17916:13;17938:31;:::i;17980:167::-;18058:13;;18111:10;18100:22;;18090:33;;18080:61;;18137:1;18134;18127:12;18152:164;18228:13;;18277;;18270:21;18260:32;;18250:60;;18306:1;18303;18296:12;18321:441;18374:5;18427:3;18420:4;18412:6;18408:17;18404:27;18394:55;;18445:1;18442;18435:12;18394:55;18474:6;18468:13;18505:48;18521:31;18549:2;18521:31;:::i;18505:48::-;18578:2;18569:7;18562:19;18624:3;18617:4;18612:2;18604:6;18600:15;18596:26;18593:35;18590:55;;;18641:1;18638;18631:12;18590:55;18654:77;18728:2;18721:4;18712:7;18708:18;18701:4;18693:6;18689:17;18654:77;:::i;18767:1453::-;18878:6;18886;18930:9;18921:7;18917:23;18960:3;18956:2;18952:12;18949:32;;;18977:1;18974;18967:12;18949:32;19000:6;19026:2;19022;19018:11;19015:31;;;19042:1;19039;19032:12;19015:31;19068:22;;:::i;:::-;19055:35;;19113:48;19151:9;19113:48;:::i;:::-;19106:5;19099:63;19194:57;19247:2;19236:9;19232:18;19194:57;:::i;:::-;19189:2;19182:5;19178:14;19171:81;19284:57;19337:2;19326:9;19322:18;19284:57;:::i;:::-;19279:2;19272:5;19268:14;19261:81;19395:2;19384:9;19380:18;19374:25;19369:2;19362:5;19358:14;19351:49;19454:3;19443:9;19439:19;19433:26;19427:3;19420:5;19416:15;19409:51;19493:49;19537:3;19526:9;19522:19;19493:49;:::i;:::-;19487:3;19480:5;19476:15;19469:74;19597:3;19586:9;19582:19;19576:26;19570:3;19563:5;19559:15;19552:51;19657:3;19646:9;19642:19;19636:26;19630:3;19623:5;19619:15;19612:51;19682:3;19738:2;19727:9;19723:18;19717:25;19712:2;19705:5;19701:14;19694:49;;19762:3;19797:46;19839:2;19828:9;19824:18;19797:46;:::i;:::-;19781:14;;;19774:70;19863:3;19904:18;;;19898:25;19882:14;;;19875:49;19943:3;19984:18;;;19978:25;19962:14;;;19955:49;20057:18;;20051:25;19785:5;;-1:-1:-1;20099:18:168;20088:30;;20085:50;;;20131:1;20128;20121:12;20085:50;20154:60;20206:7;20197:6;20186:9;20182:22;20154:60;:::i;:::-;20144:70;;;18767:1453;;;;;:::o;20225:437::-;20304:1;20300:12;;;;20347;;;20368:61;;20422:4;20414:6;20410:17;20400:27;;20368:61;20475:2;20467:6;20464:14;20444:18;20441:38;20438:218;;20512:77;20509:1;20502:88;20613:4;20610:1;20603:15;20641:4;20638:1;20631:15;20438:218;;20225:437;;;:::o;20667:184::-;20737:6;20790:2;20778:9;20769:7;20765:23;20761:32;20758:52;;;20806:1;20803;20796:12;20758:52;-1:-1:-1;20829:16:168;;20667:184;-1:-1:-1;20667:184:168:o;20856:202::-;20923:6;20976:2;20964:9;20955:7;20951:23;20947:32;20944:52;;;20992:1;20989;20982:12;20944:52;21015:37;21042:9;21015:37;:::i;21467:184::-;21519:77;21516:1;21509:88;21616:4;21613:1;21606:15;21640:4;21637:1;21630:15;21944:1039;22027:12;;-1:-1:-1;;;;;2420:54:168;2408:67;;22091:4;22084:5;22080:16;22074:23;22106:54;22154:4;22149:3;22145:14;22131:12;-1:-1:-1;;;;;2420:54:168;2408:67;;2348:133;22106:54;;22208:4;22201:5;22197:16;22191:23;22223:56;22273:4;22268:3;22264:14;22248;-1:-1:-1;;;;;2420:54:168;2408:67;;2348:133;22223:56;;22328:4;22321:5;22317:16;22311:23;22304:4;22299:3;22295:14;22288:47;22384:4;22377:5;22373:16;22367:23;22360:4;22355:3;22351:14;22344:47;22439:4;22432:5;22428:16;22422:23;22454:49;22497:4;22492:3;22488:14;22472;21921:10;21910:22;21898:35;;21845:94;22454:49;;22552:4;22545:5;22541:16;22535:23;22528:4;22523:3;22519:14;22512:47;22608:4;22601:5;22597:16;22591:23;22584:4;22579:3;22575:14;22568:47;22634:6;22687:2;22680:5;22676:14;22670:21;22665:2;22660:3;22656:12;22649:43;;22711:6;22765:2;22758:5;22754:14;22748:21;22778:45;22819:2;22814:3;22810:12;22794:14;8968:13;8961:21;8949:34;;8898:91;22778:45;-1:-1:-1;;22842:6:168;22884:14;;;22878:21;22864:12;;;22857:43;22919:6;22961:14;;;22955:21;22941:12;;22934:43;21944:1039::o;22988:240::-;23168:3;23153:19;;23181:41;23157:9;23204:6;23181:41;:::i;23233:844::-;23426:2;23415:9;23408:21;23389:4;23464:6;23458:13;23507:4;23502:2;23491:9;23487:18;23480:32;23535:63;23593:3;23582:9;23578:19;23564:12;23535:63;:::i;:::-;23521:77;;23647:2;23639:6;23635:15;23629:22;-1:-1:-1;;23800:2:168;23788:9;23780:6;23776:22;23772:31;23767:2;23756:9;23752:18;23745:59;23827:64;23884:6;23868:14;23827:64;:::i;:::-;23813:78;;23940:2;23932:6;23928:15;23922:22;23900:44;;24010:2;23998:9;23990:6;23986:22;23982:31;23975:4;23964:9;23960:20;23953:61;;24031:40;24064:6;24048:14;24031:40;:::i;24082:838::-;24400:4;-1:-1:-1;;;;;24510:2:168;24502:6;24498:15;24487:9;24480:34;24562:2;24554:6;24550:15;24545:2;24534:9;24530:18;24523:43;;24602:6;24597:2;24586:9;24582:18;24575:34;24645:6;24640:2;24629:9;24625:18;24618:34;24689:6;24683:3;24672:9;24668:19;24661:35;24733:3;24727;24716:9;24712:19;24705:32;24760:45;24800:3;24789:9;24785:19;24777:6;24760:45;:::i;:::-;24854:9;24846:6;24842:22;24836:3;24825:9;24821:19;24814:51;24882:32;24907:6;24899;24882:32;:::i;:::-;24874:40;24082:838;-1:-1:-1;;;;;;;;;;24082:838:168:o;24925:336::-;24994:6;25047:2;25035:9;25026:7;25022:23;25018:32;25015:52;;;25063:1;25060;25053:12;25015:52;25095:9;25089:16;25145:66;25138:5;25134:78;25127:5;25124:89;25114:117;;25227:1;25224;25217:12;25266:305;25477:2;25466:9;25459:21;25440:4;25497:68;25561:2;25550:9;25546:18;25538:6;25497:68;:::i;25878:287::-;26007:3;26045:6;26039:13;26061:66;26120:6;26115:3;26108:4;26100:6;26096:17;26061:66;:::i;:::-;26143:16;;;;;25878:287;-1:-1:-1;;25878:287:168:o;26170:970::-;26540:4;26569:3;-1:-1:-1;;;;;26672:2:168;26664:6;26660:15;26649:9;26642:34;26724:2;26716:6;26712:15;26707:2;26696:9;26692:18;26685:43;;26764:6;26759:2;26748:9;26744:18;26737:34;26807:6;26802:2;26791:9;26787:18;26780:34;26851:6;26845:3;26834:9;26830:19;26823:35;26895:2;26889:3;26878:9;26874:19;26867:31;26921:44;26961:2;26950:9;26946:18;26938:6;26921:44;:::i;:::-;26907:58;;27014:9;27006:6;27002:22;26996:3;26985:9;26981:19;26974:51;27042:32;27067:6;27059;27042:32;:::i;:::-;27034:40;;;27083:51;27129:3;27118:9;27114:19;27106:6;27083:51;:::i;:::-;26170:970;;;;;;;;;;;:::o;27145:219::-;27294:2;27283:9;27276:21;27257:4;27314:44;27354:2;27343:9;27339:18;27331:6;27314:44;:::i;27591:288::-;27766:6;27755:9;27748:25;27809:2;27804;27793:9;27789:18;27782:30;27729:4;27829:44;27869:2;27858:9;27854:18;27846:6;27829:44;:::i;28208:283::-;28310:6;28363:2;28351:9;28342:7;28338:23;28334:32;28331:52;;;28379:1;28376;28369:12;28331:52;28411:9;28405:16;28430:31;28455:5;28430:31;:::i;29090:430::-;29287:66;29279:6;29275:79;29270:3;29263:92;29245:3;29384:6;29378:13;29400:74;29467:6;29463:1;29458:3;29454:11;29447:4;29439:6;29435:17;29400:74;:::i;:::-;29494:16;;;;29512:1;29490:24;;29090:430;-1:-1:-1;;;29090:430:168:o;29525:184::-;29577:77;29574:1;29567:88;29674:4;29671:1;29664:15;29698:4;29695:1;29688:15;29714:125;29779:9;;;29800:10;;;29797:36;;;29813:18;;:::i;29844:386::-;30077:2;30066:9;30059:21;30040:4;30097:68;30161:2;30150:9;30146:18;30138:6;30097:68;:::i;:::-;30089:76;;30215:6;30208:14;30201:22;30196:2;30185:9;30181:18;30174:50;29844:386;;;;;:::o;30791:980::-;31009:13;;-1:-1:-1;;;;;2420:54:168;2408:67;;30971:3;30956:19;;31081:4;31073:6;31069:17;31063:24;31096:60;31150:4;31139:9;31135:20;31121:12;-1:-1:-1;;;;;2420:54:168;2408:67;;2348:133;31096:60;;31205:4;31197:6;31193:17;31187:24;31220:62;31276:4;31265:9;31261:20;31245:14;-1:-1:-1;;;;;2420:54:168;2408:67;;2348:133;31220:62;;31338:4;31330:6;31326:17;31320:24;31313:4;31302:9;31298:20;31291:54;31401:4;31393:6;31389:17;31383:24;31376:4;31365:9;31361:20;31354:54;31464:4;31456:6;31452:17;31446:24;31439:4;31428:9;31424:20;31417:54;31527:4;31519:6;31515:17;31509:24;31502:4;31491:9;31487:20;31480:54;31590:4;31582:6;31578:17;31572:24;31565:4;31554:9;31550:20;31543:54;31616:6;31676:2;31668:6;31664:15;31658:22;31653:2;31642:9;31638:18;31631:50;;31700:6;31760:2;31752:6;31748:15;31742:22;31737:2;31726:9;31722:18;31715:50;;30791:980;;;;:::o;31776:195::-;31815:3;31846:66;31839:5;31836:77;31833:103;;31916:18;;:::i;:::-;-1:-1:-1;31963:1:168;31952:13;;31776:195::o;31976:168::-;32049:9;;;32080;;32097:15;;;32091:22;;32077:37;32067:71;;32118:18;;:::i;32576:544::-;32677:2;32672:3;32669:11;32666:448;;;32713:1;32738:5;32734:2;32727:17;32783:4;32779:2;32769:19;32853:2;32841:10;32837:19;32834:1;32830:27;32824:4;32820:38;32889:4;32877:10;32874:20;32871:47;;;-1:-1:-1;32912:4:168;32871:47;32967:2;32962:3;32958:12;32955:1;32951:20;32945:4;32941:31;32931:41;;33022:82;33040:2;33033:5;33030:13;33022:82;;;33085:17;;;33066:1;33055:13;33022:82;;33356:1467;33480:3;33474:10;33507:18;33499:6;33496:30;33493:56;;;33529:18;;:::i;:::-;33558:96;33647:6;33607:38;33639:4;33633:11;33607:38;:::i;:::-;33601:4;33558:96;:::i;:::-;33709:4;;33773:2;33762:14;;33790:1;33785:781;;;;34610:1;34627:6;34624:89;;;-1:-1:-1;34679:19:168;;;34673:26;34624:89;33262:66;33253:1;33249:11;;;33245:84;33241:89;33231:100;33337:1;33333:11;;;33228:117;34726:81;;33755:1062;;33785:781;32523:1;32516:14;;;32560:4;32547:18;;-1:-1:-1;;33821:79:168;;;33997:236;34011:7;34008:1;34005:14;33997:236;;;34100:19;;;34094:26;34079:42;;34192:27;;;;34160:1;34148:14;;;;34027:19;;33997:236;;;34001:3;34261:6;34252:7;34249:19;34246:261;;;34322:19;;;34316:26;34423:66;34405:1;34401:14;;;34417:3;34397:24;34393:97;34389:102;34374:118;34359:134;;34246:261;-1:-1:-1;;;;;34553:1:168;34537:14;;;34533:22;34520:36;;-1:-1:-1;33356:1467:168:o;35264:248::-;35348:5;35342:12;35337:3;35330:25;35312:3;35401:4;35394:5;35390:16;35384:23;35439:4;35432;35427:3;35423:14;35416:28;35460:46;35500:4;35495:3;35491:14;35477:12;35460:46;:::i;35517:325::-;35722:6;35711:9;35704:25;35765:2;35760;35749:9;35745:18;35738:30;35685:4;35785:51;35832:2;35821:9;35817:18;35809:6;35785:51;:::i;35847:443::-;36055:66;36046:6;36042:2;36038:15;36034:88;36029:3;36022:101;36004:3;36152:6;36146:13;36168:75;36236:6;36231:2;36226:3;36222:12;36215:4;36207:6;36203:17;36168:75;:::i;:::-;36263:16;;;;36281:2;36259:25;;35847:443;-1:-1:-1;;;35847:443:168:o;36295:1493::-;36358:3;36389;36430:2;36464;36457:5;36453:14;36490:5;36513:1;36534;36544:1218;36560:4;36555:3;36552:13;36544:1218;;;36623:16;;;36611:29;;36663:13;;36733:9;;36755:20;;;36798:4;36927:11;;;;36824:13;;;;36733:9;36882:1;36878:14;;;36868:25;;36864:34;;36962:1;36976:679;36992:6;36987:3;36984:15;36976:679;;;37071:17;;;-1:-1:-1;;37067:90:168;37053:105;;37185:15;;37236:9;;-1:-1:-1;;;;;37232:58:168;37217:74;;37338:11;;;37332:18;37315:15;;;37308:43;37378:4;37425:11;;;37419:18;37461:15;;;37454:27;;;37508:47;37539:15;;;37419:18;37508:47;:::i;:::-;37584:17;;;;37627:14;;;;37498:57;-1:-1:-1;;37018:1:168;37009:11;36976:679;;;-1:-1:-1;37740:12:168;;;;37676:6;-1:-1:-1;37705:15:168;;;;;-1:-1:-1;;;36584:1:168;36575:11;36544:1218;;;-1:-1:-1;37778:4:168;;36295:1493;-1:-1:-1;;;;;;;36295:1493:168:o;37793:3028::-;38350:3;38403:21;;;38473:13;;38376:18;;;38495:22;;;38321:4;;38350:3;38536;;38555:18;;;;38592:4;38619:15;;;38321:4;38662:218;38676:6;38673:1;38670:13;38662:218;;;38741:13;;-1:-1:-1;;;;;38737:62:168;38725:75;;38820:12;;;;38855:15;;;;38698:1;38691:9;38662:218;;;38666:3;;38925:9;38920:3;38916:19;38911:2;38900:9;38896:18;38889:47;38959:41;38996:3;38988:6;38959:41;:::i;:::-;38945:55;;39019:2;39009:12;;39069:9;39061:6;39057:22;39052:2;39041:9;39037:18;39030:50;39102:6;39139;39133:13;39170:8;39162:6;39155:24;39209:2;39201:6;39197:15;39188:24;;39270:2;39258:8;39255:1;39251:16;39243:6;39239:29;39235:38;39310:2;39302:6;39298:15;39333:1;39343:1340;39359:8;39354:3;39351:17;39343:1340;;;-1:-1:-1;;39444:6:168;39436;39432:19;39428:92;39421:5;39414:107;39550:8;39544:15;39582:6;39622:2;39616:9;39608:6;39601:25;39677:2;39673;39669:11;39663:18;39658:2;39650:6;39646:15;39639:43;39729:2;39725;39721:11;39715:18;39746:55;39797:2;39789:6;39785:15;39771:12;-1:-1:-1;;;;;2420:54:168;2408:67;;2348:133;39746:55;-1:-1:-1;39824:4:168;39871:11;;;39865:18;39848:15;;;39841:43;39927:11;;;39921:18;39904:15;;;39897:43;39981:11;;;39975:18;21921:10;21910:22;40040:15;;;21898:35;40079:4;40126:11;;;40120:18;40103:15;;;40096:43;40162:4;40209:11;;;40203:18;40186:15;;;40179:43;40246:6;40296:12;;;40290:19;40272:16;;;40265:45;40334:6;40384:12;;;40378:19;40360:16;;;40353:45;40422:6;40469:12;;;40463:19;40502:16;;;40495:28;;;40546:49;40579:15;;;40463:19;40546:49;:::i;:::-;40659:14;;;;40536:59;-1:-1:-1;;;40620:17:168;;;;39387:1;39378:11;39343:1340;;;39347:3;;40733:9;40725:6;40721:22;40714:4;40703:9;40699:20;40692:52;40761:54;40808:6;40800;40761:54;:::i;:::-;40753:62;37793:3028;-1:-1:-1;;;;;;;;;;;;;;37793:3028:168:o;41396:348::-;41626:2;41615:9;41608:21;41589:4;41646:49;41691:2;41680:9;41676:18;41309:2;41297:15;;41344:12;41337:4;41328:14;;41321:36;41382:2;41373:12;;41232:159;41646:49;41638:57;;41731:6;41726:2;41715:9;41711:18;41704:34;41396:348;;;;:::o;41913:::-;42143:2;42132:9;42125:21;42106:4;42163:49;42208:2;42197:9;42193:18;41826:2;41814:15;;41861:12;41854:4;41845:14;;41838:36;41899:2;41890:12;;41749:159;42266:630;42568:6;42557:9;42550:25;42611:3;42606:2;42595:9;42591:18;42584:31;42531:4;42638:52;42685:3;42674:9;42670:19;42662:6;42638:52;:::i;:::-;-1:-1:-1;;;;;42730:6:168;42726:55;42721:2;42710:9;42706:18;42699:83;42830:9;42822:6;42818:22;42813:2;42802:9;42798:18;42791:50;42858:32;42883:6;42875;42858:32;:::i;43304:439::-;43554:2;43543:9;43536:21;43517:4;43580:49;43625:2;43614:9;43610:18;41309:2;41297:15;;41344:12;41337:4;41328:14;;41321:36;41382:2;41373:12;;41232:159;43580:49;43677:9;43669:6;43665:22;43660:2;43649:9;43645:18;43638:50;43705:32;43730:6;43722;43705:32;:::i;43748:439::-;43998:2;43987:9;43980:21;43961:4;44024:49;44069:2;44058:9;44054:18;41826:2;41814:15;;41861:12;41854:4;41845:14;;41838:36;41899:2;41890:12;;41749:159;44192:691;44522:3;44511:9;44504:22;44485:4;44549:69;44613:3;44602:9;44598:19;44590:6;44549:69;:::i;:::-;-1:-1:-1;;;;;44658:6:168;44654:55;44649:2;44638:9;44634:18;44627:83;44758:9;44750:6;44746:22;44741:2;44730:9;44726:18;44719:50;44786:32;44811:6;44803;44786:32;:::i;:::-;44778:40;;;44868:6;44861:14;44854:22;44849:2;44838:9;44834:18;44827:50;44192:691;;;;;;;:::o;45646:397::-;45876:2;45865:9;45858:21;45839:4;45896:49;45941:2;45930:9;45926:18;41309:2;41297:15;;41344:12;41337:4;41328:14;;41321:36;41382:2;41373:12;;41232:159;45896:49;45888:57;;-1:-1:-1;;;;;45985:6:168;45981:55;45976:2;45965:9;45961:18;45954:83;45646:397;;;;:::o;46048:::-;46278:2;46267:9;46260:21;46241:4;46298:49;46343:2;46332:9;46328:18;41826:2;41814:15;;41861:12;41854:4;41845:14;;41838:36;41899:2;41890:12;;41749:159;46450:184;46502:77;46499:1;46492:88;46599:4;46596:1;46589:15;46623:4;46620:1;46613:15;46639:294;46720:1;46713:5;46710:12;46700:200;;46756:77;46753:1;46746:88;46857:4;46854:1;46847:15;46885:4;46882:1;46875:15;46700:200;46909:18;;46639:294::o;46938:1028::-;47337:4;47366:3;-1:-1:-1;;;;;47469:2:168;47461:6;47457:15;47446:9;47439:34;47509:6;47504:2;47493:9;47489:18;47482:34;47552:2;47547;47536:9;47532:18;47525:30;47572:44;47612:2;47601:9;47597:18;47589:6;47572:44;:::i;:::-;47564:52;;47625:53;47674:2;47663:9;47659:18;47651:6;47625:53;:::i;:::-;47709:3;47694:19;;47687:35;;;;-1:-1:-1;47753:3:168;47738:19;;47731:35;;;;47797:3;47782:19;;47775:35;;;;47847:15;;;47841:3;47826:19;;47819:44;47900:15;;;47894:3;47879:19;;47872:44;47947:3;47932:19;47925:35;;;;46938:1028;;-1:-1:-1;;;;46938:1028:168:o;47971:492::-;48146:3;48184:6;48178:13;48200:66;48259:6;48254:3;48247:4;48239:6;48235:17;48200:66;:::i;:::-;48329:13;;48288:16;;;;48351:70;48329:13;48288:16;48398:4;48386:17;;48351:70;:::i;:::-;48437:20;;47971:492;-1:-1:-1;;;;47971:492:168:o;48468:1133::-;48901:4;48930:3;-1:-1:-1;;;;;49033:2:168;49025:6;49021:15;49010:9;49003:34;49073:6;49068:2;49057:9;49053:18;49046:34;49116:2;49111;49100:9;49096:18;49089:30;49142:44;49182:2;49171:9;49167:18;49159:6;49142:44;:::i;:::-;49128:58;;49195:53;49244:2;49233:9;49229:18;49221:6;49195:53;:::i;:::-;49285:6;49279:3;49268:9;49264:19;49257:35;49329:6;49323:3;49312:9;49308:19;49301:35;49373:6;49367:3;49356:9;49352:19;49345:35;49429:2;49421:6;49417:15;49411:3;49400:9;49396:19;49389:44;49482:2;49474:6;49470:15;49464:3;49453:9;49449:19;49442:44;;49535:9;49527:6;49523:22;49517:3;49506:9;49502:19;49495:51;49563:32;49588:6;49580;49563:32;:::i;:::-;49555:40;48468:1133;-1:-1:-1;;;;;;;;;;;;;48468:1133:168:o;50046:395::-;50132:6;50140;50148;50201:2;50189:9;50180:7;50176:23;50172:32;50169:52;;;50217:1;50214;50207:12;50169:52;50249:9;50243:16;50299:4;50292:5;50288:16;50281:5;50278:27;50268:55;;50319:1;50316;50309:12;50268:55;50387:2;50372:18;;50366:25;50431:2;50416:18;;;50410:25;50342:5;;50366:25;;-1:-1:-1;50410:25:168;50046:395;-1:-1:-1;;;50046:395:168:o;54231:339::-;-1:-1:-1;;;;;54412:6:168;54408:55;54397:9;54390:74;54500:2;54495;54484:9;54480:18;54473:30;54371:4;54520:44;54560:2;54549:9;54545:18;54537:6;54520:44;:::i;54575:1051::-;54992:4;55021:3;55051:2;55040:9;55033:21;55077:56;55129:2;55118:9;55114:18;55106:6;55077:56;:::i;:::-;55164:2;55149:18;;;55142:34;;;;-1:-1:-1;;;;;55273:15:168;;;55268:2;55253:18;;55246:43;55325:22;;;55320:2;55305:18;;55298:50;-1:-1:-1;55357:17:168;;55443:15;;;55437:3;55422:19;;55415:44;-1:-1:-1;;55496:15:168;;;55490:3;55475:19;;55468:44;55561:4;55549:17;;;;55543:3;55528:19;;55521:46;55604:15;;;55598:3;55583:19;;;55576:44;;;;55391:15;;54575:1051;-1:-1:-1;54575:1051:168:o;55631:408::-;-1:-1:-1;;;;;55838:6:168;55834:55;55823:9;55816:74;55926:2;55921;55910:9;55906:18;55899:30;55797:4;55946:44;55986:2;55975:9;55971:18;55963:6;55946:44;:::i;:::-;55938:52;;56026:6;56021:2;56010:9;56006:18;55999:34;55631:408;;;;;;:::o;56319:128::-;56386:9;;;56407:11;;;56404:37;;;56421:18;;:::i;56452:610::-;56698:13;;56641:3;;56672;;56751:4;56778:15;;;56641:3;56821:175;56835:6;56832:1;56829:13;56821:175;;;56898:13;;56884:28;;56934:14;;;;56971:15;;;;56857:1;56850:9;56821:175;;;-1:-1:-1;;57005:21:168;;;-1:-1:-1;57042:14:168;;;;;-1:-1:-1;;;56452:610:168:o;57628:659::-;57693:5;57746:3;57739:4;57731:6;57727:17;57723:27;57713:55;;57764:1;57761;57754:12;57713:55;57793:6;57787:13;57819:4;57843:60;57859:43;57899:2;57859:43;:::i;57843:60::-;57937:15;;;58023:1;58019:10;;;;58007:23;;58003:32;;;57968:12;;;;58047:15;;;58044:35;;;58075:1;58072;58065:12;58044:35;58111:2;58103:6;58099:15;58123:135;58139:6;58134:3;58131:15;58123:135;;;58205:10;;58193:23;;58236:12;;;;58156;;58123:135;;58292:614;58421:6;58429;58482:2;58470:9;58461:7;58457:23;58453:32;58450:52;;;58498:1;58495;58488:12;58450:52;58531:9;58525:16;58560:18;58601:2;58593:6;58590:14;58587:34;;;58617:1;58614;58607:12;58587:34;58640:72;58704:7;58695:6;58684:9;58680:22;58640:72;:::i;:::-;58630:82;;58758:2;58747:9;58743:18;58737:25;58721:41;;58787:2;58777:8;58774:16;58771:36;;;58803:1;58800;58793:12;58771:36;;58826:74;58892:7;58881:8;58870:9;58866:24;58826:74;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "authorizer()": "d09edf31",
    "eHandler()": "9fbcc9ad",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "factory()": "c45a0155",
    "failed()": "ba414fa6",
    "getProof(bytes32[],uint256)": "b8616195",
    "getRoot(bytes32[])": "2e08d602",
    "handler()": "c80916d4",
    "hashLeafPairs(bytes32,bytes32)": "dd1d2599",
    "leaves(bytes32)": "151bcd2c",
    "log2ceil(uint256)": "e27d5153",
    "log2ceilBitMagic(uint256)": "cf06c7b7",
    "multisend()": "294402cc",
    "relayer()": "8406c079",
    "safe1()": "ad9b0475",
    "safe2()": "7d499aa4",
    "safe3()": "0c8548f5",
    "setUp()": "0a9254e4",
    "settlement()": "51160630",
    "signMessageLib()": "dfe274a9",
    "singleton()": "b62654fb",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_SetUpState_ComposableCoWDomainSeparator_is_set()": "329696ac",
    "test_SetUpState_ComposableCoWDomainVerifier_is_set()": "b716db66",
    "test_createAndRemove_FuzzSetAndEmit(address,address,bytes32,bytes)": "9e3791ff",
    "test_createAndRemove_e2e()": "7db2a8ba",
    "test_createWithContextAndRemove_FuzzSetAndEmit(address,address,bytes32,bytes,bytes32)": "70af4cdb",
    "test_create_RevertOnInvalidHandler()": "dd6345ec",
    "test_getTradeableOrderWithSignature_FuzzRevertInvalidProof(address,bytes32[],bytes32,address,bytes32,bytes)": "345e8d4a",
    "test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder(address,address,bytes32,bytes)": "0aa93529",
    "test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe()": "a3dc493d",
    "test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe()": "aade1182",
    "test_getTradeableOrderWithSignature_RevertInterfaceNotSupported()": "a3d50ac5",
    "test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash()": "a19a9889",
    "test_isValidSafeSignature_FuzzPassesContextToHandler(address,bytes32)": "945602ce",
    "test_isValidSafeSignature_FuzzRevertInvalidProof(address,bytes32[],bytes32,address,bytes32,bytes)": "ee692c5f",
    "test_isValidSafeSignature_FuzzRevertInvalidSingleOrder(address,address,bytes32,bytes)": "36a7d482",
    "test_setRootWithContext_FuzzSetAndEmit(address,bytes32,bytes32)": "b379f91a",
    "test_setRootWithContext_e2e()": "34d17a70",
    "test_setRoot_FuzzSetAndEmit(address,bytes32)": "3ba95806",
    "test_setRoot_e2e()": "2c434b98",
    "token0()": "0dfe1681",
    "token1()": "d21220a7",
    "token2()": "25be124e",
    "vault()": "fbfa77cf",
    "verifyProof(bytes32,bytes32[],bytes32)": "58161a42",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"ConditionalOrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ComposableCoW.Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"MerkleRootSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISwapGuard\",\"name\":\"swapGuard\",\"type\":\"address\"}],\"name\":\"SwapGuardSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eHandler\",\"outputs\":[{\"internalType\":\"contract ExtensibleFallbackHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract SafeProxyFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"}],\"name\":\"getProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"handler\",\"outputs\":[{\"internalType\":\"contract CompatibilityFallbackHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"hashLeafPairs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"leaves\",\"outputs\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2ceil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2ceilBitMagic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multisend\",\"outputs\":[{\"internalType\":\"contract MultiSend\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safe1\",\"outputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safe2\",\"outputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safe3\",\"outputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlement\",\"outputs\":[{\"internalType\":\"contract GPv2Settlement\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signMessageLib\",\"outputs\":[{\"internalType\":\"contract SignMessageLib\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"singleton\",\"outputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SetUpState_ComposableCoWDomainSeparator_is_set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SetUpState_ComposableCoWDomainVerifier_is_set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"name\":\"test_createAndRemove_FuzzSetAndEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_createAndRemove_e2e\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"ctxValue\",\"type\":\"bytes32\"}],\"name\":\"test_createWithContextAndRemove_FuzzSetAndEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_create_RevertOnInvalidHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"name\":\"test_getTradeableOrderWithSignature_FuzzRevertInvalidProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"name\":\"test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getTradeableOrderWithSignature_RevertInterfaceNotSupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"name\":\"test_isValidSafeSignature_FuzzPassesContextToHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"name\":\"test_isValidSafeSignature_FuzzRevertInvalidProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"name\":\"test_isValidSafeSignature_FuzzRevertInvalidSingleOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"test_setRootWithContext_FuzzSetAndEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_setRootWithContext_e2e\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"test_setRoot_FuzzSetAndEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_setRoot_e2e\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token2\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"valueToProve\",\"type\":\"bytes32\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"log2ceil(uint256)\":{\"details\":\"Note that x is assumed > 0\"},\"log2ceilBitMagic(uint256)\":{\"details\":\"Note that x assumed > 1\"},\"setUp()\":{\"details\":\"Sets up the CoW Protocol test environment.\"},\"test_SetUpState_ComposableCoWDomainSeparator_is_set()\":{\"details\":\"Ensure `ComposableCoW` and `Settlement` have the same domain separator\"},\"test_SetUpState_ComposableCoWDomainVerifier_is_set()\":{\"details\":\"Ensure `ComposableCoW` contract is the `ISafeSignatureVerifier` for `safe1` on the `settlement` domain\"},\"test_createAndRemove_FuzzSetAndEmit(address,address,bytes32,bytes)\":{\"details\":\"should be able to create and remove a single order\"},\"test_createAndRemove_e2e()\":{\"details\":\"An end-to-end test of the ComposableCoW contract that tests the following:     1. Does **NOT** validate a single order that is not authorized     2. `owner` can create a single order     3. Can lookup the validity of the single order for `owner`     4. **DOES** validate a single order that is authorized\"},\"test_createWithContextAndRemove_FuzzSetAndEmit(address,address,bytes32,bytes,bytes32)\":{\"details\":\"should be able to create and remove a single order\"},\"test_create_RevertOnInvalidHandler()\":{\"details\":\"Should disallow setting a handler that is address(0)\"},\"test_getTradeableOrderWithSignature_FuzzRevertInvalidProof(address,bytes32[],bytes32,address,bytes32,bytes)\":{\"details\":\"`getTradeableOrderWithSignature` should revert if given an invalid proof\"},\"test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder(address,address,bytes32,bytes)\":{\"details\":\"`getTradeableOrderWithSignature` should revert if given an invalid single order\"},\"test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe()\":{\"details\":\"should return a valid payload for a non-safe (ERC1271Forwarder)\"},\"test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe()\":{\"details\":\"should return a valid payload for a safe\"},\"test_getTradeableOrderWithSignature_RevertInterfaceNotSupported()\":{\"details\":\"`getTradeableOrderWithSignature` should revert if the interface is not supported\"},\"test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash()\":{\"details\":\"`BaseConditionalOrder` enforces that the order hash is valid\"},\"test_isValidSafeSignature_FuzzPassesContextToHandler(address,bytes32)\":{\"details\":\"Make sure `isValidSafeSignature` passes the context to the handler\"},\"test_isValidSafeSignature_FuzzRevertInvalidProof(address,bytes32[],bytes32,address,bytes32,bytes)\":{\"details\":\"Reverts on an invalid proof\"},\"test_isValidSafeSignature_FuzzRevertInvalidSingleOrder(address,address,bytes32,bytes)\":{\"details\":\"Reverts on an invalid single order\"},\"test_setRootWithContext_e2e()\":{\"details\":\"An end-to-end test of the ComposableCoW contract that tests the following:      1. Does **NOT** validate a proof that is not authorized      2. `owner` can set their merkle root      3. **DOES** validate a proof that is authorized      4. `owner` can remove their merkle root      5. Does **NOT** validate a proof that is not authorized\"},\"test_setRoot_FuzzSetAndEmit(address,bytes32)\":{\"details\":\"Can set the Merkle root for `owner`\"},\"test_setRoot_e2e()\":{\"details\":\"An end-to-end test of the ComposableCoW contract that tests the following:      1. Does **NOT** validate a proof that is not authorized      2. `owner` can set their merkle root      3. **DOES** validate a proof that is authorized      4. `owner` can remove their merkle root      5. Does **NOT** validate a proof that is not authorized\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hashLeafPairs(bytes32,bytes32)\":{\"notice\":\"ascending sort and concat prior to hashing\"},\"log2ceilBitMagic(uint256)\":{\"notice\":\"Original bitmagic adapted from https://github.com/paulrberg/prb-math/blob/main/contracts/PRBMath.sol\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ComposableCoW.t.sol\":\"ComposableCoWTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"lib/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/balancer/src/lib/helpers/AssetHelpers.sol\":{\"keccak256\":\"0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76\",\"dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH\"]},\"lib/balancer/src/lib/helpers/Authentication.sol\":{\"keccak256\":\"0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b\",\"dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF\"]},\"lib/balancer/src/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32\",\"dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9\"]},\"lib/balancer/src/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb\",\"dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH\"]},\"lib/balancer/src/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a\",\"dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq\"]},\"lib/balancer/src/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3\",\"dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ\"]},\"lib/balancer/src/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d\",\"dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc\"]},\"lib/balancer/src/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45\",\"dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9\"]},\"lib/balancer/src/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985\",\"dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj\"]},\"lib/balancer/src/lib/math/FixedPoint.sol\":{\"keccak256\":\"0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a\",\"dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8\"]},\"lib/balancer/src/lib/math/LogExpMath.sol\":{\"keccak256\":\"0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f\",\"dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T\"]},\"lib/balancer/src/lib/math/Math.sol\":{\"keccak256\":\"0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5\",\"dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp\"]},\"lib/balancer/src/lib/openzeppelin/AccessControl.sol\":{\"keccak256\":\"0xd579e821f7c87cb584669bf39e2cffdf4c5dddbfc18fc7a5689fecc71a220af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2294d003285005d4d17f1b603d98ea8c9c0f95dfc7ba454598fb455bbfc0fc1a\",\"dweb:/ipfs/QmUnrky7oFu11UgWpd87JaisgzBXahCf3uv2u8a4DqiLyi\"]},\"lib/balancer/src/lib/openzeppelin/Address.sol\":{\"keccak256\":\"0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e\",\"dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM\"]},\"lib/balancer/src/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246\",\"dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47\",\"dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableSet.sol\":{\"keccak256\":\"0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57\",\"dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK\"]},\"lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6\",\"dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C\"]},\"lib/balancer/src/lib/openzeppelin/SafeCast.sol\":{\"keccak256\":\"0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032\",\"dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk\"]},\"lib/balancer/src/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19\",\"dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj\"]},\"lib/balancer/src/vault/AssetManagers.sol\":{\"keccak256\":\"0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e\",\"dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn\"]},\"lib/balancer/src/vault/AssetTransfersHandler.sol\":{\"keccak256\":\"0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d\",\"dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR\"]},\"lib/balancer/src/vault/Authorizer.sol\":{\"keccak256\":\"0xf186458b2feb04dbe781855d45bb49c19b723359f489848767da877218498527\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://55cf8df8a17e36aecc85bfc7de5bd45ee98cf466bdb7bd0fbf28194e6a7ad891\",\"dweb:/ipfs/QmanjQQkR4AehuVReWsq4iv5LP6kTng7XLLpPZ4bhn5RT9\"]},\"lib/balancer/src/vault/Fees.sol\":{\"keccak256\":\"0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de\",\"dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY\"]},\"lib/balancer/src/vault/FlashLoans.sol\":{\"keccak256\":\"0x26fb5818caeb8980cbbab2cccb51f41fea5e5e28ef1516ab5d792427661e2f59\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ce3bc3abda989089faf10f3215abf5daa1cdceb11c80bfdb486d02c8656817b0\",\"dweb:/ipfs/Qmaq3wovoZr22zSfQGWNp3E1gsVHVwkRiAg15EnTtCML3S\"]},\"lib/balancer/src/vault/PoolBalances.sol\":{\"keccak256\":\"0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5\",\"dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b\"]},\"lib/balancer/src/vault/PoolRegistry.sol\":{\"keccak256\":\"0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61\",\"dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo\"]},\"lib/balancer/src/vault/PoolTokens.sol\":{\"keccak256\":\"0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18\",\"dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW\"]},\"lib/balancer/src/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1\",\"dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy\"]},\"lib/balancer/src/vault/Swaps.sol\":{\"keccak256\":\"0xc98ad2e27bcfd93272ce35b5be8b80f65876142e3a23af7dbe2cc18de3fe03f3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2e34f80abec5db0b6e3abba2ce3958bcaffe7fd53ea4d9af947400afdcff103a\",\"dweb:/ipfs/QmV2WTXMYdSDVx1HMEzMqSYak6F2g8iJqhTzPSNAQmEgpC\"]},\"lib/balancer/src/vault/UserBalance.sol\":{\"keccak256\":\"0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145\",\"dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv\"]},\"lib/balancer/src/vault/Vault.sol\":{\"keccak256\":\"0x8e26e3970f533eef5c24bb9c581e3f340b81f1f096217843fe3a67f22c7a6d58\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d55f23ed8b0e1cd52d517e640d856ae529308072de03cbf05797ec524ddeff50\",\"dweb:/ipfs/QmTsJudtVpPCyVVs1r1x5mgF1PuuH2FSuGQh3eFGjtJ4sx\"]},\"lib/balancer/src/vault/VaultAuthorization.sol\":{\"keccak256\":\"0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb\",\"dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz\"]},\"lib/balancer/src/vault/balances/BalanceAllocation.sol\":{\"keccak256\":\"0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0\",\"dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny\"]},\"lib/balancer/src/vault/balances/GeneralPoolsBalance.sol\":{\"keccak256\":\"0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e\",\"dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh\"]},\"lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol\":{\"keccak256\":\"0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8\",\"dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH\"]},\"lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol\":{\"keccak256\":\"0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9\",\"dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4\"]},\"lib/balancer/src/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4\",\"dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4\"]},\"lib/balancer/src/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2\",\"dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB\"]},\"lib/balancer/src/vault/interfaces/IBasePool.sol\":{\"keccak256\":\"0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd\",\"dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW\"]},\"lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce\",\"dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP\"]},\"lib/balancer/src/vault/interfaces/IGeneralPool.sol\":{\"keccak256\":\"0x450c3ed5a9bc6116697b9b424de93d00f23e870fdee9c0bda009cc7ef9268abc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://98fb2bd1c1f94dc1dfd70adad46df1fedd9697aee089b048696444641154d315\",\"dweb:/ipfs/QmU41tYKnbfqYqwvQxFj8JVpaVnYYsHfTL9oPNmE1peqkT\"]},\"lib/balancer/src/vault/interfaces/IMinimalSwapInfoPool.sol\":{\"keccak256\":\"0x5119d39c32df88286cc5391b81a7ad1208e46825b32dd49e68900342c5f0c741\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1400c06d1b8c0a6075f0d03e5bc1b02336f952f94eb4753726cbb206a0741372\",\"dweb:/ipfs/Qmcu8MRnpV39xyxzHAvAdGJXHp9yKxCvGcixbtci6YseA7\"]},\"lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol\":{\"keccak256\":\"0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05\",\"dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp\"]},\"lib/balancer/src/vault/interfaces/IVault.sol\":{\"keccak256\":\"0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619\",\"dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq\"]},\"lib/canonical-weth/src/WETH9.sol\":{\"keccak256\":\"0xe9d7e2895eca07b5f45c5ba51d577cfde6bd7505a0beb49af9eea266931d0f04\",\"urls\":[\"bzz-raw://6b2f9d01a4f8dd133b4da18e2c7a294be37408d27b75d6aaafdbf8000a394a76\",\"dweb:/ipfs/QmdZ482WjQzFmAbvFr5P5eHgHcGK11ohUirWqNdcb5m4sk\"]},\"lib/canonical-weth/src/interfaces/IWETH.sol\":{\"keccak256\":\"0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05\",\"dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL\"]},\"lib/cowprotocol/src/contracts/GPv2AllowListAuthentication.sol\":{\"keccak256\":\"0xaa05adb9743f3510d3148c26d488f4dab24ea064d685e7c916b756759d3e0af0\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://921ec52950fc8cad371274e08a2ca84e0ec3562361f4f7253b505d009b9f013d\",\"dweb:/ipfs/QmUcJACN5CRVMFWofhRTgpoe3wZvBepdqYtYHT4zBXX6LP\"]},\"lib/cowprotocol/src/contracts/GPv2Settlement.sol\":{\"keccak256\":\"0xc28bbf8245c27a4e0318ddb98affa388a78f5afdb00bbcf84897659ee7f08e71\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7e1200b13634efc822f5fb32fc71490bf244cd39b4d98fcb58c4208c620c5dd7\",\"dweb:/ipfs/QmcUizcEMpMkQ7Kw1sadmcUCaztDhtBavaSCJTp5JSMkVF\"]},\"lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol\":{\"keccak256\":\"0xb785d0cc8a18cad4bd7bdc46ba4f995b17e6a3f95c8cbefcc1be6618bfab1595\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://655f249d6af04d75e907376157e393d205ee6be73007f6d75d9bb1325a9efc28\",\"dweb:/ipfs/QmanQfzHUnyrGvknJ9EgkLLQ2Nfd1A6RnfFjXaStp6vgYr\"]},\"lib/cowprotocol/src/contracts/interfaces/GPv2Authentication.sol\":{\"keccak256\":\"0x13eafd3d4043356364572ff28f213ea39faeb4b21b53a900b35fa765a5e0347f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://71bbcdb728824b72046281d5ca6adc6da2d0806cf251b0662dfc8b06dec9845d\",\"dweb:/ipfs/Qme59yqn4QBBsVe9miUvyD1wVNNFvauXgsPBXT47Ahbizf\"]},\"lib/cowprotocol/src/contracts/interfaces/GPv2EIP1271.sol\":{\"keccak256\":\"0xea0afb5f00ece4de83adb6cf76629344dae3171db3040e50ed704e0650342ade\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4d9d40de14b1bd8ce70a2f94aa43957e77d7c71b58973e5dcc7d5765ded6cae7\",\"dweb:/ipfs/QmaYLbc84vUtKjdvHjwkYVvnr2hP54Q1B7Jm5KW4iuxt4j\"]},\"lib/cowprotocol/src/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x205fedd49ab79dd6d2824a056d61ec8bdd6bd02ea9b50e398ea4353095c5325b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4470ff225bda4345d08c27f7d2e41b079be66e51c2376f4170978aba85bef906\",\"dweb:/ipfs/QmUxq55vtTEDU63ttAUGUsEksH4gLq8dJHkQEC7Zy6gdT1\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2EIP1967.sol\":{\"keccak256\":\"0x9aec47a6c664a2ff139db0ca1418c9132128830c775005d667d85dafb3e8491f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cc5c8ddb4849fd080692a0495890f4f72297c42435a2e53ec8fbe35614a3661a\",\"dweb:/ipfs/QmevZYnJ7b3Pn5cJgmn1t1VwT6Sb45wrEFhHRA3tKjzd61\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol\":{\"keccak256\":\"0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f\",\"dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2SafeERC20.sol\":{\"keccak256\":\"0x746fa180cf0c8f866d124958afdabb7430bc79539335f8e25ea89c212378d03b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://eb94c53fd20b77c15cf44fcdb4939dba3e6e370661d114f73d59b2737ccf4e39\",\"dweb:/ipfs/QmeWYK6wZJ4WKT35yhYkhp1ixwcP348Dr5nS36fnx5FLVD\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Trade.sol\":{\"keccak256\":\"0x416f67497b82e72e364c94f9322e89a3f993690751f061e55f9b33c135dc6c5a\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://246c6840d43acd6b64135ad7bf99e2a9c87dc9a7c43d14fd43097e8321a424db\",\"dweb:/ipfs/QmXmV7qxM7hmEc5Z5L2crsMzYb9t4GPes8KM5oLXsgxVR5\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol\":{\"keccak256\":\"0x3fbac207882d1e12ce41b112c1d878e3b234842904c11e006059ab642740f84b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://eba7b5484ed100a8b4d8af0d62bcc3f30f622065d21de4913ea6a1be024f718e\",\"dweb:/ipfs/QmYxbR3cUybCwyCmzdEyxtjnrf8zb6jxBRVycEVpANXnmf\"]},\"lib/cowprotocol/src/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x5804f013c055fefd71f82a86e51070e43bc17ec47fef18a501ad5fbccb20c9fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39d85416d210ab05604c4d65aa61b69b220d6b3ae0e0077586104914e129c693\",\"dweb:/ipfs/QmdNpvn2jtCJLJ8jTDgQFGCAkKVAxg4FJWaLUhWxFZphPP\"]},\"lib/cowprotocol/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x5be2c9bf446b9cf76f2c8ce6f3a4e350b588cf794bd274d1d1f18f9907924710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14a94812f09c5a2213a1af1ab7be15ff0d9000376d93205a19b7eec1e00e6874\",\"dweb:/ipfs/QmPD6Rh7MmyuaBTksnz2idXsqzXUtPaHariiUPFnrCoJu7\"]},\"lib/cowprotocol/src/contracts/mixins/GPv2Signing.sol\":{\"keccak256\":\"0x32351a830456c755d4f4c24180f5d54afc3141e7f1cedba575407ea7a96abdc0\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e55fc7d29fb7d740181bc790f33308d810950854d357ee17e5c410cc2c273d92\",\"dweb:/ipfs/QmbBhUM8YFHYyEonG5Xa6WsFXkvGXpWceC7zTJeCUnSSe1\"]},\"lib/cowprotocol/src/contracts/mixins/Initializable.sol\":{\"keccak256\":\"0x0d276edcca6013d50d3ee7d3136e9b3a1ccaf26d481435e76c2331a43b99b8c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e795a7365456e5f071e26469542c4a5e301d3040015d3a565ececcc5ad4fadf6\",\"dweb:/ipfs/QmNreE682mqhovoTuNGfMDMiRr1Sfg1gWVNsquddsE4G9V\"]},\"lib/cowprotocol/src/contracts/mixins/ReentrancyGuard.sol\":{\"keccak256\":\"0xa18086f1819346a9c89daf6abab56df2818fabcf87e8e606e5fedb207ff2d7a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168b99215387727d51f66314e60ad5c90d8e2d7d8c1557433af1a3b1d1c3931e\",\"dweb:/ipfs/QmaCsMr7dzRS827c5JXwyVgT7wuePwYTNH76w49dcqALN2\"]},\"lib/cowprotocol/src/contracts/mixins/StorageAccessible.sol\":{\"keccak256\":\"0xebf1b3d1f101deac9c85b6c04b32a59c3fb5bc92445a205c33fa4f6c3e2694b8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4bc9f0cc4b2949a8301eccac1b4dab27ab104ab11a662be2682818e0d8a6990b\",\"dweb:/ipfs/QmZACELQ2C9RSyoNSuBEiHi17RvCwp3X8p9vo2oSZ9eqhe\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/murky/src/Merkle.sol\":{\"keccak256\":\"0x70e50a6d61ea806b5ba0c8ff76fadfa3e90e6dfecb6900b1c0492eac0309660f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6cc1b02a6d11e029fe24d5d638ad891a3a2552aaef9d3a0918274b1496fcd74\",\"dweb:/ipfs/QmWsU7yXsyKATkfYb8g1jbPTbgGsCg9rk7bJ3ypCYxQixB\"]},\"lib/murky/src/common/MurkyBase.sol\":{\"keccak256\":\"0x5287741b2b215c9a11cc8482b419abde0625dfc3949d539c72ee498108842894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://259e803b0811e404bba09237bce4ef42f2ff27dacaca770d1eb7c1afddbf762b\",\"dweb:/ipfs/QmWfbsHa1siBxDEqFmbnzUuZqyitFZHmDXo2vc4cVn4uJe\"]},\"lib/safe/contracts/Safe.sol\":{\"keccak256\":\"0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119\",\"dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9\"]},\"lib/safe/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d\",\"dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz\"]},\"lib/safe/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe/contracts/handler/CompatibilityFallbackHandler.sol\":{\"keccak256\":\"0x3eee5c142041e92895d45f8e9acb9ac2203b0ac39418e8d2971e78bf0775bcf7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6ca95ba88f388a206e14ea0ac2c4a2bb0b60b83a619d1dd3d61772588394fa07\",\"dweb:/ipfs/QmbhhRhBP4n9TVLohTV4GtESeRsumrk4JduLG7DwbBrtxH\"]},\"lib/safe/contracts/handler/ExtensibleFallbackHandler.sol\":{\"keccak256\":\"0x7e511290dae21c9b1710c9250320d9b98ffd71c9501af354814485b58e1b64e9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3e55ba23bde90d2cdd07baa7172ea41bdc1d638bc7b6eb5dce03189d86412515\",\"dweb:/ipfs/QmbxH73sqooeQL8ehsP2FDoXhLBoPs3wr3nod6ZgJwVcFV\"]},\"lib/safe/contracts/handler/HandlerContext.sol\":{\"keccak256\":\"0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4\",\"dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF\"]},\"lib/safe/contracts/handler/TokenCallbackHandler.sol\":{\"keccak256\":\"0xc8fb9e60f5e561c7e4992a396e928344c278c2fbec8af65aebec44281542e7cb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e197c9a628bdce9a1df8da8ba07733ce0e8b5496a28a22a370dec979104c79da\",\"dweb:/ipfs/QmUx8YhmT22YZYEXp2bVNR91hSb9w5qjAkzGiFy6DRNpdu\"]},\"lib/safe/contracts/handler/extensible/Base.sol\":{\"keccak256\":\"0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9\",\"dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh\"]},\"lib/safe/contracts/handler/extensible/ERC165Handler.sol\":{\"keccak256\":\"0x6e19ba1deb09a34cca28891bfefd853697b808dfb8a9cddd4051d3058d3eb718\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0b1059e752bd142160a4fbe8ee08377a50902d31b8b909df002480d191af0cf4\",\"dweb:/ipfs/QmbuUmvgoodsZGgqR793duEWF5t7h6USAXfpr2N1VvBmeP\"]},\"lib/safe/contracts/handler/extensible/FallbackHandler.sol\":{\"keccak256\":\"0xbe7db6cbdb034c9aee1eae12200ab2e94fa4743ae08dbba2f1a001c4b62f3e0b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4fbba0ea04349873b38f7c7104d0a88ffd6e7ec399a3fdd0e1297ce12eebb19e\",\"dweb:/ipfs/QmYiDukcX2y7ratxsMX6hLMKzGQTD67CKLpuiSpgm1HGue\"]},\"lib/safe/contracts/handler/extensible/MarshalLib.sol\":{\"keccak256\":\"0x531476118b7948b06a0c7094badd6f1ae33ae2ddca815110030e87ee62c4a895\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f21ad2619b5bcbc977c5943d2f668e8bfb9ef6968db1193415e046171a5a150a\",\"dweb:/ipfs/QmYZeu3vr6eRWjeYp8GvWSVRLm9baFbTyEGgAy2hMAqbLX\"]},\"lib/safe/contracts/handler/extensible/SignatureVerifierMuxer.sol\":{\"keccak256\":\"0xc60a1d55ff0cf532a44bd864683719e3d6e1fa6d20d4c77812e21c33afecf304\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://298c7efe668a4ca8d3b712770973931d604c84304aececd621f0350d7d293b68\",\"dweb:/ipfs/QmVcNdQ7ZsnmDgSX8TFRLHk4HZUXH86u2akAM5q3g1PFfZ\"]},\"lib/safe/contracts/handler/extensible/TokenCallbacks.sol\":{\"keccak256\":\"0xfb0f8f01a7191ab358f196a7e055441ede00f36805f12c579a742a5cd3c4f8d7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0d485ea9fc430a89953ffe2d2c7032b5a330f086bbb784e81eb6b00a692f6438\",\"dweb:/ipfs/QmNofKrkU9VTtGMN9Rc6js2jyUscSFxce8kjBz5rZL4RSJ\"]},\"lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"keccak256\":\"0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c\",\"dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM\"]},\"lib/safe/contracts/interfaces/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c\",\"dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n\"]},\"lib/safe/contracts/interfaces/ERC777TokensRecipient.sol\":{\"keccak256\":\"0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06\",\"dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"lib/safe/contracts/libraries/MultiSend.sol\":{\"keccak256\":\"0x030bc8f4195cc8cba16efacba3da6870188af2d4b44d739de5d25e01e1473f9f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e5a332517a4c7f249ba69f98c093cb61ffe9e1c059699c327c6e2548ac9c7bd3\",\"dweb:/ipfs/QmZHu8bW9cG7EyAzhq7VxrTx6AZnQ5CUL6bSwvM5aUwhQF\"]},\"lib/safe/contracts/libraries/SafeStorage.sol\":{\"keccak256\":\"0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87\",\"dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc\"]},\"lib/safe/contracts/libraries/SignMessageLib.sol\":{\"keccak256\":\"0x012c0c71e1bd8a1f82c0668151d5ff9dae07ab37098cd4eafd2e5099764891c3\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cdc484c399f00913f29280f8c86e2f8b886dd42de95d9ea0c572847b47a4e4dd\",\"dweb:/ipfs/QmaUDZHn56ECGbkAWiBXxsvJ2dYBZe745h34svZ7NcSssC\"]},\"lib/safe/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099\",\"dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7\"]},\"lib/safe/contracts/proxies/SafeProxy.sol\":{\"keccak256\":\"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec\",\"dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP\"]},\"lib/safe/contracts/proxies/SafeProxyFactory.sol\":{\"keccak256\":\"0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26\",\"dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh\"]},\"src/BaseConditionalOrder.sol\":{\"keccak256\":\"0x510558386b92b1d5961d8158ae6e3288a1d520c03123d109042a5ec3290b9588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e071465250cbc11d946f422f4ff774d757291cac00f4c69fbac1d1e34cdae402\",\"dweb:/ipfs/QmUF2qNwJhvs3GeWmsWnL6y21eL6mb3QEW7EPYY7NZc25v\"]},\"src/ComposableCoW.sol\":{\"keccak256\":\"0x565c6fabc8a1e185acfb4539baeb7e3cabb004b54da2c777cbdbb3c98dbd6a52\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b876b6b4a69f69b7f9445e67a0e60dd7a65f028d54ba9c4c8c983a00ee23642\",\"dweb:/ipfs/Qmf95tsR515WFv2yBKp4NzhFc9xvfZRtS194Lq7SY2r7zC\"]},\"src/ERC1271Forwarder.sol\":{\"keccak256\":\"0x83a89cb999a3c696191cc1dfad1a5b836da32271a7ef56917e8e26fe424b4ac8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fd3de29eafff43395792fcc3604d5f13d51cbdbd847d9456317567f88b380090\",\"dweb:/ipfs/QmbGckj65uXkF9SaSPvjKZXx9jZWYwtwbDdD8V6vqL4sye\"]},\"src/guards/BaseSwapGuard.sol\":{\"keccak256\":\"0xd7b2a2629504bf5d331c4fa21f5b5e11584c11bb1e51ba687b37eed459f2bacb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5555cfec57b3b95f15bb7d5b364baf0998f97cefd9f3744d804d5c7cbd6d6ccc\",\"dweb:/ipfs/QmWojLCbP41KcaHaNWv667qKgFBW9K797tzUskfpBdiA6Y\"]},\"src/guards/ReceiverLock.sol\":{\"keccak256\":\"0x6dd5033473ca3264bbef0d703d29f6c10488d36b69fe1d924f071e412369f8c3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://954572256b96d72a47ba02657b426474d12541ad0942618f28dc732bfc8737f9\",\"dweb:/ipfs/Qmdi8pxjLbxDWufBs4JS2PpkoHfDje447PNfnBQZy52i2g\"]},\"src/interfaces/IConditionalOrder.sol\":{\"keccak256\":\"0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699\",\"dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ\"]},\"src/interfaces/ISwapGuard.sol\":{\"keccak256\":\"0x60abdef709d22cb95e4b1d4680cb70d5286cfb5aa71ec65868cc44164ef8790f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7593245e22ffc533a073891affdbb003fa56eaa5ef7f0202a673b52968ad7ed5\",\"dweb:/ipfs/QmRhAvNzbHp8qfrw7eHZP6EDWw42tXMXSV3KuyhyxFy3Nx\"]},\"src/interfaces/IValueFactory.sol\":{\"keccak256\":\"0x3304ef8a0a1727258ac8278bf5426daeac37ece4653eaaff87b15143814a8122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9934d278069dd9474065777833a81e65af227b85d350b6c1f012b812101be9de\",\"dweb:/ipfs/QmcMBdvY7wLs92FCyutDGQGtHnYryjnaykREvDNBNM8Yih\"]},\"src/types/ConditionalOrdersUtilsLib.sol\":{\"keccak256\":\"0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777\",\"dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf\"]},\"src/types/GoodAfterTime.sol\":{\"keccak256\":\"0x5c6c0aa4d3eec87053b8b1b80957cc64efcffa2fcb68a35f1c7f8332a2884643\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ae24374d4c5a47713e45d1ef31697708619af6325db73267088ebcd026ac2bc8\",\"dweb:/ipfs/QmciGxpggSCkkAuavUQhmUisi29sohSDVvkZ4a4YBgrSDm\"]},\"src/types/twap/TWAP.sol\":{\"keccak256\":\"0x009eb71fc8e7f782e6d0d65f87188c530106ba4f1f8d5f6bf3a165e34710e611\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1634e714b4f7c7217f407b253b7eb3be06585213b3d2c69ddc495183cbe97a0f\",\"dweb:/ipfs/QmUjV8ivqgVfmVRDbJpKUGzxkFEGHZKCtAopYrYeyvyWKR\"]},\"src/types/twap/libraries/TWAPOrder.sol\":{\"keccak256\":\"0x5f17b26cd0f9d5cdc6451515852dd9d1d7f7b24aeab8c6d375fa68c20243f2e3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fafbf95d8a428145e490fd378cda74e9d4ebc2aa566faa19a7a04c6080dec166\",\"dweb:/ipfs/QmU9exeSmHJcmCriXD9oQ9c8cAtWHtnM9AYQNbeJyr8HSb\"]},\"src/types/twap/libraries/TWAPOrderMathLib.sol\":{\"keccak256\":\"0x9cb5263a1b8689b6ff59b9bcd14de0d031d8ed7efef56080f32b80c6f15e8d68\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d0411cab6f65fc3ab6415f9009d6a1ba0eda0348c66c09a9937fb261cc4c18a9\",\"dweb:/ipfs/QmSdo9dtkteSATZbd8SJcE4M3bLiFZjebHhSsPmV8NZhfG\"]},\"src/vendored/CoWSettlement.sol\":{\"keccak256\":\"0x4e4e317b24017cd87eb11d16368b8c06ec19306d31946c330a86f9f136df38d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34b9b2fc2c89e60497457cd812da9c53718c15ddfbf70f6e11832d22092c1840\",\"dweb:/ipfs/QmYFzaynWZfdpmFRf2dZrQ32Ep53AtQDd5fTE3a89xVkaR\"]},\"src/vendored/Milkman.sol\":{\"keccak256\":\"0x7795717dc0007aea88681ea4a2a84a32db865d97b59513ff77d00c879fb15b66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90628089a4a76a7e8ef0319425f15d974543383c5f875638fba315d24c4bc753\",\"dweb:/ipfs/Qmb7yJyxQJvmx6uQ1z9ptzJ1X7W58LPFH8pTicDfyNzyZQ\"]},\"test/Base.t.sol\":{\"keccak256\":\"0x78797f634316b9ce37bf9beb94059a4bc6e50904ffde0ca200d03307df1cb3b5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://85e52033c3e008d997e042f9d3b991fd70c84062cfd026456e916b76a3a8a1e7\",\"dweb:/ipfs/QmNzPATpfEE6zjDuvsfCJGkyC38WG5ikhwR3FRw8HiWLMW\"]},\"test/ComposableCoW.base.t.sol\":{\"keccak256\":\"0x0221e914be81f396e786202ac4931e9666ccd42ce9c9da50dbb4be648414ea27\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1630e1ee69a26aed1cdd8229fd6622b631790af6c8f1908da814ca446510e8ad\",\"dweb:/ipfs/QmVXGddGfEbxTgr9nRbnB7RZ57os3vmFbCo75zv1ALPJSv\"]},\"test/ComposableCoW.t.sol\":{\"keccak256\":\"0x90d474f8a7b2a1bea9ca8bd7c7b19d816806ceec77c56c377c74fee4f409452a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0b3db62577e2628fb1de217c8d26e794f136a7c65e604cd02b69532cfff9a5\",\"dweb:/ipfs/QmWNaJuDbq2D12LhRBX8AdVEWYvuvvZAr1tdHfjn8TZRkg\"]},\"test/helpers/CoWProtocol.t.sol\":{\"keccak256\":\"0x7874033133e2c08fecfaf6ef298819574c9ff486bdc95281f39c68adf7968ed8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2fc4f27186500ca09fb26f9a929238de8bb9a0cf2673fde20c00060bbfa5ec9b\",\"dweb:/ipfs/QmR4nsGvkmiHkFh7uoVxrmPdGLMedkHXJrcJ5g2HvwVBY8\"]},\"test/helpers/Safe.t.sol\":{\"keccak256\":\"0xd86abebc65577511beb1ddd3d0309c1e317ff66cb2d9e04c5dee6314aade1329\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://849077d670c0d7e37d416ca7dc50abc5413e08655c84a585d1e720df4ace951a\",\"dweb:/ipfs/QmdNYYbqhy3Ky5j9ky76k3yy8sBjMZb2tErtvwYj6nBNdZ\"]},\"test/helpers/Tokens.t.sol\":{\"keccak256\":\"0xf83e7af950879ef2e9a9439baac229d54d4e2c0010de0c31fe50e2819d80cbf5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://76970644dbc6fbc90e2f7cd1c188d5e01627549f8d1c44dfed732f666b3da825\",\"dweb:/ipfs/QmQHzKBLoHNshpKmX2cBFvwC1LBpKeRPdpyDmNt7Yp5TN4\"]},\"test/libraries/ComposableCoWLib.t.sol\":{\"keccak256\":\"0xb2181249ce7534d28d53b75f2a8a3740c6483c0a724c6fc50c57a6fe6cf0a909\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8375f3182ed1f694adac87bfded1a139069e3d94c5c2d3a2185f0e18ff6fdd85\",\"dweb:/ipfs/QmaucPxncoTpjwHF13yXc1D2p1abuoctww1syqkVxVS9uq\"]},\"test/libraries/SafeLib.t.sol\":{\"keccak256\":\"0x58495cf250d0de3ebef0b7516a61207b7a08942d25187a889ee46931a5047a35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea524df2b48cae29a60080490d3ee42f369e064ac28dd78dcf00b47aeec76d52\",\"dweb:/ipfs/QmXzdHC78e6EVTGJSDxtKsjHqaFDGLJyNALCKUYdQDDBG4\"]},\"test/libraries/TestAccountLib.t.sol\":{\"keccak256\":\"0x09d3b4eabab8125d3cc1abaa86bfebe04545972c2a12c62a6ed9bedabef07c96\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://af9a65f26bafb1c90ee17d74992859d0a45c5baf02771878660cfab6c063175c\",\"dweb:/ipfs/QmVWH8gcWTGsEd1goFwTobwhcFkoGeuqjFG2N7fKFEkeng\"]},\"test/vendored/GPv2TradeEncoder.sol\":{\"keccak256\":\"0x16e3fb0aa82122c4defea77a9678f936a3ed0e719dbe4785b902f1dfdd45d12f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://104d08d69f24fb5780359c1b38f7501b8c6f78c4e528b8e07cd49bb1fac382c9\",\"dweb:/ipfs/QmQtRfvwyKx6fdwxp7YQa9XRRvZ5q2gm5GDbtST4wCy3qM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConditionalOrderCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct ComposableCoW.Proof",
              "name": "proof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "location",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MerkleRootSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract ISwapGuard",
              "name": "swapGuard",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapGuardSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizer",
          "outputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eHandler",
          "outputs": [
            {
              "internalType": "contract ExtensibleFallbackHandler",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract SafeProxyFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "node",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "handler",
          "outputs": [
            {
              "internalType": "contract CompatibilityFallbackHandler",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "left",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "right",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashLeafPairs",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "leaves",
          "outputs": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "log2ceil",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "log2ceilBitMagic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multisend",
          "outputs": [
            {
              "internalType": "contract MultiSend",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "relayer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safe1",
          "outputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safe2",
          "outputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safe3",
          "outputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "settlement",
          "outputs": [
            {
              "internalType": "contract GPv2Settlement",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "signMessageLib",
          "outputs": [
            {
              "internalType": "contract SignMessageLib",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "singleton",
          "outputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SetUpState_ComposableCoWDomainSeparator_is_set"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SetUpState_ComposableCoWDomainVerifier_is_set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_createAndRemove_FuzzSetAndEmit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_createAndRemove_e2e"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "ctxValue",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_createWithContextAndRemove_FuzzSetAndEmit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_create_RevertOnInvalidHandler"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getTradeableOrderWithSignature_FuzzRevertInvalidProof"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getTradeableOrderWithSignature_RevertInterfaceNotSupported"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isValidSafeSignature_FuzzPassesContextToHandler"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isValidSafeSignature_FuzzRevertInvalidProof"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isValidSafeSignature_FuzzRevertInvalidSingleOrder"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_setRootWithContext_FuzzSetAndEmit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_setRootWithContext_e2e"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_setRoot_FuzzSetAndEmit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_setRoot_e2e"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token0",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token1",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token2",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract IVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "valueToProve",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "verifyProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "log2ceil(uint256)": {
            "details": "Note that x is assumed > 0"
          },
          "log2ceilBitMagic(uint256)": {
            "details": "Note that x assumed > 1"
          },
          "setUp()": {
            "details": "Sets up the CoW Protocol test environment."
          },
          "test_SetUpState_ComposableCoWDomainSeparator_is_set()": {
            "details": "Ensure `ComposableCoW` and `Settlement` have the same domain separator"
          },
          "test_SetUpState_ComposableCoWDomainVerifier_is_set()": {
            "details": "Ensure `ComposableCoW` contract is the `ISafeSignatureVerifier` for `safe1` on the `settlement` domain"
          },
          "test_createAndRemove_FuzzSetAndEmit(address,address,bytes32,bytes)": {
            "details": "should be able to create and remove a single order"
          },
          "test_createAndRemove_e2e()": {
            "details": "An end-to-end test of the ComposableCoW contract that tests the following:     1. Does **NOT** validate a single order that is not authorized     2. `owner` can create a single order     3. Can lookup the validity of the single order for `owner`     4. **DOES** validate a single order that is authorized"
          },
          "test_createWithContextAndRemove_FuzzSetAndEmit(address,address,bytes32,bytes,bytes32)": {
            "details": "should be able to create and remove a single order"
          },
          "test_create_RevertOnInvalidHandler()": {
            "details": "Should disallow setting a handler that is address(0)"
          },
          "test_getTradeableOrderWithSignature_FuzzRevertInvalidProof(address,bytes32[],bytes32,address,bytes32,bytes)": {
            "details": "`getTradeableOrderWithSignature` should revert if given an invalid proof"
          },
          "test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder(address,address,bytes32,bytes)": {
            "details": "`getTradeableOrderWithSignature` should revert if given an invalid single order"
          },
          "test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe()": {
            "details": "should return a valid payload for a non-safe (ERC1271Forwarder)"
          },
          "test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe()": {
            "details": "should return a valid payload for a safe"
          },
          "test_getTradeableOrderWithSignature_RevertInterfaceNotSupported()": {
            "details": "`getTradeableOrderWithSignature` should revert if the interface is not supported"
          },
          "test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash()": {
            "details": "`BaseConditionalOrder` enforces that the order hash is valid"
          },
          "test_isValidSafeSignature_FuzzPassesContextToHandler(address,bytes32)": {
            "details": "Make sure `isValidSafeSignature` passes the context to the handler"
          },
          "test_isValidSafeSignature_FuzzRevertInvalidProof(address,bytes32[],bytes32,address,bytes32,bytes)": {
            "details": "Reverts on an invalid proof"
          },
          "test_isValidSafeSignature_FuzzRevertInvalidSingleOrder(address,address,bytes32,bytes)": {
            "details": "Reverts on an invalid single order"
          },
          "test_setRootWithContext_e2e()": {
            "details": "An end-to-end test of the ComposableCoW contract that tests the following:      1. Does **NOT** validate a proof that is not authorized      2. `owner` can set their merkle root      3. **DOES** validate a proof that is authorized      4. `owner` can remove their merkle root      5. Does **NOT** validate a proof that is not authorized"
          },
          "test_setRoot_FuzzSetAndEmit(address,bytes32)": {
            "details": "Can set the Merkle root for `owner`"
          },
          "test_setRoot_e2e()": {
            "details": "An end-to-end test of the ComposableCoW contract that tests the following:      1. Does **NOT** validate a proof that is not authorized      2. `owner` can set their merkle root      3. **DOES** validate a proof that is authorized      4. `owner` can remove their merkle root      5. Does **NOT** validate a proof that is not authorized"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "hashLeafPairs(bytes32,bytes32)": {
            "notice": "ascending sort and concat prior to hashing"
          },
          "log2ceilBitMagic(uint256)": {
            "notice": "Original bitmagic adapted from https://github.com/paulrberg/prb-math/blob/main/contracts/PRBMath.sol"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ComposableCoW.t.sol": "ComposableCoWTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516",
        "urls": [
          "bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0",
          "dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/helpers/AssetHelpers.sol": {
        "keccak256": "0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00",
        "urls": [
          "bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76",
          "dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/Authentication.sol": {
        "keccak256": "0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3",
        "urls": [
          "bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b",
          "dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942",
        "urls": [
          "bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32",
          "dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537",
        "urls": [
          "bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb",
          "dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b",
        "urls": [
          "bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a",
          "dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2",
        "urls": [
          "bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3",
          "dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/InputHelpers.sol": {
        "keccak256": "0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42",
        "urls": [
          "bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d",
          "dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c",
        "urls": [
          "bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45",
          "dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12",
        "urls": [
          "bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985",
          "dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/FixedPoint.sol": {
        "keccak256": "0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756",
        "urls": [
          "bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a",
          "dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/LogExpMath.sol": {
        "keccak256": "0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb",
        "urls": [
          "bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f",
          "dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/Math.sol": {
        "keccak256": "0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d",
        "urls": [
          "bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5",
          "dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/AccessControl.sol": {
        "keccak256": "0xd579e821f7c87cb584669bf39e2cffdf4c5dddbfc18fc7a5689fecc71a220af5",
        "urls": [
          "bzz-raw://2294d003285005d4d17f1b603d98ea8c9c0f95dfc7ba454598fb455bbfc0fc1a",
          "dweb:/ipfs/QmUnrky7oFu11UgWpd87JaisgzBXahCf3uv2u8a4DqiLyi"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/Address.sol": {
        "keccak256": "0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b",
        "urls": [
          "bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e",
          "dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717",
        "urls": [
          "bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246",
          "dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableMap.sol": {
        "keccak256": "0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27",
        "urls": [
          "bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47",
          "dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableSet.sol": {
        "keccak256": "0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780",
        "urls": [
          "bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57",
          "dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862",
        "urls": [
          "bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6",
          "dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeCast.sol": {
        "keccak256": "0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec",
        "urls": [
          "bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032",
          "dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8",
        "urls": [
          "bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19",
          "dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/vault/AssetManagers.sol": {
        "keccak256": "0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d",
        "urls": [
          "bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e",
          "dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/AssetTransfersHandler.sol": {
        "keccak256": "0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45",
        "urls": [
          "bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d",
          "dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Authorizer.sol": {
        "keccak256": "0xf186458b2feb04dbe781855d45bb49c19b723359f489848767da877218498527",
        "urls": [
          "bzz-raw://55cf8df8a17e36aecc85bfc7de5bd45ee98cf466bdb7bd0fbf28194e6a7ad891",
          "dweb:/ipfs/QmanjQQkR4AehuVReWsq4iv5LP6kTng7XLLpPZ4bhn5RT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Fees.sol": {
        "keccak256": "0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654",
        "urls": [
          "bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de",
          "dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/FlashLoans.sol": {
        "keccak256": "0x26fb5818caeb8980cbbab2cccb51f41fea5e5e28ef1516ab5d792427661e2f59",
        "urls": [
          "bzz-raw://ce3bc3abda989089faf10f3215abf5daa1cdceb11c80bfdb486d02c8656817b0",
          "dweb:/ipfs/Qmaq3wovoZr22zSfQGWNp3E1gsVHVwkRiAg15EnTtCML3S"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolBalances.sol": {
        "keccak256": "0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec",
        "urls": [
          "bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5",
          "dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolRegistry.sol": {
        "keccak256": "0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5",
        "urls": [
          "bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61",
          "dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolTokens.sol": {
        "keccak256": "0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33",
        "urls": [
          "bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18",
          "dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e",
        "urls": [
          "bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1",
          "dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Swaps.sol": {
        "keccak256": "0xc98ad2e27bcfd93272ce35b5be8b80f65876142e3a23af7dbe2cc18de3fe03f3",
        "urls": [
          "bzz-raw://2e34f80abec5db0b6e3abba2ce3958bcaffe7fd53ea4d9af947400afdcff103a",
          "dweb:/ipfs/QmV2WTXMYdSDVx1HMEzMqSYak6F2g8iJqhTzPSNAQmEgpC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/UserBalance.sol": {
        "keccak256": "0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d",
        "urls": [
          "bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145",
          "dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Vault.sol": {
        "keccak256": "0x8e26e3970f533eef5c24bb9c581e3f340b81f1f096217843fe3a67f22c7a6d58",
        "urls": [
          "bzz-raw://d55f23ed8b0e1cd52d517e640d856ae529308072de03cbf05797ec524ddeff50",
          "dweb:/ipfs/QmTsJudtVpPCyVVs1r1x5mgF1PuuH2FSuGQh3eFGjtJ4sx"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/VaultAuthorization.sol": {
        "keccak256": "0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1",
        "urls": [
          "bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb",
          "dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/BalanceAllocation.sol": {
        "keccak256": "0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349",
        "urls": [
          "bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0",
          "dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/GeneralPoolsBalance.sol": {
        "keccak256": "0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597",
        "urls": [
          "bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e",
          "dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol": {
        "keccak256": "0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a",
        "urls": [
          "bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8",
          "dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol": {
        "keccak256": "0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26",
        "urls": [
          "bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9",
          "dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAsset.sol": {
        "keccak256": "0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c",
        "urls": [
          "bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4",
          "dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa",
        "urls": [
          "bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2",
          "dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IBasePool.sol": {
        "keccak256": "0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d",
        "urls": [
          "bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd",
          "dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f",
        "urls": [
          "bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce",
          "dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IGeneralPool.sol": {
        "keccak256": "0x450c3ed5a9bc6116697b9b424de93d00f23e870fdee9c0bda009cc7ef9268abc",
        "urls": [
          "bzz-raw://98fb2bd1c1f94dc1dfd70adad46df1fedd9697aee089b048696444641154d315",
          "dweb:/ipfs/QmU41tYKnbfqYqwvQxFj8JVpaVnYYsHfTL9oPNmE1peqkT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IMinimalSwapInfoPool.sol": {
        "keccak256": "0x5119d39c32df88286cc5391b81a7ad1208e46825b32dd49e68900342c5f0c741",
        "urls": [
          "bzz-raw://1400c06d1b8c0a6075f0d03e5bc1b02336f952f94eb4753726cbb206a0741372",
          "dweb:/ipfs/Qmcu8MRnpV39xyxzHAvAdGJXHp9yKxCvGcixbtci6YseA7"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol": {
        "keccak256": "0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e",
        "urls": [
          "bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05",
          "dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IVault.sol": {
        "keccak256": "0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c",
        "urls": [
          "bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619",
          "dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/canonical-weth/src/WETH9.sol": {
        "keccak256": "0xe9d7e2895eca07b5f45c5ba51d577cfde6bd7505a0beb49af9eea266931d0f04",
        "urls": [
          "bzz-raw://6b2f9d01a4f8dd133b4da18e2c7a294be37408d27b75d6aaafdbf8000a394a76",
          "dweb:/ipfs/QmdZ482WjQzFmAbvFr5P5eHgHcGK11ohUirWqNdcb5m4sk"
        ],
        "license": null
      },
      "lib/canonical-weth/src/interfaces/IWETH.sol": {
        "keccak256": "0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3",
        "urls": [
          "bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05",
          "dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/GPv2AllowListAuthentication.sol": {
        "keccak256": "0xaa05adb9743f3510d3148c26d488f4dab24ea064d685e7c916b756759d3e0af0",
        "urls": [
          "bzz-raw://921ec52950fc8cad371274e08a2ca84e0ec3562361f4f7253b505d009b9f013d",
          "dweb:/ipfs/QmUcJACN5CRVMFWofhRTgpoe3wZvBepdqYtYHT4zBXX6LP"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/GPv2Settlement.sol": {
        "keccak256": "0xc28bbf8245c27a4e0318ddb98affa388a78f5afdb00bbcf84897659ee7f08e71",
        "urls": [
          "bzz-raw://7e1200b13634efc822f5fb32fc71490bf244cd39b4d98fcb58c4208c620c5dd7",
          "dweb:/ipfs/QmcUizcEMpMkQ7Kw1sadmcUCaztDhtBavaSCJTp5JSMkVF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol": {
        "keccak256": "0xb785d0cc8a18cad4bd7bdc46ba4f995b17e6a3f95c8cbefcc1be6618bfab1595",
        "urls": [
          "bzz-raw://655f249d6af04d75e907376157e393d205ee6be73007f6d75d9bb1325a9efc28",
          "dweb:/ipfs/QmanQfzHUnyrGvknJ9EgkLLQ2Nfd1A6RnfFjXaStp6vgYr"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/GPv2Authentication.sol": {
        "keccak256": "0x13eafd3d4043356364572ff28f213ea39faeb4b21b53a900b35fa765a5e0347f",
        "urls": [
          "bzz-raw://71bbcdb728824b72046281d5ca6adc6da2d0806cf251b0662dfc8b06dec9845d",
          "dweb:/ipfs/Qme59yqn4QBBsVe9miUvyD1wVNNFvauXgsPBXT47Ahbizf"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/GPv2EIP1271.sol": {
        "keccak256": "0xea0afb5f00ece4de83adb6cf76629344dae3171db3040e50ed704e0650342ade",
        "urls": [
          "bzz-raw://4d9d40de14b1bd8ce70a2f94aa43957e77d7c71b58973e5dcc7d5765ded6cae7",
          "dweb:/ipfs/QmaYLbc84vUtKjdvHjwkYVvnr2hP54Q1B7Jm5KW4iuxt4j"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/IVault.sol": {
        "keccak256": "0x205fedd49ab79dd6d2824a056d61ec8bdd6bd02ea9b50e398ea4353095c5325b",
        "urls": [
          "bzz-raw://4470ff225bda4345d08c27f7d2e41b079be66e51c2376f4170978aba85bef906",
          "dweb:/ipfs/QmUxq55vtTEDU63ttAUGUsEksH4gLq8dJHkQEC7Zy6gdT1"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2EIP1967.sol": {
        "keccak256": "0x9aec47a6c664a2ff139db0ca1418c9132128830c775005d667d85dafb3e8491f",
        "urls": [
          "bzz-raw://cc5c8ddb4849fd080692a0495890f4f72297c42435a2e53ec8fbe35614a3661a",
          "dweb:/ipfs/QmevZYnJ7b3Pn5cJgmn1t1VwT6Sb45wrEFhHRA3tKjzd61"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol": {
        "keccak256": "0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528",
        "urls": [
          "bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f",
          "dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2SafeERC20.sol": {
        "keccak256": "0x746fa180cf0c8f866d124958afdabb7430bc79539335f8e25ea89c212378d03b",
        "urls": [
          "bzz-raw://eb94c53fd20b77c15cf44fcdb4939dba3e6e370661d114f73d59b2737ccf4e39",
          "dweb:/ipfs/QmeWYK6wZJ4WKT35yhYkhp1ixwcP348Dr5nS36fnx5FLVD"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Trade.sol": {
        "keccak256": "0x416f67497b82e72e364c94f9322e89a3f993690751f061e55f9b33c135dc6c5a",
        "urls": [
          "bzz-raw://246c6840d43acd6b64135ad7bf99e2a9c87dc9a7c43d14fd43097e8321a424db",
          "dweb:/ipfs/QmXmV7qxM7hmEc5Z5L2crsMzYb9t4GPes8KM5oLXsgxVR5"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol": {
        "keccak256": "0x3fbac207882d1e12ce41b112c1d878e3b234842904c11e006059ab642740f84b",
        "urls": [
          "bzz-raw://eba7b5484ed100a8b4d8af0d62bcc3f30f622065d21de4913ea6a1be024f718e",
          "dweb:/ipfs/QmYxbR3cUybCwyCmzdEyxtjnrf8zb6jxBRVycEVpANXnmf"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x5804f013c055fefd71f82a86e51070e43bc17ec47fef18a501ad5fbccb20c9fd",
        "urls": [
          "bzz-raw://39d85416d210ab05604c4d65aa61b69b220d6b3ae0e0077586104914e129c693",
          "dweb:/ipfs/QmdNpvn2jtCJLJ8jTDgQFGCAkKVAxg4FJWaLUhWxFZphPP"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x5be2c9bf446b9cf76f2c8ce6f3a4e350b588cf794bd274d1d1f18f9907924710",
        "urls": [
          "bzz-raw://14a94812f09c5a2213a1af1ab7be15ff0d9000376d93205a19b7eec1e00e6874",
          "dweb:/ipfs/QmPD6Rh7MmyuaBTksnz2idXsqzXUtPaHariiUPFnrCoJu7"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/mixins/GPv2Signing.sol": {
        "keccak256": "0x32351a830456c755d4f4c24180f5d54afc3141e7f1cedba575407ea7a96abdc0",
        "urls": [
          "bzz-raw://e55fc7d29fb7d740181bc790f33308d810950854d357ee17e5c410cc2c273d92",
          "dweb:/ipfs/QmbBhUM8YFHYyEonG5Xa6WsFXkvGXpWceC7zTJeCUnSSe1"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/mixins/Initializable.sol": {
        "keccak256": "0x0d276edcca6013d50d3ee7d3136e9b3a1ccaf26d481435e76c2331a43b99b8c7",
        "urls": [
          "bzz-raw://e795a7365456e5f071e26469542c4a5e301d3040015d3a565ececcc5ad4fadf6",
          "dweb:/ipfs/QmNreE682mqhovoTuNGfMDMiRr1Sfg1gWVNsquddsE4G9V"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/mixins/ReentrancyGuard.sol": {
        "keccak256": "0xa18086f1819346a9c89daf6abab56df2818fabcf87e8e606e5fedb207ff2d7a0",
        "urls": [
          "bzz-raw://168b99215387727d51f66314e60ad5c90d8e2d7d8c1557433af1a3b1d1c3931e",
          "dweb:/ipfs/QmaCsMr7dzRS827c5JXwyVgT7wuePwYTNH76w49dcqALN2"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/mixins/StorageAccessible.sol": {
        "keccak256": "0xebf1b3d1f101deac9c85b6c04b32a59c3fb5bc92445a205c33fa4f6c3e2694b8",
        "urls": [
          "bzz-raw://4bc9f0cc4b2949a8301eccac1b4dab27ab104ab11a662be2682818e0d8a6990b",
          "dweb:/ipfs/QmZACELQ2C9RSyoNSuBEiHi17RvCwp3X8p9vo2oSZ9eqhe"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/murky/src/Merkle.sol": {
        "keccak256": "0x70e50a6d61ea806b5ba0c8ff76fadfa3e90e6dfecb6900b1c0492eac0309660f",
        "urls": [
          "bzz-raw://b6cc1b02a6d11e029fe24d5d638ad891a3a2552aaef9d3a0918274b1496fcd74",
          "dweb:/ipfs/QmWsU7yXsyKATkfYb8g1jbPTbgGsCg9rk7bJ3ypCYxQixB"
        ],
        "license": "MIT"
      },
      "lib/murky/src/common/MurkyBase.sol": {
        "keccak256": "0x5287741b2b215c9a11cc8482b419abde0625dfc3949d539c72ee498108842894",
        "urls": [
          "bzz-raw://259e803b0811e404bba09237bce4ef42f2ff27dacaca770d1eb7c1afddbf762b",
          "dweb:/ipfs/QmWfbsHa1siBxDEqFmbnzUuZqyitFZHmDXo2vc4cVn4uJe"
        ],
        "license": "MIT"
      },
      "lib/safe/contracts/Safe.sol": {
        "keccak256": "0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638",
        "urls": [
          "bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119",
          "dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a",
        "urls": [
          "bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d",
          "dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/CompatibilityFallbackHandler.sol": {
        "keccak256": "0x3eee5c142041e92895d45f8e9acb9ac2203b0ac39418e8d2971e78bf0775bcf7",
        "urls": [
          "bzz-raw://6ca95ba88f388a206e14ea0ac2c4a2bb0b60b83a619d1dd3d61772588394fa07",
          "dweb:/ipfs/QmbhhRhBP4n9TVLohTV4GtESeRsumrk4JduLG7DwbBrtxH"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/ExtensibleFallbackHandler.sol": {
        "keccak256": "0x7e511290dae21c9b1710c9250320d9b98ffd71c9501af354814485b58e1b64e9",
        "urls": [
          "bzz-raw://3e55ba23bde90d2cdd07baa7172ea41bdc1d638bc7b6eb5dce03189d86412515",
          "dweb:/ipfs/QmbxH73sqooeQL8ehsP2FDoXhLBoPs3wr3nod6ZgJwVcFV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/HandlerContext.sol": {
        "keccak256": "0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5",
        "urls": [
          "bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4",
          "dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/TokenCallbackHandler.sol": {
        "keccak256": "0xc8fb9e60f5e561c7e4992a396e928344c278c2fbec8af65aebec44281542e7cb",
        "urls": [
          "bzz-raw://e197c9a628bdce9a1df8da8ba07733ce0e8b5496a28a22a370dec979104c79da",
          "dweb:/ipfs/QmUx8YhmT22YZYEXp2bVNR91hSb9w5qjAkzGiFy6DRNpdu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/Base.sol": {
        "keccak256": "0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15",
        "urls": [
          "bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9",
          "dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/ERC165Handler.sol": {
        "keccak256": "0x6e19ba1deb09a34cca28891bfefd853697b808dfb8a9cddd4051d3058d3eb718",
        "urls": [
          "bzz-raw://0b1059e752bd142160a4fbe8ee08377a50902d31b8b909df002480d191af0cf4",
          "dweb:/ipfs/QmbuUmvgoodsZGgqR793duEWF5t7h6USAXfpr2N1VvBmeP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/FallbackHandler.sol": {
        "keccak256": "0xbe7db6cbdb034c9aee1eae12200ab2e94fa4743ae08dbba2f1a001c4b62f3e0b",
        "urls": [
          "bzz-raw://4fbba0ea04349873b38f7c7104d0a88ffd6e7ec399a3fdd0e1297ce12eebb19e",
          "dweb:/ipfs/QmYiDukcX2y7ratxsMX6hLMKzGQTD67CKLpuiSpgm1HGue"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/MarshalLib.sol": {
        "keccak256": "0x531476118b7948b06a0c7094badd6f1ae33ae2ddca815110030e87ee62c4a895",
        "urls": [
          "bzz-raw://f21ad2619b5bcbc977c5943d2f668e8bfb9ef6968db1193415e046171a5a150a",
          "dweb:/ipfs/QmYZeu3vr6eRWjeYp8GvWSVRLm9baFbTyEGgAy2hMAqbLX"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/SignatureVerifierMuxer.sol": {
        "keccak256": "0xc60a1d55ff0cf532a44bd864683719e3d6e1fa6d20d4c77812e21c33afecf304",
        "urls": [
          "bzz-raw://298c7efe668a4ca8d3b712770973931d604c84304aececd621f0350d7d293b68",
          "dweb:/ipfs/QmVcNdQ7ZsnmDgSX8TFRLHk4HZUXH86u2akAM5q3g1PFfZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/extensible/TokenCallbacks.sol": {
        "keccak256": "0xfb0f8f01a7191ab358f196a7e055441ede00f36805f12c579a742a5cd3c4f8d7",
        "urls": [
          "bzz-raw://0d485ea9fc430a89953ffe2d2c7032b5a330f086bbb784e81eb6b00a692f6438",
          "dweb:/ipfs/QmNofKrkU9VTtGMN9Rc6js2jyUscSFxce8kjBz5rZL4RSJ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol": {
        "keccak256": "0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493",
        "urls": [
          "bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c",
          "dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC721TokenReceiver.sol": {
        "keccak256": "0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479",
        "urls": [
          "bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c",
          "dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC777TokensRecipient.sol": {
        "keccak256": "0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac",
        "urls": [
          "bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06",
          "dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/libraries/MultiSend.sol": {
        "keccak256": "0x030bc8f4195cc8cba16efacba3da6870188af2d4b44d739de5d25e01e1473f9f",
        "urls": [
          "bzz-raw://e5a332517a4c7f249ba69f98c093cb61ffe9e1c059699c327c6e2548ac9c7bd3",
          "dweb:/ipfs/QmZHu8bW9cG7EyAzhq7VxrTx6AZnQ5CUL6bSwvM5aUwhQF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/libraries/SafeStorage.sol": {
        "keccak256": "0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a",
        "urls": [
          "bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87",
          "dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/libraries/SignMessageLib.sol": {
        "keccak256": "0x012c0c71e1bd8a1f82c0668151d5ff9dae07ab37098cd4eafd2e5099764891c3",
        "urls": [
          "bzz-raw://cdc484c399f00913f29280f8c86e2f8b886dd42de95d9ea0c572847b47a4e4dd",
          "dweb:/ipfs/QmaUDZHn56ECGbkAWiBXxsvJ2dYBZe745h34svZ7NcSssC"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/proxies/IProxyCreationCallback.sol": {
        "keccak256": "0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602",
        "urls": [
          "bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099",
          "dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/proxies/SafeProxy.sol": {
        "keccak256": "0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2",
        "urls": [
          "bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec",
          "dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/proxies/SafeProxyFactory.sol": {
        "keccak256": "0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533",
        "urls": [
          "bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26",
          "dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/BaseConditionalOrder.sol": {
        "keccak256": "0x510558386b92b1d5961d8158ae6e3288a1d520c03123d109042a5ec3290b9588",
        "urls": [
          "bzz-raw://e071465250cbc11d946f422f4ff774d757291cac00f4c69fbac1d1e34cdae402",
          "dweb:/ipfs/QmUF2qNwJhvs3GeWmsWnL6y21eL6mb3QEW7EPYY7NZc25v"
        ],
        "license": "MIT"
      },
      "src/ComposableCoW.sol": {
        "keccak256": "0x565c6fabc8a1e185acfb4539baeb7e3cabb004b54da2c777cbdbb3c98dbd6a52",
        "urls": [
          "bzz-raw://2b876b6b4a69f69b7f9445e67a0e60dd7a65f028d54ba9c4c8c983a00ee23642",
          "dweb:/ipfs/Qmf95tsR515WFv2yBKp4NzhFc9xvfZRtS194Lq7SY2r7zC"
        ],
        "license": "GPL-3.0"
      },
      "src/ERC1271Forwarder.sol": {
        "keccak256": "0x83a89cb999a3c696191cc1dfad1a5b836da32271a7ef56917e8e26fe424b4ac8",
        "urls": [
          "bzz-raw://fd3de29eafff43395792fcc3604d5f13d51cbdbd847d9456317567f88b380090",
          "dweb:/ipfs/QmbGckj65uXkF9SaSPvjKZXx9jZWYwtwbDdD8V6vqL4sye"
        ],
        "license": "GPL-3.0"
      },
      "src/guards/BaseSwapGuard.sol": {
        "keccak256": "0xd7b2a2629504bf5d331c4fa21f5b5e11584c11bb1e51ba687b37eed459f2bacb",
        "urls": [
          "bzz-raw://5555cfec57b3b95f15bb7d5b364baf0998f97cefd9f3744d804d5c7cbd6d6ccc",
          "dweb:/ipfs/QmWojLCbP41KcaHaNWv667qKgFBW9K797tzUskfpBdiA6Y"
        ],
        "license": "GPL-3.0"
      },
      "src/guards/ReceiverLock.sol": {
        "keccak256": "0x6dd5033473ca3264bbef0d703d29f6c10488d36b69fe1d924f071e412369f8c3",
        "urls": [
          "bzz-raw://954572256b96d72a47ba02657b426474d12541ad0942618f28dc732bfc8737f9",
          "dweb:/ipfs/Qmdi8pxjLbxDWufBs4JS2PpkoHfDje447PNfnBQZy52i2g"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IConditionalOrder.sol": {
        "keccak256": "0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b",
        "urls": [
          "bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699",
          "dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISwapGuard.sol": {
        "keccak256": "0x60abdef709d22cb95e4b1d4680cb70d5286cfb5aa71ec65868cc44164ef8790f",
        "urls": [
          "bzz-raw://7593245e22ffc533a073891affdbb003fa56eaa5ef7f0202a673b52968ad7ed5",
          "dweb:/ipfs/QmRhAvNzbHp8qfrw7eHZP6EDWw42tXMXSV3KuyhyxFy3Nx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IValueFactory.sol": {
        "keccak256": "0x3304ef8a0a1727258ac8278bf5426daeac37ece4653eaaff87b15143814a8122",
        "urls": [
          "bzz-raw://9934d278069dd9474065777833a81e65af227b85d350b6c1f012b812101be9de",
          "dweb:/ipfs/QmcMBdvY7wLs92FCyutDGQGtHnYryjnaykREvDNBNM8Yih"
        ],
        "license": "GPL-3.0"
      },
      "src/types/ConditionalOrdersUtilsLib.sol": {
        "keccak256": "0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae",
        "urls": [
          "bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777",
          "dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf"
        ],
        "license": "MIT"
      },
      "src/types/GoodAfterTime.sol": {
        "keccak256": "0x5c6c0aa4d3eec87053b8b1b80957cc64efcffa2fcb68a35f1c7f8332a2884643",
        "urls": [
          "bzz-raw://ae24374d4c5a47713e45d1ef31697708619af6325db73267088ebcd026ac2bc8",
          "dweb:/ipfs/QmciGxpggSCkkAuavUQhmUisi29sohSDVvkZ4a4YBgrSDm"
        ],
        "license": "GPL-3.0"
      },
      "src/types/twap/TWAP.sol": {
        "keccak256": "0x009eb71fc8e7f782e6d0d65f87188c530106ba4f1f8d5f6bf3a165e34710e611",
        "urls": [
          "bzz-raw://1634e714b4f7c7217f407b253b7eb3be06585213b3d2c69ddc495183cbe97a0f",
          "dweb:/ipfs/QmUjV8ivqgVfmVRDbJpKUGzxkFEGHZKCtAopYrYeyvyWKR"
        ],
        "license": "GPL-3.0"
      },
      "src/types/twap/libraries/TWAPOrder.sol": {
        "keccak256": "0x5f17b26cd0f9d5cdc6451515852dd9d1d7f7b24aeab8c6d375fa68c20243f2e3",
        "urls": [
          "bzz-raw://fafbf95d8a428145e490fd378cda74e9d4ebc2aa566faa19a7a04c6080dec166",
          "dweb:/ipfs/QmU9exeSmHJcmCriXD9oQ9c8cAtWHtnM9AYQNbeJyr8HSb"
        ],
        "license": "GPL-3.0"
      },
      "src/types/twap/libraries/TWAPOrderMathLib.sol": {
        "keccak256": "0x9cb5263a1b8689b6ff59b9bcd14de0d031d8ed7efef56080f32b80c6f15e8d68",
        "urls": [
          "bzz-raw://d0411cab6f65fc3ab6415f9009d6a1ba0eda0348c66c09a9937fb261cc4c18a9",
          "dweb:/ipfs/QmSdo9dtkteSATZbd8SJcE4M3bLiFZjebHhSsPmV8NZhfG"
        ],
        "license": "GPL-3.0"
      },
      "src/vendored/CoWSettlement.sol": {
        "keccak256": "0x4e4e317b24017cd87eb11d16368b8c06ec19306d31946c330a86f9f136df38d7",
        "urls": [
          "bzz-raw://34b9b2fc2c89e60497457cd812da9c53718c15ddfbf70f6e11832d22092c1840",
          "dweb:/ipfs/QmYFzaynWZfdpmFRf2dZrQ32Ep53AtQDd5fTE3a89xVkaR"
        ],
        "license": "MIT"
      },
      "src/vendored/Milkman.sol": {
        "keccak256": "0x7795717dc0007aea88681ea4a2a84a32db865d97b59513ff77d00c879fb15b66",
        "urls": [
          "bzz-raw://90628089a4a76a7e8ef0319425f15d974543383c5f875638fba315d24c4bc753",
          "dweb:/ipfs/Qmb7yJyxQJvmx6uQ1z9ptzJ1X7W58LPFH8pTicDfyNzyZQ"
        ],
        "license": "MIT"
      },
      "test/Base.t.sol": {
        "keccak256": "0x78797f634316b9ce37bf9beb94059a4bc6e50904ffde0ca200d03307df1cb3b5",
        "urls": [
          "bzz-raw://85e52033c3e008d997e042f9d3b991fd70c84062cfd026456e916b76a3a8a1e7",
          "dweb:/ipfs/QmNzPATpfEE6zjDuvsfCJGkyC38WG5ikhwR3FRw8HiWLMW"
        ],
        "license": "GPL-3.0"
      },
      "test/ComposableCoW.base.t.sol": {
        "keccak256": "0x0221e914be81f396e786202ac4931e9666ccd42ce9c9da50dbb4be648414ea27",
        "urls": [
          "bzz-raw://1630e1ee69a26aed1cdd8229fd6622b631790af6c8f1908da814ca446510e8ad",
          "dweb:/ipfs/QmVXGddGfEbxTgr9nRbnB7RZ57os3vmFbCo75zv1ALPJSv"
        ],
        "license": "GPL-3.0"
      },
      "test/ComposableCoW.t.sol": {
        "keccak256": "0x90d474f8a7b2a1bea9ca8bd7c7b19d816806ceec77c56c377c74fee4f409452a",
        "urls": [
          "bzz-raw://bc0b3db62577e2628fb1de217c8d26e794f136a7c65e604cd02b69532cfff9a5",
          "dweb:/ipfs/QmWNaJuDbq2D12LhRBX8AdVEWYvuvvZAr1tdHfjn8TZRkg"
        ],
        "license": "GPL-3.0"
      },
      "test/helpers/CoWProtocol.t.sol": {
        "keccak256": "0x7874033133e2c08fecfaf6ef298819574c9ff486bdc95281f39c68adf7968ed8",
        "urls": [
          "bzz-raw://2fc4f27186500ca09fb26f9a929238de8bb9a0cf2673fde20c00060bbfa5ec9b",
          "dweb:/ipfs/QmR4nsGvkmiHkFh7uoVxrmPdGLMedkHXJrcJ5g2HvwVBY8"
        ],
        "license": "GPL-3.0"
      },
      "test/helpers/Safe.t.sol": {
        "keccak256": "0xd86abebc65577511beb1ddd3d0309c1e317ff66cb2d9e04c5dee6314aade1329",
        "urls": [
          "bzz-raw://849077d670c0d7e37d416ca7dc50abc5413e08655c84a585d1e720df4ace951a",
          "dweb:/ipfs/QmdNYYbqhy3Ky5j9ky76k3yy8sBjMZb2tErtvwYj6nBNdZ"
        ],
        "license": "GPL-3.0"
      },
      "test/helpers/Tokens.t.sol": {
        "keccak256": "0xf83e7af950879ef2e9a9439baac229d54d4e2c0010de0c31fe50e2819d80cbf5",
        "urls": [
          "bzz-raw://76970644dbc6fbc90e2f7cd1c188d5e01627549f8d1c44dfed732f666b3da825",
          "dweb:/ipfs/QmQHzKBLoHNshpKmX2cBFvwC1LBpKeRPdpyDmNt7Yp5TN4"
        ],
        "license": "GPL-3.0"
      },
      "test/libraries/ComposableCoWLib.t.sol": {
        "keccak256": "0xb2181249ce7534d28d53b75f2a8a3740c6483c0a724c6fc50c57a6fe6cf0a909",
        "urls": [
          "bzz-raw://8375f3182ed1f694adac87bfded1a139069e3d94c5c2d3a2185f0e18ff6fdd85",
          "dweb:/ipfs/QmaucPxncoTpjwHF13yXc1D2p1abuoctww1syqkVxVS9uq"
        ],
        "license": "GPL-3.0"
      },
      "test/libraries/SafeLib.t.sol": {
        "keccak256": "0x58495cf250d0de3ebef0b7516a61207b7a08942d25187a889ee46931a5047a35",
        "urls": [
          "bzz-raw://ea524df2b48cae29a60080490d3ee42f369e064ac28dd78dcf00b47aeec76d52",
          "dweb:/ipfs/QmXzdHC78e6EVTGJSDxtKsjHqaFDGLJyNALCKUYdQDDBG4"
        ],
        "license": "GPL-3.0"
      },
      "test/libraries/TestAccountLib.t.sol": {
        "keccak256": "0x09d3b4eabab8125d3cc1abaa86bfebe04545972c2a12c62a6ed9bedabef07c96",
        "urls": [
          "bzz-raw://af9a65f26bafb1c90ee17d74992859d0a45c5baf02771878660cfab6c063175c",
          "dweb:/ipfs/QmVWH8gcWTGsEd1goFwTobwhcFkoGeuqjFG2N7fKFEkeng"
        ],
        "license": "GPL-3.0"
      },
      "test/vendored/GPv2TradeEncoder.sol": {
        "keccak256": "0x16e3fb0aa82122c4defea77a9678f936a3ed0e719dbe4785b902f1dfdd45d12f",
        "urls": [
          "bzz-raw://104d08d69f24fb5780359c1b38f7501b8c6f78c4e528b8e07cd49bb1fac382c9",
          "dweb:/ipfs/QmQtRfvwyKx6fdwxp7YQa9XRRvZ5q2gm5GDbtST4wCy3qM"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ComposableCoW.t.sol",
    "id": 62001,
    "exportedSymbols": {
      "Base": [
        56232
      ],
      "BaseComposableCoWTest": [
        57006
      ],
      "BaseConditionalOrder": [
        53501
      ],
      "BaseGuard": [
        49013
      ],
      "BaseSwapGuard": [
        54314
      ],
      "CoWSettlement": [
        55972
      ],
      "ComposableCoW": [
        54177
      ],
      "ComposableCoWLib": [
        65803
      ],
      "ComposableCoWTest": [
        62000
      ],
      "DSTest": [
        20760
      ],
      "EIP712": [
        52037
      ],
      "ERC1155TokenReceiver": [
        52147
      ],
      "ERC1271": [
        51612
      ],
      "ERC1271Forwarder": [
        54283
      ],
      "ERC165Handler": [
        51370
      ],
      "ERC721TokenReceiver": [
        52165
      ],
      "Enum": [
        50021
      ],
      "Executor": [
        48884
      ],
      "ExtensibleBase": [
        51012
      ],
      "ExtensibleFallbackHandler": [
        50607
      ],
      "FallbackHandler": [
        51492
      ],
      "FallbackManager": [
        48946
      ],
      "GPv2Interaction": [
        17090
      ],
      "GPv2Order": [
        17246
      ],
      "GoodAfterTime": [
        54811
      ],
      "Guard": [
        48987
      ],
      "GuardManager": [
        49075
      ],
      "HandlerContext": [
        50638
      ],
      "IConditionalOrder": [
        54437
      ],
      "IConditionalOrderGenerator": [
        54468
      ],
      "IERC165": [
        52197
      ],
      "IERC165Handler": [
        51051
      ],
      "IERC20": [
        670
      ],
      "IERC20Metadata": [
        695
      ],
      "IFallbackHandler": [
        51381
      ],
      "IFallbackMethod": [
        50786
      ],
      "INVALID_HASH": [
        53402
      ],
      "ISafeSignatureVerifier": [
        51635
      ],
      "ISignatureValidator": [
        52216
      ],
      "ISignatureValidatorConstants": [
        52203
      ],
      "ISignatureVerifierMuxer": [
        51655
      ],
      "IStaticFallbackMethod": [
        50801
      ],
      "ISwapGuard": [
        54496
      ],
      "IValueFactory": [
        54508
      ],
      "MarshalLib": [
        51598
      ],
      "Merkle": [
        47419
      ],
      "MerkleProof": [
        1245
      ],
      "MirrorConditionalOrder": [
        57139
      ],
      "ModuleManager": [
        49501
      ],
      "NativeCurrencyPaymentFallback": [
        50043
      ],
      "OwnerManager": [
        50014
      ],
      "ReceiverLock": [
        54347
      ],
      "Safe": [
        48851
      ],
      "SafeLib": [
        66056
      ],
      "SafeMath": [
        50277
      ],
      "SecuredTokenTransfer": [
        50070
      ],
      "SelfAuthorized": [
        50096
      ],
      "SignatureDecoder": [
        50116
      ],
      "SignatureVerifierMuxer": [
        52004
      ],
      "Singleton": [
        50122
      ],
      "StdAssertions": [
        22271
      ],
      "StdChains": [
        22965
      ],
      "StdCheats": [
        25216
      ],
      "StdInvariant": [
        25506
      ],
      "StdStorage": [
        26256
      ],
      "StdStyle": [
        28900
      ],
      "StdUtils": [
        29707
      ],
      "StorageAccessible": [
        50171
      ],
      "TWAP": [
        55539
      ],
      "TWAPOrder": [
        55808
      ],
      "Test": [
        29756
      ],
      "TestAccount": [
        66064
      ],
      "TestAccountLib": [
        66230
      ],
      "TestBase": [
        20820
      ],
      "TestConditionalOrderGenerator": [
        57097
      ],
      "TestContextSpecifyValue": [
        57026
      ],
      "TestNonSafeWallet": [
        57112
      ],
      "TestSwapGuard": [
        57065
      ],
      "TokenCallbacks": [
        52110
      ],
      "Vm": [
        31076
      ],
      "console": [
        39140
      ],
      "console2": [
        47236
      ],
      "stdError": [
        25282
      ],
      "stdJson": [
        26082
      ],
      "stdMath": [
        26224
      ],
      "stdStorage": [
        27689
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:19481:159",
    "nodes": [
      {
        "id": 60506,
        "nodeType": "PragmaDirective",
        "src": "36:31:159",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 60507,
        "nodeType": "ImportDirective",
        "src": "69:36:159",
        "nodes": [],
        "absolutePath": "test/ComposableCoW.base.t.sol",
        "file": "./ComposableCoW.base.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62001,
        "sourceUnit": 57140,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62000,
        "nodeType": "ContractDefinition",
        "src": "107:19409:159",
        "nodes": [
          {
            "id": 60514,
            "nodeType": "UsingForDirective",
            "src": "165:70:159",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 60510,
              "name": "ComposableCoWLib",
              "nameLocations": [
                "171:16:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65803,
              "src": "171:16:159"
            },
            "typeName": {
              "baseType": {
                "id": 60512,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60511,
                  "name": "IConditionalOrder.ConditionalOrderParams",
                  "nameLocations": [
                    "192:17:159",
                    "210:22:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54415,
                  "src": "192:40:159"
                },
                "referencedDeclaration": 54415,
                "src": "192:40:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                  "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                }
              },
              "id": 60513,
              "nodeType": "ArrayTypeName",
              "src": "192:42:159",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_storage_$dyn_storage_ptr",
                "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
              }
            }
          },
          {
            "id": 60525,
            "nodeType": "FunctionDefinition",
            "src": "241:116:159",
            "nodes": [],
            "body": {
              "id": 60524,
              "nodeType": "Block",
              "src": "305:52:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 60519,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "337:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ComposableCoWTest_$62000_$",
                          "typeString": "type(contract super ComposableCoWTest)"
                        }
                      },
                      "id": 60521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "343:5:159",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56399,
                      "src": "337:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 60522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "337:13:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60523,
                  "nodeType": "ExpressionStatement",
                  "src": "337:13:159"
                }
              ]
            },
            "baseFunctions": [
              56399
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "250:5:159",
            "overrides": {
              "id": 60517,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 60516,
                  "name": "BaseComposableCoWTest",
                  "nameLocations": [
                    "282:21:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57006,
                  "src": "282:21:159"
                }
              ],
              "src": "273:31:159"
            },
            "parameters": {
              "id": 60515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:159"
            },
            "returnParameters": {
              "id": 60518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 60544,
            "nodeType": "FunctionDefinition",
            "src": "412:157:159",
            "nodes": [],
            "body": {
              "id": 60543,
              "nodeType": "Block",
              "src": "485:84:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60534,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60528,
                        "src": "504:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60535,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60530,
                        "src": "511:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "548:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "",
                            "id": 60539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "557:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 60536,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "517:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "531:5:159",
                          "memberName": "Proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53539,
                          "src": "517:19:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proof_$53539_storage_ptr_$",
                            "typeString": "type(struct ComposableCoW.Proof storage pointer)"
                          }
                        },
                        "id": 60540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "538:8:159",
                          "551:4:159"
                        ],
                        "names": [
                          "location",
                          "data"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "517:44:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 60533,
                      "name": "_setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56483,
                      "src": "495:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 60541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:67:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60542,
                  "nodeType": "ExpressionStatement",
                  "src": "495:67:159"
                }
              ]
            },
            "documentation": {
              "id": 60526,
              "nodeType": "StructuredDocumentation",
              "src": "363:44:159",
              "text": "@dev Can set the Merkle root for `owner`"
            },
            "functionSelector": "3ba95806",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setRoot_FuzzSetAndEmit",
            "nameLocation": "421:27:159",
            "parameters": {
              "id": 60531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60528,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "457:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60544,
                  "src": "449:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60530,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "472:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60544,
                  "src": "464:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60529,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:29:159"
            },
            "returnParameters": {
              "id": 60532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60569,
            "nodeType": "FunctionDefinition",
            "src": "575:251:159",
            "nodes": [],
            "body": {
              "id": 60568,
              "nodeType": "Block",
              "src": "673:153:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60554,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60546,
                        "src": "716:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60555,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60548,
                        "src": "723:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "760:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "",
                            "id": 60559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "769:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 60556,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "729:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "743:5:159",
                          "memberName": "Proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53539,
                          "src": "729:19:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proof_$53539_storage_ptr_$",
                            "typeString": "type(struct ComposableCoW.Proof storage pointer)"
                          }
                        },
                        "id": 60560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "750:8:159",
                          "763:4:159"
                        ],
                        "names": [
                          "location",
                          "data"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "729:44:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      },
                      {
                        "id": 60561,
                        "name": "testContextValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56309,
                        "src": "775:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57026",
                          "typeString": "contract TestContextSpecifyValue"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 60564,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60550,
                            "src": "804:4:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 60562,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "793:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 60563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "797:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "793:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 60565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "793:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57026",
                          "typeString": "contract TestContextSpecifyValue"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 60553,
                      "name": "_setRootWithContext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56556,
                      "src": "683:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$_t_contract$_IValueFactory_$54508_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory,contract IValueFactory,bytes memory)"
                      }
                    },
                    "id": 60566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "683:136:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60567,
                  "nodeType": "ExpressionStatement",
                  "src": "683:136:159"
                }
              ]
            },
            "functionSelector": "b379f91a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setRootWithContext_FuzzSetAndEmit",
            "nameLocation": "584:38:159",
            "parameters": {
              "id": 60551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60546,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "631:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60569,
                  "src": "623:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60548,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "646:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60569,
                  "src": "638:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60547,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60550,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "660:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60569,
                  "src": "652:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60549,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:43:159"
            },
            "returnParameters": {
              "id": 60552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "673:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60726,
            "nodeType": "FunctionDefinition",
            "src": "1232:1505:159",
            "nodes": [],
            "body": {
              "id": 60725,
              "nodeType": "Block",
              "src": "1267:1470:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60578,
                      "mutability": "mutable",
                      "name": "_leaves",
                      "nameLocation": "1327:7:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "1277:57:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60576,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 60575,
                            "name": "IConditionalOrder.ConditionalOrderParams",
                            "nameLocations": [
                              "1277:17:159",
                              "1295:22:159"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54415,
                            "src": "1277:40:159"
                          },
                          "referencedDeclaration": 54415,
                          "src": "1277:40:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                            "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                          }
                        },
                        "id": 60577,
                        "nodeType": "ArrayTypeName",
                        "src": "1277:42:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_storage_$dyn_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60583,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60580,
                        "name": "safe1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56027,
                        "src": "1347:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 60581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1354:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "id": 60579,
                      "name": "getBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57005,
                      "src": "1337:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Safe_$48851_$_t_uint256_$returns$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (contract Safe,uint256) returns (struct IConditionalOrder.ConditionalOrderParams memory[] memory)"
                      }
                    },
                    "id": 60582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:20:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1277:80:159"
                },
                {
                  "assignments": [
                    60585,
                    60588,
                    60591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60585,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "1376:4:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "1368:12:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60584,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1368:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60588,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "1399:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "1382:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60586,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 60587,
                        "nodeType": "ArrayTypeName",
                        "src": "1382:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60591,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1454:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "1406:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 60590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60589,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "1406:17:159",
                            "1424:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "1406:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "1406:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60599,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 60594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1500:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 60595,
                        "name": "leaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56320,
                        "src": "1503:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54415_storage_$",
                          "typeString": "mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams storage ref)"
                        }
                      },
                      {
                        "id": 60596,
                        "name": "getRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47515,
                        "src": "1511:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32[] memory) pure returns (bytes32)"
                        }
                      },
                      {
                        "id": 60597,
                        "name": "getProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47620,
                        "src": "1520:8:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (bytes32[] memory,uint256) pure returns (bytes32[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54415_storage_$",
                          "typeString": "mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams storage ref)"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32[] memory) pure returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (bytes32[] memory,uint256) pure returns (bytes32[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 60592,
                        "name": "_leaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60578,
                        "src": "1476:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                        }
                      },
                      "id": 60593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1484:15:159",
                      "memberName": "getRootAndProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65802,
                      "src": "1476:23:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54415_storage_$_$_t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$_$_t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$_$returns$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$attached_to$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory[] memory,uint256,mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams storage ref),function (bytes32[] memory) pure returns (bytes32),function (bytes32[] memory,uint256) pure returns (bytes32[] memory)) returns (bytes32,bytes32[] memory,struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 60598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:53:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32[] memory,struct IConditionalOrder.ConditionalOrderParams memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1367:162:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 60603,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "1633:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1647:14:159",
                          "memberName": "ProofNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53515,
                          "src": "1633:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 60605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1662:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1633:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 60600,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "1617:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1620:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "1617:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 60606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60607,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60613,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "1734:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1726:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60611,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1726:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1726:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60615,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60591,
                        "src": "1742:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1756:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1750:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60616,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1750:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1750:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 60620,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60588,
                        "src": "1761:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 60608,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "1681:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1695:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "1681:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 60621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1681:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 60622,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:86:159"
                },
                {
                  "assignments": [
                    60627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60627,
                      "mutability": "mutable",
                      "name": "proofStruct",
                      "nameLocation": "1846:11:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "1819:38:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                        "typeString": "struct ComposableCoW.Proof"
                      },
                      "typeName": {
                        "id": 60626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60625,
                          "name": "ComposableCoW.Proof",
                          "nameLocations": [
                            "1819:13:159",
                            "1833:5:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53539,
                          "src": "1819:19:159"
                        },
                        "referencedDeclaration": 53539,
                        "src": "1819:19:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_storage_ptr",
                          "typeString": "struct ComposableCoW.Proof"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60633,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 60630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1891:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "",
                        "id": 60631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 60628,
                        "name": "ComposableCoW",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54177,
                        "src": "1860:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                          "typeString": "type(contract ComposableCoW)"
                        }
                      },
                      "id": 60629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1874:5:159",
                      "memberName": "Proof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53539,
                      "src": "1860:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Proof_$53539_storage_ptr_$",
                        "typeString": "type(struct ComposableCoW.Proof storage pointer)"
                      }
                    },
                    "id": 60632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1881:8:159",
                      "1894:4:159"
                    ],
                    "names": [
                      "location",
                      "data"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1860:44:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                      "typeString": "struct ComposableCoW.Proof memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1819:85:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60637,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "1931:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1923:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60635,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1923:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1923:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60639,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60585,
                        "src": "1939:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60640,
                        "name": "proofStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60627,
                        "src": "1945:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 60634,
                      "name": "_setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56483,
                      "src": "1914:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 60641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1914:43:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60642,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:43:159"
                },
                {
                  "assignments": [
                    60647,
                    60649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60647,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2042:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "2020:27:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 60646,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60645,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "2020:9:159",
                            "2030:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "2020:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "2020:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60649,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "2062:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "2049:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 60648,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2049:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60663,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60654,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "2140:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2132:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60652,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2132:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2132:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60656,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60591,
                        "src": "2148:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2162:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2156:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60657,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2156:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2156:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 60661,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60588,
                        "src": "2167:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 60650,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "2087:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2101:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "2087:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 60662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2019:154:159"
                },
                {
                  "assignments": [
                    60665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60665,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "2218:8:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60725,
                      "src": "2210:16:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60664,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2210:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60669,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 60666,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "2229:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2232:8:159",
                      "memberName": "snapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30921,
                      "src": "2229:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 60668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:13:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2210:32:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60673,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "2317:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2309:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2309:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2309:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60675,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56021,
                        "src": "2325:3:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        }
                      },
                      {
                        "id": 60676,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60647,
                        "src": "2330:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        }
                      },
                      {
                        "id": 60677,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60649,
                        "src": "2337:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2355:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2348:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 60678,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "2348:6:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2348:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 60670,
                      "name": "settle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65275,
                      "src": "2302:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TestAccount_$66064_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,struct TestAccount memory,struct GPv2Order.Data memory,bytes memory,bytes4)"
                      }
                    },
                    "id": 60682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:56:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60683,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:56:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60687,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60665,
                        "src": "2410:8:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60684,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "2398:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2401:8:159",
                      "memberName": "revertTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30928,
                      "src": "2398:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) external returns (bool)"
                      }
                    },
                    "id": 60688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:21:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60689,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:21:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60693,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "2481:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2473:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60691,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2473:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2473:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2497:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2489:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 60695,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2489:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2489:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60699,
                        "name": "proofStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60627,
                        "src": "2501:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 60690,
                      "name": "_setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56483,
                      "src": "2464:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 60700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:49:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60701,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:49:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 60705,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "2596:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2610:14:159",
                          "memberName": "ProofNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53515,
                          "src": "2596:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 60707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2625:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2596:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 60702,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "2580:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2583:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "2580:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 60708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60709,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60715,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "2697:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2689:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2689:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2689:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60717,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60591,
                        "src": "2705:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2719:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2713:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60718,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2713:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2713:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 60722,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60588,
                        "src": "2724:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 60710,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "2644:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2658:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "2644:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 60723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 60724,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:86:159"
                }
              ]
            },
            "documentation": {
              "id": 60570,
              "nodeType": "StructuredDocumentation",
              "src": "832:395:159",
              "text": " @dev An end-to-end test of the ComposableCoW contract that tests the following:\n      1. Does **NOT** validate a proof that is not authorized\n      2. `owner` can set their merkle root\n      3. **DOES** validate a proof that is authorized\n      4. `owner` can remove their merkle root\n      5. Does **NOT** validate a proof that is not authorized"
            },
            "functionSelector": "2c434b98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setRoot_e2e",
            "nameLocation": "1241:16:159",
            "parameters": {
              "id": 60571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:2:159"
            },
            "returnParameters": {
              "id": 60572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60891,
            "nodeType": "FunctionDefinition",
            "src": "3143:1579:159",
            "nodes": [],
            "body": {
              "id": 60890,
              "nodeType": "Block",
              "src": "3189:1533:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60735,
                      "mutability": "mutable",
                      "name": "_leaves",
                      "nameLocation": "3249:7:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "3199:57:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60733,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 60732,
                            "name": "IConditionalOrder.ConditionalOrderParams",
                            "nameLocations": [
                              "3199:17:159",
                              "3217:22:159"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54415,
                            "src": "3199:40:159"
                          },
                          "referencedDeclaration": 54415,
                          "src": "3199:40:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                            "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                          }
                        },
                        "id": 60734,
                        "nodeType": "ArrayTypeName",
                        "src": "3199:42:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_storage_$dyn_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60740,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60737,
                        "name": "safe1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56027,
                        "src": "3269:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 60738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3276:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "id": 60736,
                      "name": "getBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57005,
                      "src": "3259:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Safe_$48851_$_t_uint256_$returns$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (contract Safe,uint256) returns (struct IConditionalOrder.ConditionalOrderParams memory[] memory)"
                      }
                    },
                    "id": 60739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:20:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3199:80:159"
                },
                {
                  "assignments": [
                    60742,
                    60745,
                    60748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60742,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "3298:4:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "3290:12:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60741,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3290:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60745,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "3321:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "3304:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60743,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3304:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 60744,
                        "nodeType": "ArrayTypeName",
                        "src": "3304:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60748,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3376:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "3328:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 60747,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60746,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "3328:17:159",
                            "3346:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "3328:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "3328:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60756,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 60751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3422:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 60752,
                        "name": "leaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56320,
                        "src": "3425:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54415_storage_$",
                          "typeString": "mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams storage ref)"
                        }
                      },
                      {
                        "id": 60753,
                        "name": "getRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47515,
                        "src": "3433:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32[] memory) pure returns (bytes32)"
                        }
                      },
                      {
                        "id": 60754,
                        "name": "getProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47620,
                        "src": "3442:8:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (bytes32[] memory,uint256) pure returns (bytes32[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54415_storage_$",
                          "typeString": "mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams storage ref)"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32[] memory) pure returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (bytes32[] memory,uint256) pure returns (bytes32[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 60749,
                        "name": "_leaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60735,
                        "src": "3398:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                        }
                      },
                      "id": 60750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3406:15:159",
                      "memberName": "getRootAndProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65802,
                      "src": "3398:23:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_ConditionalOrderParams_$54415_storage_$_$_t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$_$_t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$_$returns$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$attached_to$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory[] memory,uint256,mapping(bytes32 => struct IConditionalOrder.ConditionalOrderParams storage ref),function (bytes32[] memory) pure returns (bytes32),function (bytes32[] memory,uint256) pure returns (bytes32[] memory)) returns (bytes32,bytes32[] memory,struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 60755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:53:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32[] memory,struct IConditionalOrder.ConditionalOrderParams memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3289:162:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 60760,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "3555:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3569:14:159",
                          "memberName": "ProofNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53515,
                          "src": "3555:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 60762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3584:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "3555:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 60757,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "3539:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3542:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "3539:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 60763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3539:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60764,
                  "nodeType": "ExpressionStatement",
                  "src": "3539:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60770,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "3656:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3648:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60768,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3648:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3648:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60772,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60748,
                        "src": "3664:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3678:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3672:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60773,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3672:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3672:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 60777,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60745,
                        "src": "3683:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 60765,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "3603:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3617:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "3603:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 60778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3603:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 60779,
                  "nodeType": "ExpressionStatement",
                  "src": "3603:86:159"
                },
                {
                  "assignments": [
                    60784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60784,
                      "mutability": "mutable",
                      "name": "proofStruct",
                      "nameLocation": "3768:11:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "3741:38:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                        "typeString": "struct ComposableCoW.Proof"
                      },
                      "typeName": {
                        "id": 60783,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60782,
                          "name": "ComposableCoW.Proof",
                          "nameLocations": [
                            "3741:13:159",
                            "3755:5:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53539,
                          "src": "3741:19:159"
                        },
                        "referencedDeclaration": 53539,
                        "src": "3741:19:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_storage_ptr",
                          "typeString": "struct ComposableCoW.Proof"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60790,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 60787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3813:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "",
                        "id": 60788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3822:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 60785,
                        "name": "ComposableCoW",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54177,
                        "src": "3782:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                          "typeString": "type(contract ComposableCoW)"
                        }
                      },
                      "id": 60786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3796:5:159",
                      "memberName": "Proof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53539,
                      "src": "3782:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Proof_$53539_storage_ptr_$",
                        "typeString": "type(struct ComposableCoW.Proof storage pointer)"
                      }
                    },
                    "id": 60789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "3803:8:159",
                      "3816:4:159"
                    ],
                    "names": [
                      "location",
                      "data"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3782:44:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                      "typeString": "struct ComposableCoW.Proof memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3741:85:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60794,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "3864:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3856:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60792,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3856:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3856:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60796,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60742,
                        "src": "3872:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60797,
                        "name": "proofStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60784,
                        "src": "3878:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      },
                      {
                        "id": 60798,
                        "name": "testContextValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56309,
                        "src": "3891:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57026",
                          "typeString": "contract TestContextSpecifyValue"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "7465737456616c7565",
                                "id": 60803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3928:11:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3ae05c2d1a98731a86f47b3f43d3dd1bb521c1b23f5277489fbfc4eca0e64c80",
                                  "typeString": "literal_string \"testValue\""
                                },
                                "value": "testValue"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_3ae05c2d1a98731a86f47b3f43d3dd1bb521c1b23f5277489fbfc4eca0e64c80",
                                  "typeString": "literal_string \"testValue\""
                                }
                              ],
                              "id": 60802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3920:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 60801,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "3920:7:159",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3920:20:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 60799,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3909:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 60800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3913:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3909:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 60805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3909:32:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57026",
                          "typeString": "contract TestContextSpecifyValue"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 60791,
                      "name": "_setRootWithContext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56556,
                      "src": "3836:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$_t_contract$_IValueFactory_$54508_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory,contract IValueFactory,bytes memory)"
                      }
                    },
                    "id": 60806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:106:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60807,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:106:159"
                },
                {
                  "assignments": [
                    60812,
                    60814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60812,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "4027:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "4005:27:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 60811,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60810,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "4005:9:159",
                            "4015:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "4005:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "4005:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60814,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "4047:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "4034:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 60813,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4034:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60828,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60819,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "4125:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4117:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4117:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4117:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60821,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60748,
                        "src": "4133:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4147:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4141:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60822,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4141:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4141:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 60826,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60745,
                        "src": "4152:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 60815,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "4072:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4086:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "4072:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 60827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4004:154:159"
                },
                {
                  "assignments": [
                    60830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60830,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "4203:8:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60890,
                      "src": "4195:16:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4195:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60834,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 60831,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "4214:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4217:8:159",
                      "memberName": "snapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30921,
                      "src": "4214:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 60833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:13:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4195:32:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60838,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "4302:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4294:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4294:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4294:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60840,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56021,
                        "src": "4310:3:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        }
                      },
                      {
                        "id": 60841,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60812,
                        "src": "4315:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        }
                      },
                      {
                        "id": 60842,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60814,
                        "src": "4322:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4340:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4333:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 60843,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "4333:6:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4333:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 60835,
                      "name": "settle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65275,
                      "src": "4287:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TestAccount_$66064_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,struct TestAccount memory,struct GPv2Order.Data memory,bytes memory,bytes4)"
                      }
                    },
                    "id": 60847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4287:56:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60848,
                  "nodeType": "ExpressionStatement",
                  "src": "4287:56:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60852,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60830,
                        "src": "4395:8:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60849,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "4383:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4386:8:159",
                      "memberName": "revertTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30928,
                      "src": "4383:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) external returns (bool)"
                      }
                    },
                    "id": 60853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:21:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60854,
                  "nodeType": "ExpressionStatement",
                  "src": "4383:21:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60858,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "4466:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4458:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4458:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4458:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4482:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4474:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 60860,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4474:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4474:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60864,
                        "name": "proofStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60784,
                        "src": "4486:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 60855,
                      "name": "_setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56483,
                      "src": "4449:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 60865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4449:49:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60866,
                  "nodeType": "ExpressionStatement",
                  "src": "4449:49:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 60870,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "4581:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4595:14:159",
                          "memberName": "ProofNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53515,
                          "src": "4581:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 60872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4610:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4581:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 60867,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "4565:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4568:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "4565:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 60873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4565:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60874,
                  "nodeType": "ExpressionStatement",
                  "src": "4565:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60880,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "4682:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 60879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4674:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60878,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4674:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4674:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60882,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60748,
                        "src": "4690:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4704:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4698:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60883,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4698:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4698:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 60887,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60745,
                        "src": "4709:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 60875,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "4629:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4643:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "4629:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 60888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4629:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 60889,
                  "nodeType": "ExpressionStatement",
                  "src": "4629:86:159"
                }
              ]
            },
            "documentation": {
              "id": 60727,
              "nodeType": "StructuredDocumentation",
              "src": "2743:395:159",
              "text": " @dev An end-to-end test of the ComposableCoW contract that tests the following:\n      1. Does **NOT** validate a proof that is not authorized\n      2. `owner` can set their merkle root\n      3. **DOES** validate a proof that is authorized\n      4. `owner` can remove their merkle root\n      5. Does **NOT** validate a proof that is not authorized"
            },
            "functionSelector": "34d17a70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setRootWithContext_e2e",
            "nameLocation": "3152:27:159",
            "parameters": {
              "id": 60728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3179:2:159"
            },
            "returnParameters": {
              "id": 60729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3189:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60930,
            "nodeType": "FunctionDefinition",
            "src": "4794:490:159",
            "nodes": [],
            "body": {
              "id": 60929,
              "nodeType": "Block",
              "src": "4847:437:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60899,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "4905:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60929,
                      "src": "4857:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 60898,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60897,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "4857:17:159",
                            "4875:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "4857:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "4857:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60913,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 60905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5004:1:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 60904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4996:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 60903,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4996:7:159",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4996:10:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 60902,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "4978:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 60907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4978:29:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "7a65726f20697320696e76616c69642068616e646c6572",
                            "id": 60909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5037:25:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e091ca7485bb6e74431c68b9a6ccbf864608b8c6f29132be33a88d4a4a02ef53",
                              "typeString": "literal_string \"zero is invalid handler\""
                            },
                            "value": "zero is invalid handler"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e091ca7485bb6e74431c68b9a6ccbf864608b8c6f29132be33a88d4a4a02ef53",
                              "typeString": "literal_string \"zero is invalid handler\""
                            }
                          ],
                          "id": 60908,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5027:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 60910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5027:36:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 60911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5090:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 60900,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "4914:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 60901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4932:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "4914:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 60912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "4969:7:159",
                      "5021:4:159",
                      "5077:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4914:189:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4857:246:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 60917,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "5130:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 60918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5144:14:159",
                          "memberName": "InvalidHandler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53521,
                          "src": "5130:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 60919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5159:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5130:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 60914,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "5114:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5117:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "5114:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 60920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5114:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60921,
                  "nodeType": "ExpressionStatement",
                  "src": "5114:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60925,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60899,
                        "src": "5264:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 60926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5272:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 60922,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "5243:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 60924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5257:6:159",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53708,
                      "src": "5243:20:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct IConditionalOrder.ConditionalOrderParams memory,bool) external"
                      }
                    },
                    "id": 60927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5243:34:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60928,
                  "nodeType": "ExpressionStatement",
                  "src": "5243:34:159"
                }
              ]
            },
            "documentation": {
              "id": 60892,
              "nodeType": "StructuredDocumentation",
              "src": "4728:61:159",
              "text": "@dev Should disallow setting a handler that is address(0)"
            },
            "functionSelector": "dd6345ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_create_RevertOnInvalidHandler",
            "nameLocation": "4803:34:159",
            "parameters": {
              "id": 60893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4837:2:159"
            },
            "returnParameters": {
              "id": 60894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4847:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60997,
            "nodeType": "FunctionDefinition",
            "src": "5354:754:159",
            "nodes": [],
            "body": {
              "id": 60996,
              "nodeType": "Block",
              "src": "5490:618:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60945,
                          "name": "handler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60935,
                          "src": "5555:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 60948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5574:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 60947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5566:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 60946,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5566:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 60949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:10:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5555:21:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 60942,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "5545:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 60944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5548:6:159",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30714,
                      "src": "5545:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 60951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5545:32:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60952,
                  "nodeType": "ExpressionStatement",
                  "src": "5545:32:159"
                },
                {
                  "assignments": [
                    60957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60957,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "5636:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60996,
                      "src": "5588:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 60956,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60955,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "5588:17:159",
                            "5606:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "5588:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "5588:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60966,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60961,
                            "name": "handler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60935,
                            "src": "5727:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 60960,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "5709:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 60962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5709:26:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "id": 60963,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60937,
                        "src": "5755:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60964,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60939,
                        "src": "5786:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 60958,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "5645:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 60959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5663:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "5645:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 60965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "5700:7:159",
                      "5749:4:159",
                      "5773:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5645:163:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5588:220:159"
                },
                {
                  "assignments": [
                    60968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60968,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "5826:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60996,
                      "src": "5818:17:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60967,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5818:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60975,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60972,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60957,
                            "src": "5859:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          ],
                          "expression": {
                            "id": 60970,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5848:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 60971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5852:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5848:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 60973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5848:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 60969,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5838:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 60974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5838:29:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5818:49:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60979,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60933,
                            "src": "5948:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 60980,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60968,
                            "src": "5955:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 60977,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56303,
                            "src": "5921:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 60978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5935:12:159",
                          "memberName": "singleOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53576,
                          "src": "5921:26:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view external returns (bool)"
                          }
                        },
                        "id": 60981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5921:44:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 60982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5967:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 60976,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 20988,
                      "src": "5912:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 60983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5912:61:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60984,
                  "nodeType": "ExpressionStatement",
                  "src": "5912:61:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60986,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60933,
                        "src": "6020:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60987,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60957,
                        "src": "6027:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 60988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6035:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 60985,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "6012:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 60989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6012:28:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60990,
                  "nodeType": "ExpressionStatement",
                  "src": "6012:28:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60992,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60933,
                        "src": "6087:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60993,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60957,
                        "src": "6094:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      ],
                      "id": 60991,
                      "name": "_remove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56793,
                      "src": "6079:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 60994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6079:22:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60995,
                  "nodeType": "ExpressionStatement",
                  "src": "6079:22:159"
                }
              ]
            },
            "documentation": {
              "id": 60931,
              "nodeType": "StructuredDocumentation",
              "src": "5290:59:159",
              "text": "@dev should be able to create and remove a single order"
            },
            "functionSelector": "9e3791ff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_createAndRemove_FuzzSetAndEmit",
            "nameLocation": "5363:35:159",
            "parameters": {
              "id": 60940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60933,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5407:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60997,
                  "src": "5399:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5399:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60935,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "5422:7:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60997,
                  "src": "5414:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60937,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "5439:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60997,
                  "src": "5431:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60936,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5431:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60939,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "5458:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60997,
                  "src": "5445:24:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60938,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5398:72:159"
            },
            "returnParameters": {
              "id": 60941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5490:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61080,
            "nodeType": "FunctionDefinition",
            "src": "6178:1011:159",
            "nodes": [],
            "body": {
              "id": 61079,
              "nodeType": "Block",
              "src": "6377:812:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61014,
                          "name": "handler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61002,
                          "src": "6442:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 61017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6461:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6453:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 61015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6453:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6453:10:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6442:21:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 61011,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "6432:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6435:6:159",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30714,
                      "src": "6432:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 61020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6432:32:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61021,
                  "nodeType": "ExpressionStatement",
                  "src": "6432:32:159"
                },
                {
                  "assignments": [
                    61026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61026,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "6523:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61079,
                      "src": "6475:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61025,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61024,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "6475:17:159",
                            "6493:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "6475:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "6475:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61035,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61030,
                            "name": "handler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61002,
                            "src": "6614:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61029,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "6596:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 61031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6596:26:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "id": 61032,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61004,
                        "src": "6642:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61033,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61006,
                        "src": "6673:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61027,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "6532:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6550:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "6532:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6587:7:159",
                      "6636:4:159",
                      "6660:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6532:163:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6475:220:159"
                },
                {
                  "assignments": [
                    61037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61037,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "6713:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61079,
                      "src": "6705:17:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 61036,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6705:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61044,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61041,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61026,
                            "src": "6746:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          ],
                          "expression": {
                            "id": 61039,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6735:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6739:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6735:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6735:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61038,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6725:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 61043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6725:29:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6705:49:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61048,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61000,
                            "src": "6835:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 61049,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61037,
                            "src": "6842:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 61046,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56303,
                            "src": "6808:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 61047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6822:12:159",
                          "memberName": "singleOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53576,
                          "src": "6808:26:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view external returns (bool)"
                          }
                        },
                        "id": 61050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6808:44:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6854:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61045,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 20988,
                      "src": "6799:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 61052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6799:61:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61053,
                  "nodeType": "ExpressionStatement",
                  "src": "6799:61:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61055,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61000,
                        "src": "6918:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61056,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61026,
                        "src": "6925:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "id": 61057,
                        "name": "testContextValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56309,
                        "src": "6933:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57026",
                          "typeString": "contract TestContextSpecifyValue"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61060,
                            "name": "ctxValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61008,
                            "src": "6962:8:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 61058,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6951:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6955:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6951:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6951:20:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 61062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6973:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestContextSpecifyValue_$57026",
                          "typeString": "contract TestContextSpecifyValue"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61054,
                      "name": "_createWithContext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56725,
                      "src": "6899:18:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_contract$_IValueFactory_$54508_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,contract IValueFactory,bytes memory,bool)"
                      }
                    },
                    "id": 61063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6899:79:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61064,
                  "nodeType": "ExpressionStatement",
                  "src": "6899:79:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61068,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61000,
                            "src": "7093:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 61069,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61037,
                            "src": "7100:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 61066,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56303,
                            "src": "7071:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 61067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7085:7:159",
                          "memberName": "cabinet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53587,
                          "src": "7071:21:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (address,bytes32) view external returns (bytes32)"
                          }
                        },
                        "id": 61070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7071:39:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61071,
                        "name": "ctxValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61008,
                        "src": "7112:8:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 61065,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "7062:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 61072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7062:59:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61073,
                  "nodeType": "ExpressionStatement",
                  "src": "7062:59:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61075,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61000,
                        "src": "7168:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61076,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61026,
                        "src": "7175:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      ],
                      "id": 61074,
                      "name": "_remove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56793,
                      "src": "7160:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 61077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7160:22:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61078,
                  "nodeType": "ExpressionStatement",
                  "src": "7160:22:159"
                }
              ]
            },
            "documentation": {
              "id": 60998,
              "nodeType": "StructuredDocumentation",
              "src": "6114:59:159",
              "text": "@dev should be able to create and remove a single order"
            },
            "functionSelector": "70af4cdb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_createWithContextAndRemove_FuzzSetAndEmit",
            "nameLocation": "6187:46:159",
            "parameters": {
              "id": 61009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61000,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6251:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61080,
                  "src": "6243:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6243:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61002,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "6274:7:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61080,
                  "src": "6266:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6266:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61004,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "6299:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61080,
                  "src": "6291:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61003,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6291:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61006,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "6326:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61080,
                  "src": "6313:24:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61005,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6313:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61008,
                  "mutability": "mutable",
                  "name": "ctxValue",
                  "nameLocation": "6355:8:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61080,
                  "src": "6347:16:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61007,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6347:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6233:136:159"
            },
            "returnParameters": {
              "id": 61010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6377:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61229,
            "nodeType": "FunctionDefinition",
            "src": "7556:1525:159",
            "nodes": [],
            "body": {
              "id": 61228,
              "nodeType": "Block",
              "src": "7599:1482:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61088,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "7657:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61228,
                      "src": "7609:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61087,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61086,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "7609:17:159",
                            "7627:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "7609:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "7609:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61095,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [
                        {
                          "id": 61090,
                          "name": "safe1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56027,
                          "src": "7676:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Safe_$48851",
                            "typeString": "contract Safe"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 61091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7683:1:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Safe_$48851",
                            "typeString": "contract Safe"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 61089,
                        "name": "getBundle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57005,
                        "src": "7666:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Safe_$48851_$_t_uint256_$returns$_t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (contract Safe,uint256) returns (struct IConditionalOrder.ConditionalOrderParams memory[] memory)"
                        }
                      },
                      "id": 61092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7666:19:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams memory[] memory"
                      }
                    },
                    "id": 61094,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 61093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7686:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7666:22:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7609:79:159"
                },
                {
                  "assignments": [
                    61100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61100,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "7857:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61228,
                      "src": "7840:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 61098,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7840:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 61099,
                        "nodeType": "ArrayTypeName",
                        "src": "7840:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61106,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 61104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7879:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 61103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7865:13:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 61101,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7869:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 61102,
                        "nodeType": "ArrayTypeName",
                        "src": "7869:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 61105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:16:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7840:41:159"
                },
                {
                  "assignments": [
                    61108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61108,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "7899:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61228,
                      "src": "7891:17:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 61107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7891:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61115,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61112,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61088,
                            "src": "7932:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                              "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                            }
                          ],
                          "expression": {
                            "id": 61110,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7921:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7925:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7921:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7921:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61109,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7911:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 61114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7911:29:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7891:49:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61121,
                                "name": "safe1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56027,
                                "src": "8029:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Safe_$48851",
                                  "typeString": "contract Safe"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Safe_$48851",
                                  "typeString": "contract Safe"
                                }
                              ],
                              "id": 61120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8021:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61119,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8021:7:159",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8021:14:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 61123,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61108,
                            "src": "8037:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 61117,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56303,
                            "src": "7994:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          },
                          "id": 61118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8008:12:159",
                          "memberName": "singleOrders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53576,
                          "src": "7994:26:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view external returns (bool)"
                          }
                        },
                        "id": 61124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7994:53:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8049:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61116,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 20988,
                      "src": "7985:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 61126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7985:70:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61127,
                  "nodeType": "ExpressionStatement",
                  "src": "7985:70:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61131,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "8149:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8163:20:159",
                          "memberName": "SingleOrderNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53517,
                          "src": "8149:34:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8184:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "8149:43:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 61128,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "8133:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8136:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "8133:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 61134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8133:60:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61135,
                  "nodeType": "ExpressionStatement",
                  "src": "8133:60:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61141,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "8256:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8248:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8248:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8248:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61143,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61088,
                        "src": "8264:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8278:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8272:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61144,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8272:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8272:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 61148,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61100,
                        "src": "8283:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61136,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "8203:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8217:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "8203:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8203:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 61150,
                  "nodeType": "ExpressionStatement",
                  "src": "8203:86:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61154,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "8348:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8340:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8340:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8340:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61156,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61088,
                        "src": "8356:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 61157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8364:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61151,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "8332:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 61158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8332:37:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61159,
                  "nodeType": "ExpressionStatement",
                  "src": "8332:37:159"
                },
                {
                  "assignments": [
                    61161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61161,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "8414:8:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61228,
                      "src": "8406:16:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8406:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61165,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 61162,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "8425:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8428:8:159",
                      "memberName": "snapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30921,
                      "src": "8425:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 61164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8425:13:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8406:32:159"
                },
                {
                  "assignments": [
                    61170,
                    61172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61170,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "8525:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61228,
                      "src": "8503:27:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 61169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61168,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "8503:9:159",
                            "8513:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "8503:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "8503:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61172,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "8545:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61228,
                      "src": "8532:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61171,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8532:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61186,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61177,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "8623:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8615:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8615:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8615:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61179,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61088,
                        "src": "8631:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8645:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8639:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61180,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8639:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8639:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 61184,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61100,
                        "src": "8650:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61173,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "8570:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8584:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "8570:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8570:86:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8502:154:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61190,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "8730:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8722:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8722:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8722:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61192,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56021,
                        "src": "8738:3:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        }
                      },
                      {
                        "id": 61193,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61170,
                        "src": "8743:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        }
                      },
                      {
                        "id": 61194,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61172,
                        "src": "8750:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8768:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8761:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 61195,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "8761:6:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8761:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 61187,
                      "name": "settle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65275,
                      "src": "8715:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TestAccount_$66064_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,struct TestAccount memory,struct GPv2Order.Data memory,bytes memory,bytes4)"
                      }
                    },
                    "id": 61199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8715:56:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61200,
                  "nodeType": "ExpressionStatement",
                  "src": "8715:56:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61204,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61161,
                        "src": "8824:8:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61201,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "8812:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8815:8:159",
                      "memberName": "revertTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30928,
                      "src": "8812:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) external returns (bool)"
                      }
                    },
                    "id": 61205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8812:21:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61206,
                  "nodeType": "ExpressionStatement",
                  "src": "8812:21:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61210,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "8892:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8884:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8884:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8884:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61212,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61088,
                        "src": "8900:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      ],
                      "id": 61207,
                      "name": "_remove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56793,
                      "src": "8876:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 61213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8876:31:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61214,
                  "nodeType": "ExpressionStatement",
                  "src": "8876:31:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61218,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "8999:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8991:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8991:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8991:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61220,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56021,
                        "src": "9007:3:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        }
                      },
                      {
                        "id": 61221,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61170,
                        "src": "9012:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        }
                      },
                      {
                        "id": 61222,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61172,
                        "src": "9019:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 61223,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "9030:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9044:20:159",
                          "memberName": "SingleOrderNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53517,
                          "src": "9030:34:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9065:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "9030:43:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                          "typeString": "struct TestAccount storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                          "typeString": "struct GPv2Order.Data memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 61215,
                      "name": "settle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65275,
                      "src": "8984:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TestAccount_$66064_memory_ptr_$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,struct TestAccount memory,struct GPv2Order.Data memory,bytes memory,bytes4)"
                      }
                    },
                    "id": 61226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8984:90:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61227,
                  "nodeType": "ExpressionStatement",
                  "src": "8984:90:159"
                }
              ]
            },
            "documentation": {
              "id": 61081,
              "nodeType": "StructuredDocumentation",
              "src": "7195:356:159",
              "text": " @dev An end-to-end test of the ComposableCoW contract that tests the following:\n     1. Does **NOT** validate a single order that is not authorized\n     2. `owner` can create a single order\n     3. Can lookup the validity of the single order for `owner`\n     4. **DOES** validate a single order that is authorized"
            },
            "functionSelector": "7db2a8ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_createAndRemove_e2e",
            "nameLocation": "7565:24:159",
            "parameters": {
              "id": 61082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7589:2:159"
            },
            "returnParameters": {
              "id": 61083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7599:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61335,
            "nodeType": "FunctionDefinition",
            "src": "9161:1260:159",
            "nodes": [],
            "body": {
              "id": 61334,
              "nodeType": "Block",
              "src": "9246:1175:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61237,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "9304:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61334,
                      "src": "9256:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61236,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61235,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "9256:17:159",
                            "9274:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "9256:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "9256:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61240,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 61238,
                      "name": "getPassthroughOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56892,
                      "src": "9313:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$",
                        "typeString": "function () view returns (struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 61239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9313:21:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9256:78:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61242,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56018,
                          "src": "9388:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                            "typeString": "struct TestAccount storage ref"
                          }
                        },
                        "id": 61243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9394:4:159",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66061,
                        "src": "9388:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61244,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61237,
                        "src": "9400:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9408:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61241,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "9380:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 61246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9380:34:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61247,
                  "nodeType": "ExpressionStatement",
                  "src": "9380:34:159"
                },
                {
                  "assignments": [
                    61252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61252,
                      "mutability": "mutable",
                      "name": "order1",
                      "nameLocation": "9487:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61334,
                      "src": "9465:28:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 61251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61250,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "9465:9:159",
                            "9475:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "9465:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "9465:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61255,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 61253,
                      "name": "getBlankOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56806,
                      "src": "9496:13:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17121_memory_ptr_$",
                        "typeString": "function () pure returns (struct GPv2Order.Data memory)"
                      }
                    },
                    "id": 61254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9496:15:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9465:46:159"
                },
                {
                  "assignments": [
                    61260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61260,
                      "mutability": "mutable",
                      "name": "order2",
                      "nameLocation": "9543:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61334,
                      "src": "9521:28:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 61259,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61258,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "9521:9:159",
                            "9531:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "9521:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "9521:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61266,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7264657232",
                            "id": 61263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9582:8:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ef1cc318c031f6538ef09fbcfd6bb018a44dd0852d289c0466c29619432b1517",
                              "typeString": "literal_string \"order2\""
                            },
                            "value": "order2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ef1cc318c031f6538ef09fbcfd6bb018a44dd0852d289c0466c29619432b1517",
                              "typeString": "literal_string \"order2\""
                            }
                          ],
                          "id": 61262,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "9572:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9572:19:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 61261,
                      "name": "getOrderWithAppData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56849,
                      "src": "9552:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Data_$17121_memory_ptr_$",
                        "typeString": "function (bytes32) pure returns (struct GPv2Order.Data memory)"
                      }
                    },
                    "id": 61265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9552:40:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9521:71:159"
                },
                {
                  "assignments": [
                    61268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61268,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "9780:15:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61334,
                      "src": "9772:23:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 61267,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9772:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61272,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 61269,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "9798:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9812:15:159",
                      "memberName": "domainSeparator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53564,
                      "src": "9798:29:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 61271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9798:31:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9772:57:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 61278,
                                "name": "IConditionalOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54437,
                                "src": "9933:17:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                                  "typeString": "type(contract IConditionalOrder)"
                                }
                              },
                              "id": 61279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9951:13:159",
                              "memberName": "OrderNotValid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54407,
                              "src": "9933:31:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 61280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9965:8:159",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9933:40:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 61281,
                            "name": "INVALID_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53402,
                            "src": "9975:12:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 61276,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9910:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9914:18:159",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9910:22:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 61282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9910:78:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61273,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "9894:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9897:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30810,
                      "src": "9894:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 61283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9894:95:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61284,
                  "nodeType": "ExpressionStatement",
                  "src": "9894:95:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 61293,
                                      "name": "alice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56018,
                                      "src": "10068:5:159",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                                        "typeString": "struct TestAccount storage ref"
                                      }
                                    },
                                    "id": 61294,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10074:4:159",
                                    "memberName": "addr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66061,
                                    "src": "10068:10:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 61292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10060:7:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 61291,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10060:7:159",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 61295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10060:19:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 61290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10052:8:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 61289,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10052:8:159",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10052:28:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 61288,
                          "name": "Safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48851,
                          "src": "10047:4:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Safe_$48851_$",
                            "typeString": "type(contract Safe)"
                          }
                        },
                        "id": 61297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10047:34:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10103:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10095:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61298,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10095:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10095:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61304,
                            "name": "order1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61252,
                            "src": "10134:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          },
                          {
                            "id": 61305,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61268,
                            "src": "10142:15:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 61302,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "10119:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 61303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10129:4:159",
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17201,
                          "src": "10119:14:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Data_$17121_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (struct GPv2Order.Data memory,bytes32) pure returns (bytes32)"
                          }
                        },
                        "id": 61306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10119:39:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61307,
                        "name": "domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61268,
                        "src": "10172:15:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10209:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10201:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 61308,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10201:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10201:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61314,
                            "name": "order1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61252,
                            "src": "10236:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          ],
                          "expression": {
                            "id": 61312,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10225:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10229:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10225:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10225:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 61323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10335:1:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 61322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "10321:13:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (bytes32[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 61320,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10325:7:159",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 61321,
                                    "nodeType": "ArrayTypeName",
                                    "src": "10325:9:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[]"
                                    }
                                  }
                                },
                                "id": 61324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10321:16:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "id": 61325,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61237,
                                "src": "10347:6:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 61328,
                                    "name": "order2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61260,
                                    "src": "10381:6:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61326,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10370:3:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 61327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "10374:6:159",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "10370:10:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 61329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10370:18:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 61318,
                                "name": "ComposableCoW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54177,
                                "src": "10285:13:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                                  "typeString": "type(contract ComposableCoW)"
                                }
                              },
                              "id": 61319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10299:13:159",
                              "memberName": "PayloadStruct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53534,
                              "src": "10285:27:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53534_storage_ptr_$",
                                "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                              }
                            },
                            "id": 61330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "10314:5:159",
                              "10339:6:159",
                              "10355:13:159"
                            ],
                            "names": [
                              "proof",
                              "params",
                              "offchainInput"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10285:105:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          ],
                          "expression": {
                            "id": 61316,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10257:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10261:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10257:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10257:147:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61285,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "9999:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10013:20:159",
                      "memberName": "isValidSafeSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53896,
                      "src": "9999:34:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 61332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9999:415:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 61333,
                  "nodeType": "ExpressionStatement",
                  "src": "9999:415:159"
                }
              ]
            },
            "documentation": {
              "id": 61230,
              "nodeType": "StructuredDocumentation",
              "src": "9087:69:159",
              "text": "@dev `BaseConditionalOrder` enforces that the order hash is valid"
            },
            "functionSelector": "a19a9889",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isValidSafeSignature_BaseConditionalOrder_RevertOnInvalidHash",
            "nameLocation": "9170:66:159",
            "parameters": {
              "id": 61231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9236:2:159"
            },
            "returnParameters": {
              "id": 61232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9246:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61436,
            "nodeType": "FunctionDefinition",
            "src": "10468:1216:159",
            "nodes": [],
            "body": {
              "id": 61435,
              "nodeType": "Block",
              "src": "10697:987:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61355,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61341,
                            "src": "10780:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 61356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10786:6:159",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10780:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 61357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10795:1:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10780:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 61352,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "10770:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10773:6:159",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30714,
                      "src": "10770:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 61359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10770:27:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61360,
                  "nodeType": "ExpressionStatement",
                  "src": "10770:27:159"
                },
                {
                  "assignments": [
                    61365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61365,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10856:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61435,
                      "src": "10808:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61363,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "10808:17:159",
                            "10826:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "10808:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "10808:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61374,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61369,
                            "name": "handler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61345,
                            "src": "10947:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61368,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "10929:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 61370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10929:26:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "id": 61371,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61347,
                        "src": "10975:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61372,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61349,
                        "src": "11006:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61366,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "10865:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10883:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "10865:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10920:7:159",
                      "10969:4:159",
                      "10993:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10865:163:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10808:220:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61376,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61338,
                        "src": "11079:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61377,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61343,
                        "src": "11086:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11123:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "",
                            "id": 61381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11132:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 61378,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "11092:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11106:5:159",
                          "memberName": "Proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53539,
                          "src": "11092:19:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proof_$53539_storage_ptr_$",
                            "typeString": "type(struct ComposableCoW.Proof storage pointer)"
                          }
                        },
                        "id": 61382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "11113:8:159",
                          "11126:4:159"
                        ],
                        "names": [
                          "location",
                          "data"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11092:44:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 61375,
                      "name": "_setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56483,
                      "src": "11070:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 61383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11070:67:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61384,
                  "nodeType": "ExpressionStatement",
                  "src": "11070:67:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61388,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "11213:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11227:14:159",
                          "memberName": "ProofNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53515,
                          "src": "11213:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11242:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "11213:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 61385,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "11197:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11200:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "11197:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 61391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11197:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61392,
                  "nodeType": "ExpressionStatement",
                  "src": "11197:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61399,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61338,
                                "src": "11322:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 61398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11314:8:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 61397,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11314:8:159",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11314:14:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 61396,
                          "name": "Safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48851,
                          "src": "11309:4:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Safe_$48851_$",
                            "typeString": "type(contract Safe)"
                          }
                        },
                        "id": 61401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11309:20:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11351:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11343:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11343:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11343:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "736f6d6520475076324f726465722068617368",
                            "id": 61407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11398:21:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1e19c368b8e9c45999d9dae49fdaf9f9f10d9fa0e52cff7fab17f0afd87d80b0",
                              "typeString": "literal_string \"some GPv2Order hash\""
                            },
                            "value": "some GPv2Order hash"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1e19c368b8e9c45999d9dae49fdaf9f9f10d9fa0e52cff7fab17f0afd87d80b0",
                              "typeString": "literal_string \"some GPv2Order hash\""
                            }
                          ],
                          "id": 61406,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "11388:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11388:32:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "736f6d6520646f6d61696e20736570617261746f72",
                            "id": 61410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11444:23:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_26d17eb22ca6b2615b053b942d517a8eb1dc14746ac5059914694f5dd6023a52",
                              "typeString": "literal_string \"some domain separator\""
                            },
                            "value": "some domain separator"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_26d17eb22ca6b2615b053b942d517a8eb1dc14746ac5059914694f5dd6023a52",
                              "typeString": "literal_string \"some domain separator\""
                            }
                          ],
                          "id": 61409,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "11434:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11434:34:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11490:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11482:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 61412,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11482:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11482:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 61418,
                              "name": "getBlankOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56806,
                              "src": "11540:13:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17121_memory_ptr_$",
                                "typeString": "function () pure returns (struct GPv2Order.Data memory)"
                              }
                            },
                            "id": 61419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11540:15:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          ],
                          "expression": {
                            "id": 61416,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11529:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11533:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11529:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11529:27:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61425,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61341,
                                "src": "11617:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "id": 61426,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61365,
                                "src": "11632:6:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 61429,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11661:2:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "id": 61428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11655:5:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 61427,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11655:5:159",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 61430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11655:9:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 61423,
                                "name": "ComposableCoW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54177,
                                "src": "11581:13:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                                  "typeString": "type(contract ComposableCoW)"
                                }
                              },
                              "id": 61424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11595:13:159",
                              "memberName": "PayloadStruct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53534,
                              "src": "11581:27:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53534_storage_ptr_$",
                                "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                              }
                            },
                            "id": 61431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11610:5:159",
                              "11624:6:159",
                              "11640:13:159"
                            ],
                            "names": [
                              "proof",
                              "params",
                              "offchainInput"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11581:85:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          ],
                          "expression": {
                            "id": 61421,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11570:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11574:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11570:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11570:97:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61393,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "11261:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11275:20:159",
                      "memberName": "isValidSafeSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53896,
                      "src": "11261:34:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 61433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11261:416:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 61434,
                  "nodeType": "ExpressionStatement",
                  "src": "11261:416:159"
                }
              ]
            },
            "documentation": {
              "id": 61336,
              "nodeType": "StructuredDocumentation",
              "src": "10427:36:159",
              "text": "@dev Reverts on an invalid proof"
            },
            "functionSelector": "ee692c5f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isValidSafeSignature_FuzzRevertInvalidProof",
            "nameLocation": "10477:48:159",
            "parameters": {
              "id": 61350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61338,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10543:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61436,
                  "src": "10535:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10535:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61341,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "10575:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61436,
                  "src": "10558:22:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61339,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10558:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 61340,
                    "nodeType": "ArrayTypeName",
                    "src": "10558:9:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61343,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "10598:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61436,
                  "src": "10590:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61342,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10590:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61345,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "10620:7:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61436,
                  "src": "10612:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10612:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61347,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "10645:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61436,
                  "src": "10637:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61346,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10637:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61349,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "10672:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61436,
                  "src": "10659:24:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61348,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10659:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10525:164:159"
            },
            "returnParameters": {
              "id": 61351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10697:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61528,
            "nodeType": "FunctionDefinition",
            "src": "11738:1028:159",
            "nodes": [],
            "body": {
              "id": 61527,
              "nodeType": "Block",
              "src": "11919:847:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61451,
                          "name": "handler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61441,
                          "src": "11939:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 61454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11958:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11950:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 61452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11950:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11950:10:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11939:21:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 61448,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "11929:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11932:6:159",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30714,
                      "src": "11929:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 61457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11929:32:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61458,
                  "nodeType": "ExpressionStatement",
                  "src": "11929:32:159"
                },
                {
                  "assignments": [
                    61463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61463,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "12020:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61527,
                      "src": "11972:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61462,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61461,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "11972:17:159",
                            "11990:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "11972:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "11972:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61472,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61467,
                            "name": "handler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61441,
                            "src": "12111:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61466,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "12093:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 61468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12093:26:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "id": 61469,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61443,
                        "src": "12139:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61470,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61445,
                        "src": "12170:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61464,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "12029:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12047:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "12029:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "12084:7:159",
                      "12133:4:159",
                      "12157:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12029:163:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11972:220:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61476,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "12278:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12292:20:159",
                          "memberName": "SingleOrderNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53517,
                          "src": "12278:34:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12313:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "12278:43:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 61473,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "12262:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12265:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "12262:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 61479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12262:60:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61480,
                  "nodeType": "ExpressionStatement",
                  "src": "12262:60:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61487,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61439,
                                "src": "12393:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 61486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12385:8:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 61485,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12385:8:159",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12385:14:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 61484,
                          "name": "Safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48851,
                          "src": "12380:4:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Safe_$48851_$",
                            "typeString": "type(contract Safe)"
                          }
                        },
                        "id": 61489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12380:20:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12422:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12414:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12414:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12414:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "736f6d6520677076326f726465722068617368",
                            "id": 61495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12469:21:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3e065c237239c100e9e1a76c49e8333afdd19f83903bd9ddcaf0fde32594632d",
                              "typeString": "literal_string \"some gpv2order hash\""
                            },
                            "value": "some gpv2order hash"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3e065c237239c100e9e1a76c49e8333afdd19f83903bd9ddcaf0fde32594632d",
                              "typeString": "literal_string \"some gpv2order hash\""
                            }
                          ],
                          "id": 61494,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12459:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12459:32:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "736f6d6520646f6d61696e20736570617261746f72",
                            "id": 61498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12515:23:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_26d17eb22ca6b2615b053b942d517a8eb1dc14746ac5059914694f5dd6023a52",
                              "typeString": "literal_string \"some domain separator\""
                            },
                            "value": "some domain separator"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_26d17eb22ca6b2615b053b942d517a8eb1dc14746ac5059914694f5dd6023a52",
                              "typeString": "literal_string \"some domain separator\""
                            }
                          ],
                          "id": 61497,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12505:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12505:34:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12561:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12553:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 61500,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12553:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12553:10:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 61506,
                              "name": "getBlankOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56806,
                              "src": "12611:13:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17121_memory_ptr_$",
                                "typeString": "function () pure returns (struct GPv2Order.Data memory)"
                              }
                            },
                            "id": 61507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12611:15:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          ],
                          "expression": {
                            "id": 61504,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12600:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12604:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12600:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12600:27:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 61516,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12702:1:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 61515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "12688:13:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (bytes32[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 61513,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12692:7:159",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 61514,
                                    "nodeType": "ArrayTypeName",
                                    "src": "12692:9:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[]"
                                    }
                                  }
                                },
                                "id": 61517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12688:16:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "id": 61518,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61463,
                                "src": "12714:6:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 61521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12743:2:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "id": 61520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12737:5:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 61519,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12737:5:159",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 61522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12737:9:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                  "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 61511,
                                "name": "ComposableCoW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54177,
                                "src": "12652:13:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                                  "typeString": "type(contract ComposableCoW)"
                                }
                              },
                              "id": 61512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12666:13:159",
                              "memberName": "PayloadStruct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53534,
                              "src": "12652:27:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53534_storage_ptr_$",
                                "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                              }
                            },
                            "id": 61523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "12681:5:159",
                              "12706:6:159",
                              "12722:13:159"
                            ],
                            "names": [
                              "proof",
                              "params",
                              "offchainInput"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "12652:96:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                              "typeString": "struct ComposableCoW.PayloadStruct memory"
                            }
                          ],
                          "expression": {
                            "id": 61509,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12641:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12645:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12641:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12641:108:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$48851",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61481,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "12332:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12346:20:159",
                      "memberName": "isValidSafeSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53896,
                      "src": "12332:34:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 61525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12332:427:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 61526,
                  "nodeType": "ExpressionStatement",
                  "src": "12332:427:159"
                }
              ]
            },
            "documentation": {
              "id": 61437,
              "nodeType": "StructuredDocumentation",
              "src": "11690:43:159",
              "text": "@dev Reverts on an invalid single order"
            },
            "functionSelector": "36a7d482",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isValidSafeSignature_FuzzRevertInvalidSingleOrder",
            "nameLocation": "11747:54:159",
            "parameters": {
              "id": 61446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61439,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11819:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61528,
                  "src": "11811:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11811:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61441,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "11842:7:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61528,
                  "src": "11834:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11834:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61443,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "11867:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61528,
                  "src": "11859:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61442,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11859:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61445,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "11894:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61528,
                  "src": "11881:24:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61444,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11881:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11801:110:159"
            },
            "returnParameters": {
              "id": 61447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11919:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61676,
            "nodeType": "FunctionDefinition",
            "src": "12852:2075:159",
            "nodes": [],
            "body": {
              "id": 61675,
              "nodeType": "Block",
              "src": "12961:1966:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61540,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "13128:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61675,
                      "src": "13080:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61539,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61538,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "13080:17:159",
                            "13098:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "13080:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "13080:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61554,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61544,
                            "name": "mirror",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56312,
                            "src": "13219:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57139",
                              "typeString": "contract MirrorConditionalOrder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57139",
                              "typeString": "contract MirrorConditionalOrder"
                            }
                          ],
                          "id": 61543,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "13201:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 61545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13201:25:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6d6972726f72",
                            "id": 61547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13256:8:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5a1b0982e87164f04c07f3e34b873c8bd03f31645cb3c70d611c56ca3d37e6b7",
                              "typeString": "literal_string \"mirror\""
                            },
                            "value": "mirror"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5a1b0982e87164f04c07f3e34b873c8bd03f31645cb3c70d611c56ca3d37e6b7",
                              "typeString": "literal_string \"mirror\""
                            }
                          ],
                          "id": 61546,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "13246:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13246:19:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13298:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13292:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61549,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "13292:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13292:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61541,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "13137:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13155:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "13137:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "13192:7:159",
                      "13240:4:159",
                      "13279:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13137:175:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13080:232:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61556,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61531,
                        "src": "13371:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61557,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61540,
                        "src": "13378:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13386:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61555,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "13363:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 61559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13363:29:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61560,
                  "nodeType": "ExpressionStatement",
                  "src": "13363:29:159"
                },
                {
                  "assignments": [
                    61565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61565,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "13454:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61675,
                      "src": "13432:27:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 61564,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61563,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "13432:9:159",
                            "13442:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "13432:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "13432:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61568,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 61566,
                      "name": "getBlankOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56806,
                      "src": "13462:13:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17121_memory_ptr_$",
                        "typeString": "function () pure returns (struct GPv2Order.Data memory)"
                      }
                    },
                    "id": 61567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13462:15:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13432:45:159"
                },
                {
                  "assignments": [
                    61570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61570,
                      "mutability": "mutable",
                      "name": "offchainInput",
                      "nameLocation": "13500:13:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61675,
                      "src": "13487:26:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61569,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13487:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61575,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 61573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13522:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 61572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "13516:5:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 61571,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13516:5:159",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13516:9:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13487:38:159"
                },
                {
                  "assignments": [
                    61577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61577,
                      "mutability": "mutable",
                      "name": "cd",
                      "nameLocation": "13631:2:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61675,
                      "src": "13618:15:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61576,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13618:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61625,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61580,
                          "name": "composableCow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56303,
                          "src": "13664:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                            "typeString": "contract ComposableCoW"
                          }
                        },
                        "id": 61581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13678:20:159",
                        "memberName": "isValidSafeSignature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53896,
                        "src": "13664:34:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                          "typeString": "function (contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory) view external returns (bytes4)"
                        }
                      },
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 61587,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61531,
                                        "src": "13751:5:159",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 61586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "13743:7:159",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 61585,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "13743:7:159",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13743:14:159",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 61584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13735:8:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 61583,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13735:8:159",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 61589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13735:23:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 61582,
                              "name": "Safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48851,
                              "src": "13730:4:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Safe_$48851_$",
                                "typeString": "type(contract Safe)"
                              }
                            },
                            "id": 61590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13730:29:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 61593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13785:1:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 61592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13777:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61591,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13777:7:159",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13777:10:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 61598,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61565,
                                    "src": "13847:5:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61596,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "13836:3:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 61597,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "13840:6:159",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "13836:10:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 61599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13836:17:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 61595,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "13826:9:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 61600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13826:28:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 61601,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61533,
                            "src": "13872:15:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 61604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13913:1:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 61603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13905:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 61602,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "13905:7:159",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13905:10:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 61608,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61565,
                                "src": "13967:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                  "typeString": "struct GPv2Order.Data memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                  "typeString": "struct GPv2Order.Data memory"
                                }
                              ],
                              "expression": {
                                "id": 61606,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "13956:3:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 61607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13960:6:159",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "13956:10:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 61609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13956:17:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 61617,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14073:1:159",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 61616,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "14059:13:159",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                                      },
                                      "typeName": {
                                        "baseType": {
                                          "id": 61614,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14063:7:159",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "id": 61615,
                                        "nodeType": "ArrayTypeName",
                                        "src": "14063:9:159",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                          "typeString": "bytes32[]"
                                        }
                                      }
                                    },
                                    "id": 61618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14059:16:159",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  {
                                    "id": 61619,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61540,
                                    "src": "14085:6:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  },
                                  {
                                    "id": 61620,
                                    "name": "offchainInput",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61570,
                                    "src": "14108:13:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61612,
                                    "name": "ComposableCoW",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54177,
                                    "src": "14023:13:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                                      "typeString": "type(contract ComposableCoW)"
                                    }
                                  },
                                  "id": 61613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14037:13:159",
                                  "memberName": "PayloadStruct",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53534,
                                  "src": "14023:27:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_PayloadStruct_$53534_storage_ptr_$",
                                    "typeString": "type(struct ComposableCoW.PayloadStruct storage pointer)"
                                  }
                                },
                                "id": 61621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "14052:5:159",
                                  "14077:6:159",
                                  "14093:13:159"
                                ],
                                "names": [
                                  "proof",
                                  "params",
                                  "offchainInput"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "14023:100:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                                  "typeString": "struct ComposableCoW.PayloadStruct memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_PayloadStruct_$53534_memory_ptr",
                                  "typeString": "struct ComposableCoW.PayloadStruct memory"
                                }
                              ],
                              "expression": {
                                "id": 61610,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "13991:3:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 61611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13995:6:159",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "13991:10:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 61622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13991:154:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "id": 61623,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13712:447:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_view$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                          "typeString": "function (contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory) view external returns (bytes4)"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_contract$_Safe_$48851_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(contract Safe,address,bytes32,bytes32,bytes32,bytes memory,bytes memory)"
                        }
                      ],
                      "expression": {
                        "id": 61578,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13636:3:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 61579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13640:10:159",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "13636:14:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 61624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13636:533:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13618:551:159"
                },
                {
                  "assignments": [
                    61627,
                    61629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61627,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "14186:7:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61675,
                      "src": "14181:12:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61626,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14181:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61629,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "14208:10:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61675,
                      "src": "14195:23:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61628,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14195:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61637,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61635,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61577,
                        "src": "14250:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 61632,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56303,
                            "src": "14230:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          ],
                          "id": 61631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14222:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61630,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14222:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14222:22:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 61634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14245:4:159",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "14222:27:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 61636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14222:31:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14180:73:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14341:8:159",
                        "subExpression": {
                          "id": 61639,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61627,
                          "src": "14342:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61638,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19243,
                        19264
                      ],
                      "referencedDeclaration": 19243,
                      "src": "14330:10:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 61641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14330:20:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61642,
                  "nodeType": "ExpressionStatement",
                  "src": "14330:20:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61644,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61629,
                        "src": "14472:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 61647,
                                "name": "IConditionalOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54437,
                                "src": "14536:17:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                                  "typeString": "type(contract IConditionalOrder)"
                                }
                              },
                              "id": 61648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "14554:6:159",
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54436,
                              "src": "14536:24:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_struct$_Data_$17121_calldata_ptr_$returns$__$",
                                "typeString": "function IConditionalOrder.verify(address,address,bytes32,bytes32,bytes32,bytes calldata,bytes calldata,struct GPv2Order.Data calldata) view"
                              }
                            },
                            "id": 61649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14561:8:159",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14536:33:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 61650,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61531,
                            "src": "14587:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 61653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14618:1:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 61652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14610:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61651,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14610:7:159",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14610:10:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 61658,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61565,
                                    "src": "14680:5:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                      "typeString": "struct GPv2Order.Data memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61656,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "14669:3:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 61657,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "14673:6:159",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "14669:10:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 61659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14669:17:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 61655,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "14659:9:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 61660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14659:28:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 61661,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61533,
                            "src": "14705:15:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 61665,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61540,
                                    "src": "14759:6:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61663,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "14748:3:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 61664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "14752:6:159",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "14748:10:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 61666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14748:18:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 61662,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "14738:9:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 61667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14738:29:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 61668,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61540,
                              "src": "14824:6:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                                "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                              }
                            },
                            "id": 61669,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14831:11:159",
                            "memberName": "staticInput",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54414,
                            "src": "14824:18:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 61670,
                            "name": "offchainInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61570,
                            "src": "14860:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 61671,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61565,
                            "src": "14891:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          ],
                          "expression": {
                            "id": 61645,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14496:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14500:18:159",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14496:22:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 61672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14496:414:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61643,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 21026,
                      "src": "14450:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 61673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14450:470:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61674,
                  "nodeType": "ExpressionStatement",
                  "src": "14450:470:159"
                }
              ]
            },
            "documentation": {
              "id": 61529,
              "nodeType": "StructuredDocumentation",
              "src": "12772:75:159",
              "text": "@dev Make sure `isValidSafeSignature` passes the context to the handler"
            },
            "functionSelector": "945602ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isValidSafeSignature_FuzzPassesContextToHandler",
            "nameLocation": "12861:52:159",
            "parameters": {
              "id": 61534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61531,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12922:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61676,
                  "src": "12914:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12914:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61533,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "12937:15:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61676,
                  "src": "12929:23:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61532,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12929:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12913:40:159"
            },
            "returnParameters": {
              "id": 61535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12961:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61730,
            "nodeType": "FunctionDefinition",
            "src": "15027:702:159",
            "nodes": [],
            "body": {
              "id": 61729,
              "nodeType": "Block",
              "src": "15109:620:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61684,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "15238:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61729,
                      "src": "15190:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61683,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61682,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "15190:17:159",
                            "15208:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "15190:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "15190:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61696,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61687,
                        "name": "mirror",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56312,
                        "src": "15311:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57139",
                          "typeString": "contract MirrorConditionalOrder"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "6d6972726f72",
                            "id": 61689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15347:8:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5a1b0982e87164f04c07f3e34b873c8bd03f31645cb3c70d611c56ca3d37e6b7",
                              "typeString": "literal_string \"mirror\""
                            },
                            "value": "mirror"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5a1b0982e87164f04c07f3e34b873c8bd03f31645cb3c70d611c56ca3d37e6b7",
                              "typeString": "literal_string \"mirror\""
                            }
                          ],
                          "id": 61688,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "15337:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 61690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15337:19:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15389:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15383:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61691,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "15383:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15383:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MirrorConditionalOrder_$57139",
                          "typeString": "contract MirrorConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61685,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "15247:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15265:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "15247:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "15302:7:159",
                      "15331:4:159",
                      "15370:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "15247:156:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15190:213:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61698,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56018,
                          "src": "15462:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                            "typeString": "struct TestAccount storage ref"
                          }
                        },
                        "id": 61699,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15468:4:159",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66061,
                        "src": "15462:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61700,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61684,
                        "src": "15474:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15482:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61697,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "15454:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 61702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15454:34:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61703,
                  "nodeType": "ExpressionStatement",
                  "src": "15454:34:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61707,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "15574:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15588:21:159",
                          "memberName": "InterfaceNotSupported",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53525,
                          "src": "15574:35:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15610:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "15574:44:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 61704,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "15558:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15561:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "15558:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 61710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15558:61:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61711,
                  "nodeType": "ExpressionStatement",
                  "src": "15558:61:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61715,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56018,
                          "src": "15674:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestAccount_$66064_storage",
                            "typeString": "struct TestAccount storage ref"
                          }
                        },
                        "id": 61716,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15680:4:159",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66061,
                        "src": "15674:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61717,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61684,
                        "src": "15686:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15700:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15694:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61718,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "15694:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15694:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15719:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "15705:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 61722,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "15709:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 61723,
                            "nodeType": "ArrayTypeName",
                            "src": "15709:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 61726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15705:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61712,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "15629:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15643:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "15629:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15629:93:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 61728,
                  "nodeType": "ExpressionStatement",
                  "src": "15629:93:159"
                }
              ]
            },
            "documentation": {
              "id": 61677,
              "nodeType": "StructuredDocumentation",
              "src": "14933:89:159",
              "text": "@dev `getTradeableOrderWithSignature` should revert if the interface is not supported"
            },
            "functionSelector": "a3d50ac5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getTradeableOrderWithSignature_RevertInterfaceNotSupported",
            "nameLocation": "15036:63:159",
            "parameters": {
              "id": 61678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15099:2:159"
            },
            "returnParameters": {
              "id": 61679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15109:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61801,
            "nodeType": "FunctionDefinition",
            "src": "15821:887:159",
            "nodes": [],
            "body": {
              "id": 61800,
              "nodeType": "Block",
              "src": "16060:648:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61750,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61736,
                            "src": "16143:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 61751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16149:6:159",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16143:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 61752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16158:1:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16143:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 61747,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "16133:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16136:6:159",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30714,
                      "src": "16133:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 61754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16133:27:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61755,
                  "nodeType": "ExpressionStatement",
                  "src": "16133:27:159"
                },
                {
                  "assignments": [
                    61760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61760,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "16219:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61800,
                      "src": "16171:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61759,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61758,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "16171:17:159",
                            "16189:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "16171:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "16171:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61769,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61764,
                            "name": "handler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61740,
                            "src": "16310:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61763,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "16292:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 61765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16292:26:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "id": 61766,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61742,
                        "src": "16338:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61767,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61744,
                        "src": "16369:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61761,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "16228:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16246:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "16228:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "16283:7:159",
                      "16332:4:159",
                      "16356:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16228:163:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16171:220:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61771,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61733,
                        "src": "16442:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61772,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61738,
                        "src": "16449:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16486:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "",
                            "id": 61776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16495:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 61773,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "16455:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16469:5:159",
                          "memberName": "Proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53539,
                          "src": "16455:19:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proof_$53539_storage_ptr_$",
                            "typeString": "type(struct ComposableCoW.Proof storage pointer)"
                          }
                        },
                        "id": 61777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "16476:8:159",
                          "16489:4:159"
                        ],
                        "names": [
                          "location",
                          "data"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "16455:44:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Proof_$53539_memory_ptr",
                          "typeString": "struct ComposableCoW.Proof memory"
                        }
                      ],
                      "id": 61770,
                      "name": "_setRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56483,
                      "src": "16433:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_struct$_Proof_$53539_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,struct ComposableCoW.Proof memory)"
                      }
                    },
                    "id": 61778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16433:67:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61779,
                  "nodeType": "ExpressionStatement",
                  "src": "16433:67:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61783,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "16576:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16590:14:159",
                          "memberName": "ProofNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53515,
                          "src": "16576:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16605:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "16576:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 61780,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "16560:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16563:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "16560:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 61786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16560:54:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61787,
                  "nodeType": "ExpressionStatement",
                  "src": "16560:54:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61791,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61733,
                        "src": "16669:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61792,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61760,
                        "src": "16676:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16690:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16684:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61793,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16684:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16684:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 61797,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61736,
                        "src": "16695:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61788,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "16624:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16638:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "16624:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16624:77:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 61799,
                  "nodeType": "ExpressionStatement",
                  "src": "16624:77:159"
                }
              ]
            },
            "documentation": {
              "id": 61731,
              "nodeType": "StructuredDocumentation",
              "src": "15735:81:159",
              "text": "@dev `getTradeableOrderWithSignature` should revert if given an invalid proof"
            },
            "functionSelector": "345e8d4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getTradeableOrderWithSignature_FuzzRevertInvalidProof",
            "nameLocation": "15830:58:159",
            "parameters": {
              "id": 61745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61733,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "15906:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61801,
                  "src": "15898:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15898:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61736,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "15938:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61801,
                  "src": "15921:22:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61734,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "15921:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 61735,
                    "nodeType": "ArrayTypeName",
                    "src": "15921:9:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61738,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "15961:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61801,
                  "src": "15953:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15953:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61740,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "15983:7:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61801,
                  "src": "15975:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15975:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61742,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "16008:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61801,
                  "src": "16000:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16000:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61744,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "16035:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61801,
                  "src": "16022:24:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61743,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16022:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15888:164:159"
            },
            "returnParameters": {
              "id": 61746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16060:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61852,
            "nodeType": "FunctionDefinition",
            "src": "16807:656:159",
            "nodes": [],
            "body": {
              "id": 61851,
              "nodeType": "Block",
              "src": "16998:465:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61817,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "17056:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61851,
                      "src": "17008:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61815,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "17008:17:159",
                            "17026:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "17008:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "17008:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61826,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61821,
                            "name": "handler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61806,
                            "src": "17147:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61820,
                          "name": "IConditionalOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54437,
                          "src": "17129:17:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                            "typeString": "type(contract IConditionalOrder)"
                          }
                        },
                        "id": 61822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17129:26:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        }
                      },
                      {
                        "id": 61823,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61808,
                        "src": "17175:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61824,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61810,
                        "src": "17206:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IConditionalOrder_$54437",
                          "typeString": "contract IConditionalOrder"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61818,
                        "name": "IConditionalOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54437,
                        "src": "17065:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                          "typeString": "type(contract IConditionalOrder)"
                        }
                      },
                      "id": 61819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17083:22:159",
                      "memberName": "ConditionalOrderParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54415,
                      "src": "17065:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ConditionalOrderParams_$54415_storage_ptr_$",
                        "typeString": "type(struct IConditionalOrder.ConditionalOrderParams storage pointer)"
                      }
                    },
                    "id": 61825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "17120:7:159",
                      "17169:4:159",
                      "17193:11:159"
                    ],
                    "names": [
                      "handler",
                      "salt",
                      "staticInput"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "17065:163:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17008:220:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61830,
                            "name": "ComposableCoW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "17314:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ComposableCoW_$54177_$",
                              "typeString": "type(contract ComposableCoW)"
                            }
                          },
                          "id": 61831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17328:20:159",
                          "memberName": "SingleOrderNotAuthed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53517,
                          "src": "17314:34:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 61832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17349:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "17314:43:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 61827,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20813,
                        "src": "17298:2:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31076",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 61829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17301:12:159",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30815,
                      "src": "17298:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 61833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17298:60:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61834,
                  "nodeType": "ExpressionStatement",
                  "src": "17298:60:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61838,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61804,
                        "src": "17413:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61839,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61817,
                        "src": "17420:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 61842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17434:2:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 61841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17428:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 61840,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "17428:5:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17428:9:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17453:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "17439:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 61844,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "17443:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 61845,
                            "nodeType": "ArrayTypeName",
                            "src": "17443:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 61848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17439:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61835,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "17368:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17382:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "17368:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17368:88:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "id": 61850,
                  "nodeType": "ExpressionStatement",
                  "src": "17368:88:159"
                }
              ]
            },
            "documentation": {
              "id": 61802,
              "nodeType": "StructuredDocumentation",
              "src": "16714:88:159",
              "text": "@dev `getTradeableOrderWithSignature` should revert if given an invalid single order"
            },
            "functionSelector": "0aa93529",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getTradeableOrderWithSignature_FuzzRevertInvalidSingleOrder",
            "nameLocation": "16816:64:159",
            "parameters": {
              "id": 61811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61804,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "16898:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61852,
                  "src": "16890:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16890:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61806,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "16921:7:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61852,
                  "src": "16913:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16913:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61808,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "16946:4:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61852,
                  "src": "16938:12:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61807,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16938:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61810,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "16973:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 61852,
                  "src": "16960:24:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61809,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16960:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16880:110:159"
            },
            "returnParameters": {
              "id": 61812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16998:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61922,
            "nodeType": "FunctionDefinition",
            "src": "17523:959:159",
            "nodes": [],
            "body": {
              "id": 61921,
              "nodeType": "Block",
              "src": "17604:878:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61860,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "17768:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61921,
                      "src": "17720:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61859,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61858,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "17720:17:159",
                            "17738:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "17720:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "17720:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61863,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 61861,
                      "name": "getPassthroughOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56892,
                      "src": "17777:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$",
                        "typeString": "function () view returns (struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 61862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17777:21:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17720:78:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61867,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "17865:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17857:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17857:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17857:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61869,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61860,
                        "src": "17873:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17881:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61864,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "17849:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 61871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17849:38:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61872,
                  "nodeType": "ExpressionStatement",
                  "src": "17849:38:159"
                },
                {
                  "assignments": [
                    61877,
                    61879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61877,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "17974:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61921,
                      "src": "17952:27:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 61876,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61875,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "17952:9:159",
                            "17962:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "17952:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "17952:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61879,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "17994:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61921,
                      "src": "17981:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61878,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17981:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61898,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61884,
                            "name": "safe1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56027,
                            "src": "18073:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$48851",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 61883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18065:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61882,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18065:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18065:14:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61886,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61860,
                        "src": "18081:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 61889,
                              "name": "getBlankOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56806,
                              "src": "18100:13:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17121_memory_ptr_$",
                                "typeString": "function () pure returns (struct GPv2Order.Data memory)"
                              }
                            },
                            "id": 61890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18100:15:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          ],
                          "expression": {
                            "id": 61887,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18089:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18093:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18089:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18089:27:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18132:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "18118:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 61892,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "18122:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 61893,
                            "nodeType": "ArrayTypeName",
                            "src": "18122:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 61896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18118:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61880,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "18007:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18021:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "18007:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18007:137:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17951:193:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61909,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61877,
                                "src": "18354:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                  "typeString": "struct GPv2Order.Data memory"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 61910,
                                    "name": "composableCow",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56303,
                                    "src": "18361:13:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                                      "typeString": "contract ComposableCoW"
                                    }
                                  },
                                  "id": 61911,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18375:15:159",
                                  "memberName": "domainSeparator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53564,
                                  "src": "18361:29:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                    "typeString": "function () view external returns (bytes32)"
                                  }
                                },
                                "id": 61912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18361:31:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                  "typeString": "struct GPv2Order.Data memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 61907,
                                "name": "GPv2Order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17246,
                                "src": "18339:9:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                                  "typeString": "type(library GPv2Order)"
                                }
                              },
                              "id": 61908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18349:4:159",
                              "memberName": "hash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17201,
                              "src": "18339:14:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Data_$17121_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (struct GPv2Order.Data memory,bytes32) pure returns (bytes32)"
                              }
                            },
                            "id": 61913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18339:54:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 61914,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61879,
                            "src": "18395:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 61903,
                                    "name": "safe1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56027,
                                    "src": "18297:5:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Safe_$48851",
                                      "typeString": "contract Safe"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Safe_$48851",
                                      "typeString": "contract Safe"
                                    }
                                  ],
                                  "id": 61902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18289:7:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 61901,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18289:7:159",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 61904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18289:14:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 61900,
                              "name": "ExtensibleFallbackHandler",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50607,
                              "src": "18263:25:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ExtensibleFallbackHandler_$50607_$",
                                "typeString": "type(contract ExtensibleFallbackHandler)"
                              }
                            },
                            "id": 61905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18263:41:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExtensibleFallbackHandler_$50607",
                              "typeString": "contract ExtensibleFallbackHandler"
                            }
                          },
                          "id": 61906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18305:16:159",
                          "memberName": "isValidSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51933,
                          "src": "18263:58:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                            "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                          }
                        },
                        "id": 61915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18263:155:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 61916,
                            "name": "ERC1271",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51612,
                            "src": "18432:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC1271_$51612_$",
                              "typeString": "type(contract ERC1271)"
                            }
                          },
                          "id": 61917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18440:16:159",
                          "memberName": "isValidSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51611,
                          "src": "18432:24:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function ERC1271.isValidSignature(bytes32,bytes calldata) view returns (bytes4)"
                          }
                        },
                        "id": 61918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "18457:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "18432:33:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 61899,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "18241:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 61919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18241:234:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61920,
                  "nodeType": "ExpressionStatement",
                  "src": "18241:234:159"
                }
              ]
            },
            "documentation": {
              "id": 61853,
              "nodeType": "StructuredDocumentation",
              "src": "17469:49:159",
              "text": "@dev should return a valid payload for a safe"
            },
            "functionSelector": "aade1182",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getTradeableOrderWithSignature_ReturnsValidPayloadForSafe",
            "nameLocation": "17532:62:159",
            "parameters": {
              "id": 61854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17594:2:159"
            },
            "returnParameters": {
              "id": 61855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17604:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61999,
            "nodeType": "FunctionDefinition",
            "src": "18565:949:159",
            "nodes": [],
            "body": {
              "id": 61998,
              "nodeType": "Block",
              "src": "18649:865:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61928,
                      "mutability": "mutable",
                      "name": "nonSafe",
                      "nameLocation": "18743:7:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61998,
                      "src": "18725:25:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                        "typeString": "contract TestNonSafeWallet"
                      },
                      "typeName": {
                        "id": 61927,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61926,
                          "name": "TestNonSafeWallet",
                          "nameLocations": [
                            "18725:17:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57112,
                          "src": "18725:17:159"
                        },
                        "referencedDeclaration": 57112,
                        "src": "18725:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                          "typeString": "contract TestNonSafeWallet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61937,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61934,
                            "name": "composableCow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56303,
                            "src": "18783:13:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                              "typeString": "contract ComposableCoW"
                            }
                          ],
                          "id": 61933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18775:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61932,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18775:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18775:22:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "18753:21:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TestNonSafeWallet_$57112_$",
                        "typeString": "function (address) returns (contract TestNonSafeWallet)"
                      },
                      "typeName": {
                        "id": 61930,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61929,
                          "name": "TestNonSafeWallet",
                          "nameLocations": [
                            "18757:17:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57112,
                          "src": "18757:17:159"
                        },
                        "referencedDeclaration": 57112,
                        "src": "18757:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                          "typeString": "contract TestNonSafeWallet"
                        }
                      }
                    },
                    "id": 61936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18753:45:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                      "typeString": "contract TestNonSafeWallet"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18725:73:159"
                },
                {
                  "assignments": [
                    61942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61942,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "18856:6:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61998,
                      "src": "18808:54:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                        "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                      },
                      "typeName": {
                        "id": 61941,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61940,
                          "name": "IConditionalOrder.ConditionalOrderParams",
                          "nameLocations": [
                            "18808:17:159",
                            "18826:22:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54415,
                          "src": "18808:40:159"
                        },
                        "referencedDeclaration": 54415,
                        "src": "18808:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_storage_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61945,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 61943,
                      "name": "getPassthroughOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56892,
                      "src": "18865:19:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$",
                        "typeString": "function () view returns (struct IConditionalOrder.ConditionalOrderParams memory)"
                      }
                    },
                    "id": 61944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18865:21:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                      "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18808:78:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61949,
                            "name": "nonSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61928,
                            "src": "18953:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                              "typeString": "contract TestNonSafeWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                              "typeString": "contract TestNonSafeWallet"
                            }
                          ],
                          "id": 61948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18945:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18945:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18945:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61951,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61942,
                        "src": "18963:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 61952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18971:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61946,
                      "name": "_create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56662,
                      "src": "18937:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bool)"
                      }
                    },
                    "id": 61953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18937:40:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61954,
                  "nodeType": "ExpressionStatement",
                  "src": "18937:40:159"
                },
                {
                  "assignments": [
                    61959,
                    61961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61959,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "19064:5:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61998,
                      "src": "19042:27:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data"
                      },
                      "typeName": {
                        "id": 61958,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61957,
                          "name": "GPv2Order.Data",
                          "nameLocations": [
                            "19042:9:159",
                            "19052:4:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17121,
                          "src": "19042:14:159"
                        },
                        "referencedDeclaration": 17121,
                        "src": "19042:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                          "typeString": "struct GPv2Order.Data"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61961,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "19084:9:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 61998,
                      "src": "19071:22:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61960,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19071:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61980,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61966,
                            "name": "nonSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61928,
                            "src": "19163:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                              "typeString": "contract TestNonSafeWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                              "typeString": "contract TestNonSafeWallet"
                            }
                          ],
                          "id": 61965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19155:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61964,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19155:7:159",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19155:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61968,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61942,
                        "src": "19173:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 61971,
                              "name": "getBlankOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56806,
                              "src": "19192:13:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17121_memory_ptr_$",
                                "typeString": "function () pure returns (struct GPv2Order.Data memory)"
                              }
                            },
                            "id": 61972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19192:15:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                              "typeString": "struct GPv2Order.Data memory"
                            }
                          ],
                          "expression": {
                            "id": 61969,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19181:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 61970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19185:6:159",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "19181:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 61973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19181:27:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19224:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "19210:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 61974,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "19214:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 61975,
                            "nodeType": "ArrayTypeName",
                            "src": "19214:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 61978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19210:16:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ConditionalOrderParams_$54415_memory_ptr",
                          "typeString": "struct IConditionalOrder.ConditionalOrderParams memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 61962,
                        "name": "composableCow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56303,
                        "src": "19097:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                          "typeString": "contract ComposableCoW"
                        }
                      },
                      "id": 61963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19111:30:159",
                      "memberName": "getTradeableOrderWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54046,
                      "src": "19097:44:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_struct$_ConditionalOrderParams_$54415_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct IConditionalOrder.ConditionalOrderParams memory,bytes memory,bytes32[] memory) view external returns (struct GPv2Order.Data memory,bytes memory)"
                      }
                    },
                    "id": 61979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19097:139:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Data_$17121_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(struct GPv2Order.Data memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19041:195:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61986,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61959,
                                "src": "19399:5:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                  "typeString": "struct GPv2Order.Data memory"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 61987,
                                    "name": "composableCow",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56303,
                                    "src": "19406:13:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ComposableCoW_$54177",
                                      "typeString": "contract ComposableCoW"
                                    }
                                  },
                                  "id": 61988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "19420:15:159",
                                  "memberName": "domainSeparator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53564,
                                  "src": "19406:29:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                    "typeString": "function () view external returns (bytes32)"
                                  }
                                },
                                "id": 61989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19406:31:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                                  "typeString": "struct GPv2Order.Data memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 61984,
                                "name": "GPv2Order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17246,
                                "src": "19384:9:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                                  "typeString": "type(library GPv2Order)"
                                }
                              },
                              "id": 61985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19394:4:159",
                              "memberName": "hash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17201,
                              "src": "19384:14:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Data_$17121_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (struct GPv2Order.Data memory,bytes32) pure returns (bytes32)"
                              }
                            },
                            "id": 61990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19384:54:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 61991,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61961,
                            "src": "19440:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 61982,
                            "name": "nonSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61928,
                            "src": "19359:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNonSafeWallet_$57112",
                              "typeString": "contract TestNonSafeWallet"
                            }
                          },
                          "id": 61983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19367:16:159",
                          "memberName": "isValidSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54282,
                          "src": "19359:24:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                            "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                          }
                        },
                        "id": 61992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19359:91:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 61993,
                            "name": "ERC1271",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51612,
                            "src": "19464:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC1271_$51612_$",
                              "typeString": "type(contract ERC1271)"
                            }
                          },
                          "id": 61994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19472:16:159",
                          "memberName": "isValidSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51611,
                          "src": "19464:24:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function ERC1271.isValidSignature(bytes32,bytes calldata) view returns (bytes4)"
                          }
                        },
                        "id": 61995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "19489:8:159",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "19464:33:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 61981,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20988,
                        21013,
                        21026,
                        21042,
                        21084,
                        21126,
                        21168,
                        21205,
                        21242,
                        21279,
                        19294,
                        19319,
                        19349,
                        19374,
                        19433,
                        19458,
                        19488,
                        19513,
                        20613,
                        20648
                      ],
                      "referencedDeclaration": 19349,
                      "src": "19337:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 61996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19337:170:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61997,
                  "nodeType": "ExpressionStatement",
                  "src": "19337:170:159"
                }
              ]
            },
            "documentation": {
              "id": 61923,
              "nodeType": "StructuredDocumentation",
              "src": "18488:72:159",
              "text": "@dev should return a valid payload for a non-safe (ERC1271Forwarder)"
            },
            "functionSelector": "a3dc493d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getTradeableOrderWithSignature_ReturnsValidPayloadForNonSafe",
            "nameLocation": "18574:65:159",
            "parameters": {
              "id": 61924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18639:2:159"
            },
            "returnParameters": {
              "id": 61925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18649:0:159"
            },
            "scope": 62000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60508,
              "name": "BaseComposableCoWTest",
              "nameLocations": [
                "137:21:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57006,
              "src": "137:21:159"
            },
            "id": 60509,
            "nodeType": "InheritanceSpecifier",
            "src": "137:21:159"
          }
        ],
        "canonicalName": "ComposableCoWTest",
        "contractDependencies": [
          7927,
          11981,
          15464,
          15646,
          16749,
          48851,
          50539,
          50607,
          52251,
          52368,
          52677,
          54177,
          55539,
          57026,
          57097,
          57112,
          57139,
          65502
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          62000,
          57006,
          47419,
          47936,
          56232,
          65276,
          65559,
          65480,
          29756,
          20820,
          20817,
          29707,
          25506,
          25216,
          24537,
          22965,
          22271,
          20760
        ],
        "name": "ComposableCoWTest",
        "nameLocation": "116:17:159",
        "scope": 62001,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 159
}