{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "encodeMessageDataForSafe",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "getMessageHashForSafe",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getModules",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "calldataPayload",
          "type": "bytes"
        }
      ],
      "name": "simulate",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "response",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611148806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c80632303164011610081578063bc197c811161005b578063bc197c8114610212578063bd61951d1461024d578063f23a6e611461026057600080fd5b806323031640146101ca5780636ac24784146101ea578063b2494df3146101fd57600080fd5b8063150b7a02116100b2578063150b7a021461013b5780631626ba7e146101a457806320c13b0b146101b757600080fd5b806223de29146100d857806301ffc9a7146100f25780630a1028c41461011a575b600080fd5b6100f06100e6366004610955565b5050505050505050565b005b610105610100366004610a34565b610299565b60405190151581526020015b60405180910390f35b61012d610128366004610b5d565b61037e565b604051908152602001610111565b610173610149366004610b9a565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610111565b6101736101b2366004610c0d565b61038a565b6101736101c5366004610c59565b6104ab565b6101dd6101d8366004610cbd565b610680565b6040516101119190610d67565b61012d6101f8366004610cbd565b6107b7565b6102056107d2565b6040516101119190610d7a565b610173610220366004610e19565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6101dd61025b366004610eb7565b610884565b61017361026e366004610ef3565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061032c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061037857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061037833836107b7565b60408051602080820186905282518083039091018152818301928390527f20c13b0b000000000000000000000000000000000000000000000000000000009092526000913391839183916320c13b0b916103ea9189908990604401610f6f565b602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610fd3565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f20c13b0b000000000000000000000000000000000000000000000000000000001461047d57600061049f565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b925050505b9392505050565b600033816104b98286610680565b805160208201208551919250906000036105ce576040517f5ae6bd370000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff841690635ae6bd3790602401602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190610ff0565b6000036105c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f48617368206e6f7420617070726f766564000000000000000000000000000000604482015260640160405180910390fd5b610655565b6040517f934f3a1100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063934f3a119061062490849086908a90600401611009565b60006040518083038186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050505b507f20c13b0b0000000000000000000000000000000000000000000000000000000095945050505050565b606060007f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016106ca929190918252602082015260400190565b604051602081830303815290604052805190602001209050601960f81b600160f81b8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610ff0565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505092915050565b60006107c38383610680565b80519060200120905092915050565b6040517fcc2f845200000000000000000000000000000000000000000000000000000000815260016004820152600a60248201526060903390600090829063cc2f845290604401600060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261087c919081019061104e565b509392505050565b60606040517fb4faba09000000000000000000000000000000000000000000000000000000008152600436036004808301376020600036836000335af1505060203d036040519150808201604052806020833e506000516104a457805160208201fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461090957600080fd5b50565b60008083601f84011261091e57600080fd5b50813567ffffffffffffffff81111561093657600080fd5b60208301915083602082850101111561094e57600080fd5b9250929050565b60008060008060008060008060c0898b03121561097157600080fd5b883561097c816108e7565b9750602089013561098c816108e7565b9650604089013561099c816108e7565b955060608901359450608089013567ffffffffffffffff808211156109c057600080fd5b6109cc8c838d0161090c565b909650945060a08b01359150808211156109e557600080fd5b506109f28b828c0161090c565b999c989b5096995094979396929594505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461090957600080fd5b600060208284031215610a4657600080fd5b81356104a481610a06565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ac757610ac7610a51565b604052919050565b600082601f830112610ae057600080fd5b813567ffffffffffffffff811115610afa57610afa610a51565b610b2b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610a80565b818152846020838601011115610b4057600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610b6f57600080fd5b813567ffffffffffffffff811115610b8657600080fd5b610b9284828501610acf565b949350505050565b600080600080600060808688031215610bb257600080fd5b8535610bbd816108e7565b94506020860135610bcd816108e7565b935060408601359250606086013567ffffffffffffffff811115610bf057600080fd5b610bfc8882890161090c565b969995985093965092949392505050565b600080600060408486031215610c2257600080fd5b83359250602084013567ffffffffffffffff811115610c4057600080fd5b610c4c8682870161090c565b9497909650939450505050565b60008060408385031215610c6c57600080fd5b823567ffffffffffffffff80821115610c8457600080fd5b610c9086838701610acf565b93506020850135915080821115610ca657600080fd5b50610cb385828601610acf565b9150509250929050565b60008060408385031215610cd057600080fd5b8235610cdb816108e7565b9150602083013567ffffffffffffffff811115610cf757600080fd5b610cb385828601610acf565b6000815180845260005b81811015610d2957602081850181015186830182015201610d0d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006104a46020830184610d03565b6020808252825182820181905260009190848201906040850190845b81811015610dc857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610d96565b50909695505050505050565b60008083601f840112610de657600080fd5b50813567ffffffffffffffff811115610dfe57600080fd5b6020830191508360208260051b850101111561094e57600080fd5b60008060008060008060008060a0898b031215610e3557600080fd5b8835610e40816108e7565b97506020890135610e50816108e7565b9650604089013567ffffffffffffffff80821115610e6d57600080fd5b610e798c838d01610dd4565b909850965060608b0135915080821115610e9257600080fd5b610e9e8c838d01610dd4565b909650945060808b01359150808211156109e557600080fd5b600080600060408486031215610ecc57600080fd5b8335610ed7816108e7565b9250602084013567ffffffffffffffff811115610c4057600080fd5b60008060008060008060a08789031215610f0c57600080fd5b8635610f17816108e7565b95506020870135610f27816108e7565b94506040870135935060608701359250608087013567ffffffffffffffff811115610f5157600080fd5b610f5d89828a0161090c565b979a9699509497509295939492505050565b604081526000610f826040830186610d03565b82810360208401528381528385602083013760006020858301015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116820101915050949350505050565b600060208284031215610fe557600080fd5b81516104a481610a06565b60006020828403121561100257600080fd5b5051919050565b8381526060602082015260006110226060830185610d03565b82810360408401526110348185610d03565b9695505050505050565b8051611049816108e7565b919050565b6000806040838503121561106157600080fd5b825167ffffffffffffffff8082111561107957600080fd5b818501915085601f83011261108d57600080fd5b81516020828211156110a1576110a1610a51565b8160051b92506110b2818401610a80565b82815292840181019281810190898511156110cc57600080fd5b948201945b848610156110f657855193506110e6846108e7565b83825294820194908201906110d1565b9650611105905087820161103e565b945050505050925092905056fea26469706673582212206ffa81b83c1fa79278fb17839513a8c9e65f4cae41c1b8fd463d2ed04fcb0cec64736f6c63430008130033",
    "sourceMap": "343:7385:108:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100d35760003560e01c80632303164011610081578063bc197c811161005b578063bc197c8114610212578063bd61951d1461024d578063f23a6e611461026057600080fd5b806323031640146101ca5780636ac24784146101ea578063b2494df3146101fd57600080fd5b8063150b7a02116100b2578063150b7a021461013b5780631626ba7e146101a457806320c13b0b146101b757600080fd5b806223de29146100d857806301ffc9a7146100f25780630a1028c41461011a575b600080fd5b6100f06100e6366004610955565b5050505050505050565b005b610105610100366004610a34565b610299565b60405190151581526020015b60405180910390f35b61012d610128366004610b5d565b61037e565b604051908152602001610111565b610173610149366004610b9a565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610111565b6101736101b2366004610c0d565b61038a565b6101736101c5366004610c59565b6104ab565b6101dd6101d8366004610cbd565b610680565b6040516101119190610d67565b61012d6101f8366004610cbd565b6107b7565b6102056107d2565b6040516101119190610d7a565b610173610220366004610e19565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6101dd61025b366004610eb7565b610884565b61017361026e366004610ef3565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061032c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061037857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061037833836107b7565b60408051602080820186905282518083039091018152818301928390527f20c13b0b000000000000000000000000000000000000000000000000000000009092526000913391839183916320c13b0b916103ea9189908990604401610f6f565b602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610fd3565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f20c13b0b000000000000000000000000000000000000000000000000000000001461047d57600061049f565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b925050505b9392505050565b600033816104b98286610680565b805160208201208551919250906000036105ce576040517f5ae6bd370000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff841690635ae6bd3790602401602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190610ff0565b6000036105c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f48617368206e6f7420617070726f766564000000000000000000000000000000604482015260640160405180910390fd5b610655565b6040517f934f3a1100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063934f3a119061062490849086908a90600401611009565b60006040518083038186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050505b507f20c13b0b0000000000000000000000000000000000000000000000000000000095945050505050565b606060007f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016106ca929190918252602082015260400190565b604051602081830303815290604052805190602001209050601960f81b600160f81b8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610ff0565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505092915050565b60006107c38383610680565b80519060200120905092915050565b6040517fcc2f845200000000000000000000000000000000000000000000000000000000815260016004820152600a60248201526060903390600090829063cc2f845290604401600060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261087c919081019061104e565b509392505050565b60606040517fb4faba09000000000000000000000000000000000000000000000000000000008152600436036004808301376020600036836000335af1505060203d036040519150808201604052806020833e506000516104a457805160208201fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461090957600080fd5b50565b60008083601f84011261091e57600080fd5b50813567ffffffffffffffff81111561093657600080fd5b60208301915083602082850101111561094e57600080fd5b9250929050565b60008060008060008060008060c0898b03121561097157600080fd5b883561097c816108e7565b9750602089013561098c816108e7565b9650604089013561099c816108e7565b955060608901359450608089013567ffffffffffffffff808211156109c057600080fd5b6109cc8c838d0161090c565b909650945060a08b01359150808211156109e557600080fd5b506109f28b828c0161090c565b999c989b5096995094979396929594505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461090957600080fd5b600060208284031215610a4657600080fd5b81356104a481610a06565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ac757610ac7610a51565b604052919050565b600082601f830112610ae057600080fd5b813567ffffffffffffffff811115610afa57610afa610a51565b610b2b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610a80565b818152846020838601011115610b4057600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610b6f57600080fd5b813567ffffffffffffffff811115610b8657600080fd5b610b9284828501610acf565b949350505050565b600080600080600060808688031215610bb257600080fd5b8535610bbd816108e7565b94506020860135610bcd816108e7565b935060408601359250606086013567ffffffffffffffff811115610bf057600080fd5b610bfc8882890161090c565b969995985093965092949392505050565b600080600060408486031215610c2257600080fd5b83359250602084013567ffffffffffffffff811115610c4057600080fd5b610c4c8682870161090c565b9497909650939450505050565b60008060408385031215610c6c57600080fd5b823567ffffffffffffffff80821115610c8457600080fd5b610c9086838701610acf565b93506020850135915080821115610ca657600080fd5b50610cb385828601610acf565b9150509250929050565b60008060408385031215610cd057600080fd5b8235610cdb816108e7565b9150602083013567ffffffffffffffff811115610cf757600080fd5b610cb385828601610acf565b6000815180845260005b81811015610d2957602081850181015186830182015201610d0d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006104a46020830184610d03565b6020808252825182820181905260009190848201906040850190845b81811015610dc857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610d96565b50909695505050505050565b60008083601f840112610de657600080fd5b50813567ffffffffffffffff811115610dfe57600080fd5b6020830191508360208260051b850101111561094e57600080fd5b60008060008060008060008060a0898b031215610e3557600080fd5b8835610e40816108e7565b97506020890135610e50816108e7565b9650604089013567ffffffffffffffff80821115610e6d57600080fd5b610e798c838d01610dd4565b909850965060608b0135915080821115610e9257600080fd5b610e9e8c838d01610dd4565b909650945060808b01359150808211156109e557600080fd5b600080600060408486031215610ecc57600080fd5b8335610ed7816108e7565b9250602084013567ffffffffffffffff811115610c4057600080fd5b60008060008060008060a08789031215610f0c57600080fd5b8635610f17816108e7565b95506020870135610f27816108e7565b94506040870135935060608701359250608087013567ffffffffffffffff811115610f5157600080fd5b610f5d89828a0161090c565b979a9699509497509295939492505050565b604081526000610f826040830186610d03565b82810360208401528381528385602083013760006020858301015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116820101915050949350505050565b600060208284031215610fe557600080fd5b81516104a481610a06565b60006020828403121561100257600080fd5b5051919050565b8381526060602082015260006110226060830185610d03565b82810360408401526110348185610d03565b9695505050505050565b8051611049816108e7565b919050565b6000806040838503121561106157600080fd5b825167ffffffffffffffff8082111561107957600080fd5b818501915085601f83011261108d57600080fd5b81516020828211156110a1576110a1610a51565b8160051b92506110b2818401610a80565b82815292840181019281810190898511156110cc57600080fd5b948201945b848610156110f657855193506110e6846108e7565b83825294820194908201906110d1565b9650611105905087820161103e565b945050505050925092905056fea26469706673582212206ffa81b83c1fa79278fb17839513a8c9e65f4cae41c1b8fd463d2ed04fcb0cec64736f6c63430008130033",
    "sourceMap": "343:7385:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:199:111;;;;;;:::i;:::-;;;;;;;;;;;;1977:306;;;;;;:::i;:::-;;:::i;:::-;;;2332:14:168;;2325:22;2307:41;;2295:2;2280:18;1977:306:111;;;;;;;;1925:157:108;;;;;;:::i;:::-;;:::i;:::-;;;3952:25:168;;;3940:2;3925:18;1925:157:108;3806:177:168;1301:143:111;;;;;;:::i;:::-;1420:17;1301:143;;;;;;;;;;;4921:66:168;4909:79;;;4891:98;;4879:2;4864:18;1301:143:111;4747:248:168;3374:350:108;;;;;;:::i;:::-;;:::i;1187:580::-;;;;;;:::i;:::-;;:::i;2331:307::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2868:168::-;;;;;;:::i;:::-;;:::i;3826:259::-;;;:::i;:::-;;;;;;;:::i;948:226:111:-;;;;;;:::i;:::-;1150:17;948:226;;;;;;;;;;;4664:3062:108;;;;;;:::i;:::-;;:::i;656:153:111:-;;;;;;:::i;:::-;785:17;656:153;;;;;;;;;1977:306;2064:4;2099:53;;;2114:38;2099:53;;:121;;-1:-1:-1;2168:52:111;;;2183:37;2168:52;2099:121;:177;;;-1:-1:-1;2236:40:111;;;2251:25;2236:40;2099:177;2080:196;1977:306;-1:-1:-1;;1977:306:111:o;1925:157:108:-;1992:7;2018:57;2053:10;2067:7;2018:21;:57::i;3374:350::-;3602:21;;;;;;;3952:25:168;;;3602:21:108;;;;;;;;;;3925:18:168;;;3602:21:108;;;;3575:61;;;;3469:6;;3539:10;;3469:6;;3539:10;;3575:26;;:61;;3625:10;;;;3575:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3560:76;-1:-1:-1;3654:28:108;;;3663:19;3654:28;3653:64;;3715:1;3653:64;;;3686:19;3653:64;3646:71;;;;3374:350;;;;;;:::o;1187:580::-;1288:6;1366:10;1288:6;1415:37;1366:10;1446:5;1415:24;:37::i;:::-;1484:22;;;;;;1520:17;;1388:64;;-1:-1:-1;1484:22:108;1462:19;1520:22;1516:209;;1566:32;;;;;;;;3952:25:168;;;1566:19:108;;;;;;3925:18:168;;1566:32:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1602:1;1566:37;1558:67;;;;;;;12234:2:168;1558:67:108;;;12216:21:168;12273:2;12253:18;;;12246:30;12312:19;12292:18;;;12285:47;12349:18;;1558:67:108;;;;;;;;1516:209;;;1656:58;;;;;:20;;;;;;:58;;1677:11;;1690;;1703:10;;1656:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:209;-1:-1:-1;1741:19:108;;1187:580;-1:-1:-1;;;;;1187:580:108:o;2331:307::-;2419:12;2443:23;525:66;2490:17;;2519:7;2509:18;;;;;;2479:49;;;;;;;;13005:25:168;;;13061:2;13046:18;;13039:34;12993:2;12978:18;;12831:248;2479:49:108;;;;;;;;;;;;;2469:60;;;;;;2443:86;;2570:4;2563:12;;2584:4;2577:12;;2591:4;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2546:85;;13492:66:168;13579:15;;;2546:85:108;;;13567:28:168;13624:15;;;;13611:11;;;13604:36;13656:11;;;13649:27;13692:12;;;13685:28;;;13729:12;;2546:85:108;;;;;;;;;;;;2539:92;;;2331:307;;;;:::o;2868:168::-;2953:7;2989:39;3014:4;3020:7;2989:24;:39::i;:::-;2979:50;;;;;;2972:57;;2868:168;;;;:::o;3826:259::-;4010:46;;;;;747:3;4010:46;;;13935:74:168;4053:2:108;14025:18:168;;;14018:34;3871:16:108;;3959:10;;3934:9;;3959:10;;4010:24;;13908:18:168;;4010:46:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3981:75:108;3826:259;-1:-1:-1;;;3826:259:108:o;4664:3062::-;4756:21;5157:4;5151:11;5351:18;5333:16;5326:44;5835:4;5819:14;5815:25;5809:4;5802;5784:16;5780:27;5767:74;6974:4;6948;6466:14;6428:16;6405:1;6375:8;6248:5;6222:774;6201:809;;7445:4;7427:16;7423:27;7481:4;7475:11;7463:23;;7526:12;7516:8;7512:27;7506:4;7499:41;7584:12;7578:4;7568:8;7553:44;;7627:4;7621:11;7611:99;;7686:8;7680:15;7673:4;7663:8;7659:19;7652:44;14:154:168;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:347::-;224:8;234:6;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;-1:-1:-1;329:20:168;;372:18;361:30;;358:50;;;404:1;401;394:12;358:50;441:4;433:6;429:17;417:29;;493:3;486:4;477:6;469;465:19;461:30;458:39;455:59;;;510:1;507;500:12;455:59;173:347;;;;;:::o;525:1205::-;651:6;659;667;675;683;691;699;707;760:3;748:9;739:7;735:23;731:33;728:53;;;777:1;774;767:12;728:53;816:9;803:23;835:31;860:5;835:31;:::i;:::-;885:5;-1:-1:-1;942:2:168;927:18;;914:32;955:33;914:32;955:33;:::i;:::-;1007:7;-1:-1:-1;1066:2:168;1051:18;;1038:32;1079:33;1038:32;1079:33;:::i;:::-;1131:7;-1:-1:-1;1185:2:168;1170:18;;1157:32;;-1:-1:-1;1240:3:168;1225:19;;1212:33;1264:18;1294:14;;;1291:34;;;1321:1;1318;1311:12;1291:34;1360:58;1410:7;1401:6;1390:9;1386:22;1360:58;:::i;:::-;1437:8;;-1:-1:-1;1334:84:168;-1:-1:-1;1525:3:168;1510:19;;1497:33;;-1:-1:-1;1542:16:168;;;1539:36;;;1571:1;1568;1561:12;1539:36;;1610:60;1662:7;1651:8;1640:9;1636:24;1610:60;:::i;:::-;525:1205;;;;-1:-1:-1;525:1205:168;;-1:-1:-1;525:1205:168;;;;;;1689:8;-1:-1:-1;;;525:1205:168:o;1735:177::-;1820:66;1813:5;1809:78;1802:5;1799:89;1789:117;;1902:1;1899;1892:12;1917:245;1975:6;2028:2;2016:9;2007:7;2003:23;1999:32;1996:52;;;2044:1;2041;2034:12;1996:52;2083:9;2070:23;2102:30;2126:5;2102:30;:::i;2359:184::-;2411:77;2408:1;2401:88;2508:4;2505:1;2498:15;2532:4;2529:1;2522:15;2548:334;2619:2;2613:9;2675:2;2665:13;;2680:66;2661:86;2649:99;;2778:18;2763:34;;2799:22;;;2760:62;2757:88;;;2825:18;;:::i;:::-;2861:2;2854:22;2548:334;;-1:-1:-1;2548:334:168:o;2887:589::-;2929:5;2982:3;2975:4;2967:6;2963:17;2959:27;2949:55;;3000:1;2997;2990:12;2949:55;3036:6;3023:20;3062:18;3058:2;3055:26;3052:52;;;3084:18;;:::i;:::-;3128:114;3236:4;3167:66;3160:4;3156:2;3152:13;3148:86;3144:97;3128:114;:::i;:::-;3267:2;3258:7;3251:19;3313:3;3306:4;3301:2;3293:6;3289:15;3285:26;3282:35;3279:55;;;3330:1;3327;3320:12;3279:55;3395:2;3388:4;3380:6;3376:17;3369:4;3360:7;3356:18;3343:55;3443:1;3418:16;;;3436:4;3414:27;3407:38;;;;3422:7;2887:589;-1:-1:-1;;;2887:589:168:o;3481:320::-;3549:6;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;3658:9;3645:23;3691:18;3683:6;3680:30;3677:50;;;3723:1;3720;3713:12;3677:50;3746:49;3787:7;3778:6;3767:9;3763:22;3746:49;:::i;:::-;3736:59;3481:320;-1:-1:-1;;;;3481:320:168:o;3988:754::-;4085:6;4093;4101;4109;4117;4170:3;4158:9;4149:7;4145:23;4141:33;4138:53;;;4187:1;4184;4177:12;4138:53;4226:9;4213:23;4245:31;4270:5;4245:31;:::i;:::-;4295:5;-1:-1:-1;4352:2:168;4337:18;;4324:32;4365:33;4324:32;4365:33;:::i;:::-;4417:7;-1:-1:-1;4471:2:168;4456:18;;4443:32;;-1:-1:-1;4526:2:168;4511:18;;4498:32;4553:18;4542:30;;4539:50;;;4585:1;4582;4575:12;4539:50;4624:58;4674:7;4665:6;4654:9;4650:22;4624:58;:::i;:::-;3988:754;;;;-1:-1:-1;3988:754:168;;-1:-1:-1;4701:8:168;;4598:84;3988:754;-1:-1:-1;;;3988:754:168:o;5000:477::-;5079:6;5087;5095;5148:2;5136:9;5127:7;5123:23;5119:32;5116:52;;;5164:1;5161;5154:12;5116:52;5200:9;5187:23;5177:33;;5261:2;5250:9;5246:18;5233:32;5288:18;5280:6;5277:30;5274:50;;;5320:1;5317;5310:12;5274:50;5359:58;5409:7;5400:6;5389:9;5385:22;5359:58;:::i;:::-;5000:477;;5436:8;;-1:-1:-1;5333:84:168;;-1:-1:-1;;;;5000:477:168:o;5482:539::-;5568:6;5576;5629:2;5617:9;5608:7;5604:23;5600:32;5597:52;;;5645:1;5642;5635:12;5597:52;5685:9;5672:23;5714:18;5755:2;5747:6;5744:14;5741:34;;;5771:1;5768;5761:12;5741:34;5794:49;5835:7;5826:6;5815:9;5811:22;5794:49;:::i;:::-;5784:59;;5896:2;5885:9;5881:18;5868:32;5852:48;;5925:2;5915:8;5912:16;5909:36;;;5941:1;5938;5931:12;5909:36;;5964:51;6007:7;5996:8;5985:9;5981:24;5964:51;:::i;:::-;5954:61;;;5482:539;;;;;:::o;6026:469::-;6117:6;6125;6178:2;6166:9;6157:7;6153:23;6149:32;6146:52;;;6194:1;6191;6184:12;6146:52;6233:9;6220:23;6252:31;6277:5;6252:31;:::i;:::-;6302:5;-1:-1:-1;6358:2:168;6343:18;;6330:32;6385:18;6374:30;;6371:50;;;6417:1;6414;6407:12;6371:50;6440:49;6481:7;6472:6;6461:9;6457:22;6440:49;:::i;6500:481::-;6541:3;6579:5;6573:12;6606:6;6601:3;6594:19;6631:1;6641:162;6655:6;6652:1;6649:13;6641:162;;;6717:4;6773:13;;;6769:22;;6763:29;6745:11;;;6741:20;;6734:59;6670:12;6641:162;;;6645:3;6848:1;6841:4;6832:6;6827:3;6823:16;6819:27;6812:38;6970:4;6900:66;6895:2;6887:6;6883:15;6879:88;6874:3;6870:98;6866:109;6859:116;;;6500:481;;;;:::o;6986:217::-;7133:2;7122:9;7115:21;7096:4;7153:44;7193:2;7182:9;7178:18;7170:6;7153:44;:::i;7208:681::-;7379:2;7431:21;;;7501:13;;7404:18;;;7523:22;;;7350:4;;7379:2;7602:15;;;;7576:2;7561:18;;;7350:4;7645:218;7659:6;7656:1;7653:13;7645:218;;;7724:13;;7739:42;7720:62;7708:75;;7838:15;;;;7803:12;;;;7681:1;7674:9;7645:218;;;-1:-1:-1;7880:3:168;;7208:681;-1:-1:-1;;;;;;7208:681:168:o;7894:367::-;7957:8;7967:6;8021:3;8014:4;8006:6;8002:17;7998:27;7988:55;;8039:1;8036;8029:12;7988:55;-1:-1:-1;8062:20:168;;8105:18;8094:30;;8091:50;;;8137:1;8134;8127:12;8091:50;8174:4;8166:6;8162:17;8150:29;;8234:3;8227:4;8217:6;8214:1;8210:14;8202:6;8198:27;8194:38;8191:47;8188:67;;;8251:1;8248;8241:12;8266:1338;8426:6;8434;8442;8450;8458;8466;8474;8482;8535:3;8523:9;8514:7;8510:23;8506:33;8503:53;;;8552:1;8549;8542:12;8503:53;8591:9;8578:23;8610:31;8635:5;8610:31;:::i;:::-;8660:5;-1:-1:-1;8717:2:168;8702:18;;8689:32;8730:33;8689:32;8730:33;:::i;:::-;8782:7;-1:-1:-1;8840:2:168;8825:18;;8812:32;8863:18;8893:14;;;8890:34;;;8920:1;8917;8910:12;8890:34;8959:70;9021:7;9012:6;9001:9;8997:22;8959:70;:::i;:::-;9048:8;;-1:-1:-1;8933:96:168;-1:-1:-1;9136:2:168;9121:18;;9108:32;;-1:-1:-1;9152:16:168;;;9149:36;;;9181:1;9178;9171:12;9149:36;9220:72;9284:7;9273:8;9262:9;9258:24;9220:72;:::i;:::-;9311:8;;-1:-1:-1;9194:98:168;-1:-1:-1;9399:3:168;9384:19;;9371:33;;-1:-1:-1;9416:16:168;;;9413:36;;;9445:1;9442;9435:12;9609:544;9688:6;9696;9704;9757:2;9745:9;9736:7;9732:23;9728:32;9725:52;;;9773:1;9770;9763:12;9725:52;9812:9;9799:23;9831:31;9856:5;9831:31;:::i;:::-;9881:5;-1:-1:-1;9937:2:168;9922:18;;9909:32;9964:18;9953:30;;9950:50;;;9996:1;9993;9986:12;10158:823;10264:6;10272;10280;10288;10296;10304;10357:3;10345:9;10336:7;10332:23;10328:33;10325:53;;;10374:1;10371;10364:12;10325:53;10413:9;10400:23;10432:31;10457:5;10432:31;:::i;:::-;10482:5;-1:-1:-1;10539:2:168;10524:18;;10511:32;10552:33;10511:32;10552:33;:::i;:::-;10604:7;-1:-1:-1;10658:2:168;10643:18;;10630:32;;-1:-1:-1;10709:2:168;10694:18;;10681:32;;-1:-1:-1;10764:3:168;10749:19;;10736:33;10792:18;10781:30;;10778:50;;;10824:1;10821;10814:12;10778:50;10863:58;10913:7;10904:6;10893:9;10889:22;10863:58;:::i;:::-;10158:823;;;;-1:-1:-1;10158:823:168;;-1:-1:-1;10158:823:168;;10940:8;;10158:823;-1:-1:-1;;;10158:823:168:o;10986:598::-;11189:2;11178:9;11171:21;11152:4;11215:44;11255:2;11244:9;11240:18;11232:6;11215:44;:::i;:::-;11307:9;11299:6;11295:22;11290:2;11279:9;11275:18;11268:50;11342:6;11334;11327:22;11396:6;11388;11383:2;11375:6;11371:15;11358:45;11449:1;11444:2;11435:6;11427;11423:19;11419:28;11412:39;11575:2;11505:66;11500:2;11492:6;11488:15;11484:88;11476:6;11472:101;11468:110;11460:118;;;10986:598;;;;;;:::o;11589:249::-;11658:6;11711:2;11699:9;11690:7;11686:23;11682:32;11679:52;;;11727:1;11724;11717:12;11679:52;11759:9;11753:16;11778:30;11802:5;11778:30;:::i;11843:184::-;11913:6;11966:2;11954:9;11945:7;11941:23;11937:32;11934:52;;;11982:1;11979;11972:12;11934:52;-1:-1:-1;12005:16:168;;11843:184;-1:-1:-1;11843:184:168:o;12378:448::-;12599:6;12588:9;12581:25;12642:2;12637;12626:9;12622:18;12615:30;12562:4;12668:44;12708:2;12697:9;12693:18;12685:6;12668:44;:::i;:::-;12760:9;12752:6;12748:22;12743:2;12732:9;12728:18;12721:50;12788:32;12813:6;12805;12788:32;:::i;:::-;12780:40;12378:448;-1:-1:-1;;;;;;12378:448:168:o;14063:138::-;14142:13;;14164:31;14142:13;14164:31;:::i;:::-;14063:138;;;:::o;14206:1098::-;14310:6;14318;14371:2;14359:9;14350:7;14346:23;14342:32;14339:52;;;14387:1;14384;14377:12;14339:52;14420:9;14414:16;14449:18;14490:2;14482:6;14479:14;14476:34;;;14506:1;14503;14496:12;14476:34;14544:6;14533:9;14529:22;14519:32;;14589:7;14582:4;14578:2;14574:13;14570:27;14560:55;;14611:1;14608;14601:12;14560:55;14640:2;14634:9;14662:4;14685:2;14681;14678:10;14675:36;;;14691:18;;:::i;:::-;14737:2;14734:1;14730:10;14720:20;;14760:28;14784:2;14780;14776:11;14760:28;:::i;:::-;14822:15;;;14892:11;;;14888:20;;;14853:12;;;;14920:19;;;14917:39;;;14952:1;14949;14942:12;14917:39;14976:11;;;;14996:210;15012:6;15007:3;15004:15;14996:210;;;15085:3;15079:10;15066:23;;15102:31;15127:5;15102:31;:::i;:::-;15146:18;;;15029:12;;;;15184;;;;14996:210;;;15225:5;-1:-1:-1;15249:49:168;;-1:-1:-1;15279:18:168;;;15249:49;:::i;:::-;15239:59;;;;;;14206:1098;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "encodeMessageDataForSafe(address,bytes)": "23031640",
    "getMessageHash(bytes)": "0a1028c4",
    "getMessageHashForSafe(address,bytes)": "6ac24784",
    "getModules()": "b2494df3",
    "isValidSignature(bytes,bytes)": "20c13b0b",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "simulate(address,bytes)": "bd61951d",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"encodeMessageDataForSafe\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHashForSafe\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{\"encodeMessageDataForSafe(address,bytes)\":{\"details\":\"Returns the pre-image of the message hash (see getMessageHashForSafe).\",\"params\":{\"message\":\"Message that should be encoded.\",\"safe\":\"Safe to which the message is targeted.\"},\"returns\":{\"_0\":\"Encoded message.\"}},\"getMessageHash(bytes)\":{\"details\":\"Returns the hash of a message to be signed by owners.\",\"params\":{\"message\":\"Raw message bytes.\"},\"returns\":{\"_0\":\"Message hash.\"}},\"getMessageHashForSafe(address,bytes)\":{\"details\":\"Returns hash of a message that can be signed by owners.\",\"params\":{\"message\":\"Message that should be hashed.\",\"safe\":\"Safe to which the message is targeted.\"},\"returns\":{\"_0\":\"Message hash.\"}},\"getModules()\":{\"details\":\"Returns array of first 10 modules.\",\"returns\":{\"_0\":\"Array of modules.\"}},\"isValidSignature(bytes,bytes)\":{\"details\":\"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(msg.sender).\",\"_signature\":\"Signature byte array associated with _data.\"},\"returns\":{\"_0\":\"The EIP-1271 magic value.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_dataHash\":\"Hash of the data signed on the behalf of address(msg.sender)\",\"_signature\":\"Signature byte array associated with _dataHash\"},\"returns\":{\"_0\":\"Updated EIP1271 magic value if signature is valid, otherwise 0x0\"}},\"simulate(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.Inspired by https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Id of the interface.\"},\"returns\":{\"_0\":\"if the interface is supported.\"}}},\"title\":\"Compatibility Fallback Handler - Provides compatibility between pre 1.3.0 and 1.3.0+ Safe contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Legacy EIP-1271 signature validation method.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Implementation of updated EIP-1271 signature validation method.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handles ERC1155 Token batch callback. return Standardized onERC1155BatchReceived return value.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handles ERC1155 Token callback. return Standardized onERC1155Received return value.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handles ERC721 Token callback.  return Standardized onERC721Received return value.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Implements ERC165 interface support for ERC1155TokenReceiver, ERC721TokenReceiver and IERC165.\"},\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"notice\":\"Handles ERC777 Token callback. return nothing (not standardized)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe/contracts/handler/CompatibilityFallbackHandler.sol\":\"CompatibilityFallbackHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/safe/contracts/Safe.sol\":{\"keccak256\":\"0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119\",\"dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9\"]},\"lib/safe/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d\",\"dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz\"]},\"lib/safe/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe/contracts/handler/CompatibilityFallbackHandler.sol\":{\"keccak256\":\"0x3eee5c142041e92895d45f8e9acb9ac2203b0ac39418e8d2971e78bf0775bcf7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6ca95ba88f388a206e14ea0ac2c4a2bb0b60b83a619d1dd3d61772588394fa07\",\"dweb:/ipfs/QmbhhRhBP4n9TVLohTV4GtESeRsumrk4JduLG7DwbBrtxH\"]},\"lib/safe/contracts/handler/TokenCallbackHandler.sol\":{\"keccak256\":\"0xc8fb9e60f5e561c7e4992a396e928344c278c2fbec8af65aebec44281542e7cb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e197c9a628bdce9a1df8da8ba07733ce0e8b5496a28a22a370dec979104c79da\",\"dweb:/ipfs/QmUx8YhmT22YZYEXp2bVNR91hSb9w5qjAkzGiFy6DRNpdu\"]},\"lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"keccak256\":\"0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c\",\"dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM\"]},\"lib/safe/contracts/interfaces/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c\",\"dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n\"]},\"lib/safe/contracts/interfaces/ERC777TokensRecipient.sol\":{\"keccak256\":\"0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06\",\"dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encodeMessageDataForSafe",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMessageHashForSafe",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getModules",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "calldataPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "simulate",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "response",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tokensReceived"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "encodeMessageDataForSafe(address,bytes)": {
            "details": "Returns the pre-image of the message hash (see getMessageHashForSafe).",
            "params": {
              "message": "Message that should be encoded.",
              "safe": "Safe to which the message is targeted."
            },
            "returns": {
              "_0": "Encoded message."
            }
          },
          "getMessageHash(bytes)": {
            "details": "Returns the hash of a message to be signed by owners.",
            "params": {
              "message": "Raw message bytes."
            },
            "returns": {
              "_0": "Message hash."
            }
          },
          "getMessageHashForSafe(address,bytes)": {
            "details": "Returns hash of a message that can be signed by owners.",
            "params": {
              "message": "Message that should be hashed.",
              "safe": "Safe to which the message is targeted."
            },
            "returns": {
              "_0": "Message hash."
            }
          },
          "getModules()": {
            "details": "Returns array of first 10 modules.",
            "returns": {
              "_0": "Array of modules."
            }
          },
          "isValidSignature(bytes,bytes)": {
            "details": "Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)",
            "params": {
              "_data": "Arbitrary length data signed on the behalf of address(msg.sender).",
              "_signature": "Signature byte array associated with _data."
            },
            "returns": {
              "_0": "The EIP-1271 magic value."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "params": {
              "_dataHash": "Hash of the data signed on the behalf of address(msg.sender)",
              "_signature": "Signature byte array associated with _dataHash"
            },
            "returns": {
              "_0": "Updated EIP1271 magic value if signature is valid, otherwise 0x0"
            }
          },
          "simulate(address,bytes)": {
            "details": "Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.Inspired by https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol",
            "params": {
              "calldataPayload": "Calldata that should be sent to the target contract (encoded method name and arguments).",
              "targetContract": "Address of the contract containing the code to execute."
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "interfaceId": "Id of the interface."
            },
            "returns": {
              "_0": "if the interface is supported."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isValidSignature(bytes,bytes)": {
            "notice": "Legacy EIP-1271 signature validation method."
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Implementation of updated EIP-1271 signature validation method."
          },
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "notice": "Handles ERC1155 Token batch callback. return Standardized onERC1155BatchReceived return value."
          },
          "onERC1155Received(address,address,uint256,uint256,bytes)": {
            "notice": "Handles ERC1155 Token callback. return Standardized onERC1155Received return value."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "Handles ERC721 Token callback.  return Standardized onERC721Received return value."
          },
          "supportsInterface(bytes4)": {
            "notice": "Implements ERC165 interface support for ERC1155TokenReceiver, ERC721TokenReceiver and IERC165."
          },
          "tokensReceived(address,address,address,uint256,bytes,bytes)": {
            "notice": "Handles ERC777 Token callback. return nothing (not standardized)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/safe/contracts/handler/CompatibilityFallbackHandler.sol": "CompatibilityFallbackHandler"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe/contracts/Safe.sol": {
        "keccak256": "0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638",
        "urls": [
          "bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119",
          "dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a",
        "urls": [
          "bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d",
          "dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/CompatibilityFallbackHandler.sol": {
        "keccak256": "0x3eee5c142041e92895d45f8e9acb9ac2203b0ac39418e8d2971e78bf0775bcf7",
        "urls": [
          "bzz-raw://6ca95ba88f388a206e14ea0ac2c4a2bb0b60b83a619d1dd3d61772588394fa07",
          "dweb:/ipfs/QmbhhRhBP4n9TVLohTV4GtESeRsumrk4JduLG7DwbBrtxH"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/handler/TokenCallbackHandler.sol": {
        "keccak256": "0xc8fb9e60f5e561c7e4992a396e928344c278c2fbec8af65aebec44281542e7cb",
        "urls": [
          "bzz-raw://e197c9a628bdce9a1df8da8ba07733ce0e8b5496a28a22a370dec979104c79da",
          "dweb:/ipfs/QmUx8YhmT22YZYEXp2bVNR91hSb9w5qjAkzGiFy6DRNpdu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC1155TokenReceiver.sol": {
        "keccak256": "0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493",
        "urls": [
          "bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c",
          "dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC721TokenReceiver.sol": {
        "keccak256": "0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479",
        "urls": [
          "bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c",
          "dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ERC777TokensRecipient.sol": {
        "keccak256": "0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac",
        "urls": [
          "bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06",
          "dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/safe/contracts/handler/CompatibilityFallbackHandler.sol",
    "id": 50830,
    "exportedSymbols": {
      "BaseGuard": [
        49303
      ],
      "CompatibilityFallbackHandler": [
        50829
      ],
      "ERC1155TokenReceiver": [
        52437
      ],
      "ERC721TokenReceiver": [
        52455
      ],
      "ERC777TokensRecipient": [
        52475
      ],
      "Enum": [
        50311
      ],
      "Executor": [
        49174
      ],
      "FallbackManager": [
        49236
      ],
      "Guard": [
        49277
      ],
      "GuardManager": [
        49365
      ],
      "IERC165": [
        52487
      ],
      "ISignatureValidator": [
        52506
      ],
      "ISignatureValidatorConstants": [
        52493
      ],
      "ModuleManager": [
        49791
      ],
      "NativeCurrencyPaymentFallback": [
        50333
      ],
      "OwnerManager": [
        50304
      ],
      "Safe": [
        49141
      ],
      "SafeMath": [
        50567
      ],
      "SecuredTokenTransfer": [
        50360
      ],
      "SelfAuthorized": [
        50386
      ],
      "SignatureDecoder": [
        50406
      ],
      "Singleton": [
        50412
      ],
      "StorageAccessible": [
        50461
      ],
      "TokenCallbackHandler": [
        51053
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:7687:108",
    "nodes": [
      {
        "id": 50569,
        "nodeType": "PragmaDirective",
        "src": "42:31:108",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 50570,
        "nodeType": "ImportDirective",
        "src": "75:36:108",
        "nodes": [],
        "absolutePath": "lib/safe/contracts/handler/TokenCallbackHandler.sol",
        "file": "./TokenCallbackHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50830,
        "sourceUnit": 51054,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50571,
        "nodeType": "ImportDirective",
        "src": "112:47:108",
        "nodes": [],
        "absolutePath": "lib/safe/contracts/interfaces/ISignatureValidator.sol",
        "file": "../interfaces/ISignatureValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50830,
        "sourceUnit": 52507,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50572,
        "nodeType": "ImportDirective",
        "src": "160:21:108",
        "nodes": [],
        "absolutePath": "lib/safe/contracts/Safe.sol",
        "file": "../Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50830,
        "sourceUnit": 49142,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50829,
        "nodeType": "ContractDefinition",
        "src": "343:7385:108",
        "nodes": [
          {
            "id": 50580,
            "nodeType": "VariableDeclaration",
            "src": "480:111:108",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SAFE_MSG_TYPEHASH",
            "nameLocation": "505:17:108",
            "scope": 50829,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 50578,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "480:7:108",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307836306233636266386234613232336436386436343162336236646466396132393865376633333731306366336433613964313134366235613631353066626361",
              "id": 50579,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "525:66:108",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_43739706848186989041152069077571617734008543096732098246335109361212071148490_by_1",
                "typeString": "int_const 4373...(69 digits omitted)...8490"
              },
              "value": "0x60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca"
            },
            "visibility": "private"
          },
          {
            "id": 50588,
            "nodeType": "VariableDeclaration",
            "src": "598:89:108",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIMULATE_SELECTOR",
            "nameLocation": "623:17:108",
            "scope": 50829,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 50581,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "598:6:108",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "73696d756c61746528616464726573732c627974657329",
                      "id": 50585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "660:25:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_bd61951d7ffb6a339250a21db4422ea103eaa0c60f484ea3bbdd746b2e87bbd6",
                        "typeString": "literal_string \"simulate(address,bytes)\""
                      },
                      "value": "simulate(address,bytes)"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_bd61951d7ffb6a339250a21db4422ea103eaa0c60f484ea3bbdd746b2e87bbd6",
                        "typeString": "literal_string \"simulate(address,bytes)\""
                      }
                    ],
                    "id": 50584,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -8,
                    "src": "650:9:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 50586,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "650:36:108",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 50583,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "643:6:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": {
                  "id": 50582,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "643:6:108",
                  "typeDescriptions": {}
                }
              },
              "id": 50587,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "643:44:108",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50594,
            "nodeType": "VariableDeclaration",
            "src": "694:57:108",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SENTINEL_MODULES",
            "nameLocation": "720:16:108",
            "scope": 50829,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50589,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "694:7:108",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831",
                  "id": 50592,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "747:3:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "0x1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 50591,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "739:7:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 50590,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "739:7:108",
                  "typeDescriptions": {}
                }
              },
              "id": 50593,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "739:12:108",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50597,
            "nodeType": "VariableDeclaration",
            "src": "757:57:108",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "UPDATED_MAGIC_VALUE",
            "nameLocation": "782:19:108",
            "scope": 50829,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 50595,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "757:6:108",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783136323662613765",
              "id": 50596,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "804:10:108",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_371636862_by_1",
                "typeString": "int_const 371636862"
              },
              "value": "0x1626ba7e"
            },
            "visibility": "internal"
          },
          {
            "id": 50660,
            "nodeType": "FunctionDefinition",
            "src": "1187:580:108",
            "nodes": [],
            "body": {
              "id": 50659,
              "nodeType": "Block",
              "src": "1296:471:108",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50610,
                      "mutability": "mutable",
                      "name": "safe",
                      "nameLocation": "1346:4:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50659,
                      "src": "1341:9:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$49141",
                        "typeString": "contract Safe"
                      },
                      "typeName": {
                        "id": 50609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50608,
                          "name": "Safe",
                          "nameLocations": [
                            "1341:4:108"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49141,
                          "src": "1341:4:108"
                        },
                        "referencedDeclaration": 49141,
                        "src": "1341:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50618,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 50614,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1366:3:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1370:6:108",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1366:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1358:8:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 50612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1358:8:108",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1358:19:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50611,
                      "name": "Safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49141,
                      "src": "1353:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Safe_$49141_$",
                        "typeString": "type(contract Safe)"
                      }
                    },
                    "id": 50617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:25:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$49141",
                      "typeString": "contract Safe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:37:108"
                },
                {
                  "assignments": [
                    50620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50620,
                      "mutability": "mutable",
                      "name": "messageData",
                      "nameLocation": "1401:11:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50659,
                      "src": "1388:24:108",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50619,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1388:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50622,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50610,
                        "src": "1440:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "id": 50623,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50600,
                        "src": "1446:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50621,
                      "name": "encodeMessageDataForSafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50720,
                      "src": "1415:24:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_Safe_$49141_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (contract Safe,bytes memory) view returns (bytes memory)"
                      }
                    },
                    "id": 50624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:37:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1388:64:108"
                },
                {
                  "assignments": [
                    50627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50627,
                      "mutability": "mutable",
                      "name": "messageHash",
                      "nameLocation": "1470:11:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50659,
                      "src": "1462:19:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 50626,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50631,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50629,
                        "name": "messageData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50620,
                        "src": "1494:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50628,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1484:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:22:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1462:44:108"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50632,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50602,
                        "src": "1520:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 50633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1531:6:108",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1520:17:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1541:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1520:22:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 50655,
                    "nodeType": "Block",
                    "src": "1642:83:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50650,
                              "name": "messageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50627,
                              "src": "1677:11:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 50651,
                              "name": "messageData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50620,
                              "src": "1690:11:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 50652,
                              "name": "_signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50602,
                              "src": "1703:10:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 50647,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50610,
                              "src": "1656:4:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Safe_$49141",
                                "typeString": "contract Safe"
                              }
                            },
                            "id": 50649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1661:15:108",
                            "memberName": "checkSignatures",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48718,
                            "src": "1656:20:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes memory,bytes memory) view external"
                            }
                          },
                          "id": 50653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1656:58:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50654,
                        "nodeType": "ExpressionStatement",
                        "src": "1656:58:108"
                      }
                    ]
                  },
                  "id": 50656,
                  "nodeType": "IfStatement",
                  "src": "1516:209:108",
                  "trueBody": {
                    "id": 50646,
                    "nodeType": "Block",
                    "src": "1544:92:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 50642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 50639,
                                    "name": "messageHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50627,
                                    "src": "1586:11:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 50637,
                                    "name": "safe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50610,
                                    "src": "1566:4:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Safe_$49141",
                                      "typeString": "contract Safe"
                                    }
                                  },
                                  "id": 50638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1571:14:108",
                                  "memberName": "signedMessages",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48315,
                                  "src": "1566:19:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$",
                                    "typeString": "function (bytes32) view external returns (uint256)"
                                  }
                                },
                                "id": 50640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1566:32:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 50641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1602:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1566:37:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "48617368206e6f7420617070726f766564",
                              "id": 50643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:19:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fd8211c71ab965565e8a56b84284a02d17d4d89e6f05f14b26449d5de3a8c5b6",
                                "typeString": "literal_string \"Hash not approved\""
                              },
                              "value": "Hash not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fd8211c71ab965565e8a56b84284a02d17d4d89e6f05f14b26449d5de3a8c5b6",
                                "typeString": "literal_string \"Hash not approved\""
                              }
                            ],
                            "id": 50636,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1558:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 50644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1558:67:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50645,
                        "nodeType": "ExpressionStatement",
                        "src": "1558:67:108"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 50657,
                    "name": "EIP1271_MAGIC_VALUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52492,
                    "src": "1741:19:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 50607,
                  "id": 50658,
                  "nodeType": "Return",
                  "src": "1734:26:108"
                }
              ]
            },
            "baseFunctions": [
              52505
            ],
            "documentation": {
              "id": 50598,
              "nodeType": "StructuredDocumentation",
              "src": "821:361:108",
              "text": " @notice Legacy EIP-1271 signature validation method.\n @dev Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\n @param _data Arbitrary length data signed on the behalf of address(msg.sender).\n @param _signature Signature byte array associated with _data.\n @return The EIP-1271 magic value."
            },
            "functionSelector": "20c13b0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "1196:16:108",
            "overrides": {
              "id": 50604,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1270:8:108"
            },
            "parameters": {
              "id": 50603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50600,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1226:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50660,
                  "src": "1213:18:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50599,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50602,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1246:10:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50660,
                  "src": "1233:23:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50601,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:45:108"
            },
            "returnParameters": {
              "id": 50607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50660,
                  "src": "1288:6:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 50605,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:8:108"
            },
            "scope": 50829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50680,
            "nodeType": "FunctionDefinition",
            "src": "1925:157:108",
            "nodes": [],
            "body": {
              "id": 50679,
              "nodeType": "Block",
              "src": "2001:81:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 50672,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2053:3:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 50673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2057:6:108",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2053:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2045:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 50670,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2045:8:108",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2045:19:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 50669,
                          "name": "Safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49141,
                          "src": "2040:4:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Safe_$49141_$",
                            "typeString": "type(contract Safe)"
                          }
                        },
                        "id": 50675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2040:25:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "id": 50676,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50663,
                        "src": "2067:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50668,
                      "name": "getMessageHashForSafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50739,
                      "src": "2018:21:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_Safe_$49141_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (contract Safe,bytes memory) view returns (bytes32)"
                      }
                    },
                    "id": 50677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:57:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50667,
                  "id": 50678,
                  "nodeType": "Return",
                  "src": "2011:64:108"
                }
              ]
            },
            "documentation": {
              "id": 50661,
              "nodeType": "StructuredDocumentation",
              "src": "1773:147:108",
              "text": " @dev Returns the hash of a message to be signed by owners.\n @param message Raw message bytes.\n @return Message hash."
            },
            "functionSelector": "0a1028c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessageHash",
            "nameLocation": "1934:14:108",
            "parameters": {
              "id": 50664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50663,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1962:7:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50680,
                  "src": "1949:20:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50662,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1948:22:108"
            },
            "returnParameters": {
              "id": 50667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50680,
                  "src": "1992:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50665,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:9:108"
            },
            "scope": 50829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50720,
            "nodeType": "FunctionDefinition",
            "src": "2331:307:108",
            "nodes": [],
            "body": {
              "id": 50719,
              "nodeType": "Block",
              "src": "2433:205:108",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50692,
                      "mutability": "mutable",
                      "name": "safeMessageHash",
                      "nameLocation": "2451:15:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50719,
                      "src": "2443:23:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 50691,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2443:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50702,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50696,
                            "name": "SAFE_MSG_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50580,
                            "src": "2490:17:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 50698,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50686,
                                "src": "2519:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 50697,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2509:9:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 50699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2509:18:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 50694,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2479:3:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 50695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2483:6:108",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2479:10:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 50700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2479:49:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50693,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2469:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:60:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2443:86:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783139",
                            "id": 50707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2570:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "0x19"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            }
                          ],
                          "id": 50706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2563:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes1_$",
                            "typeString": "type(bytes1)"
                          },
                          "typeName": {
                            "id": 50705,
                            "name": "bytes1",
                            "nodeType": "ElementaryTypeName",
                            "src": "2563:6:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2563:12:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30783031",
                            "id": 50711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2584:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x01"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2577:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes1_$",
                            "typeString": "type(bytes1)"
                          },
                          "typeName": {
                            "id": 50709,
                            "name": "bytes1",
                            "nodeType": "ElementaryTypeName",
                            "src": "2577:6:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2577:12:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50713,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50684,
                            "src": "2591:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$49141",
                              "typeString": "contract Safe"
                            }
                          },
                          "id": 50714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2596:15:108",
                          "memberName": "domainSeparator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49033,
                          "src": "2591:20:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 50715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2591:22:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 50716,
                        "name": "safeMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50692,
                        "src": "2615:15:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 50703,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2546:3:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 50704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2550:12:108",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2546:16:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 50717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:85:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 50690,
                  "id": 50718,
                  "nodeType": "Return",
                  "src": "2539:92:108"
                }
              ]
            },
            "documentation": {
              "id": 50681,
              "nodeType": "StructuredDocumentation",
              "src": "2088:238:108",
              "text": " @dev Returns the pre-image of the message hash (see getMessageHashForSafe).\n @param safe Safe to which the message is targeted.\n @param message Message that should be encoded.\n @return Encoded message."
            },
            "functionSelector": "23031640",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeMessageDataForSafe",
            "nameLocation": "2340:24:108",
            "parameters": {
              "id": 50687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50684,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "2370:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50720,
                  "src": "2365:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Safe_$49141",
                    "typeString": "contract Safe"
                  },
                  "typeName": {
                    "id": 50683,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50682,
                      "name": "Safe",
                      "nameLocations": [
                        "2365:4:108"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49141,
                      "src": "2365:4:108"
                    },
                    "referencedDeclaration": 49141,
                    "src": "2365:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$49141",
                      "typeString": "contract Safe"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50686,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2389:7:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50720,
                  "src": "2376:20:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50685,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2364:33:108"
            },
            "returnParameters": {
              "id": 50690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50689,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50720,
                  "src": "2419:12:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50688,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:14:108"
            },
            "scope": 50829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50739,
            "nodeType": "FunctionDefinition",
            "src": "2868:168:108",
            "nodes": [],
            "body": {
              "id": 50738,
              "nodeType": "Block",
              "src": "2962:74:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50733,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50724,
                            "src": "3014:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$49141",
                              "typeString": "contract Safe"
                            }
                          },
                          {
                            "id": 50734,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50726,
                            "src": "3020:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$49141",
                              "typeString": "contract Safe"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 50732,
                          "name": "encodeMessageDataForSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50720,
                          "src": "2989:24:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_Safe_$49141_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (contract Safe,bytes memory) view returns (bytes memory)"
                          }
                        },
                        "id": 50735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2989:39:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50731,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2979:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:50:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50730,
                  "id": 50737,
                  "nodeType": "Return",
                  "src": "2972:57:108"
                }
              ]
            },
            "documentation": {
              "id": 50721,
              "nodeType": "StructuredDocumentation",
              "src": "2644:219:108",
              "text": " @dev Returns hash of a message that can be signed by owners.\n @param safe Safe to which the message is targeted.\n @param message Message that should be hashed.\n @return Message hash."
            },
            "functionSelector": "6ac24784",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessageHashForSafe",
            "nameLocation": "2877:21:108",
            "parameters": {
              "id": 50727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50724,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "2904:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50739,
                  "src": "2899:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Safe_$49141",
                    "typeString": "contract Safe"
                  },
                  "typeName": {
                    "id": 50723,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50722,
                      "name": "Safe",
                      "nameLocations": [
                        "2899:4:108"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49141,
                      "src": "2899:4:108"
                    },
                    "referencedDeclaration": 49141,
                    "src": "2899:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$49141",
                      "typeString": "contract Safe"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50726,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2923:7:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50739,
                  "src": "2910:20:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50725,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2898:33:108"
            },
            "returnParameters": {
              "id": 50730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50729,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50739,
                  "src": "2953:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50728,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:9:108"
            },
            "scope": 50829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50780,
            "nodeType": "FunctionDefinition",
            "src": "3374:350:108",
            "nodes": [],
            "body": {
              "id": 50779,
              "nodeType": "Block",
              "src": "3477:247:108",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50751,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "3507:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50779,
                      "src": "3487:29:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISignatureValidator_$52506",
                        "typeString": "contract ISignatureValidator"
                      },
                      "typeName": {
                        "id": 50750,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50749,
                          "name": "ISignatureValidator",
                          "nameLocations": [
                            "3487:19:108"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52506,
                          "src": "3487:19:108"
                        },
                        "referencedDeclaration": 52506,
                        "src": "3487:19:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISignatureValidator_$52506",
                          "typeString": "contract ISignatureValidator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50756,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50753,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3539:3:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3543:6:108",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3539:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50752,
                      "name": "ISignatureValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52506,
                      "src": "3519:19:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISignatureValidator_$52506_$",
                        "typeString": "type(contract ISignatureValidator)"
                      }
                    },
                    "id": 50755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:31:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISignatureValidator_$52506",
                      "typeString": "contract ISignatureValidator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3487:63:108"
                },
                {
                  "assignments": [
                    50758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50758,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "3567:5:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50779,
                      "src": "3560:12:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 50757,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "3560:6:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50767,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50763,
                            "name": "_dataHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50742,
                            "src": "3613:9:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 50761,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3602:3:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 50762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3606:6:108",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3602:10:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 50764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3602:21:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 50765,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50744,
                        "src": "3625:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 50759,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50751,
                        "src": "3575:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISignatureValidator_$52506",
                          "typeString": "contract ISignatureValidator"
                        }
                      },
                      "id": 50760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3585:16:108",
                      "memberName": "isValidSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52505,
                      "src": "3575:26:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes memory,bytes memory) view external returns (bytes4)"
                      }
                    },
                    "id": 50766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:61:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3560:76:108"
                },
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 50770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 50768,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50758,
                            "src": "3654:5:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 50769,
                            "name": "EIP1271_MAGIC_VALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52492,
                            "src": "3663:19:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3654:28:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 50771,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3653:30:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 50775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3715:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 50774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3708:6:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        },
                        "typeName": {
                          "id": 50773,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3708:6:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 50776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3708:9:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 50777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3653:64:108",
                    "trueExpression": {
                      "id": 50772,
                      "name": "UPDATED_MAGIC_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50597,
                      "src": "3686:19:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 50748,
                  "id": 50778,
                  "nodeType": "Return",
                  "src": "3646:71:108"
                }
              ]
            },
            "documentation": {
              "id": 50740,
              "nodeType": "StructuredDocumentation",
              "src": "3042:327:108",
              "text": " @notice Implementation of updated EIP-1271 signature validation method.\n @param _dataHash Hash of the data signed on the behalf of address(msg.sender)\n @param _signature Signature byte array associated with _dataHash\n @return Updated EIP1271 magic value if signature is valid, otherwise 0x0"
            },
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "3383:16:108",
            "parameters": {
              "id": 50745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50742,
                  "mutability": "mutable",
                  "name": "_dataHash",
                  "nameLocation": "3408:9:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50780,
                  "src": "3400:17:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50744,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3434:10:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50780,
                  "src": "3419:25:108",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50743,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3399:46:108"
            },
            "returnParameters": {
              "id": 50748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50780,
                  "src": "3469:6:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 50746,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:8:108"
            },
            "scope": 50829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50812,
            "nodeType": "FunctionDefinition",
            "src": "3826:259:108",
            "nodes": [],
            "body": {
              "id": 50811,
              "nodeType": "Block",
              "src": "3889:196:108",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50789,
                      "mutability": "mutable",
                      "name": "safe",
                      "nameLocation": "3939:4:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50811,
                      "src": "3934:9:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$49141",
                        "typeString": "contract Safe"
                      },
                      "typeName": {
                        "id": 50788,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50787,
                          "name": "Safe",
                          "nameLocations": [
                            "3934:4:108"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49141,
                          "src": "3934:4:108"
                        },
                        "referencedDeclaration": 49141,
                        "src": "3934:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50797,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 50793,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3959:3:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3963:6:108",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3959:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3951:8:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 50791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3951:8:108",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3951:19:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50790,
                      "name": "Safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49141,
                      "src": "3946:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Safe_$49141_$",
                        "typeString": "type(contract Safe)"
                      }
                    },
                    "id": 50796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:25:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$49141",
                      "typeString": "contract Safe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3934:37:108"
                },
                {
                  "assignments": [
                    50802,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50802,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "3999:5:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 50811,
                      "src": "3982:22:108",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 50800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3982:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50801,
                        "nodeType": "ArrayTypeName",
                        "src": "3982:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 50808,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50805,
                        "name": "SENTINEL_MODULES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50594,
                        "src": "4035:16:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 50806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4053:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 50803,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50789,
                        "src": "4010:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$49141",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 50804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4015:19:108",
                      "memberName": "getModulesPaginated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49773,
                      "src": "4010:24:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$",
                        "typeString": "function (address,uint256) view external returns (address[] memory,address)"
                      }
                    },
                    "id": 50807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:46:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$",
                      "typeString": "tuple(address[] memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3981:75:108"
                },
                {
                  "expression": {
                    "id": 50809,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50802,
                    "src": "4073:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 50786,
                  "id": 50810,
                  "nodeType": "Return",
                  "src": "4066:12:108"
                }
              ]
            },
            "documentation": {
              "id": 50781,
              "nodeType": "StructuredDocumentation",
              "src": "3730:91:108",
              "text": " @dev Returns array of first 10 modules.\n @return Array of modules."
            },
            "functionSelector": "b2494df3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getModules",
            "nameLocation": "3835:10:108",
            "parameters": {
              "id": 50782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:2:108"
            },
            "returnParameters": {
              "id": 50786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50812,
                  "src": "3871:16:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50783,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3871:7:108",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 50784,
                    "nodeType": "ArrayTypeName",
                    "src": "3871:9:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3870:18:108"
            },
            "scope": 50829,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50828,
            "nodeType": "FunctionDefinition",
            "src": "4664:3062:108",
            "nodes": [],
            "body": {
              "id": 50827,
              "nodeType": "Block",
              "src": "4779:2947:108",
              "nodes": [],
              "statements": [
                {
                  "documentation": " Suppress compiler warnings about not using parameters, while allowing\n parameters to keep names for documentation purposes. This does not\n generate code.",
                  "expression": {
                    "id": 50822,
                    "name": "targetContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50815,
                    "src": "4998:14:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50823,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:14:108"
                },
                {
                  "expression": {
                    "id": 50824,
                    "name": "calldataPayload",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50817,
                    "src": "5022:15:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 50825,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:15:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5113:2607:108",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5127:35:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5157:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5151:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5151:11:108"
                        },
                        "variables": [
                          {
                            "name": "internalCalldata",
                            "nodeType": "YulTypedName",
                            "src": "5131:16:108",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "internalCalldata",
                              "nodeType": "YulIdentifier",
                              "src": "5333:16:108"
                            },
                            {
                              "hexValue": "b4faba09",
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "5351:18:108",
                              "type": ""
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5326:6:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5326:44:108"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5326:44:108"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "internalCalldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "5784:16:108"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5802:4:108",
                                  "type": "",
                                  "value": "0x04"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5780:3:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5780:27:108"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5809:4:108",
                              "type": "",
                              "value": "0x04"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "calldatasize",
                                    "nodeType": "YulIdentifier",
                                    "src": "5819:12:108"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5819:14:108"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5835:4:108",
                                  "type": "",
                                  "value": "0x04"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "5815:3:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5815:25:108"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5767:12:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5767:74:108"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5767:74:108"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "6248:3:108"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6248:5:108"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "caller",
                                    "nodeType": "YulIdentifier",
                                    "src": "6375:6:108"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6375:8:108"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6405:1:108",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "internalCalldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "6428:16:108"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "calldatasize",
                                    "nodeType": "YulIdentifier",
                                    "src": "6466:12:108"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6466:14:108"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6948:4:108",
                                  "type": "",
                                  "value": "0x00"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6974:4:108",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "call",
                                "nodeType": "YulIdentifier",
                                "src": "6222:4:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6222:774:108"
                            }
                          ],
                          "functionName": {
                            "name": "pop",
                            "nodeType": "YulIdentifier",
                            "src": "6201:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6201:809:108"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6201:809:108"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7403:47:108",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "7427:14:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7427:16:108"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7445:4:108",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "7423:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7423:27:108"
                        },
                        "variables": [
                          {
                            "name": "responseSize",
                            "nodeType": "YulTypedName",
                            "src": "7407:12:108",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7463:23:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7481:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7475:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7475:11:108"
                        },
                        "variableNames": [
                          {
                            "name": "response",
                            "nodeType": "YulIdentifier",
                            "src": "7463:8:108"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7506:4:108",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "response",
                                  "nodeType": "YulIdentifier",
                                  "src": "7516:8:108"
                                },
                                {
                                  "name": "responseSize",
                                  "nodeType": "YulIdentifier",
                                  "src": "7526:12:108"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7512:3:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7512:27:108"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7499:6:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7499:41:108"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7499:41:108"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "response",
                              "nodeType": "YulIdentifier",
                              "src": "7568:8:108"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7578:4:108",
                              "type": "",
                              "value": "0x20"
                            },
                            {
                              "name": "responseSize",
                              "nodeType": "YulIdentifier",
                              "src": "7584:12:108"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "7553:14:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7553:44:108"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7553:44:108"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7634:76:108",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "response",
                                        "nodeType": "YulIdentifier",
                                        "src": "7663:8:108"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7673:4:108",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7659:3:108"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7659:19:108"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "response",
                                        "nodeType": "YulIdentifier",
                                        "src": "7686:8:108"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7680:5:108"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7680:15:108"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7652:6:108"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7652:44:108"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7652:44:108"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7627:4:108",
                                  "type": "",
                                  "value": "0x00"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7621:5:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7621:11:108"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7614:6:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7614:19:108"
                        },
                        "nodeType": "YulIf",
                        "src": "7611:99:108"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 50820,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7463:8:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50820,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7516:8:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50820,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7568:8:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50820,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7663:8:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 50820,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7686:8:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 50826,
                  "nodeType": "InlineAssembly",
                  "src": "5104:2616:108"
                }
              ]
            },
            "documentation": {
              "id": 50813,
              "nodeType": "StructuredDocumentation",
              "src": "4091:568:108",
              "text": " @dev Performs a delegatecall on a targetContract in the context of self.\n Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.\n @dev Inspired by https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\n @param targetContract Address of the contract containing the code to execute.\n @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments)."
            },
            "functionSelector": "bd61951d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "simulate",
            "nameLocation": "4673:8:108",
            "parameters": {
              "id": 50818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50815,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "4690:14:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50828,
                  "src": "4682:22:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50817,
                  "mutability": "mutable",
                  "name": "calldataPayload",
                  "nameLocation": "4721:15:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50828,
                  "src": "4706:30:108",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50816,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4681:56:108"
            },
            "returnParameters": {
              "id": 50821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50820,
                  "mutability": "mutable",
                  "name": "response",
                  "nameLocation": "4769:8:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 50828,
                  "src": "4756:21:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50819,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4756:5:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4755:23:108"
            },
            "scope": 50829,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50574,
              "name": "TokenCallbackHandler",
              "nameLocations": [
                "384:20:108"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51053,
              "src": "384:20:108"
            },
            "id": 50575,
            "nodeType": "InheritanceSpecifier",
            "src": "384:20:108"
          },
          {
            "baseName": {
              "id": 50576,
              "name": "ISignatureValidator",
              "nameLocations": [
                "406:19:108"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52506,
              "src": "406:19:108"
            },
            "id": 50577,
            "nodeType": "InheritanceSpecifier",
            "src": "406:19:108"
          }
        ],
        "canonicalName": "CompatibilityFallbackHandler",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50573,
          "nodeType": "StructuredDocumentation",
          "src": "183:159:108",
          "text": " @title Compatibility Fallback Handler - Provides compatibility between pre 1.3.0 and 1.3.0+ Safe contracts.\n @author Richard Meissner - @rmeissner"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50829,
          52506,
          52493,
          51053,
          52487,
          52455,
          52475,
          52437
        ],
        "name": "CompatibilityFallbackHandler",
        "nameLocation": "352:28:108",
        "scope": 50830,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 108
}