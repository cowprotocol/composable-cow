{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "AuthorizerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExternalBalanceTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "InternalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "protocolFeeAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "PoolBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "cashDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "managedDelta",
          "type": "int256"
        }
      ],
      "name": "PoolBalanceManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RelayerApprovalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokensDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "TokensRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "batchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "deregisterTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.ExitPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getActionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getInternalBalance",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNextNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "managed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPoolTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeesCollector",
      "outputs": [
        {
          "internalType": "contract ProtocolFeesCollector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "hasApprovedRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxAmountsIn",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.JoinPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.PoolBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.PoolBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "managePoolBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.UserBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct IVault.UserBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "manageUserBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "queryBatchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "assetDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "registerPool",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "registerTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setRelayerApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WETH()": "ad5c4648",
    "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
    "deregisterTokens(bytes32,address[])": "7d3aeb96",
    "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
    "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
    "getActionId(bytes4)": "851c1bb3",
    "getAuthorizer()": "aaabadc5",
    "getDomainSeparator()": "ed24911d",
    "getInternalBalance(address,address[])": "0f5a6efa",
    "getNextNonce(address)": "90193b7c",
    "getPausedState()": "1c0de051",
    "getPool(bytes32)": "f6c00927",
    "getPoolTokenInfo(bytes32,address)": "b05f8e48",
    "getPoolTokens(bytes32)": "f94d4668",
    "getProtocolFeesCollector()": "d2946c2b",
    "hasApprovedRelayer(address,address)": "fec90d72",
    "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
    "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
    "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
    "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
    "registerPool(uint8)": "09b2760f",
    "registerTokens(bytes32,address[],address[])": "66a9c7d2",
    "setAuthorizer(address)": "058a628f",
    "setPaused(bool)": "16c38b3c",
    "setRelayerApproval(address,address,bool)": "fa6e671d",
    "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract ProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implement User Balance interactions, which combine Internal Balance and using the Vault's ERC20 allowance. Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users. Internal Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different senders and recipients, at once.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer/src/vault/UserBalance.sol\":\"UserBalance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/balancer/src/lib/helpers/AssetHelpers.sol\":{\"keccak256\":\"0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76\",\"dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH\"]},\"lib/balancer/src/lib/helpers/Authentication.sol\":{\"keccak256\":\"0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b\",\"dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF\"]},\"lib/balancer/src/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32\",\"dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9\"]},\"lib/balancer/src/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb\",\"dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH\"]},\"lib/balancer/src/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a\",\"dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq\"]},\"lib/balancer/src/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3\",\"dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ\"]},\"lib/balancer/src/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d\",\"dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc\"]},\"lib/balancer/src/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45\",\"dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9\"]},\"lib/balancer/src/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985\",\"dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj\"]},\"lib/balancer/src/lib/math/Math.sol\":{\"keccak256\":\"0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5\",\"dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp\"]},\"lib/balancer/src/lib/openzeppelin/Address.sol\":{\"keccak256\":\"0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e\",\"dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM\"]},\"lib/balancer/src/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246\",\"dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc\"]},\"lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6\",\"dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C\"]},\"lib/balancer/src/lib/openzeppelin/SafeCast.sol\":{\"keccak256\":\"0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032\",\"dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk\"]},\"lib/balancer/src/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19\",\"dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj\"]},\"lib/balancer/src/vault/AssetTransfersHandler.sol\":{\"keccak256\":\"0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d\",\"dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR\"]},\"lib/balancer/src/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1\",\"dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy\"]},\"lib/balancer/src/vault/UserBalance.sol\":{\"keccak256\":\"0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145\",\"dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv\"]},\"lib/balancer/src/vault/VaultAuthorization.sol\":{\"keccak256\":\"0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb\",\"dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz\"]},\"lib/balancer/src/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4\",\"dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4\"]},\"lib/balancer/src/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2\",\"dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB\"]},\"lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce\",\"dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP\"]},\"lib/balancer/src/vault/interfaces/IVault.sol\":{\"keccak256\":\"0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619\",\"dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq\"]},\"lib/canonical-weth/src/interfaces/IWETH.sol\":{\"keccak256\":\"0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05\",\"dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExternalBalanceTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashLoan",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InternalBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PausedStateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "deltas",
              "type": "int256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "protocolFeeAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "cashDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "managedDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceManaged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelayerApprovalChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "int256[]",
              "name": "limits",
              "type": "int256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "batchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exitPool"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashLoan"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuthorizer",
          "outputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInternalBalance",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPausedState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "pauseWindowEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bufferPeriodEndTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokenInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "managed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolFeesCollector",
          "outputs": [
            {
              "internalType": "contract ProtocolFeesCollector",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasApprovedRelayer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinPool"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.PoolBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.PoolBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "managePoolBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.UserBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.UserBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "manageUserBalance"
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queryBatchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "assetDeltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPool",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTokens"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthorizer"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelayerApproval"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "WETH()": {
            "details": "Returns the Vault's WETH instance."
          },
          "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
            "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
          },
          "deregisterTokens(bytes32,address[])": {
            "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
          },
          "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
          },
          "flashLoan(address,address[],uint256[],bytes)": {
            "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
          },
          "getActionId(bytes4)": {
            "details": "Returns the action identifier associated with the external function described by `selector`."
          },
          "getAuthorizer()": {
            "details": "Returns the Vault's Authorizer."
          },
          "getDomainSeparator()": {
            "details": "Returns the EIP712 domain separator."
          },
          "getInternalBalance(address,address[])": {
            "details": "Returns `user`'s Internal Balance for a set of tokens."
          },
          "getNextNonce(address)": {
            "details": "Returns the next nonce used by an address to sign messages."
          },
          "getPausedState()": {
            "details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."
          },
          "getPool(bytes32)": {
            "details": "Returns a Pool's contract address and specialization setting."
          },
          "getPoolTokenInfo(bytes32,address)": {
            "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
          },
          "getPoolTokens(bytes32)": {
            "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
          },
          "getProtocolFeesCollector()": {
            "details": "Returns the current protocol fee module."
          },
          "hasApprovedRelayer(address,address)": {
            "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
          },
          "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
          },
          "managePoolBalance((uint8,bytes32,address,uint256)[])": {
            "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
          },
          "manageUserBalance((uint8,address,uint256,address,address)[])": {
            "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
          },
          "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
            "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
          },
          "registerPool(uint8)": {
            "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
          },
          "registerTokens(bytes32,address[],address[])": {
            "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
          },
          "setAuthorizer(address)": {
            "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
          },
          "setPaused(bool)": {
            "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
          },
          "setRelayerApproval(address,address,bool)": {
            "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
          },
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
            "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/balancer/src/vault/UserBalance.sol": "UserBalance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/helpers/AssetHelpers.sol": {
        "keccak256": "0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00",
        "urls": [
          "bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76",
          "dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/Authentication.sol": {
        "keccak256": "0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3",
        "urls": [
          "bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b",
          "dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942",
        "urls": [
          "bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32",
          "dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537",
        "urls": [
          "bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb",
          "dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b",
        "urls": [
          "bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a",
          "dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2",
        "urls": [
          "bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3",
          "dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/InputHelpers.sol": {
        "keccak256": "0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42",
        "urls": [
          "bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d",
          "dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c",
        "urls": [
          "bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45",
          "dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12",
        "urls": [
          "bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985",
          "dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/Math.sol": {
        "keccak256": "0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d",
        "urls": [
          "bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5",
          "dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/Address.sol": {
        "keccak256": "0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b",
        "urls": [
          "bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e",
          "dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717",
        "urls": [
          "bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246",
          "dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862",
        "urls": [
          "bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6",
          "dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeCast.sol": {
        "keccak256": "0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec",
        "urls": [
          "bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032",
          "dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8",
        "urls": [
          "bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19",
          "dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/vault/AssetTransfersHandler.sol": {
        "keccak256": "0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45",
        "urls": [
          "bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d",
          "dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e",
        "urls": [
          "bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1",
          "dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/UserBalance.sol": {
        "keccak256": "0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d",
        "urls": [
          "bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145",
          "dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/VaultAuthorization.sol": {
        "keccak256": "0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1",
        "urls": [
          "bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb",
          "dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAsset.sol": {
        "keccak256": "0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c",
        "urls": [
          "bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4",
          "dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa",
        "urls": [
          "bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2",
          "dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f",
        "urls": [
          "bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce",
          "dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IVault.sol": {
        "keccak256": "0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c",
        "urls": [
          "bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619",
          "dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/canonical-weth/src/interfaces/IWETH.sol": {
        "keccak256": "0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3",
        "urls": [
          "bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05",
          "dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/balancer/src/vault/UserBalance.sol",
    "id": 11917,
    "exportedSymbols": {
      "Address": [
        6147
      ],
      "AssetHelpers": [
        2928
      ],
      "AssetTransfersHandler": [
        7742
      ],
      "Authentication": [
        3005
      ],
      "EIP712": [
        6240
      ],
      "Errors": [
        3317
      ],
      "IAsset": [
        14558
      ],
      "IAuthentication": [
        3328
      ],
      "IAuthorizer": [
        14573
      ],
      "IERC20": [
        670
      ],
      "IFlashLoanRecipient": [
        14651
      ],
      "ISignaturesValidator": [
        3346
      ],
      "ITemporarilyPausable": [
        3365
      ],
      "IVault": [
        15228
      ],
      "IWETH": [
        15479
      ],
      "InputHelpers": [
        3498
      ],
      "Math": [
        5806
      ],
      "ProtocolFeesCollector": [
        10020
      ],
      "ReentrancyGuard": [
        6883
      ],
      "SafeCast": [
        6912
      ],
      "SafeERC20": [
        7009
      ],
      "SignaturesValidator": [
        3749
      ],
      "TemporarilyPausable": [
        3929
      ],
      "UserBalance": [
        11916
      ],
      "VaultAuthorization": [
        12232
      ],
      "_require": [
        3023
      ],
      "_revert": [
        3031
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:9405:38",
    "nodes": [
      {
        "id": 11350,
        "nodeType": "PragmaDirective",
        "src": "688:31:38",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 11351,
        "nodeType": "ImportDirective",
        "src": "721:43:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/helpers/BalancerErrors.sol",
        "file": "../lib/helpers/BalancerErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 3318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11352,
        "nodeType": "ImportDirective",
        "src": "765:30:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/math/Math.sol",
        "file": "../lib/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 5807,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11353,
        "nodeType": "ImportDirective",
        "src": "796:45:38",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 3,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11354,
        "nodeType": "ImportDirective",
        "src": "842:49:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol",
        "file": "../lib/openzeppelin/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 6884,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11355,
        "nodeType": "ImportDirective",
        "src": "892:42:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/openzeppelin/SafeCast.sol",
        "file": "../lib/openzeppelin/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 6913,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11356,
        "nodeType": "ImportDirective",
        "src": "935:43:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/openzeppelin/SafeERC20.sol",
        "file": "../lib/openzeppelin/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 7010,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11357,
        "nodeType": "ImportDirective",
        "src": "980:37:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/AssetTransfersHandler.sol",
        "file": "./AssetTransfersHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 7743,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11358,
        "nodeType": "ImportDirective",
        "src": "1018:34:38",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/VaultAuthorization.sol",
        "file": "./VaultAuthorization.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11917,
        "sourceUnit": 12233,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11916,
        "nodeType": "ContractDefinition",
        "src": "1817:8276:38",
        "nodes": [
          {
            "id": 11368,
            "nodeType": "UsingForDirective",
            "src": "1915:23:38",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11366,
              "name": "Math",
              "nameLocations": [
                "1921:4:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5806,
              "src": "1921:4:38"
            },
            "typeName": {
              "id": 11367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1930:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 11371,
            "nodeType": "UsingForDirective",
            "src": "1943:27:38",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11369,
              "name": "SafeCast",
              "nameLocations": [
                "1949:8:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6912,
              "src": "1949:8:38"
            },
            "typeName": {
              "id": 11370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1962:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 11375,
            "nodeType": "UsingForDirective",
            "src": "1975:27:38",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11372,
              "name": "SafeERC20",
              "nameLocations": [
                "1981:9:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7009,
              "src": "1981:9:38"
            },
            "typeName": {
              "id": 11374,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11373,
                "name": "IERC20",
                "nameLocations": [
                  "1995:6:38"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 670,
                "src": "1995:6:38"
              },
              "referencedDeclaration": 670,
              "src": "1995:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$670",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 11382,
            "nodeType": "VariableDeclaration",
            "src": "2066:76:38",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_internalTokenBalance",
            "nameLocation": "2121:21:38",
            "scope": 11916,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
            },
            "typeName": {
              "id": 11381,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 11376,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2074:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2066:46:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11380,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 11378,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 11377,
                    "name": "IERC20",
                    "nameLocations": [
                      "2093:6:38"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 670,
                    "src": "2093:6:38"
                  },
                  "referencedDeclaration": 670,
                  "src": "2093:6:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  }
                },
                "nodeType": "Mapping",
                "src": "2085:26:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$",
                  "typeString": "mapping(contract IERC20 => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 11379,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 11429,
            "nodeType": "FunctionDefinition",
            "src": "2149:345:38",
            "nodes": [],
            "body": {
              "id": 11428,
              "nodeType": "Block",
              "src": "2310:184:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11395,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11393,
                      "src": "2320:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11399,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11388,
                            "src": "2345:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 11400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2352:6:38",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2345:13:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 11398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2331:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 11396,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2335:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11397,
                          "nodeType": "ArrayTypeName",
                          "src": "2335:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 11401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2331:28:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2320:39:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 11403,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:39:38"
                },
                {
                  "body": {
                    "id": 11426,
                    "nodeType": "Block",
                    "src": "2413:75:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 11424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 11415,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11393,
                              "src": "2427:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 11417,
                            "indexExpression": {
                              "id": 11416,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11405,
                              "src": "2436:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2427:11:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 11419,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11384,
                                "src": "2461:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 11420,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11388,
                                  "src": "2467:6:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                    "typeString": "contract IERC20[] memory"
                                  }
                                },
                                "id": 11422,
                                "indexExpression": {
                                  "id": 11421,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11405,
                                  "src": "2474:1:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2467:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 11418,
                              "name": "_getInternalBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11847,
                              "src": "2441:19:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_contract$_IERC20_$670_$returns$_t_uint256_$",
                                "typeString": "function (address,contract IERC20) view returns (uint256)"
                              }
                            },
                            "id": 11423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2441:36:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2427:50:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11425,
                        "nodeType": "ExpressionStatement",
                        "src": "2427:50:38"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11408,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11405,
                      "src": "2389:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11409,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11388,
                        "src": "2393:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 11410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2400:6:38",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2393:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2389:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11427,
                  "initializationExpression": {
                    "assignments": [
                      11405
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11405,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2382:1:38",
                        "nodeType": "VariableDeclaration",
                        "scope": 11427,
                        "src": "2374:9:38",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2374:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11407,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2386:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2374:13:38"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2408:3:38",
                      "subExpression": {
                        "id": 11412,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11405,
                        "src": "2408:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11414,
                    "nodeType": "ExpressionStatement",
                    "src": "2408:3:38"
                  },
                  "nodeType": "ForStatement",
                  "src": "2369:119:38"
                }
              ]
            },
            "baseFunctions": [
              14796
            ],
            "functionSelector": "0f5a6efa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInternalBalance",
            "nameLocation": "2158:18:38",
            "overrides": {
              "id": 11390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2253:8:38"
            },
            "parameters": {
              "id": 11389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11384,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2185:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11429,
                  "src": "2177:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2177:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11388,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "2207:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11429,
                  "src": "2191:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11386,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11385,
                        "name": "IERC20",
                        "nameLocations": [
                          "2191:6:38"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 670,
                        "src": "2191:6:38"
                      },
                      "referencedDeclaration": 670,
                      "src": "2191:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 11387,
                    "nodeType": "ArrayTypeName",
                    "src": "2191:8:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2176:38:38"
            },
            "returnParameters": {
              "id": 11394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11393,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "2296:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11429,
                  "src": "2279:25:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11391,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2279:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11392,
                    "nodeType": "ArrayTypeName",
                    "src": "2279:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2278:27:38"
            },
            "scope": 11916,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11589,
            "nodeType": "FunctionDefinition",
            "src": "2500:2571:38",
            "nodes": [],
            "body": {
              "id": 11588,
              "nodeType": "Block",
              "src": "2594:2477:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11440,
                      "mutability": "mutable",
                      "name": "ethWrapped",
                      "nameLocation": "2722:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11588,
                      "src": "2714:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2714:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11442,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 11441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2735:1:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2714:22:38"
                },
                {
                  "assignments": [
                    11444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11444,
                      "mutability": "mutable",
                      "name": "checkedCallerIsRelayer",
                      "nameLocation": "2828:22:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11588,
                      "src": "2823:27:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11443,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2823:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11446,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 11445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2853:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:35:38"
                },
                {
                  "assignments": [
                    11448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11448,
                      "mutability": "mutable",
                      "name": "checkedNotPaused",
                      "nameLocation": "2873:16:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11588,
                      "src": "2868:21:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11447,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2868:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11450,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 11449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2892:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2868:29:38"
                },
                {
                  "body": {
                    "id": 11582,
                    "nodeType": "Block",
                    "src": "2949:2037:38",
                    "statements": [
                      {
                        "assignments": [
                          11464
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11464,
                            "mutability": "mutable",
                            "name": "kind",
                            "nameLocation": "2981:4:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 11582,
                            "src": "2963:22:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                              "typeString": "enum IVault.UserBalanceOpKind"
                            },
                            "typeName": {
                              "id": 11463,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 11462,
                                "name": "UserBalanceOpKind",
                                "nameLocations": [
                                  "2963:17:38"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14822,
                                "src": "2963:17:38"
                              },
                              "referencedDeclaration": 14822,
                              "src": "2963:17:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                "typeString": "enum IVault.UserBalanceOpKind"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11465,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2963:22:38"
                      },
                      {
                        "assignments": [
                          11468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11468,
                            "mutability": "mutable",
                            "name": "asset",
                            "nameLocation": "3006:5:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 11582,
                            "src": "2999:12:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            },
                            "typeName": {
                              "id": 11467,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 11466,
                                "name": "IAsset",
                                "nameLocations": [
                                  "2999:6:38"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14558,
                                "src": "2999:6:38"
                              },
                              "referencedDeclaration": 14558,
                              "src": "2999:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$14558",
                                "typeString": "contract IAsset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11469,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2999:12:38"
                      },
                      {
                        "assignments": [
                          11471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11471,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "3033:6:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 11582,
                            "src": "3025:14:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3025:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11472,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3025:14:38"
                      },
                      {
                        "assignments": [
                          11474
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11474,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "3061:6:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 11582,
                            "src": "3053:14:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 11473,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3053:7:38",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11475,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3053:14:38"
                      },
                      {
                        "assignments": [
                          11477
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11477,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "3097:9:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 11582,
                            "src": "3081:25:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 11476,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3081:15:38",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11478,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3081:25:38"
                      },
                      {
                        "expression": {
                          "id": 11492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 11479,
                                "name": "kind",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11464,
                                "src": "3241:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                  "typeString": "enum IVault.UserBalanceOpKind"
                                }
                              },
                              {
                                "id": 11480,
                                "name": "asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11468,
                                "src": "3247:5:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAsset_$14558",
                                  "typeString": "contract IAsset"
                                }
                              },
                              {
                                "id": 11481,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11471,
                                "src": "3254:6:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 11482,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11474,
                                "src": "3262:6:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 11483,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11477,
                                "src": "3270:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 11484,
                                "name": "checkedCallerIsRelayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11444,
                                "src": "3281:22:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 11485,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3240:64:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_enum$_UserBalanceOpKind_$14822_$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_$_t_address_payable_$_t_bool_$",
                              "typeString": "tuple(enum IVault.UserBalanceOpKind,contract IAsset,uint256,address,address payable,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 11487,
                                  "name": "ops",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11433,
                                  "src": "3347:3:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$14817_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct IVault.UserBalanceOp memory[] memory"
                                  }
                                },
                                "id": 11489,
                                "indexExpression": {
                                  "id": 11488,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11452,
                                  "src": "3351:1:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3347:6:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                                  "typeString": "struct IVault.UserBalanceOp memory"
                                }
                              },
                              {
                                "id": 11490,
                                "name": "checkedCallerIsRelayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11444,
                                "src": "3371:22:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                                  "typeString": "struct IVault.UserBalanceOp memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 11486,
                              "name": "_validateUserBalanceOp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11915,
                              "src": "3307:22:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_UserBalanceOp_$14817_memory_ptr_$_t_bool_$returns$_t_enum$_UserBalanceOpKind_$14822_$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_$_t_address_payable_$_t_bool_$",
                                "typeString": "function (struct IVault.UserBalanceOp memory,bool) view returns (enum IVault.UserBalanceOpKind,contract IAsset,uint256,address,address payable,bool)"
                              }
                            },
                            "id": 11491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3307:100:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_enum$_UserBalanceOpKind_$14822_$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_$_t_address_payable_$_t_bool_$",
                              "typeString": "tuple(enum IVault.UserBalanceOpKind,contract IAsset,uint256,address,address payable,bool)"
                            }
                          },
                          "src": "3240:167:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11493,
                        "nodeType": "ExpressionStatement",
                        "src": "3240:167:38"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                            "typeString": "enum IVault.UserBalanceOpKind"
                          },
                          "id": 11497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11494,
                            "name": "kind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11464,
                            "src": "3426:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                              "typeString": "enum IVault.UserBalanceOpKind"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 11495,
                              "name": "UserBalanceOpKind",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14822,
                              "src": "3434:17:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_UserBalanceOpKind_$14822_$",
                                "typeString": "type(enum IVault.UserBalanceOpKind)"
                              }
                            },
                            "id": 11496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3452:17:38",
                            "memberName": "WITHDRAW_INTERNAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14819,
                            "src": "3434:35:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                              "typeString": "enum IVault.UserBalanceOpKind"
                            }
                          },
                          "src": "3426:43:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 11580,
                          "nodeType": "Block",
                          "src": "3670:1306:38",
                          "statements": [
                            {
                              "condition": {
                                "id": 11507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "3917:17:38",
                                "subExpression": {
                                  "id": 11506,
                                  "name": "checkedNotPaused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11448,
                                  "src": "3918:16:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 11516,
                              "nodeType": "IfStatement",
                              "src": "3913:127:38",
                              "trueBody": {
                                "id": 11515,
                                "nodeType": "Block",
                                "src": "3936:104:38",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 11508,
                                        "name": "_ensureNotPaused",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3896,
                                        "src": "3958:16:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                          "typeString": "function () view"
                                        }
                                      },
                                      "id": 11509,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3958:18:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 11510,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3958:18:38"
                                  },
                                  {
                                    "expression": {
                                      "id": 11513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 11511,
                                        "name": "checkedNotPaused",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11448,
                                        "src": "3998:16:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 11512,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4017:4:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "3998:23:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 11514,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3998:23:38"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                  "typeString": "enum IVault.UserBalanceOpKind"
                                },
                                "id": 11520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 11517,
                                  "name": "kind",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11464,
                                  "src": "4062:4:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                    "typeString": "enum IVault.UserBalanceOpKind"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 11518,
                                    "name": "UserBalanceOpKind",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14822,
                                    "src": "4070:17:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_UserBalanceOpKind_$14822_$",
                                      "typeString": "type(enum IVault.UserBalanceOpKind)"
                                    }
                                  },
                                  "id": 11519,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4088:16:38",
                                  "memberName": "DEPOSIT_INTERNAL",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14818,
                                  "src": "4070:34:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                    "typeString": "enum IVault.UserBalanceOpKind"
                                  }
                                },
                                "src": "4062:42:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 11578,
                                "nodeType": "Block",
                                "src": "4422:540:38",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 11545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "!",
                                          "prefix": true,
                                          "src": "4505:14:38",
                                          "subExpression": {
                                            "arguments": [
                                              {
                                                "id": 11543,
                                                "name": "asset",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11468,
                                                "src": "4513:5:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IAsset_$14558",
                                                  "typeString": "contract IAsset"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IAsset_$14558",
                                                  "typeString": "contract IAsset"
                                                }
                                              ],
                                              "id": 11542,
                                              "name": "_isETH",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2837,
                                              "src": "4506:6:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IAsset_$14558_$returns$_t_bool_$",
                                                "typeString": "function (contract IAsset) pure returns (bool)"
                                              }
                                            },
                                            "id": 11544,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4506:13:38",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 11546,
                                            "name": "Errors",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3317,
                                            "src": "4521:6:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                              "typeString": "type(library Errors)"
                                            }
                                          },
                                          "id": 11547,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "4528:23:38",
                                          "memberName": "CANNOT_USE_ETH_SENTINEL",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3280,
                                          "src": "4521:30:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 11541,
                                        "name": "_require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3023,
                                        "src": "4496:8:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                                          "typeString": "function (bool,uint256) pure"
                                        }
                                      },
                                      "id": 11548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4496:56:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 11549,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4496:56:38"
                                  },
                                  {
                                    "assignments": [
                                      11552
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 11552,
                                        "mutability": "mutable",
                                        "name": "token",
                                        "nameLocation": "4581:5:38",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 11578,
                                        "src": "4574:12:38",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$670",
                                          "typeString": "contract IERC20"
                                        },
                                        "typeName": {
                                          "id": 11551,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 11550,
                                            "name": "IERC20",
                                            "nameLocations": [
                                              "4574:6:38"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 670,
                                            "src": "4574:6:38"
                                          },
                                          "referencedDeclaration": 670,
                                          "src": "4574:6:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$670",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 11556,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 11554,
                                          "name": "asset",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11468,
                                          "src": "4599:5:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IAsset_$14558",
                                            "typeString": "contract IAsset"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IAsset_$14558",
                                            "typeString": "contract IAsset"
                                          }
                                        ],
                                        "id": 11553,
                                        "name": "_asIERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2927,
                                        "src": "4589:9:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_contract$_IAsset_$14558_$returns$_t_contract$_IERC20_$670_$",
                                          "typeString": "function (contract IAsset) pure returns (contract IERC20)"
                                        }
                                      },
                                      "id": 11555,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4589:16:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$670",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4574:31:38"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                        "typeString": "enum IVault.UserBalanceOpKind"
                                      },
                                      "id": 11560,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 11557,
                                        "name": "kind",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11464,
                                        "src": "4632:4:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                          "typeString": "enum IVault.UserBalanceOpKind"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 11558,
                                          "name": "UserBalanceOpKind",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14822,
                                          "src": "4640:17:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_UserBalanceOpKind_$14822_$",
                                            "typeString": "type(enum IVault.UserBalanceOpKind)"
                                          }
                                        },
                                        "id": 11559,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "4658:17:38",
                                        "memberName": "TRANSFER_INTERNAL",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14820,
                                        "src": "4640:35:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                                          "typeString": "enum IVault.UserBalanceOpKind"
                                        }
                                      },
                                      "src": "4632:43:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 11576,
                                      "nodeType": "Block",
                                      "src": "4790:154:38",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 11570,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11552,
                                                "src": "4888:5:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                                  "typeString": "contract IERC20"
                                                }
                                              },
                                              {
                                                "id": 11571,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11474,
                                                "src": "4895:6:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 11572,
                                                "name": "recipient",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11477,
                                                "src": "4903:9:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "id": 11573,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11471,
                                                "src": "4914:6:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                                  "typeString": "contract IERC20"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 11569,
                                              "name": "_transferToExternalBalance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11705,
                                              "src": "4861:26:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$670_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (contract IERC20,address,address,uint256)"
                                              }
                                            },
                                            "id": 11574,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4861:60:38",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 11575,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4861:60:38"
                                        }
                                      ]
                                    },
                                    "id": 11577,
                                    "nodeType": "IfStatement",
                                    "src": "4628:316:38",
                                    "trueBody": {
                                      "id": 11568,
                                      "nodeType": "Block",
                                      "src": "4677:107:38",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 11562,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11552,
                                                "src": "4728:5:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                                  "typeString": "contract IERC20"
                                                }
                                              },
                                              {
                                                "id": 11563,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11474,
                                                "src": "4735:6:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 11564,
                                                "name": "recipient",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11477,
                                                "src": "4743:9:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "id": 11565,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11471,
                                                "src": "4754:6:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                                  "typeString": "contract IERC20"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 11561,
                                              "name": "_transferInternalBalance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11672,
                                              "src": "4703:24:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$670_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (contract IERC20,address,address,uint256)"
                                              }
                                            },
                                            "id": 11566,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4703:58:38",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 11567,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4703:58:38"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 11579,
                              "nodeType": "IfStatement",
                              "src": "4058:904:38",
                              "trueBody": {
                                "id": 11540,
                                "nodeType": "Block",
                                "src": "4106:310:38",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 11522,
                                          "name": "asset",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11468,
                                          "src": "4154:5:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IAsset_$14558",
                                            "typeString": "contract IAsset"
                                          }
                                        },
                                        {
                                          "id": 11523,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11474,
                                          "src": "4161:6:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 11524,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11477,
                                          "src": "4169:9:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        {
                                          "id": 11525,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11471,
                                          "src": "4180:6:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IAsset_$14558",
                                            "typeString": "contract IAsset"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 11521,
                                        "name": "_depositToInternalBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11617,
                                        "src": "4128:25:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAsset_$14558_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (contract IAsset,address,address,uint256)"
                                        }
                                      },
                                      "id": 11526,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4128:59:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 11527,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4128:59:38"
                                  },
                                  {
                                    "condition": {
                                      "arguments": [
                                        {
                                          "id": 11529,
                                          "name": "asset",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11468,
                                          "src": "4306:5:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IAsset_$14558",
                                            "typeString": "contract IAsset"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IAsset_$14558",
                                            "typeString": "contract IAsset"
                                          }
                                        ],
                                        "id": 11528,
                                        "name": "_isETH",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2837,
                                        "src": "4299:6:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_contract$_IAsset_$14558_$returns$_t_bool_$",
                                          "typeString": "function (contract IAsset) pure returns (bool)"
                                        }
                                      },
                                      "id": 11530,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4299:13:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 11539,
                                    "nodeType": "IfStatement",
                                    "src": "4295:103:38",
                                    "trueBody": {
                                      "id": 11538,
                                      "nodeType": "Block",
                                      "src": "4314:84:38",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 11536,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 11531,
                                              "name": "ethWrapped",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11440,
                                              "src": "4340:10:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "id": 11534,
                                                  "name": "amount",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11471,
                                                  "src": "4368:6:38",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 11532,
                                                  "name": "ethWrapped",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11440,
                                                  "src": "4353:10:38",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 11533,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "4364:3:38",
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 5571,
                                                "src": "4353:14:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 11535,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4353:22:38",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4340:35:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 11537,
                                          "nodeType": "ExpressionStatement",
                                          "src": "4340:35:38"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 11581,
                        "nodeType": "IfStatement",
                        "src": "3422:1554:38",
                        "trueBody": {
                          "id": 11505,
                          "nodeType": "Block",
                          "src": "3471:193:38",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 11499,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11468,
                                    "src": "3616:5:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAsset_$14558",
                                      "typeString": "contract IAsset"
                                    }
                                  },
                                  {
                                    "id": 11500,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11474,
                                    "src": "3623:6:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 11501,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11477,
                                    "src": "3631:9:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 11502,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11471,
                                    "src": "3642:6:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IAsset_$14558",
                                      "typeString": "contract IAsset"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 11498,
                                  "name": "_withdrawFromInternalBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11646,
                                  "src": "3587:28:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAsset_$14558_$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IAsset,address,address payable,uint256)"
                                  }
                                },
                                "id": 11503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3587:62:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 11504,
                              "nodeType": "ExpressionStatement",
                              "src": "3587:62:38"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11455,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11452,
                      "src": "2928:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11456,
                        "name": "ops",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11433,
                        "src": "2932:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$14817_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.UserBalanceOp memory[] memory"
                        }
                      },
                      "id": 11457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2936:6:38",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2932:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2928:14:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11583,
                  "initializationExpression": {
                    "assignments": [
                      11452
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11452,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2921:1:38",
                        "nodeType": "VariableDeclaration",
                        "scope": 11583,
                        "src": "2913:9:38",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11451,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2913:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11454,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2925:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2913:13:38"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2944:3:38",
                      "subExpression": {
                        "id": 11459,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11452,
                        "src": "2944:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11461,
                    "nodeType": "ExpressionStatement",
                    "src": "2944:3:38"
                  },
                  "nodeType": "ForStatement",
                  "src": "2908:2078:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11585,
                        "name": "ethWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11440,
                        "src": "5053:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11584,
                      "name": "_handleRemainingEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7699,
                      "src": "5033:19:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:31:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11587,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:31:38"
                }
              ]
            },
            "baseFunctions": [
              14804
            ],
            "functionSelector": "0e8e3e84",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11436,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2581:12:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6858,
                  "src": "2581:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2581:12:38"
              }
            ],
            "name": "manageUserBalance",
            "nameLocation": "2509:17:38",
            "overrides": {
              "id": 11435,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2572:8:38"
            },
            "parameters": {
              "id": 11434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11433,
                  "mutability": "mutable",
                  "name": "ops",
                  "nameLocation": "2550:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11589,
                  "src": "2527:26:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$14817_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IVault.UserBalanceOp[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11431,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11430,
                        "name": "UserBalanceOp",
                        "nameLocations": [
                          "2527:13:38"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 14817,
                        "src": "2527:13:38"
                      },
                      "referencedDeclaration": 14817,
                      "src": "2527:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserBalanceOp_$14817_storage_ptr",
                        "typeString": "struct IVault.UserBalanceOp"
                      }
                    },
                    "id": 11432,
                    "nodeType": "ArrayTypeName",
                    "src": "2527:15:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$14817_storage_$dyn_storage_ptr",
                      "typeString": "struct IVault.UserBalanceOp[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:28:38"
            },
            "returnParameters": {
              "id": 11438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:38"
            },
            "scope": 11916,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11617,
            "nodeType": "FunctionDefinition",
            "src": "5077:286:38",
            "nodes": [],
            "body": {
              "id": 11616,
              "nodeType": "Block",
              "src": "5223:140:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11602,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11596,
                        "src": "5258:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11604,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11592,
                            "src": "5288:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            }
                          ],
                          "id": 11603,
                          "name": "_translateToIERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2858,
                            2909
                          ],
                          "referencedDeclaration": 2858,
                          "src": "5269:18:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IAsset_$14558_$returns$_t_contract$_IERC20_$670_$",
                            "typeString": "function (contract IAsset) view returns (contract IERC20)"
                          }
                        },
                        "id": 11605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5269:25:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11606,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11598,
                        "src": "5296:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11601,
                      "name": "_increaseInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11741
                      ],
                      "referencedDeclaration": 11741,
                      "src": "5233:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 11607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5233:70:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11608,
                  "nodeType": "ExpressionStatement",
                  "src": "5233:70:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11610,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11592,
                        "src": "5327:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$14558",
                          "typeString": "contract IAsset"
                        }
                      },
                      {
                        "id": 11611,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11598,
                        "src": "5334:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11612,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11594,
                        "src": "5342:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 11613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5350:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAsset_$14558",
                          "typeString": "contract IAsset"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11609,
                      "name": "_receiveAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7593,
                      "src": "5313:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (contract IAsset,uint256,address,bool)"
                      }
                    },
                    "id": 11614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5313:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11615,
                  "nodeType": "ExpressionStatement",
                  "src": "5313:43:38"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositToInternalBalance",
            "nameLocation": "5086:25:38",
            "parameters": {
              "id": 11599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11592,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "5128:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11617,
                  "src": "5121:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAsset_$14558",
                    "typeString": "contract IAsset"
                  },
                  "typeName": {
                    "id": 11591,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11590,
                      "name": "IAsset",
                      "nameLocations": [
                        "5121:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14558,
                      "src": "5121:6:38"
                    },
                    "referencedDeclaration": 14558,
                    "src": "5121:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAsset_$14558",
                      "typeString": "contract IAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11594,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5151:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11617,
                  "src": "5143:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5143:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11596,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5175:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11617,
                  "src": "5167:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5167:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11598,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5202:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11617,
                  "src": "5194:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5194:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5111:103:38"
            },
            "returnParameters": {
              "id": 11600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5223:0:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11646,
            "nodeType": "FunctionDefinition",
            "src": "5369:404:38",
            "nodes": [],
            "body": {
              "id": 11645,
              "nodeType": "Block",
              "src": "5526:247:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11630,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11622,
                        "src": "5664:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11632,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11620,
                            "src": "5691:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAsset_$14558",
                              "typeString": "contract IAsset"
                            }
                          ],
                          "id": 11631,
                          "name": "_translateToIERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2858,
                            2909
                          ],
                          "referencedDeclaration": 2858,
                          "src": "5672:18:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IAsset_$14558_$returns$_t_contract$_IERC20_$670_$",
                            "typeString": "function (contract IAsset) view returns (contract IERC20)"
                          }
                        },
                        "id": 11633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5672:25:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11634,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11626,
                        "src": "5699:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 11635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5707:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11629,
                      "name": "_decreaseInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11801
                      ],
                      "referencedDeclaration": 11801,
                      "src": "5639:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IERC20,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 11636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5639:74:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11637,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:74:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11639,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11620,
                        "src": "5734:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$14558",
                          "typeString": "contract IAsset"
                        }
                      },
                      {
                        "id": 11640,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11626,
                        "src": "5741:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11641,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11624,
                        "src": "5749:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 11642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5760:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAsset_$14558",
                          "typeString": "contract IAsset"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11638,
                      "name": "_sendAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7662,
                      "src": "5723:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_payable_$_t_bool_$returns$__$",
                        "typeString": "function (contract IAsset,uint256,address payable,bool)"
                      }
                    },
                    "id": 11643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11644,
                  "nodeType": "ExpressionStatement",
                  "src": "5723:43:38"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawFromInternalBalance",
            "nameLocation": "5378:28:38",
            "parameters": {
              "id": 11627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11620,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "5423:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11646,
                  "src": "5416:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAsset_$14558",
                    "typeString": "contract IAsset"
                  },
                  "typeName": {
                    "id": 11619,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11618,
                      "name": "IAsset",
                      "nameLocations": [
                        "5416:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14558,
                      "src": "5416:6:38"
                    },
                    "referencedDeclaration": 14558,
                    "src": "5416:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAsset_$14558",
                      "typeString": "contract IAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11622,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5446:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11646,
                  "src": "5438:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11624,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5478:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11646,
                  "src": "5462:25:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:15:38",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11626,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5505:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11646,
                  "src": "5497:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5406:111:38"
            },
            "returnParameters": {
              "id": 11628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5526:0:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11672,
            "nodeType": "FunctionDefinition",
            "src": "5779:379:38",
            "nodes": [],
            "body": {
              "id": 11671,
              "nodeType": "Block",
              "src": "5924:234:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11659,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11651,
                        "src": "6062:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11660,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11649,
                        "src": "6070:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11661,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11655,
                        "src": "6077:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 11662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6085:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11658,
                      "name": "_decreaseInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11801
                      ],
                      "referencedDeclaration": 11801,
                      "src": "6037:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IERC20,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 11663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6037:54:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11664,
                  "nodeType": "ExpressionStatement",
                  "src": "6037:54:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11666,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11653,
                        "src": "6126:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11667,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11649,
                        "src": "6137:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11668,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11655,
                        "src": "6144:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11665,
                      "name": "_increaseInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11741
                      ],
                      "referencedDeclaration": 11741,
                      "src": "6101:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 11669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:50:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11670,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:50:38"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferInternalBalance",
            "nameLocation": "5788:24:38",
            "parameters": {
              "id": 11656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11649,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5829:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11672,
                  "src": "5822:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11648,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11647,
                      "name": "IERC20",
                      "nameLocations": [
                        "5822:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "5822:6:38"
                    },
                    "referencedDeclaration": 670,
                    "src": "5822:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11651,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5852:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11672,
                  "src": "5844:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5844:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11653,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5876:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11672,
                  "src": "5868:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5868:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11655,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5903:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11672,
                  "src": "5895:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5895:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5812:103:38"
            },
            "returnParameters": {
              "id": 11657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5924:0:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11705,
            "nodeType": "FunctionDefinition",
            "src": "6164:329:38",
            "nodes": [],
            "body": {
              "id": 11704,
              "nodeType": "Block",
              "src": "6311:182:38",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11684,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11681,
                      "src": "6325:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6334:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6325:10:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11703,
                  "nodeType": "IfStatement",
                  "src": "6321:166:38",
                  "trueBody": {
                    "id": 11702,
                    "nodeType": "Block",
                    "src": "6337:150:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11690,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11677,
                              "src": "6374:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11691,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11679,
                              "src": "6382:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11692,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11681,
                              "src": "6393:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11687,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11675,
                              "src": "6351:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 11689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6357:16:38",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6972,
                            "src": "6351:22:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$670_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$670_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 11693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6351:49:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11694,
                        "nodeType": "ExpressionStatement",
                        "src": "6351:49:38"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 11696,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11675,
                              "src": "6443:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 11697,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11677,
                              "src": "6450:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11698,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11679,
                              "src": "6458:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11699,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11681,
                              "src": "6469:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11695,
                            "name": "ExternalBalanceTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14844,
                            "src": "6419:23:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$670_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 11700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6419:57:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11701,
                        "nodeType": "EmitStatement",
                        "src": "6414:62:38"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToExternalBalance",
            "nameLocation": "6173:26:38",
            "parameters": {
              "id": 11682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11675,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6216:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11705,
                  "src": "6209:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11674,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11673,
                      "name": "IERC20",
                      "nameLocations": [
                        "6209:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "6209:6:38"
                    },
                    "referencedDeclaration": 670,
                    "src": "6209:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11677,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6239:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11705,
                  "src": "6231:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6231:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11679,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6263:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11705,
                  "src": "6255:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6255:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11681,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6290:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11705,
                  "src": "6282:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6282:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6199:103:38"
            },
            "returnParameters": {
              "id": 11683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6311:0:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11741,
            "nodeType": "FunctionDefinition",
            "src": "6591:339:38",
            "nodes": [],
            "body": {
              "id": 11740,
              "nodeType": "Block",
              "src": "6720:210:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11718,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "6738:14:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11740,
                      "src": "6730:22:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11717,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6730:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11723,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11720,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11708,
                        "src": "6775:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11721,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11711,
                        "src": "6784:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 11719,
                      "name": "_getInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11847,
                      "src": "6755:19:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_contract$_IERC20_$670_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IERC20) view returns (uint256)"
                      }
                    },
                    "id": 11722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6755:35:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6730:60:38"
                },
                {
                  "assignments": [
                    11725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11725,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "6808:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11740,
                      "src": "6800:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11724,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6800:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11730,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11728,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11713,
                        "src": "6840:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11726,
                        "name": "currentBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11718,
                        "src": "6821:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6836:3:38",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5571,
                      "src": "6821:18:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6821:26:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6800:47:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11732,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11708,
                        "src": "6877:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11733,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11711,
                        "src": "6886:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11734,
                        "name": "newBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11725,
                        "src": "6893:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 11735,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11713,
                            "src": "6905:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6912:8:38",
                          "memberName": "toInt256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6911,
                          "src": "6905:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (int256)"
                          }
                        },
                        "id": 11737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6905:17:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 11731,
                      "name": "_setInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11829,
                      "src": "6857:19:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256,int256)"
                      }
                    },
                    "id": 11738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6857:66:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11739,
                  "nodeType": "ExpressionStatement",
                  "src": "6857:66:38"
                }
              ]
            },
            "baseFunctions": [
              7727
            ],
            "documentation": {
              "id": 11706,
              "nodeType": "StructuredDocumentation",
              "src": "6499:87:38",
              "text": " @dev Increases `account`'s Internal Balance for `token` by `amount`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_increaseInternalBalance",
            "nameLocation": "6600:24:38",
            "overrides": {
              "id": 11715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6711:8:38"
            },
            "parameters": {
              "id": 11714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11708,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6642:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11741,
                  "src": "6634:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6634:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11711,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6666:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11741,
                  "src": "6659:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11710,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11709,
                      "name": "IERC20",
                      "nameLocations": [
                        "6659:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "6659:6:38"
                    },
                    "referencedDeclaration": 670,
                    "src": "6659:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11713,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6689:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11741,
                  "src": "6681:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6624:77:38"
            },
            "returnParameters": {
              "id": 11716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6720:0:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11801,
            "nodeType": "FunctionDefinition",
            "src": "7201:684:38",
            "nodes": [],
            "body": {
              "id": 11800,
              "nodeType": "Block",
              "src": "7384:501:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11758,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "7402:14:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11800,
                      "src": "7394:22:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11757,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7394:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11763,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11760,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11744,
                        "src": "7439:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11761,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11747,
                        "src": "7448:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 11759,
                      "name": "_getInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11847,
                      "src": "7419:19:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_contract$_IERC20_$670_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IERC20) view returns (uint256)"
                      }
                    },
                    "id": 11762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7419:35:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7394:60:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11765,
                          "name": "allowPartial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11751,
                          "src": "7473:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 11766,
                                "name": "currentBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11758,
                                "src": "7490:14:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 11767,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11749,
                                "src": "7508:6:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7490:24:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 11769,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7489:26:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7473:42:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 11771,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3317,
                          "src": "7517:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 11772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7524:29:38",
                        "memberName": "INSUFFICIENT_INTERNAL_BALANCE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3262,
                        "src": "7517:36:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11764,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "7464:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 11773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7464:90:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11774,
                  "nodeType": "ExpressionStatement",
                  "src": "7464:90:38"
                },
                {
                  "expression": {
                    "id": 11781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11775,
                      "name": "deducted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11755,
                      "src": "7565:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11778,
                          "name": "currentBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11758,
                          "src": "7585:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 11779,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11749,
                          "src": "7601:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 11776,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5806,
                          "src": "7576:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$5806_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 11777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7581:3:38",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5716,
                        "src": "7576:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 11780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7576:32:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7565:43:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11782,
                  "nodeType": "ExpressionStatement",
                  "src": "7565:43:38"
                },
                {
                  "assignments": [
                    11784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11784,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "7759:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11800,
                      "src": "7751:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7751:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11788,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11785,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11758,
                      "src": "7772:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 11786,
                      "name": "deducted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11755,
                      "src": "7789:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7772:25:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7751:46:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11790,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11744,
                        "src": "7827:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11791,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11747,
                        "src": "7836:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11792,
                        "name": "newBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11784,
                        "src": "7843:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "7855:22:38",
                        "subExpression": {
                          "components": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 11793,
                                  "name": "deducted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11755,
                                  "src": "7857:8:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 11794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7866:8:38",
                                "memberName": "toInt256",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6911,
                                "src": "7857:17:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (int256)"
                                }
                              },
                              "id": 11795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7857:19:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 11796,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7856:21:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 11789,
                      "name": "_setInternalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11829,
                      "src": "7807:19:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256,int256)"
                      }
                    },
                    "id": 11798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7807:71:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11799,
                  "nodeType": "ExpressionStatement",
                  "src": "7807:71:38"
                }
              ]
            },
            "baseFunctions": [
              7741
            ],
            "documentation": {
              "id": 11742,
              "nodeType": "StructuredDocumentation",
              "src": "6936:260:38",
              "text": " @dev Decreases `account`'s Internal Balance for `token` by `amount`. If `allowPartial` is true, this function\n doesn't revert if `account` doesn't have enough balance, and sets it to zero and returns the deducted amount\n instead."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_decreaseInternalBalance",
            "nameLocation": "7210:24:38",
            "overrides": {
              "id": 11753,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7348:8:38"
            },
            "parameters": {
              "id": 11752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11744,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7252:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "7244:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7244:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11747,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7276:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "7269:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11745,
                      "name": "IERC20",
                      "nameLocations": [
                        "7269:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "7269:6:38"
                    },
                    "referencedDeclaration": 670,
                    "src": "7269:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11749,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7299:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "7291:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7291:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11751,
                  "mutability": "mutable",
                  "name": "allowPartial",
                  "nameLocation": "7320:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "7315:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11750,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7315:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7234:104:38"
            },
            "returnParameters": {
              "id": 11756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11755,
                  "mutability": "mutable",
                  "name": "deducted",
                  "nameLocation": "7374:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11801,
                  "src": "7366:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7366:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7365:18:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11829,
            "nodeType": "FunctionDefinition",
            "src": "8290:267:38",
            "nodes": [],
            "body": {
              "id": 11828,
              "nodeType": "Block",
              "src": "8430:127:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11814,
                          "name": "_internalTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11382,
                          "src": "8440:21:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                          }
                        },
                        "id": 11817,
                        "indexExpression": {
                          "id": 11815,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11804,
                          "src": "8462:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8440:30:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 11818,
                      "indexExpression": {
                        "id": 11816,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11807,
                        "src": "8471:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8440:37:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11819,
                      "name": "newBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11809,
                      "src": "8480:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8440:50:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11821,
                  "nodeType": "ExpressionStatement",
                  "src": "8440:50:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11823,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11804,
                        "src": "8528:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11824,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11807,
                        "src": "8537:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 11825,
                        "name": "delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11811,
                        "src": "8544:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 11822,
                      "name": "InternalBalanceChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14832,
                      "src": "8505:22:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$670_$_t_int256_$returns$__$",
                        "typeString": "function (address,contract IERC20,int256)"
                      }
                    },
                    "id": 11826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8505:45:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11827,
                  "nodeType": "EmitStatement",
                  "src": "8500:50:38"
                }
              ]
            },
            "documentation": {
              "id": 11802,
              "nodeType": "StructuredDocumentation",
              "src": "7891:394:38",
              "text": " @dev Sets `account`'s Internal Balance for `token` to `newBalance`.\n Emits an `InternalBalanceChanged` event. This event includes `delta`, which is the amount the balance increased\n (if positive) or decreased (if negative). To avoid reading the current balance in order to compute the delta,\n this function relies on the caller providing it directly."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setInternalBalance",
            "nameLocation": "8299:19:38",
            "parameters": {
              "id": 11812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11804,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8336:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11829,
                  "src": "8328:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11807,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8360:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11829,
                  "src": "8353:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11805,
                      "name": "IERC20",
                      "nameLocations": [
                        "8353:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "8353:6:38"
                    },
                    "referencedDeclaration": 670,
                    "src": "8353:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11809,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nameLocation": "8383:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11829,
                  "src": "8375:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8375:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11811,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "8410:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11829,
                  "src": "8403:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 11810,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8403:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8318:103:38"
            },
            "returnParameters": {
              "id": 11813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8430:0:38"
            },
            "scope": 11916,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11847,
            "nodeType": "FunctionDefinition",
            "src": "8641:153:38",
            "nodes": [],
            "body": {
              "id": 11846,
              "nodeType": "Block",
              "src": "8733:61:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 11840,
                        "name": "_internalTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11382,
                        "src": "8750:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                        }
                      },
                      "id": 11842,
                      "indexExpression": {
                        "id": 11841,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11832,
                        "src": "8772:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8750:30:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$670_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 11844,
                    "indexExpression": {
                      "id": 11843,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11835,
                      "src": "8781:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8750:37:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11839,
                  "id": 11845,
                  "nodeType": "Return",
                  "src": "8743:44:38"
                }
              ]
            },
            "documentation": {
              "id": 11830,
              "nodeType": "StructuredDocumentation",
              "src": "8563:73:38",
              "text": " @dev Returns `account`'s Internal Balance for `token`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getInternalBalance",
            "nameLocation": "8650:19:38",
            "parameters": {
              "id": 11836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11832,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8678:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11847,
                  "src": "8670:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8670:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11835,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8694:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11847,
                  "src": "8687:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11834,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11833,
                      "name": "IERC20",
                      "nameLocations": [
                        "8687:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "8687:6:38"
                    },
                    "referencedDeclaration": 670,
                    "src": "8687:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8669:31:38"
            },
            "returnParameters": {
              "id": 11839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11838,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11847,
                  "src": "8724:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8723:9:38"
            },
            "scope": 11916,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11915,
            "nodeType": "FunctionDefinition",
            "src": "8929:1162:38",
            "nodes": [],
            "body": {
              "id": 11914,
              "nodeType": "Block",
              "src": "9215:876:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11871,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "9387:6:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 11914,
                      "src": "9379:14:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11870,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9379:7:38",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11874,
                  "initialValue": {
                    "expression": {
                      "id": 11872,
                      "name": "op",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11851,
                      "src": "9396:2:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                        "typeString": "struct IVault.UserBalanceOp memory"
                      }
                    },
                    "id": 11873,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9399:6:38",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14814,
                    "src": "9396:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9379:26:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11875,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11871,
                      "src": "9420:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 11876,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9430:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9434:6:38",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9430:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9420:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11901,
                  "nodeType": "IfStatement",
                  "src": "9416:575:38",
                  "trueBody": {
                    "id": 11900,
                    "nodeType": "Block",
                    "src": "9442:549:38",
                    "statements": [
                      {
                        "condition": {
                          "id": 11880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9757:23:38",
                          "subExpression": {
                            "id": 11879,
                            "name": "checkedCallerIsRelayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11853,
                            "src": "9758:22:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11889,
                        "nodeType": "IfStatement",
                        "src": "9753:130:38",
                        "trueBody": {
                          "id": 11888,
                          "nodeType": "Block",
                          "src": "9782:101:38",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 11881,
                                  "name": "_authenticateCaller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2978,
                                  "src": "9800:19:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                    "typeString": "function () view"
                                  }
                                },
                                "id": 11882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9800:21:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 11883,
                              "nodeType": "ExpressionStatement",
                              "src": "9800:21:38"
                            },
                            {
                              "expression": {
                                "id": 11886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 11884,
                                  "name": "checkedCallerIsRelayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11853,
                                  "src": "9839:22:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 11885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9864:4:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9839:29:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 11887,
                              "nodeType": "ExpressionStatement",
                              "src": "9839:29:38"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 11892,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11871,
                                  "src": "9926:6:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11893,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9934:3:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 11894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9938:6:38",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9934:10:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11891,
                                "name": "_hasApprovedRelayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12202,
                                "src": "9906:19:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 11895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9906:39:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 11896,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3317,
                                "src": "9947:6:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 11897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9954:25:38",
                              "memberName": "USER_DOESNT_ALLOW_RELAYER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3232,
                              "src": "9947:32:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11890,
                            "name": "_require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3023,
                            "src": "9897:8:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,uint256) pure"
                            }
                          },
                          "id": 11898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9897:83:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11899,
                        "nodeType": "ExpressionStatement",
                        "src": "9897:83:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 11902,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11851,
                          "src": "10009:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                            "typeString": "struct IVault.UserBalanceOp memory"
                          }
                        },
                        "id": 11903,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10012:4:38",
                        "memberName": "kind",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14807,
                        "src": "10009:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                          "typeString": "enum IVault.UserBalanceOpKind"
                        }
                      },
                      {
                        "expression": {
                          "id": 11904,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11851,
                          "src": "10018:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                            "typeString": "struct IVault.UserBalanceOp memory"
                          }
                        },
                        "id": 11905,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10021:5:38",
                        "memberName": "asset",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14810,
                        "src": "10018:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$14558",
                          "typeString": "contract IAsset"
                        }
                      },
                      {
                        "expression": {
                          "id": 11906,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11851,
                          "src": "10028:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                            "typeString": "struct IVault.UserBalanceOp memory"
                          }
                        },
                        "id": 11907,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10031:6:38",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14812,
                        "src": "10028:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11908,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11871,
                        "src": "10039:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 11909,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11851,
                          "src": "10047:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                            "typeString": "struct IVault.UserBalanceOp memory"
                          }
                        },
                        "id": 11910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10050:9:38",
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14816,
                        "src": "10047:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 11911,
                        "name": "checkedCallerIsRelayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11853,
                        "src": "10061:22:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 11912,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10008:76:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_UserBalanceOpKind_$14822_$_t_contract$_IAsset_$14558_$_t_uint256_$_t_address_$_t_address_payable_$_t_bool_$",
                      "typeString": "tuple(enum IVault.UserBalanceOpKind,contract IAsset,uint256,address,address payable,bool)"
                    }
                  },
                  "functionReturnParameters": 11869,
                  "id": 11913,
                  "nodeType": "Return",
                  "src": "10001:83:38"
                }
              ]
            },
            "documentation": {
              "id": 11848,
              "nodeType": "StructuredDocumentation",
              "src": "8800:124:38",
              "text": " @dev Destructures a User Balance operation, validating that the contract caller is allowed to perform it."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateUserBalanceOp",
            "nameLocation": "8938:22:38",
            "parameters": {
              "id": 11854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11851,
                  "mutability": "mutable",
                  "name": "op",
                  "nameLocation": "8982:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "8961:23:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserBalanceOp_$14817_memory_ptr",
                    "typeString": "struct IVault.UserBalanceOp"
                  },
                  "typeName": {
                    "id": 11850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11849,
                      "name": "UserBalanceOp",
                      "nameLocations": [
                        "8961:13:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14817,
                      "src": "8961:13:38"
                    },
                    "referencedDeclaration": 14817,
                    "src": "8961:13:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserBalanceOp_$14817_storage_ptr",
                      "typeString": "struct IVault.UserBalanceOp"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11853,
                  "mutability": "mutable",
                  "name": "checkedCallerIsRelayer",
                  "nameLocation": "8991:22:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "8986:27:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11852,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8986:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8960:54:38"
            },
            "returnParameters": {
              "id": 11869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "9074:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                    "typeString": "enum IVault.UserBalanceOpKind"
                  },
                  "typeName": {
                    "id": 11856,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11855,
                      "name": "UserBalanceOpKind",
                      "nameLocations": [
                        "9074:17:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14822,
                      "src": "9074:17:38"
                    },
                    "referencedDeclaration": 14822,
                    "src": "9074:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserBalanceOpKind_$14822",
                      "typeString": "enum IVault.UserBalanceOpKind"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "9105:6:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAsset_$14558",
                    "typeString": "contract IAsset"
                  },
                  "typeName": {
                    "id": 11859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11858,
                      "name": "IAsset",
                      "nameLocations": [
                        "9105:6:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14558,
                      "src": "9105:6:38"
                    },
                    "referencedDeclaration": 14558,
                    "src": "9105:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAsset_$14558",
                      "typeString": "contract IAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "9125:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9125:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "9146:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9146:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "9167:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9167:15:38",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11868,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11915,
                  "src": "9196:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11867,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9196:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9060:150:38"
            },
            "scope": 11916,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 11360,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1850:15:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6883,
              "src": "1850:15:38"
            },
            "id": 11361,
            "nodeType": "InheritanceSpecifier",
            "src": "1850:15:38"
          },
          {
            "baseName": {
              "id": 11362,
              "name": "AssetTransfersHandler",
              "nameLocations": [
                "1867:21:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7742,
              "src": "1867:21:38"
            },
            "id": 11363,
            "nodeType": "InheritanceSpecifier",
            "src": "1867:21:38"
          },
          {
            "baseName": {
              "id": 11364,
              "name": "VaultAuthorization",
              "nameLocations": [
                "1890:18:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12232,
              "src": "1890:18:38"
            },
            "id": 11365,
            "nodeType": "InheritanceSpecifier",
            "src": "1890:18:38"
          }
        ],
        "canonicalName": "UserBalance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11359,
          "nodeType": "StructuredDocumentation",
          "src": "1054:762:38",
          "text": " Implement User Balance interactions, which combine Internal Balance and using the Vault's ERC20 allowance.\n Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n Internal Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different senders and recipients, at once."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          11916,
          12232,
          3929,
          3749,
          6240,
          3005,
          3328,
          7742,
          6883,
          15228,
          3365,
          3346,
          2928
        ],
        "name": "UserBalance",
        "nameLocation": "1835:11:38",
        "scope": 11917,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 38
}