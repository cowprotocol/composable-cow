{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "authorizer",
          "type": "address"
        },
        {
          "internalType": "contract IWETH",
          "name": "weth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "AuthorizerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExternalBalanceTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "InternalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "protocolFeeAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "PoolBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "cashDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "managedDelta",
          "type": "int256"
        }
      ],
      "name": "PoolBalanceManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RelayerApprovalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokensDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "TokensRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "batchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "assetDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "deregisterTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.ExitPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getActionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getInternalBalance",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNextNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "managed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPoolTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeesCollector",
      "outputs": [
        {
          "internalType": "contract ProtocolFeesCollector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "hasApprovedRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxAmountsIn",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.JoinPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.PoolBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.PoolBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "managePoolBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.UserBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct IVault.UserBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "manageUserBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "queryBatchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "registerPool",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "registerTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setRelayerApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountCalculated",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3231:648:39:-:0;;;3293:322;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3457:10;3508:19;3529:20;1640:114:15;;;;;;;;;;;;;-1:-1:-1;;;1640:114:15;;;1679:4;2028:280:22;;;;;;;;;;;;;-1:-1:-1;;;2028:280:22;;;3636:4:40;-1:-1:-1;;;;;3612:31:40;3604:40;;3482:4:39;1370::8;-1:-1:-1;;;;;1362:12:8;;;-1:-1:-1;;;;;1362:12:8;;;;;1328:53;1422:4:31;1389:39;;;;;:::i;:::-;-1:-1:-1;;;;;918:32:168;;;900:51;;888:2;873:18;1389:39:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1364:64:31;;;2026:1:25;2131:7;:22;1937:46:9;;2108:22:22;;;;;;;2093:37;;2158:25;;;;;2140:43;;-1:-1:-1;2206:95:22;2193:108;;2466:93:16;2172:7;2475:49;;;6552:3:10;2466:8:16;:93::i;:::-;2569:96;2240:7;2578:51;;;6616:3:10;2569:8:16;:96::i;:::-;2676:26;2705:37;2723:19;2705:15;:37;:::i;:::-;2753:40;;;;2676:66;-1:-1:-1;2826:41:16;2847:20;2676:66;2826:41;:::i;:::-;2803:64;;-1:-1:-1;3709:26:40::2;::::0;-1:-1:-1;3724:10:40;;-1:-1:-1;3709:14:40::2;:26::i;:::-;3438:304:::0;3293:322:39;;;;3231:648;;874:101:10;943:9;938:34;;954:18;962:9;954:7;:18::i;:::-;874:101;;:::o;3894:150:40:-;3968:32;;-1:-1:-1;;;;;3968:32:40;;;;;;;;4010:11;:27;;-1:-1:-1;;;;;4010:27:40;;;;;-1:-1:-1;;;;;;4010:27:40;;;;;;;;;3894:150::o;1082:3172:10:-;2223:4;2218:2;2207:9;2203:18;2199:29;2266:2;2255:9;2251:18;2238:31;;2316:4;2311:2;2300:9;2296:18;2292:29;2359:2;2348:9;2344:18;2331:31;;2411:4;2406:2;2395:9;2391:18;2387:29;3069:8;3065:2;3061:17;3051:6;3048:1;3044:14;3037:5;3033:26;3029:50;3011:16;3007:73;3002:3;2998:83;2978:103;;;;-1:-1:-1;;;3596:3:10;3589:79;3807:66;3801:4;3794:80;3949:1;3943:4;3936:15;4022:12;4016:4;4009:26;4242:3;4239:1;4232:14;3231:648:39;;;;;;;;:::o;14:144:168:-;-1:-1:-1;;;;;102:31:168;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:570::-;296:6;304;312;320;373:3;361:9;352:7;348:23;344:33;341:53;;;390:1;387;380:12;341:53;422:9;416:16;441:44;479:5;441:44;:::i;:::-;554:2;539:18;;533:25;504:5;;-1:-1:-1;567:46:168;533:25;567:46;:::i;:::-;679:2;664:18;;658:25;723:2;708:18;;;702:25;163:570;;632:7;;-1:-1:-1;163:570:168;-1:-1:-1;;;163:570:168:o;962:222::-;1027:9;;;1048:10;;;1045:133;;;1100:10;1095:3;1091:20;1088:1;1081:31;1135:4;1132:1;1125:15;1163:4;1160:1;1153:15;1045:133;962:222;;;;:::o;:::-;3231:648:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101a55760003560e01c8063945bcec9116100e1578063e6c460921161008a578063f84d066e11610064578063f84d066e14610525578063f94d466814610545578063fa6e671d14610574578063fec90d721461059457600080fd5b8063e6c46092146104c2578063ed24911d146104e2578063f6c00927146104f757600080fd5b8063b05f8e48116100bb578063b05f8e4814610433578063b95cac281461047c578063d2946c2b1461048f57600080fd5b8063945bcec9146103b6578063aaabadc5146103c9578063ad5c46481461040057600080fd5b806352bbbe291161014e5780637d3aeb96116101285780637d3aeb9614610320578063851c1bb3146103405780638bdb39131461036057806390193b7c1461038057600080fd5b806352bbbe29146102cd5780635c38449e146102e057806366a9c7d21461030057600080fd5b80630f5a6efa1161017f5780630f5a6efa1461024e57806316c38b3c1461027b5780631c0de0511461029b57600080fd5b8063058a628f146101e857806309b2760f146102085780630e8e3e841461023b57600080fd5b366101e3576101e1336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102066105c4565b005b600080fd5b3480156101f457600080fd5b506101e16102033660046159d2565b6105d6565b34801561021457600080fd5b506102286102233660046159fc565b6105fc565b6040519081526020015b60405180910390f35b6101e1610249366004615b2a565b6106de565b34801561025a57600080fd5b5061026e610269366004615c99565b61082e565b6040516102329190615d24565b34801561028757600080fd5b506101e1610296366004615d45565b610901565b3480156102a757600080fd5b506102b061091a565b604080519315158452602084019290925290820152606001610232565b6102286102db366004615e67565b610976565b3480156102ec57600080fd5b506101e16102fb366004615f9d565b610b6f565b34801561030c57600080fd5b506101e161031b366004616038565b610ff5565b34801561032c57600080fd5b506101e161033b366004616104565b6111d8565b34801561034c57600080fd5b5061022861035b366004616135565b61136a565b34801561036c57600080fd5b506101e161037b366004616213565b6113e7565b34801561038c57600080fd5b5061022861039b3660046159d2565b6001600160a01b031660009081526002602052604090205490565b61026e6103c4366004616376565b6113fd565b3480156103d557600080fd5b5060035461010090046001600160a01b03165b6040516001600160a01b039091168152602001610232565b34801561040c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e8565b34801561043f57600080fd5b5061045361044e366004616481565b611558565b604080519485526020850193909352918301526001600160a01b03166060820152608001610232565b6101e161048a366004616213565b61163f565b34801561049b57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e8565b3480156104ce57600080fd5b506101e16104dd3660046164b1565b611658565b3480156104ee57600080fd5b506102286117a5565b34801561050357600080fd5b50610517610512366004616582565b611850565b6040516102329291906165de565b34801561053157600080fd5b5061026e6105403660046165fb565b61187b565b34801561055157600080fd5b50610565610560366004616582565b611990565b604051610232939291906166ba565b34801561058057600080fd5b506101e161058f3660046166f0565b6119c4565b3480156105a057600080fd5b506105b46105af36600461673b565b611a72565b6040519015158152602001610232565b816105d2576105d281611aa7565b5050565b6105de611b1b565b6105e6611b34565b6105ef81611b7a565b6105f96001600055565b50565b6000610606611b1b565b61060e611bed565b600061061d3384600654611c02565b60008181526005602052604090205490915061063f9060ff16156101f46105c4565b600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600680549192909161068c908490616798565b9091555050604051339082907f3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e906106c59087906167ab565b60405180910390a390506106d96001600055565b919050565b6106e6611b1b565b6000806000805b84518110156108175760008060008060006107218a8781518110610713576107136167b9565b602002602001015189611c5a565b9c5093985091965094509250905060018560038111156107435761074361659b565b036107595761075484838386611cf0565b6107ff565b8661076b57610766611bed565b600196505b600085600381111561077f5761077f61659b565b036107af5761079084838386611d13565b6001600160a01b038416610754576107a88984611d33565b98506107ff565b6107c66001600160a01b03851615156102076105c4565b8360028660038111156107db576107db61659b565b036107f1576107ec81848487611d50565b6107fd565b6107fd81848487611d69565b505b5050505050808061080f906167e8565b9150506106ed565b5061082183611dd6565b5050506105f96001600055565b6060815167ffffffffffffffff81111561084a5761084a615a19565b604051908082528060200260200182016040528015610873578160200160208202803683370190505b50905060005b82518110156108fa576108cb84848381518110610898576108986167b9565b60200260200101516001600160a01b039182166000908152600b6020908152604080832093909416825291909152205490565b8282815181106108dd576108dd6167b9565b6020908102919091010152806108f2816167e8565b915050610879565b5092915050565b610909611b1b565b610911611b34565b6105ef81611e03565b6000806000610927611ecf565b1592507f000000000000000000000000000000000000000000000000000000000000000091507f00000000000000000000000000000000000000000000000000000000000000005b9050909192565b6000610980611b1b565b610988611bed565b835161099381611f05565b6109a2834211156101fc6105c4565b6109b560008760800151116101fe6105c4565b60006109c48760400151611f54565b905060006109d58860600151611f54565b90506109f8816001600160a01b0316836001600160a01b031614156101fd6105c4565b60408051610120810182526000808252602080830182905292820181905260608083018290526080830182815260a0840183905260c0840183905260e08401929092526101008301528a5190529089015181906001811115610a5c57610a5c61659b565b90816001811115610a6f57610a6f61659b565b9052506001600160a01b03808416602083015282811660408084019190915260808b0151606084015260a08b01516101008401528951821660c08401528901511660e0820152600080610ac183611f91565b91985092509050610afe60008c602001516001811115610ae357610ae361659b565b14610af15789831115610af6565b898210155b6101fb6105c4565b610b168b60400151838c600001518d60200151612099565b610b2e8b60600151828c604001518d6060015161218a565b610b57610b468c604001516001600160a01b03161590565b610b51576000611dd6565b82611dd6565b505050505050610b676001600055565b949350505050565b610b77611b1b565b610b7f611bed565b610b8b83518351612282565b6000835167ffffffffffffffff811115610ba757610ba7615a19565b604051908082528060200260200182016040528015610bd0578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610bef57610bef615a19565b604051908082528060200260200182016040528015610c18578160200160208202803683370190505b5090506000805b8651811015610dbe576000878281518110610c3c57610c3c6167b9565b602002602001015190506000878381518110610c5a57610c5a6167b9565b60200260200101519050610ca4846001600160a01b0316836001600160a01b03161160006001600160a01b0316846001600160a01b031614610c9d5760666105c4565b60686105c4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291935083916001600160a01b038316906370a0823190602401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190616820565b858481518110610d3c57610d3c6167b9565b602002602001018181525050610d518161228f565b868481518110610d6357610d636167b9565b602002602001018181525050610d9781868581518110610d8557610d856167b9565b602002602001015110156102106105c4565b610dab6001600160a01b0383168b83612320565b505080610db7906167e8565b9050610c1f565b506040517ff04f27070000000000000000000000000000000000000000000000000000000081526001600160a01b0388169063f04f270790610e0a908990899088908a906004016168a7565b600060405180830381600087803b158015610e2457600080fd5b505af1158015610e38573d6000803e3d6000fd5b5050505060005b8651811015610fe1576000878281518110610e5c57610e5c6167b9565b602002602001015190506000848381518110610e7a57610e7a6167b9565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c9190616820565b9050610f1d828210156102036105c4565b6000610f2983836168f4565b9050610f53888681518110610f4057610f406167b9565b602002602001015182101561025a6105c4565b610f5d84826123e7565b836001600160a01b03168c6001600160a01b03167f0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f08c8881518110610fa457610fa46167b9565b602002602001015184604051610fc4929190918252602082015260400190565b60405180910390a35050505080610fda906167e8565b9050610e3f565b50505050610fef6001600055565b50505050565b610ffd611b1b565b611005611bed565b8261100f81612421565b61101b83518351612282565b60005b83518110156110e557600084828151811061103b5761103b6167b9565b6020026020010151905061106760006001600160a01b0316826001600160a01b031614156101356105c4565b838281518110611079576110796167b9565b6020908102919091018101516000888152600a835260408082206001600160a01b0395861683529093529190912080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790556110de816167e8565b905061101e565b5060006110f185612453565b905060028160028111156111075761110761659b565b036111605761111c845160021461020c6105c4565b61115b8585600081518110611133576111336167b9565b60200260200101518660018151811061114e5761114e6167b9565b602002602001015161246d565b61118d565b60018160028111156111745761117461659b565b036111835761115b8585612531565b61118d8585612597565b847ff5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec485856040516111bf929190616907565b60405180910390a250506111d36001600055565b505050565b6111e0611b1b565b6111e8611bed565b816111f281612421565b60006111fd84612453565b905060028160028111156112135761121361659b565b0361126c57611228835160021461020c6105c4565b611267848460008151811061123f5761123f6167b9565b60200260200101518560018151811061125a5761125a6167b9565b60200260200101516125fa565b611299565b60018160028111156112805761128061659b565b0361128f5761126784846126b5565b611299848461278b565b60005b835181101561132557600a600086815260200190815260200160002060008583815181106112cc576112cc6167b9565b6020908102919091018101516001600160a01b0316825281019190915260400160002080547fffffffffffffffffffffffff000000000000000000000000000000000000000016905561131e816167e8565b905061129c565b50837f7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610846040516113569190616967565b60405180910390a250506105d26001600055565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016113ca9291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b604051602081830303815290604052805190602001209050919050565b610fef60018585856113f886612816565b612847565b6060611407611b1b565b61140f611bed565b835161141a81611f05565b611429834211156101fc6105c4565b61143586518551612282565b6114418787878b6129f7565b91506000805b8751811015611533576000888281518110611464576114646167b9565b602002602001015190506000858381518110611482576114826167b9565b602002602001015190506114b48884815181106114a1576114a16167b9565b60200260200101518213156101fb6105c4565b60008113156114f457885160208a015182916114d39185918491612099565b6001600160a01b0383166114ee576114eb8582611d33565b94505b50611520565b60008112156115205760006115088261697a565b905061151e83828c604001518d6060015161218a565b505b50508061152c906167e8565b9050611447565b5061153d81611dd6565b50506115496001600055565b9695505050505050565b905090565b6000806000808561156881612d30565b60008061157489612453565b9050600281600281111561158a5761158a61659b565b036115a0576115998989612d4e565b91506115d0565b60018160028111156115b4576115b461659b565b036115c3576115998989612dc6565b6115cd8989612e5d565b91505b6dffffffffffffffffffffffffffff821696506115fd8260701c6dffffffffffffffffffffffffffff1690565b95506116098260e01c90565b6000998a52600a60209081526040808c206001600160a01b039b8c168d5290915290992054969995989796909616955050505050565b611647611bed565b610fef60008585856113f886612816565b611660611b1b565b611668611bed565b6040805160808101825260008082526020820181905291810182905260608101829052905b8251811015611799578281815181106116a8576116a86167b9565b602002602001015191506000826020015190506116c481612d30565b60408301516116de6116d68383612e75565b6102096105c4565b6000828152600a602090815260408083206001600160a01b038581168552925290912054611711911633146101f66105c4565b8351606085015160008061172784878786612edb565b91509150846001600160a01b0316336001600160a01b0316877f6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a858560405161177a929190918252602082015260400190565b60405180910390a450505050505080611792906167e8565b905061168d565b50506105f96001600055565b600061155360007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000808261185d81612d30565b6118678460601c90565b61187085612453565b925092505b50915091565b6060333014611966576000306001600160a01b03166000366040516118a19291906169b2565b6000604051808303816000865af19150503d80600081146118de576040519150601f19603f3d011682016040523d82523d6000602084013e6118e3565b606091505b5050905080600081146118f257fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167ffa61cc1200000000000000000000000000000000000000000000000000000000811461194e573d6000803e3d6000fd5b50602060005260043d0380600460203e602081016000f35b6000611974858585896129f7565b9050602081510263fa61cc126020830352600482036024820181fd5b60608060008361199f81612d30565b60606119aa86612f54565b90955090506119b881612fb1565b95979096509350505050565b6119cc611b1b565b6119d4611bed565b826119de81611f05565b6001600160a01b0384811660008181526004602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687151590811790915591519182529192917f46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8910160405180910390a3506111d36001600055565b6001600160a01b03808316600090815260046020908152604080832093851683529290529081205460ff165b90505b92915050565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b925050507f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b611b2d600260005414156101906105c4565b6002600055565b6000611b636000357fffffffff000000000000000000000000000000000000000000000000000000001661136a565b90506105f9611b728233613079565b6101916105c4565b6040516001600160a01b038216907f94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef90600090a2600380546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b611c00611bf8611ecf565b6101926105c4565b565b600069ffffffffffffffffffff82166050846002811115611c2557611c2561659b565b901b17606085901b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000161790505b9392505050565b600080600080600080600088606001519050336001600160a01b0316816001600160a01b031614611cca5787611c9757611c92611b34565b600197505b6001600160a01b0381166000908152600460209081526040808320338452909152902054611cca9060ff166101f76105c4565b885160208a015160408b01516080909b0151919b909a9992985090965090945092505050565b611d0583611cfd86611f54565b836000613113565b50610fef848284600061218a565b611d2682611d2086611f54565b83613193565b610fef8482856000612099565b600080611d408385616798565b9050611a9e8482101560006105c4565b611d5d8385836000613113565b50610fef828583613193565b8015610fef57611d846001600160a01b0385168484846131d7565b604080516001600160a01b0384811682526020820184905280861692908716917f540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c91015b60405180910390a350505050565b611de5813410156102046105c4565b6000611df182346168f4565b905080156105d2576105d23382613228565b8015611e3c57611e377f000000000000000000000000000000000000000000000000000000000000000042106101936105c4565b611e6a565b611e6a7f000000000000000000000000000000000000000000000000000000000000000042106101a96105c4565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215159081179091556040519081527f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649060200160405180910390a150565b60007f000000000000000000000000000000000000000000000000000000000000000042118061155357505060035460ff161590565b336001600160a01b038216146105f957611f1d611b34565b6001600160a01b038116600090815260046020908152604080832033845290915290205460ff166105f9576105f9816101f7613299565b60006001600160a01b03821615611f6b5781611aa1565b7f0000000000000000000000000000000000000000000000000000000000000000611aa1565b600080600080611fa5856080015160601c90565b90506000611fb68660800151612453565b90506002816002811115611fcc57611fcc61659b565b03611fe257611fdb86836132d7565b9450612012565b6001816002811115611ff657611ff661659b565b0361200557611fdb8683613387565b61200f868361341a565b94505b6120258660000151876060015187613680565b809450819550505085604001516001600160a01b031686602001516001600160a01b031687608001517f2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b8787604051612088929190918252602082015260400190565b60405180910390a450509193909250565b8215610fef576001600160a01b038416612142576120ba81156102026105c4565b6120c9834710156102046105c4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561212457600080fd5b505af1158015612138573d6000803e3d6000fd5b5050505050610fef565b8381156121685760006121588483876001613113565b905061216481866168f4565b9450505b8315612183576121836001600160a01b0382168430876131d7565b5050505050565b8215610fef576001600160a01b038416612257576121ab81156102026105c4565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90602401600060405180830381600087803b15801561222657600080fd5b505af115801561223a573d6000803e3d6000fd5b50612252925050506001600160a01b03831684613228565b610fef565b83811561226e57612269838286613193565b612183565b6121836001600160a01b0382168486612320565b6105d281831460676105c4565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d877845c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123149190616820565b9050611c5383826136b3565b6040516001600160a01b0383166024820152604481018290526111d39084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261371c565b80156105d2576105d26001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000083612320565b61242a81612d30565b6105f96124378260601c90565b6001600160a01b0316336001600160a01b0316146101f56105c4565b600061ffff605083901c16611aa1600382106101f46105c4565b61248e816001600160a01b0316836001600160a01b0316141561020a6105c4565b6124ad816001600160a01b0316836001600160a01b03161060666105c4565b600083815260096020526040902080546124ea906001600160a01b03161580156124e2575060018201546001600160a01b0316155b61020b6105c4565b80546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782556001909101805492909316911617905550565b6000828152600860205260408120905b8251811015610fef576000612578848381518110612561576125616167b9565b6020026020010151846137b890919063ffffffff16565b90506125868161020a6105c4565b50612590816167e8565b9050612541565b6000828152600160205260408120905b8251811015610fef5760006125db8483815181106125c7576125c76167b9565b602090810291909101015184906000613842565b90506125e98161020a6105c4565b506125f3816167e8565b90506125a7565b600080600061260a86868661393b565b925092509250612669612639847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff161590565b801561266157507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316155b61020d6105c4565b600095865260096020526040862080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811682556001909101805490911690559490945550505050565b6000828152600860205260408120905b8251811015610fef5760008382815181106126e2576126e26167b9565b60209081029190910181015160008781526007835260408082206001600160a01b0384168352909352919091205490915061273b907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1615612661565b60008581526007602090815260408083206001600160a01b0385168452909152812081905561276a8483613a8b565b9050612778816102096105c4565b505080612784906167e8565b90506126c5565b6000828152600160205260408120905b8251811015610fef5760008382815181106127b8576127b86167b9565b6020026020010151905060006127ce8483613c1b565b90506127f87bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821615612661565b6128028483613c2a565b5050508061280f906167e8565b905061279b565b61284360405180608001604052806060815260200160608152602001606081526020016000151581525090565b5090565b61284f611b1b565b8361285981612d30565b8361286381611f05565b612877836000015151846020015151612282565b60006128868460000151613d44565b905060006128948883613de9565b905060008060006128a98c8c8c8c8c89613e8e565b92509250925060006128ba8c612453565b905060028160028111156128d0576128d061659b565b0361294f5761294a8c876000815181106128ec576128ec6167b9565b602002602001015186600081518110612907576129076167b9565b602002602001015189600181518110612922576129226167b9565b60200260200101518860018151811061293d5761293d6167b9565b602002602001015161407e565b61297d565b60018160028111156129635761296361659b565b036129735761294a8c8786614104565b61297d8c8561418e565b6000808e60018111156129925761299261659b565b1490508b6001600160a01b03168d7fe5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78896129cc88866141e5565b876040516129dc939291906169c2565b60405180910390a35050505050505050506121836001600055565b6060835167ffffffffffffffff811115612a1357612a13615a19565b604051908082528060200260200182016040528015612a3c578160200160208202803683370190505b509050612a746040518060a0016040528060008019168152602001600081526020016000815260200160008152602001606081525090565b604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018390526101008201529080805b8951811015612d2357898181518110612ada57612ada6167b9565b60200260200101519450600089518660200151108015612afe575089518660400151105b9050612b0b8160646105c4565b6000612b338b886020015181518110612b2657612b266167b9565b6020026020010151611f54565b90506000612b508c896040015181518110612b2657612b266167b9565b9050612b73816001600160a01b0316836001600160a01b031614156101fd6105c4565b8760600151600003612bc657612b8e600085116101fe6105c4565b6000612b9b8b84846142b0565b6001600160a01b0316876001600160a01b0316149050612bbd816101ff6105c4565b50606088018590525b87516080880152868a6001811115612be057612be061659b565b90816001811115612bf357612bf361659b565b9052506001600160a01b0380831660208901528181166040808a01919091526060808b0151908a015260808a01516101008a01528c51821660c08a01528c01511660e0880152600080612c4589611f91565b91985092509050612c578c85856142d8565b9750612c91612c65836142f8565b8c8c6020015181518110612c7b57612c7b6167b9565b602002602001015161432890919063ffffffff16565b8b8b6020015181518110612ca757612ca76167b9565b602002602001018181525050612ceb612cbf826142f8565b8c8c6040015181518110612cd557612cd56167b9565b602002602001015161436790919063ffffffff16565b8b8b6040015181518110612d0157612d016167b9565b602002602001018181525050505050505080612d1c906167e8565b9050612abf565b5050505050949350505050565b6000818152600560205260409020546105f99060ff166101f46105c4565b6000806000806000612d5f876143a6565b945094509450945050836001600160a01b0316866001600160a01b031603612d8d5782945050505050611aa1565b816001600160a01b0316866001600160a01b031603612db1579350611aa192505050565b612dbc610209611aa7565b5050505092915050565b60008281526007602090815260408083206001600160a01b0385168452909152812054817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8216151580612e3a575060008581526008602090815260408083206001600160a01b038816845260010190915290205415155b905080612e5557612e4a85612d30565b612e55610209611aa7565b509392505050565b6000828152600160205260408120610b678184613c1b565b600080612e8184612453565b90506002816002811115612e9757612e9761659b565b03612eae57612ea68484614474565b915050611aa1565b6001816002811115612ec257612ec261659b565b03612ed157612ea684846144c5565b612ea684846144f3565b6000806000612ee986612453565b90506000876002811115612eff57612eff61659b565b03612f1a57612f1086828787614521565b9250925050612f4b565b6001876002811115612f2e57612f2e61659b565b03612f3f57612f10868287876145ab565b612f1086828787614638565b94509492505050565b6060806000612f6284612453565b90506002816002811115612f7857612f7861659b565b03612f8657611870846146a5565b6001816002811115612f9a57612f9a61659b565b03612fa857611870846147f1565b61187084614927565b60606000825167ffffffffffffffff811115612fcf57612fcf615a19565b604051908082528060200260200182016040528015612ff8578160200160208202803683370190505b5091506000905060005b825181101561187557600084828151811061301f5761301f6167b9565b6020026020010151905061303281614a4b565b848381518110613044576130446167b9565b6020026020010181815250506130638361305e8360e01c90565b614a81565b9250508080613071906167e8565b915050613002565b6003546040517f9be2a884000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03838116602483015230604483015260009261010090041690639be2a88490606401602060405180830381865afa1580156130ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e91906169fb565b6001600160a01b038085166000908152600b60209081526040808320938716835292905290812054613152838061314a5750848210155b6102016105c4565b61315c8185614a98565b9150600061316a83836168f4565b905061318987878361317b876142f8565b6131849061697a565b614aa7565b5050949350505050565b6001600160a01b038381166000908152600b60209081526040808320938616835292905290812054906131c68284611d33565b9050612183858583613184876142f8565b6040516001600160a01b0380851660248301528316604482015260648101829052610fef9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612365565b613237814710156101a36105c4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613284576040519150601f19603f3d011682016040523d82523d6000602084013e613289565b606091505b505090506111d3816101a46105c4565b6001600160a01b0382166000908152600260205260408120805490826132be836167e8565b9190505590506111d36132d18483614b00565b836105c4565b6000806000806132f486608001518760200151886040015161393b565b92509250925060008087604001516001600160a01b031688602001516001600160a01b0316101561332957508390508261332f565b50829050835b61333b88888484614c8b565b60408b015160208c01519199509294509092506001600160a01b0391821691161061336f5761336a8183614d94565b613379565b6133798282614d94565b909255509295945050505050565b60008061339c84608001518560200151612dc6565b905060006133b285608001518660400151612dc6565b90506133c085858484614c8b565b6080880180516000908152600760208181526040808420828e01516001600160a01b03908116865290835281852098909855935183529081528282209a830151909516815298909352919096209590955550929392505050565b60808201516000908152600160209081526040808320828601516001600160a01b0316845260028101909252822054829182916000613466886040015184614de190919063ffffffff16565b9050811580613473575080155b15613490576134858860800151612d30565b613490610209611aa7565b61349b6001836168f4565b91506134a86001826168f4565b905060006134b4845490565b905060008167ffffffffffffffff8111156134d1576134d1615a19565b6040519080825280602002602001820160405280156134fa578160200160208202803683370190505b50600060a08c018190529091505b8281101561358f57600081815260018781016020526040909120015461352d81614a4b565b83838151811061353f5761353f6167b9565b60200260200101818152505061355d8c60a0015161305e8360e01c90565b60a08d01528582036135715780985061357c565b84820361357c578097505b5080613587816167e8565b915050613508565b506040517f01ec954a0000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906301ec954a906135db908d90859089908990600401616ad5565b6020604051808303816000875af11580156135fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061361e9190616820565b97506000806136368c600001518d606001518c613680565b90925090506136458983614e00565b98506136518882614e4b565b60009687526001978801602052604080882089019a909a55948652505050949091209091015550909392505050565b600080808560018111156136965761369661659b565b036136a55750829050816136ab565b50819050825b935093915050565b6000806136c08385616b0e565b90506136e18415806136da5750836136d88684616b25565b145b60036105c4565b806000036136f3576000915050611aa1565b670de0b6b3a76400006137076001836168f4565b6137119190616b25565b612ea6906001616798565b600080836001600160a01b0316836040516137379190616b60565b6000604051808303816000865af19150503d8060008114613774576040519150601f19603f3d011682016040523d82523d6000602084013e613779565b606091505b5090925090508161378e573d6000803e3d6000fd5b610fef8151600014806137b05750818060200190518101906137b091906169fb565b6101a26105c4565b6001600160a01b038116600090815260018301602052604081205461383a57508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03861690811790915585549082528286019093526040902091909155611aa1565b506000611aa1565b6001600160a01b03821660009081526002840160205260408120548082036139085784546040805180820182526001600160a01b038781168252602080830188815260008681526001808d0190935294909420925183547fffffffffffffffffffffffff00000000000000000000000000000000000000001692169190911782559151908201556138d4908290616798565b86556138e1816001616798565b6001600160a01b03861660009081526002880160205260409020555060019150611c539050565b8285600101600060018461391c91906168f4565b8152602001908152602001600020600101819055506000915050611c53565b600080600080600061394d8787614e82565b9150915060006139b583836040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015260009060480160405160208183030381529060405280519060200120905092915050565b60008a8152600960209081526040808320848452600201909152812080546001820154919750929350907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316151580613a2857507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821615155b80613a495750613a388c87614474565b8015613a495750613a498c86614474565b905080613a6457613a598c612d30565b613a64610209611aa7565b613a6e8383614eb3565b9850613a7a8383614eea565b975050505050505093509350939050565b6001600160a01b03811660009081526001830160205260408120548015613c11576000613ab96001836168f4565b8554909150600090613acd906001906168f4565b90506000866000018281548110613ae657613ae66167b9565b60009182526020909120015487546001600160a01b0390911691508190889085908110613b1557613b156167b9565b600091825260209091200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055613b61836001616798565b6001600160a01b03821660009081526001890160205260409020558654879080613b8d57613b8d616b7c565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b0388168252600189810190915260408220919091559450611aa19350505050565b6000915050611aa1565b6000611a9e8383610209614f23565b6001600160a01b03811660009081526002830160205260408120548015613c11576000613c586001836168f4565b9050600060018660000154613c6d91906168f4565b6000818152600180890160205260408083208684529220825481547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178155828201549082015591925090613ccf908490616798565b90546001600160a01b0390811660009081526002890160208181526040808420959095558583526001808c01825285842080547fffffffffffffffffffffffff00000000000000000000000000000000000000001681558101849055958b559289168252909152908120559250611aa1915050565b60606000825167ffffffffffffffff811115613d6257613d62615a19565b604051908082528060200260200182016040528015613d8b578160200160208202803683370190505b50905060005b83518110156108fa57613daf848281518110612b2657612b266167b9565b828281518110613dc157613dc16167b9565b6001600160a01b0390921660209283029190910190910152613de2816167e8565b9050613d91565b6060600080613df785612f54565b91509150613e0782518551612282565b613e17600083511161020f6105c4565b60005b8251811015613e8557613e75858281518110613e3857613e386167b9565b60200260200101516001600160a01b0316848381518110613e5b57613e5b6167b9565b60200260200101516001600160a01b0316146102086105c4565b613e7e816167e8565b9050613e1a565b50949350505050565b6060806060600080613e9f86612fb1565b915091506000613eaf8b60601c90565b905060008c6001811115613ec557613ec561659b565b14613f7757806001600160a01b03166374f3b0098c8c8c8787613ee6614f78565b8f604001516040518863ffffffff1660e01b8152600401613f0d9796959493929190616bab565b6000604051808303816000875af1158015613f2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613f729190810190616c64565b61401f565b806001600160a01b031663d5c096c48c8c8c8787613f93614f78565b8f604001516040518863ffffffff1660e01b8152600401613fba9796959493929190616bab565b6000604051808303816000875af1158015613fd9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261401f9190810190616c64565b8095508196505050614035875186518651614ffc565b60008c60018111156140495761404961659b565b146140605761405b8989898888615014565b61406d565b61406d8a89898888615186565b955050505096509650969350505050565b60408051606086811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009081166020808501919091529186901b16603483015282516028818403018152604890920183528151918101919091206000888152600983528381208282526002019092529190206140fa8584614d94565b9055505050505050565b60005b8251811015610fef57818181518110614122576141226167b9565b6020026020010151600760008681526020019081526020016000206000858481518110614151576141516167b9565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080614187906167e8565b9050614107565b6000828152600160205260408120905b8251811015610fef576141d5818483815181106141bd576141bd6167b9565b602002602001015184614e6a9092919063ffffffff16565b6141de816167e8565b905061419e565b6060825167ffffffffffffffff81111561420157614201615a19565b60405190808252806020026020018201604052801561422a578160200160208202803683370190505b50905060005b83518110156108fa578261426657838181518110614250576142506167b9565b60200260200101516142619061697a565b614281565b838181518110614278576142786167b9565b60200260200101515b828281518110614293576142936167b9565b6020908102919091010152806142a8816167e8565b915050614230565b6000808460018111156142c5576142c561659b565b146142d05781610b67565b509092915050565b6000808460018111156142ed576142ed61659b565b146108fa5782610b67565b60006128437f800000000000000000000000000000000000000000000000000000000000000083106101a56105c4565b6000806143358385616cbe565b9050611a9e6000841215801561434b5750848212155b80614360575060008412801561436057508482125b60006105c4565b6000806143748385616ce6565b9050611a9e6000841215801561438a5750848213155b8061439f575060008412801561439f57508482135b60016105c4565b6000818152600960205260408120805460018201546001600160a01b039182169284929091169082908161443286856040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015260009060480160405160208183030381529060405280519060200120905092915050565b60008181526002840160205260409020805460018201549199509192506144598282614eb3565b96506144658282614eea565b94505050505091939590929450565b600082815260096020526040812080546001600160a01b03848116911614806144ac575060018101546001600160a01b038481169116145b8015610b67575050506001600160a01b03161515919050565b60008281526008602090815260408083206001600160a01b0385168452600181019092528220541515610b67565b60008281526001602090815260408083206001600160a01b0385168452600281019092528220541515610b67565b60008060028560028111156145385761453861659b565b0361454d5761454886858561533b565b61457c565b60018560028111156145615761456161659b565b0361457157614548868585615349565b61457c868585615357565b8215614596576145966001600160a01b0385163385612320565b61459f8361697a565b96929550919350505050565b60008060028560028111156145c2576145c261659b565b036145d7576145d2868585615365565b614606565b60018560028111156145eb576145eb61659b565b036145fb576145d2868585615373565b614606868585615381565b8215614621576146216001600160a01b0385163330866131d7565b82915061462d8261697a565b905094509492505050565b600080600285600281111561464f5761464f61659b565b036146665761465f86858561538f565b9050614698565b600185600281111561467a5761467a61659b565b0361468a5761465f86858561539f565b6146958685856153af565b90505b6000915094509492505050565b6060806000806000806146b7876143a6565b92975090955093509150506001600160a01b03841615806146df57506001600160a01b038216155b1561470757505060408051600080825260208201908152818301909252969095509350505050565b6040805160028082526060820183529091602083019080368337019050509550838660008151811061473b5761473b6167b9565b60200260200101906001600160a01b031690816001600160a01b031681525050818660018151811061476f5761476f6167b9565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835290929091908301908036833701905050945082856000815181106147bc576147bc6167b9565b60200260200101818152505080856001815181106147dc576147dc6167b9565b60200260200101818152505050505050915091565b60008181526008602052604090208054606091829167ffffffffffffffff81111561481e5761481e615a19565b604051908082528060200260200182016040528015614847578160200160208202803683370190505b509250825167ffffffffffffffff81111561486457614864615a19565b60405190808252806020026020018201604052801561488d578160200160208202803683370190505b50915060005b83518110156149205760006148a883836153bf565b9050808583815181106148bd576148bd6167b9565b6001600160a01b03928316602091820292909201810191909152600088815260078252604080822093851682529290915220548451859084908110614904576149046167b9565b602090810291909101015250614919816167e8565b9050614893565b5050915091565b60008181526001602052604090208054606091829167ffffffffffffffff81111561495457614954615a19565b60405190808252806020026020018201604052801561497d578160200160208202803683370190505b509250825167ffffffffffffffff81111561499a5761499a615a19565b6040519080825280602002602001820160405280156149c3578160200160208202803683370190505b50915060005b83518110156149205760008181526001808401602052604090912080549101546001600160a01b0390911690858381518110614a0757614a076167b9565b60200260200101858481518110614a2057614a206167b9565b60209081029190910101919091526001600160a01b039091169052614a44816167e8565b90506149c9565b6000614a678260701c6dffffffffffffffffffffffffffff1690565b611aa1906dffffffffffffffffffffffffffff8416616798565b600081831015614a915781611a9e565b5090919050565b6000818310614a915781611a9e565b6001600160a01b038481166000818152600b602090815260408083209488168084529482529182902086905590518481527f18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c429101611dc8565b6000367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80013542811015614b38576000915050611aa1565b6000614b426153f2565b905080614b5457600092505050611aa1565b600081614b5f615502565b80516020918201206040805192830193909352918101919091523360608201526080810186905260a0810184905260c0016040516020818303038152906040528051906020012090506000614bb382615552565b90506000806000614bc261563d565b925092509250600060018585858560405160008152602001604052604051614c06949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015614c28573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811615801590614c7c57508a6001600160a01b0316816001600160a01b0316145b9b9a5050505050505050505050565b600080600080614c9a86614a4b565b90506000614ca786614a4b565b9050614cc0614cb68860e01c90565b61305e8860e01c90565b60a08a01526040517f9d2c110c0000000000000000000000000000000000000000000000000000000081526001600160a01b03891690639d2c110c90614d0e908c9086908690600401616d06565b6020604051808303816000875af1158015614d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614d519190616820565b9250600080614d698b600001518c6060015187613680565b9092509050614d788983614e00565b9650614d848882614e4b565b9550505050509450945094915050565b600080614dae614da48560e01c90565b61305e8560e01c90565b9050610b676dffffffffffffffffffffffffffff85166dffffffffffffffffffffffffffff85168363ffffffff166156b3565b6001600160a01b03166000908152600291909101602052604090205490565b600080614e1f836dffffffffffffffffffffffffffff86165b90611d33565b90506000614e3d8560701c6dffffffffffffffffffffffffffff1690565b9050436115498383836156d2565b600080614e1f836dffffffffffffffffffffffffffff86165b90615715565b60009182526001928301602052604090912090910155565b600080826001600160a01b0316846001600160a01b031610614ea5578284614ea8565b83835b915091509250929050565b6000611a9e6dffffffffffffffffffffffffffff84166dffffffffffffffffffffffffffff84165b614ee58660e01c90565b6156d2565b6000611a9e614f098460701c6dffffffffffffffffffffffffffff1690565b614edb8460701c6dffffffffffffffffffffffffffff1690565b6001600160a01b0382166000908152600284016020526040812054614f4a811515846105c4565b614f6f85614f596001846168f4565b6000908152600191820160205260409020015490565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166355c676286040518163ffffffff1660e01b8152600401602060405180830381865afa158015614fd8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115539190616820565b6111d3828414801561500d57508183145b60676105c4565b6060835167ffffffffffffffff81111561503057615030615a19565b604051908082528060200260200182016040528015615059578160200160208202803683370190505b50905060005b85515181101561517c57600084828151811061507d5761507d6167b9565b602002602001015190506150b3876020015183815181106150a0576150a06167b9565b60200260200101518210156101f96105c4565b6000876000015183815181106150cb576150cb6167b9565b602002602001015190506150e581838b8b6060015161218a565b60008584815181106150f9576150f96167b9565b6020026020010151905061511561510f83611f54565b826123e7565b61514a6151228483611d33565b898681518110615134576151346167b9565b6020026020010151614e4b90919063ffffffff16565b85858151811061515c5761515c6167b9565b60200260200101818152505050505080615175906167e8565b905061505f565b5095945050505050565b60606000845167ffffffffffffffff8111156151a4576151a4615a19565b6040519080825280602002602001820160405280156151cd578160200160208202803683370190505b50915060005b8651518110156153315760008582815181106151f1576151f16167b9565b6020026020010151905061522788602001518381518110615214576152146167b9565b60200260200101518211156101fa6105c4565b60008860000151838151811061523f5761523f6167b9565b6020026020010151905061525981838c8c60600151612099565b6001600160a01b038116615274576152718483611d33565b93505b6000868481518110615288576152886167b9565b6020026020010151905061529e61510f83611f54565b808310156152ca576152c56152b384836168f4565b8a8681518110615134576151346167b9565b6152ff565b6152ff6152d782856168f4565b8a86815181106152e9576152e96167b9565b6020026020010151614e0090919063ffffffff16565b868581518110615311576153116167b9565b6020026020010181815250505050508061532a906167e8565b90506151d3565b5061517c81611dd6565b610fef83836157318461578b565b610fef838361573184615835565b610fef838361573184615890565b610fef83836158df8461578b565b610fef83836158df84615835565b610fef83836158df84615890565b6000610b67848461591e8561578b565b6000610b67848461591e85615835565b6000610b67848461591e85615890565b60008260000182815481106153d6576153d66167b9565b6000918252602090912001546001600160a01b03169392505050565b6000803560e01c8063b95cac28811461543a57638bdb39138114615462576352bbbe29811461548a5763945bcec981146154b25763fa6e671d81146154da5760009250505090565b7f3f7b71252bd19113ff48c19c6e004a9bcfcca320a0d74d58e85877cbd7dcae589250505090565b7f8bbc57f66ea936902f50a71ce12b92c43f3c5340bb40c27c4e90ab84eeae33539250505090565b7fe192dcbc143b1e244ad73b813fd3c097b832ad260a157340b4e5e5beda067abe9250505090565b7f9bfc43a4d98313c6766986ffd7c916c7481566d9f224c6819af0a53388aced3a9250505090565b7fa3f865aa351e51cfeb40f5178d1564bb629fe9030b83caf6361d1baaf5b90b5a9250505090565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050506080101561554f576080360381525b90565b60006155fd60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810191909152604281018390526062016113ca565b367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0810135906000907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0013561096f565b6000836156c8607085901b60e085901b616798565b610b679190616798565b6000806156df8486616798565b905061570a85821015801561570257506e01000000000000000000000000000082105b61020e6105c4565b614f6f8585856156b3565b60006157258383111560016105c4565b6000610b6783856168f4565b60008061574e836dffffffffffffffffffffffffffff8616614e64565b9050600061577084614e198760701c6dffffffffffffffffffffffffffff1690565b9050600061577e8660e01c90565b90506115498383836156d2565b600080600080600061579c896143a6565b9450509350935093506000836001600160a01b0316896001600160a01b0316036157e65760006157d084898b63ffffffff16565b90506157dc818561593d565b9093509050615808565b60006157f683898b63ffffffff16565b9050615802818461593d565b90925090505b6158128383614d94565b855561581e838361597d565b600190950194909455509192505050949350505050565b6000806158428686612dc6565b9050600061585482858763ffffffff16565b60008881526007602090815260408083206001600160a01b038b16845290915290208190559050615885818361593d565b979650505050505050565b6000848152600160205260408120816158a98287613c1b565b905060006158bb82868863ffffffff16565b90506158c8838883613842565b506158d3818361593d565b98975050505050505050565b6000806158fc836dffffffffffffffffffffffffffff8616614e19565b9050600061577084614e648760701c6dffffffffffffffffffffffffffff1690565b60006dffffffffffffffffffffffffffff831643614f6f8285836156d2565b60006159598260701c6dffffffffffffffffffffffffffff1690565b6159738460701c6dffffffffffffffffffffffffffff1690565b611a9e9190616ce6565b6000611a9e61599c8460701c6dffffffffffffffffffffffffffff1690565b6159b68460701c6dffffffffffffffffffffffffffff1690565b60006156b3565b6001600160a01b03811681146105f957600080fd5b6000602082840312156159e457600080fd5b8135611a9e816159bd565b600381106105f957600080fd5b600060208284031215615a0e57600080fd5b8135611a9e816159ef565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715615a6b57615a6b615a19565b60405290565b6040516080810167ffffffffffffffff81118282101715615a6b57615a6b615a19565b60405160c0810167ffffffffffffffff81118282101715615a6b57615a6b615a19565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715615afe57615afe615a19565b604052919050565b600067ffffffffffffffff821115615b2057615b20615a19565b5060051b60200190565b60006020808385031215615b3d57600080fd5b823567ffffffffffffffff811115615b5457600080fd5b8301601f81018513615b6557600080fd5b8035615b78615b7382615b06565b615ab7565b81815260a09182028301840191848201919088841115615b9757600080fd5b938501935b83851015615c1e5780858a031215615bb45760008081fd5b615bbc615a48565b853560048110615bcc5760008081fd5b815285870135615bdb816159bd565b8188015260408681013590820152606080870135615bf8816159bd565b90820152608086810135615c0b816159bd565b9082015283529384019391850191615b9c565b50979650505050505050565b600082601f830112615c3b57600080fd5b81356020615c4b615b7383615b06565b82815260059290921b84018101918181019086841115615c6a57600080fd5b8286015b84811015615c8e578035615c81816159bd565b8352918301918301615c6e565b509695505050505050565b60008060408385031215615cac57600080fd5b8235615cb7816159bd565b9150602083013567ffffffffffffffff811115615cd357600080fd5b615cdf85828601615c2a565b9150509250929050565b600081518084526020808501945080840160005b83811015615d1957815187529582019590820190600101615cfd565b509495945050505050565b602081526000611a9e6020830184615ce9565b80151581146105f957600080fd5b600060208284031215615d5757600080fd5b8135611a9e81615d37565b8035600281106106d957600080fd5b600082601f830112615d8257600080fd5b813567ffffffffffffffff811115615d9c57615d9c615a19565b615dcd60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601615ab7565b818152846020838601011115615de257600080fd5b816020850160208301376000918101602001919091529392505050565b600060808284031215615e1157600080fd5b615e19615a71565b90508135615e26816159bd565b81526020820135615e3681615d37565b60208201526040820135615e49816159bd565b60408201526060820135615e5c81615d37565b606082015292915050565b60008060008060e08587031215615e7d57600080fd5b843567ffffffffffffffff80821115615e9557600080fd5b9086019060c08289031215615ea957600080fd5b615eb1615a94565b82358152615ec160208401615d62565b60208201526040830135615ed4816159bd565b60408201526060830135615ee7816159bd565b60608201526080838101359082015260a083013582811115615f0857600080fd5b615f148a828601615d71565b60a083015250809650505050615f2d8660208701615dff565b939693955050505060a08201359160c0013590565b600082601f830112615f5357600080fd5b81356020615f63615b7383615b06565b82815260059290921b84018101918181019086841115615f8257600080fd5b8286015b84811015615c8e5780358352918301918301615f86565b60008060008060808587031215615fb357600080fd5b8435615fbe816159bd565b9350602085013567ffffffffffffffff80821115615fdb57600080fd5b615fe788838901615c2a565b94506040870135915080821115615ffd57600080fd5b61600988838901615f42565b9350606087013591508082111561601f57600080fd5b5061602c87828801615d71565b91505092959194509250565b60008060006060848603121561604d57600080fd5b8335925060208085013567ffffffffffffffff8082111561606d57600080fd5b61607988838901615c2a565b9450604087013591508082111561608f57600080fd5b508501601f810187136160a157600080fd5b80356160af615b7382615b06565b81815260059190911b820183019083810190898311156160ce57600080fd5b928401925b828410156160f55783356160e6816159bd565b825292840192908401906160d3565b80955050505050509250925092565b6000806040838503121561611757600080fd5b82359150602083013567ffffffffffffffff811115615cd357600080fd5b60006020828403121561614757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a9e57600080fd5b60006080828403121561618957600080fd5b616191615a71565b9050813567ffffffffffffffff808211156161ab57600080fd5b6161b785838601615c2a565b835260208401359150808211156161cd57600080fd5b6161d985838601615f42565b602084015260408401359150808211156161f257600080fd5b506161ff84828501615d71565b6040830152506060820135615e5c81615d37565b6000806000806080858703121561622957600080fd5b84359350602085013561623b816159bd565b9250604085013561624b816159bd565b9150606085013567ffffffffffffffff81111561626757600080fd5b61602c87828801616177565b600082601f83011261628457600080fd5b81356020616294615b7383615b06565b82815260059290921b840181019181810190868411156162b357600080fd5b8286015b84811015615c8e57803567ffffffffffffffff808211156162d85760008081fd5b818901915060a0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848d030112156163115760008081fd5b616319615a48565b878401358152604080850135898301526060808601358284015260809150818601358184015250828501359250838311156163545760008081fd5b6163628d8a85880101615d71565b9082015286525050509183019183016162b7565b600080600080600080610120878903121561639057600080fd5b61639987615d62565b955060208088013567ffffffffffffffff808211156163b757600080fd5b6163c38b838c01616273565b975060408a01359150808211156163d957600080fd5b6163e58b838c01615c2a565b96506163f48b60608c01615dff565b955060e08a013591508082111561640a57600080fd5b508801601f81018a1361641c57600080fd5b803561642a615b7382615b06565b81815260059190911b8201830190838101908c83111561644957600080fd5b928401925b828410156164675783358252928401929084019061644e565b809650505050505061010087013590509295509295509295565b6000806040838503121561649457600080fd5b8235915060208301356164a6816159bd565b809150509250929050565b600060208083850312156164c457600080fd5b823567ffffffffffffffff8111156164db57600080fd5b8301601f810185136164ec57600080fd5b80356164fa615b7382615b06565b81815260079190911b8201830190838101908783111561651957600080fd5b928401925b8284101561588557608084890312156165375760008081fd5b61653f615a71565b843561654a816159ef565b81528486013586820152604080860135616563816159bd565b908201526060858101359082015282526080909301929084019061651e565b60006020828403121561659457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106165da576165da61659b565b9052565b6001600160a01b038316815260408101611c5360208301846165ca565b60008060008060e0858703121561661157600080fd5b61661a85615d62565b9350602085013567ffffffffffffffff8082111561663757600080fd5b61664388838901616273565b9450604087013591508082111561665957600080fd5b5061666687828801615c2a565b9250506166768660608701615dff565b905092959194509250565b600081518084526020808501945080840160005b83811015615d195781516001600160a01b031687529582019590820190600101616695565b6060815260006166cd6060830186616681565b82810360208401526166df8186615ce9565b915050826040830152949350505050565b60008060006060848603121561670557600080fd5b8335616710816159bd565b92506020840135616720816159bd565b9150604084013561673081615d37565b809150509250925092565b6000806040838503121561674e57600080fd5b8235616759816159bd565b915060208301356164a6816159bd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611aa157611aa1616769565b60208101611aa182846165ca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361681957616819616769565b5060010190565b60006020828403121561683257600080fd5b5051919050565b60005b8381101561685457818101518382015260200161683c565b50506000910152565b60008151808452616875816020860160208601616839565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6080815260006168ba6080830187616681565b82810360208401526168cc8187615ce9565b905082810360408401526168e08186615ce9565b90508281036060840152615885818561685d565b81810381811115611aa157611aa1616769565b60408152600061691a6040830185616681565b82810360208481019190915284518083528582019282019060005b8181101561695a5784516001600160a01b031683529383019391830191600101616935565b5090979650505050505050565b602081526000611a9e6020830184616681565b60007f800000000000000000000000000000000000000000000000000000000000000082036169ab576169ab616769565b5060000390565b8183823760009101908152919050565b6060815260006169d56060830186616681565b82810360208401526169e78186615ce9565b905082810360408401526115498185615ce9565b600060208284031215616a0d57600080fd5b8151611a9e81615d37565b6000610120825160028110616a2f57616a2f61659b565b808552506020830151616a4d60208601826001600160a01b03169052565b506040830151616a6860408601826001600160a01b03169052565b50606083015160608501526080830151608085015260a083015160a085015260c0830151616aa160c08601826001600160a01b03169052565b5060e0830151616abc60e08601826001600160a01b03169052565b506101008084015182828701526115498387018261685d565b608081526000616ae86080830187616a18565b8281036020840152616afa8187615ce9565b604084019590955250506060015292915050565b8082028115828204841417611aa157611aa1616769565b600082616b5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008251616b72818460208701616839565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b87815260006001600160a01b03808916602084015280881660408401525060e06060830152616bdd60e0830187615ce9565b8560808401528460a084015282810360c0840152616bfb818561685d565b9a9950505050505050505050565b600082601f830112616c1a57600080fd5b81516020616c2a615b7383615b06565b82815260059290921b84018101918181019086841115616c4957600080fd5b8286015b84811015615c8e5780518352918301918301616c4d565b60008060408385031215616c7757600080fd5b825167ffffffffffffffff80821115616c8f57600080fd5b616c9b86838701616c09565b93506020850151915080821115616cb157600080fd5b50615cdf85828601616c09565b8082018281126000831280158216821582161715616cde57616cde616769565b505092915050565b81810360008312801583831316838312821617156108fa576108fa616769565b606081526000616d196060830186616a18565b6020830194909452506040015291905056fea2646970667358221220e27d8b6ab4c8cefc075524af2be4ebc32ad1914f703418febfbfa41d9931e46c64736f6c63430008130033",
    "sourceMap": "3231:648:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6375:61:29;6384:10;-1:-1:-1;;;;;1504:5:8;6384:30:29;;9030:3:10;6375:8:29;:61::i;:::-;3231:648:39;;;;;3748:140:40;;;;;;;;;;-1:-1:-1;3748:140:40;;;;;:::i;:::-;;:::i;2524:771:34:-;;;;;;;;;;-1:-1:-1;2524:771:34;;;;;:::i;:::-;;:::i;:::-;;;1032:25:168;;;1020:2;1005:18;2524:771:34;;;;;;;;2500:2571:38;;;;;;:::i;:::-;;:::i;2149:345::-;;;;;;;;;;-1:-1:-1;2149:345:38;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3621:111:39:-;;;;;;;;;;-1:-1:-1;3621:111:39;;;;;:::i;:::-;;:::i;3162:363:16:-;;;;;;;;;;;;;:::i;:::-;;;;7111:14:168;;7104:22;7086:41;;7158:2;7143:18;;7136:34;;;;7186:18;;;7179:34;7074:2;7059:18;3162:363:16;6890:329:168;2368:2144:37;;;;;;:::i;:::-;;:::i;1430:2174:32:-;;;;;;;;;;-1:-1:-1;1430:2174:32;;;;;:::i;:::-;;:::i;1087:1197:35:-;;;;;;;;;;-1:-1:-1;1087:1197:35;;;;;:::i;:::-;;:::i;2290:1095::-;;;;;;;;;;-1:-1:-1;2290:1095:35;;;;;:::i;:::-;;:::i;2495:430:9:-;;;;;;;;;;-1:-1:-1;2495:430:9;;;;;:::i;:::-;;:::i;2288:384:33:-;;;;;;;;;;-1:-1:-1;2288:384:33;;;;;:::i;:::-;;:::i;1881:117:15:-;;;;;;;;;;-1:-1:-1;1881:117:15;;;;;:::i;:::-;-1:-1:-1;;;;;1975:16:15;1949:7;1975:16;;;:10;:16;;;;;;;1881:117;4518:1825:37;;;;;;:::i;:::-;;:::i;4050:105:40:-;;;;;;;;;;-1:-1:-1;4137:11:40;;;;;-1:-1:-1;;;;;4137:11:40;4050:105;;;-1:-1:-1;;;;;20536:55:168;;;20518:74;;20506:2;20491:18;4050:105:40;20351:247:168;3791:86:39;;;;;;;;;;-1:-1:-1;1504:5:8;3791:86:39;;3840:984:35;;;;;;;;;;-1:-1:-1;3840:984:35;;;;;:::i;:::-;;:::i;:::-;;;;21427:25:168;;;21483:2;21468:18;;21461:34;;;;21511:18;;;21504:34;-1:-1:-1;;;;;21574:55:168;21569:2;21554:18;;21547:83;21414:3;21399:19;3840:984:35;21196:440:168;1720:562:33;;;;;;:::i;:::-;;:::i;1441:135:31:-;;;;;;;;;;-1:-1:-1;1547:22:31;1441:135;;1543:1096:28;;;;;;;;;;-1:-1:-1;1543:1096:28;;;;;:::i;:::-;;:::i;1760:115:15:-;;;;;;;;;;;;;:::i;3301:246:34:-;;;;;;;;;;-1:-1:-1;3301:246:34;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;19613:5730:37:-;;;;;;;;;;-1:-1:-1;19613:5730:37;;;;;:::i;:::-;;:::i;3391:443:35:-;;;;;;;;;;-1:-1:-1;3391:443:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;4161:301:40:-;;;;;;;;;;-1:-1:-1;4161:301:40;;;;;:::i;:::-;;:::i;4468:155::-;;;;;;;;;;-1:-1:-1;4468:155:40;;;;;:::i;:::-;;:::i;:::-;;;28198:14:168;;28191:22;28173:41;;28161:2;28146:18;4468:155:40;28033:187:168;874:101:10;943:9;938:34;;954:18;962:9;954:7;:18::i;:::-;874:101;;:::o;3748:140:40:-;2569:20:25;:18;:20::i;:::-;2164:21:9::1;:19;:21::i;:::-;3852:29:40::2;3867:13;3852:14;:29::i;:::-;2610:19:25::0;2026:1;3098:7;:22;2919:208;2610:19;3748:140:40;:::o;2524:771:34:-;2675:7;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;2876:14:34::2;2893:61;2903:10;2915:14;2938;;2893:9;:61::i;:::-;2975:25;::::0;;;:17:::2;:25;::::0;;;;;2876:78;;-1:-1:-1;2965:60:34::2;::::0;2975:25:::2;;2974:26;7986:3:10;2965:8:34;:60::i;:::-;3082:25;::::0;;;:17:::2;:25;::::0;;;;:32;;;::::2;3110:4;3082:32:::0;;::::2;::::0;;;3125:14:::2;:19:::0;;3110:4;;3125:14;;:19:::2;::::0;3110:4;;3125:19:::2;:::i;:::-;::::0;;;-1:-1:-1;;3215:50:34::2;::::0;3238:10:::2;::::0;3230:6;;3215:50:::2;::::0;::::2;::::0;3250:14;;3215:50:::2;:::i;:::-;;;;;;;;3282:6:::0;-1:-1:-1;2610:19:25;2026:1;3098:7;:22;2919:208;2610:19;2524:771:34;;;:::o;2500:2571:38:-;2569:20:25;:18;:20::i;:::-;2714:18:38::1;2823:27:::0;2868:21:::1;2913:9:::0;2908:2078:::1;2932:3;:10;2928:1;:14;2908:2078;;;2963:22;2999:12:::0;3025:14:::1;3053::::0;3081:25:::1;3307:100;3347:3;3351:1;3347:6;;;;;;;;:::i;:::-;;;;;;;3371:22;3307;:100::i;:::-;3240:167:::0;-1:-1:-1;3240:167:38;;-1:-1:-1;3240:167:38;;-1:-1:-1;3240:167:38;-1:-1:-1;3240:167:38;-1:-1:-1;3240:167:38;-1:-1:-1;3434:35:38::1;3426:4;:43;;;;;;;;:::i;:::-;::::0;3422:1554:::1;;3587:62;3616:5;3623:6;3631:9;3642:6;3587:28;:62::i;:::-;3422:1554;;;3918:16;3913:127;;3958:18;:16;:18::i;:::-;4017:4;3998:23;;3913:127;4070:34;4062:4;:42;;;;;;;;:::i;:::-;::::0;4058:904:::1;;4128:59;4154:5;4161:6;4169:9;4180:6;4128:25;:59::i;:::-;-1:-1:-1::0;;;;;1693:22:8;;4295:103:38::1;;4353:22;:10:::0;4368:6;4353:14:::1;:22::i;:::-;4340:35;;4058:904;;;4496:56;-1:-1:-1::0;;;;;1693:22:8;;;4505:14:38::1;9091:3:10;4496:8:38;:56::i;:::-;4599:5:::0;4640:35:::1;4632:4:::0;:43:::1;::::0;::::1;;;;;;:::i;:::-;::::0;4628:316:::1;;4703:58;4728:5;4735:6;4743:9;4754:6;4703:24;:58::i;:::-;4628:316;;;4861:60;4888:5;4895:6;4903:9;4914:6;4861:26;:60::i;:::-;4422:540;4058:904;2949:2037;;;;;2944:3;;;;;:::i;:::-;;;;2908:2078;;;;5033:31;5053:10;5033:19;:31::i;:::-;2594:2477;;;2610:19:25::0;2026:1;3098:7;:22;2919:208;2149:345:38;2279:25;2345:6;:13;2331:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2331:28:38;;2320:39;;2374:9;2369:119;2393:6;:13;2389:1;:17;2369:119;;;2441:36;2461:4;2467:6;2474:1;2467:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8750:30:38;;;8724:7;8750:30;;;:21;:30;;;;;;;;:37;;;;;;;;;;;;;8641:153;2441:36;2427:8;2436:1;2427:11;;;;;;;;:::i;:::-;;;;;;;;;;:50;2408:3;;;;:::i;:::-;;;;2369:119;;;;2149:345;;;;:::o;3621:111:39:-;2569:20:25;:18;:20::i;:::-;2164:21:9::1;:19;:21::i;:::-;3707:18:39::2;3718:6;3707:10;:18::i;3162:363:16:-:0;3265:11;3290:26;3330:27;3392:14;:12;:14::i;:::-;3391:15;;-1:-1:-1;4984:19:16;3416:45;-1:-1:-1;5099:20:16;3493:25;3471:47;;3162:363;;;:::o;2368:2144:37:-;2660:24;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;2629:12:37::0;;3392:22:40::2;2629:12:37::0;3392:16:40::2;:22::i;:::-;2852:59:37::3;2880:8;2861:15;:27;;8422:3:10;2852:8:37;:59::i;:::-;3079:68;3108:1;3088:10;:17;;;:21;8548:3:10;3079:8:37;:68::i;:::-;3158:14;3175:38;3194:10;:18;;;3175;:38::i;:::-;3158:55;;3223:15;3241:39;3260:10;:19;;;3241:18;:39::i;:::-;3223:57;;3290:60;3310:8;-1:-1:-1::0;;;;;3299:19:37::3;:7;-1:-1:-1::0;;;;;3299:19:37::3;;;8482:3:10;3290:8:37;:60::i;:::-;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:17:37;;3511:38;;3578:15;;::::3;::::0;-1:-1:-1;;3559:34:37::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;::::0;;-1:-1:-1;;;;;;3603:29:37;;::::3;:19;::::0;::::3;:29:::0;3642:31;;::::3;:20;::::0;;::::3;:31:::0;;;;3704:17:::3;::::0;::::3;::::0;3683:18:::3;::::0;::::3;:38:::0;3754:19:::3;::::0;::::3;::::0;3731:20:::3;::::0;::::3;:42:::0;3802:12;;3783:31;::::3;:16;::::0;::::3;:31:::0;3841:15;::::3;::::0;3824:32:::3;:14;::::0;::::3;:32:::0;-1:-1:-1;;4023:26:37::3;3603:11:::0;4023:13:::3;:26::i;:::-;3981:68:::0;;-1:-1:-1;3981:68:37;-1:-1:-1;3981:68:37;-1:-1:-1;4059:106:37::3;4087:17;4068:10;:15;;;:36;;;;;;;;:::i;:::-;;:77;;4140:5;4128:8;:17;;4068:77;;;4120:5;4107:9;:18;;4068:77;8371:3:10;4059:8:37;:106::i;:::-;4176:84;4190:10;:18;;;4210:8;4220:5;:12;;;4234:5;:25;;;4176:13;:84::i;:::-;4270;4281:10;:19;;;4302:9;4313:5;:15;;;4330:5;:23;;;4270:10;:84::i;:::-;4443:62;4463:26;4470:10;:18;;;-1:-1:-1::0;;;;;1693:22:8;;;1617:105;4463:26:37::3;:41;;4503:1;4443:19;:62::i;4463:41::-;4492:8;4443:19;:62::i;:::-;2690:1822;;;;;3006:1:16::2;2610:19:25::0;2026:1;3098:7;:22;2919:208;2610:19;2368:2144:37;;;;;;:::o;1430:2174:32:-;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;1646:66:32::2;1682:6;:13;1697:7;:14;1646:35;:66::i;:::-;1723:27;1767:6;:13;1753:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;1753:28:32::2;;1723:58;;1791:32;1840:6;:13;1826:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;1826:28:32::2;;1791:63;;1962:20;2019:9:::0;2014:574:::2;2038:6;:13;2034:1;:17;2014:574;;;2072:12;2087:6;2094:1;2087:9;;;;;;;;:::i;:::-;;;;;;;2072:24;;2110:14;2127:7;2135:1;2127:10;;;;;;;;:::i;:::-;;;;;;;2110:27;;2152:105;2169:13;-1:-1:-1::0;;;;;2161:21:32::2;:5;-1:-1:-1::0;;;;;2161:21:32::2;;2208:1;-1:-1:-1::0;;;;;2184:27:32::2;:5;-1:-1:-1::0;;;;;2184:27:32::2;;:72;;4951:3:10;2152:8:32;:105::i;2184:72::-;5058:3:10;2152:8:32;:105::i;:::-;2328:30;::::0;;;;2352:4:::2;2328:30;::::0;::::2;20518:74:168::0;2287:5:32;;-1:-1:-1;2287:5:32;;-1:-1:-1;;;;;2328:15:32;::::2;::::0;::::2;::::0;20491:18:168;;2328:30:32::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2307:15;2323:1;2307:18;;;;;;;;:::i;:::-;;;;;;:51;;;::::0;::::2;2388:36;2417:6;2388:28;:36::i;:::-;2372:10;2383:1;2372:13;;;;;;;;:::i;:::-;;;;;;:52;;;::::0;::::2;2439:78;2470:6;2448:15;2464:1;2448:18;;;;;;;;:::i;:::-;;;;;;;:28;;9621:3:10;2439:8:32;:78::i;:::-;2531:46;-1:-1:-1::0;;;;;2531:18:32;::::2;2558:9:::0;2570:6;2531:18:::2;:46::i;:::-;2058:530;;2053:3;;;;:::i;:::-;;;2014:574;;;-1:-1:-1::0;2598:65:32::2;::::0;;;;-1:-1:-1;;;;;2598:26:32;::::2;::::0;::::2;::::0;:65:::2;::::0;2625:6;;2633:7;;2642:10;;2654:8;;2598:65:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2679:9;2674:924;2698:6;:13;2694:1;:17;2674:924;;;2732:12;2747:6;2754:1;2747:9;;;;;;;;:::i;:::-;;;;;;;2732:24;;2770:22;2795:15;2811:1;2795:18;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;3072:30:::2;::::0;;;;3096:4:::2;3072:30;::::0;::::2;20518:74:168::0;2795:18:32;;-1:-1:-1;3046:23:32::2;::::0;-1:-1:-1;;;;;3072:15:32;::::2;::::0;::::2;::::0;20491:18:168;;3072:30:32::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3046:56;;3116:77;3144:14;3125:15;:33;;8873:3:10;3116:8:32;:77::i;:::-;3295:25;3323:32;3341:14:::0;3323:15;:32:::2;:::i;:::-;3295:60;;3369:87;3399:10;3410:1;3399:13;;;;;;;;:::i;:::-;;;;;;;3378:17;:34;;9844:3:10;3369:8:32;:87::i;:::-;3471:39;3485:5;3492:17;3471:13;:39::i;:::-;3550:5;-1:-1:-1::0;;;;;3529:58:32::2;3539:9;-1:-1:-1::0;;;;;3529:58:32::2;;3557:7;3565:1;3557:10;;;;;;;;:::i;:::-;;;;;;;3569:17;3529:58;;;;;;31339:25:168::0;;;31395:2;31380:18;;31373:34;31327:2;31312:18;;31165:248;3529:58:32::2;;;;;;;;2718:880;;;;2713:3;;;;:::i;:::-;;;2674:924;;;;1636:1968;;;2610:19:25::0;2026:1;3098:7;:22;2919:208;2610:19;1430:2174:32;;;;:::o;1087:1197:35:-;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;1267:6:35::2;1928:27:34;1948:6;1928:19;:27::i;:::-;1285:72:35::3;1321:6;:13;1336;:20;1285:35;:72::i;:::-;1437:9;1432:233;1456:6;:13;1452:1;:17;1432:233;;;1490:12;1505:6;1512:1;1505:9;;;;;;;;:::i;:::-;;;;;;;1490:24;;1528:59;1561:1;-1:-1:-1::0;;;;;1537:27:35::3;:5;-1:-1:-1::0;;;;;1537:27:35::3;;;6162:3:10;1528:8:35;:59::i;:::-;1638:13;1652:1;1638:16;;;;;;;;:::i;:::-;;::::0;;::::3;::::0;;;;;;;1602:26:::3;::::0;;;:18:::3;:26:::0;;;;;;-1:-1:-1;;;;;1602:33:35;;::::3;::::0;;;;;;;;;:52;;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;;1471:3:::3;::::0;::::3;:::i;:::-;;;1432:233;;;;1675:33;1711:30;1734:6;1711:22;:30::i;:::-;1675:66:::0;-1:-1:-1;1773:28:35::3;1755:14;:46;;;;;;;;:::i;:::-;::::0;1751:464:::3;;1817:60;1826:6;:13;1843:1;1826:18;9381:3:10;1817:8:35;:60::i;:::-;1891:57;1919:6;1927;1934:1;1927:9;;;;;;;;:::i;:::-;;;;;;;1938:6;1945:1;1938:9;;;;;;;;:::i;:::-;;;;;;;1891:27;:57::i;:::-;1751:464;;;1987:36;1969:14;:54;;;;;;;;:::i;:::-;::::0;1965:250:::3;;2039:50;2074:6;2082;2039:34;:50::i;1965:250::-;2162:42;2189:6;2197;2162:26;:42::i;:::-;2247:6;2230:47;2255:6;2263:13;2230:47;;;;;;;:::i;:::-;;;;;;;;1275:1009;3006:1:16::2;2610:19:25::0;2026:1;3098:7;:22;2919:208;2610:19;1087:1197:35;;;:::o;2290:1095::-;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;2450:6:35::2;1928:27:34;1948:6;1928:19;:27::i;:::-;2472:33:35::3;2508:30;2531:6;2508:22;:30::i;:::-;2472:66:::0;-1:-1:-1;2570:28:35::3;2552:14;:46;;;;;;;;:::i;:::-;::::0;2548:470:::3;;2614:60;2623:6;:13;2640:1;2623:18;9381:3:10;2614:8:35;:60::i;:::-;2688:59;2718:6;2726;2733:1;2726:9;;;;;;;;:::i;:::-;;;;;;;2737:6;2744:1;2737:9;;;;;;;;:::i;:::-;;;;;;;2688:29;:59::i;:::-;2548:470;;;2786:36;2768:14;:54;;;;;;;;:::i;:::-;::::0;2764:254:::3;;2838:52;2875:6;2883;2838:36;:52::i;2764:254::-;2963:44;2992:6;3000;2963:28;:44::i;:::-;3221:9;3216:113;3240:6;:13;3236:1;:17;3216:113;;;3281:18;:26;3300:6;3281:26;;;;;;;;;;;:37;3308:6;3315:1;3308:9;;;;;;;;:::i;:::-;;::::0;;::::3;::::0;;;;;;;-1:-1:-1;;;;;3281:37:35::3;::::0;;;::::3;::::0;;;;;;-1:-1:-1;3281:37:35;3274:44;;;::::3;::::0;;3255:3:::3;::::0;::::3;:::i;:::-;;;3216:113;;;;3363:6;3344:34;3371:6;3344:34;;;;;;:::i;:::-;;;;;;;;2462:923;3006:1:16::2;2610:19:25::0;2026:1;3098:7;:22;2919:208;2495:430:9;2563:7;2884:22;2908:8;2867:50;;;;;;;;32741:19:168;;;32802:66;32790:79;32785:2;32776:12;;32769:101;32895:2;32886:12;;32586:318;2867:50:9;;;;;;;;;;;;;2857:61;;;;;;2850:68;;2495:430;;;:::o;2288:384:33:-;2568:97;2580:26;2608:6;2616;2624:9;2635:29;2656:7;2635:20;:29::i;:::-;2568:11;:97::i;4518:1825:37:-;4879:27;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;4848:12:37::0;;3392:22:40::2;4848:12:37::0;3392:16:40::2;:22::i;:::-;5074:59:37::3;5102:8;5083:15;:27;;8422:3:10;5074:8:37;:59::i;:::-;5144:65;5180:6;:13;5195:6;:13;5144:35;:65::i;:::-;5339:42;5354:5;5361:6;5369:5;5376:4;5339:14;:42::i;:::-;5325:56;;5547:18;5584:9:::0;5579:670:::3;5603:6;:13;5599:1;:17;5579:670;;;5637:12;5652:6;5659:1;5652:9;;;;;;;;:::i;:::-;;;;;;;5637:24;;5675:12;5690:11;5702:1;5690:14;;;;;;;;:::i;:::-;;;;;;;5675:29;;5718:47;5736:6;5743:1;5736:9;;;;;;;;:::i;:::-;;;;;;;5727:5;:18;;8371:3:10;5718:8:37;:47::i;:::-;5792:1;5784:5;:9;5780:459;;;5897:12:::0;;5911:25:::3;::::0;::::3;::::0;5841:5;;5865:72:::3;::::0;5879:5;;5841;;5865:13:::3;:72::i;:::-;-1:-1:-1::0;;;;;1693:22:8;;5956:98:37::3;;6010:25;:10:::0;6025:9;6010:14:::3;:25::i;:::-;5997:38;;5956:98;5795:273;5780:459;;;6086:1;6078:5;:9;6074:165;;;6107:14;6132:6;6133:5:::0;6132:6:::3;:::i;:::-;6107:32;;6157:67;6168:5;6175:6;6183:5;:15;;;6200:5;:23;;;6157:10;:67::i;:::-;6089:150;6074:165;5623:626;;5618:3;;;;:::i;:::-;;;5579:670;;;;6305:31;6325:10;6305:19;:31::i;:::-;4912:1431;3006:1:16::2;2610:19:25::0;2026:1;3098:7;:22;2919:208;2610:19;4518:1825:37;;;;;;;;:::o;3863:7:39:-;3856:14;;3791:86;:::o;3840:984:35:-;4008:12;4034:15;4063:23;4100:20;3970:6;1706:29:34;1728:6;1706:21;:29::i;:::-;4145:15:35::1;4170:33:::0;4206:30:::1;4229:6;4206:22;:30::i;:::-;4170:66:::0;-1:-1:-1;4269:28:35::1;4251:14;:46;;;;;;;;:::i;:::-;::::0;4247:391:::1;;4323:38;4347:6;4355:5;4323:23;:38::i;:::-;4313:48;;4247:391;;;4400:36;4382:14;:54;;;;;;;;:::i;:::-;::::0;4378:260:::1;;4462:45;4493:6;4501:5;4462:30;:45::i;4378:260::-;4590:37;4613:6;4621:5;4590:22;:37::i;:::-;4580:47;;4378:260;3796:12:41::0;3825:23;;4648:21:35::1;;4689:17;:7;4106:3:41::0;4095:14;4058:12;4087:30;;3967:157;4689:17:35::1;4679:27;;4734:25;:7;4359:3:41::0;4348:14;;4213:164;4734:25:35::1;4784:26;::::0;;;:18:::1;:26;::::0;;;;;;;-1:-1:-1;;;;;4784:33:35;;::::1;::::0;;;;;;;;;3840:984;;;;4716:43;4784:33;;;::::1;::::0;-1:-1:-1;;;;;3840:984:35:o;1720:562:33:-;2978:18:16;:16;:18::i;:::-;2169:106:33::1;2181:26;2209:6;2217;2233:9;2245:29;2266:7;2245:20;:29::i;1543:1096:28:-:0;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1852:781:28::2;1876:3;:10;1872:1;:14;1852:781;;;2011:3;2015:1;2011:6;;;;;;;;:::i;:::-;;;;;;;2006:11;;2032:14;2049:2;:9;;;2032:26;;2072:29;2094:6;2072:21;:29::i;:::-;2131:8;::::0;::::2;::::0;2153:72:::2;2162:33;2181:6:::0;2131:8;2162:18:::2;:33::i;:::-;9202:3:10;2153:8:28;:72::i;:::-;2248:26;::::0;;;:18:::2;:26;::::0;;;;;;;-1:-1:-1;;;;;2248:33:28;;::::2;::::0;;;;;;;;2239:90:::2;::::0;2248:33:::2;2285:10;2248:47;8101:3:10;2239:8:28;:90::i;:::-;2369:7:::0;;2407:9:::2;::::0;::::2;::::0;2344:22:::2;::::0;2472:60:::2;2369:7:::0;2510:6;2518:5;2407:9;2472:31:::2;:60::i;:::-;2430:102;;;;2591:5;-1:-1:-1::0;;;;;2552:70:28::2;2579:10;-1:-1:-1::0;;;;;2552:70:28::2;2571:6;2552:70;2598:9;2609:12;2552:70;;;;;;31339:25:168::0;;;31395:2;31380:18;;31373:34;31327:2;31312:18;;31165:248;2552:70:28::2;;;;;;;;1893:740;;;;;;1888:3;;;;:::i;:::-;;;1852:781;;;;1643:996;2610:19:25::0;2026:1;3098:7;:22;2919:208;1760:115:15;1822:7;1848:20;2455:7:22;2502:10;2514:12;2528:15;3798:9;2491:83;;;;;;34884:25:168;;;;34925:18;;34918:34;;;;34968:18;;;34961:34;35011:18;;;35004:34;2568:4:22;35054:19:168;;;35047:84;34856:19;;2491:83:22;;;;;;;;;;;;2481:94;;;;;;2474:101;;2394:188;;3301:246:34;3433:7;3442:18;3408:6;1706:29;1728:6;1706:21;:29::i;:::-;3484:23:::1;3500:6;5299::::0;5279:27;;4992:323;3484:23:::1;3509:30;3532:6;3509:22;:30::i;:::-;3476:64;;;;1745:1;3301:246:::0;;;;:::o;19613:5730:37:-;19800:15;20923:10;20945:4;20923:27;20919:4418;;21219:12;21245:4;-1:-1:-1;;;;;21237:18:37;21256:8;;21237:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21218:47;;;21481:7;21514:1;21509:2283;;;;23952:9;21509:2283;21985:4;21982:1;21979;21964:26;22038:1;22032:8;22042:66;22028:81;22270:66;22260:77;;22254:238;;22393:16;22390:1;22387;22372:38;22449:16;22446:1;22439:27;22254:238;;23099:2;23096:1;23089:13;23463:4;23445:16;23441:27;23520:4;23514;23508;23493:32;23766:2;23760:4;23756:13;23753:1;23746:24;20919:4418;24027:22;24052:42;24067:5;24074:6;24082:5;24089:4;24052:14;:42::i;:::-;24027:67;;24519:2;24510:6;24504:13;24500:22;24981:66;24974:4;24966:6;24962:17;24955:93;25090:4;25082:6;25078:17;25309:2;25303:4;25299:13;25292:5;25285:28;3391:443:35;3542:22;3578:25;3617:23;3504:6;1706:29:34;1728:6;1706:21;:29::i;:::-;3665:28:35::1;3727:22;3742:6;3727:14;:22::i;:::-;3703:46:::0;;-1:-1:-1;3703:46:35;-1:-1:-1;3789:38:35::1;3703:46:::0;3789:36:::1;:38::i;:::-;3391:443:::0;;3759:68;;-1:-1:-1;3391:443:35;-1:-1:-1;;;;3391:443:35:o;4161:301:40:-;2569:20:25;:18;:20::i;:::-;2978:18:16::1;:16;:18::i;:::-;4328:6:40::2;3392:22;3409:4;3392:16;:22::i;:::-;-1:-1:-1::0;;;;;4346:25:40;;::::3;;::::0;;;:17:::3;:25;::::0;;;;;;;:34;;::::3;::::0;;;;;;;;;;:45;;;::::3;::::0;::::3;;::::0;;::::3;::::0;;;4406:49;;28173:41:168;;;4346:25:40;;:34;4406:49:::3;::::0;28146:18:168;4406:49:40::3;;;;;;;3006:1:16::2;2610:19:25::0;2026:1;3098:7;:22;2919:208;4468:155:40;-1:-1:-1;;;;;5780:23:40;;;4559:4;5780:23;;;:17;:23;;;;;;;;:32;;;;;;;;;;;;;;4582:34;4575:41;;4468:155;;;;;:::o;1082:3172:10:-;2223:4;2218:2;2207:9;2203:18;2199:29;2266:2;2255:9;2251:18;2238:31;;2316:4;2311:2;2300:9;2296:18;2292:29;2359:2;2348:9;2344:18;2331:31;;2411:4;2406:2;2395:9;2391:18;2387:29;3069:8;3065:2;3061:17;3051:6;3048:1;3044:14;3037:5;3033:26;3029:50;3011:16;3007:73;3002:3;2998:83;2978:103;;;;3601:66;3596:3;3589:79;3807:66;3801:4;3794:80;3949:1;3943:4;3936:15;4022:12;4016:4;4009:26;4242:3;4239:1;4232:14;2642:271:25;2765:48;2069:1;2774:7;;:19;;6331:3:10;2765:8:25;:48::i;:::-;2069:1;2888:7;:18;2642:271::o;2308:181:9:-;2363:16;2382:20;2394:7;;;;2382:11;:20::i;:::-;2363:39;;2412:70;2421:33;2433:8;2443:10;2421:11;:33::i;:::-;6387:3:10;2412:8:9;:70::i;3894:150:40:-;3968:32;;-1:-1:-1;;;;;3968:32:40;;;;;;;;4010:11;:27;;-1:-1:-1;;;;;4010:27:40;;;;;;;;;;;;;;;3894:150::o;4228:98:16:-;4280:39;4289:14;:12;:14::i;:::-;6431:3:10;4280:8:16;:39::i;:::-;4228:98::o;4419:390:34:-;4554:7;4624:14;;;4700:6;4679:14;4671:23;;;;;;;;:::i;:::-;4663:44;;4649:58;4767:6;4731:43;;;;;4717:57;;-1:-1:-1;4419:390:34;;;;;;:::o;8929:1162:38:-;9074:17;9105:6;9125:7;9146;9167:15;9196:4;9379:14;9396:2;:9;;;9379:26;;9430:10;-1:-1:-1;;;;;9420:20:38;:6;-1:-1:-1;;;;;9420:20:38;;9416:575;;9758:22;9753:130;;9800:21;:19;:21::i;:::-;9864:4;9839:29;;9753:130;-1:-1:-1;;;;;5780:23:40;;5757:4;5780:23;;;:17;:23;;;;;;;;9934:10:38;5780:32:40;;;;;;;;9897:83:38;;5780:32:40;;8164:3:10;9897:8:38;:83::i;:::-;10009:7;;10018:8;;;;10028:9;;;;10047:12;;;;;10009:7;;10018:8;;10028:9;10039:6;;-1:-1:-1;10047:12:38;;-1:-1:-1;10061:22:38;;-1:-1:-1;8929:1162:38;-1:-1:-1;;;8929:1162:38:o;5369:404::-;5639:74;5664:6;5672:25;5691:5;5672:18;:25::i;:::-;5699:6;5707:5;5639:24;:74::i;:::-;;5723:43;5734:5;5741:6;5749:9;5760:5;5723:10;:43::i;5077:286::-;5233:70;5258:9;5269:25;5288:5;5269:18;:25::i;:::-;5296:6;5233:24;:70::i;:::-;5313:43;5327:5;5334:6;5342;5350:5;5313:13;:43::i;375:166:19:-;433:7;;464:5;468:1;464;:5;:::i;:::-;452:17;;479:37;493:1;488;:6;;4330:1:10;479:8:19;:37::i;5779:379:38:-;6037:54;6062:6;6070:5;6077:6;6085:5;6037:24;:54::i;:::-;;6101:50;6126:9;6137:5;6144:6;6101:24;:50::i;6164:329::-;6325:10;;6321:166;;6351:49;-1:-1:-1;;;;;6351:22:38;;6374:6;6382:9;6393:6;6351:22;:49::i;:::-;6419:57;;;-1:-1:-1;;;;;33822:55:168;;;33804:74;;33909:2;33894:18;;33887:34;;;6419:57:38;;;;;;;;;;33777:18:168;6419:57:38;;;;;;;;6164:329;;;;:::o;5401:270:29:-;5469:58;5491:10;5478:9;:23;;8927:3:10;5469:8:29;:58::i;:::-;5538:14;5555:22;5567:10;5555:9;:22;:::i;:::-;5538:39;-1:-1:-1;5591:10:29;;5587:78;;5617:37;5625:10;5647:6;5617:29;:37::i;3801:358:16:-;3857:6;3853:232;;;3879:81;4984:19;3888:15;:42;6489:3:10;3879:8:16;:81::i;:::-;3853:232;;;3991:83;5099:20;4000:15;:43;7919:3:10;3991:8:16;:83::i;:::-;4095:7;:16;;;;;;;;;;;;;4126:26;;28173:41:168;;;4126:26:16;;28161:2:168;28146:18;4126:26:16;;;;;;;3801:358;:::o;4552:237::-;4599:4;5099:20;4727:15;:43;:55;;;-1:-1:-1;;4775:7:16;;;;4774:8;;4552:237::o;4986:582:40:-;5049:10;-1:-1:-1;;;;;5049:18:40;;;5045:517;;5187:21;:19;:21::i;:::-;-1:-1:-1;;;;;5780:23:40;;5757:4;5780:23;;;:17;:23;;;;;;;;5448:10;5780:32;;;;;;;;;;5417:135;;5479:58;5498:4;8164:3:10;5479:18:40;:58::i;1894:139:8:-;1959:6;-1:-1:-1;;;;;1693:22:8;;;1984:42;;2020:5;1984:42;;;1504:5;2000:7;1440:76;11664:1131:37;11778:24;11816:16;11846:17;11963:12;11978:31;11994:7;:14;;;5299:6:34;5279:27;;4992:323;11978:31:37;11963:46;;12019:33;12055:38;12078:7;:14;;;12055:22;:38::i;:::-;12019:74;-1:-1:-1;12126:28:37;12108:14;:46;;;;;;;;:::i;:::-;;12104:500;;12189:68;12221:7;12251:4;12189:31;:68::i;:::-;12170:87;;12104:500;;;12296:36;12278:14;:54;;;;;;;;:::i;:::-;;12274:330;;12367:75;12406:7;12436:4;12367:38;:75::i;12274:330::-;12534:59;12565:7;12587:4;12534:30;:59::i;:::-;12515:78;;12274:330;12638:59;12650:7;:12;;;12664:7;:14;;;12680:16;12638:11;:59::i;:::-;12614:83;;;;;;;;12750:7;:16;;;-1:-1:-1;;;;;12712:76:37;12733:7;:15;;;-1:-1:-1;;;;;12712:76:37;12717:7;:14;;;12712:76;12768:8;12778:9;12712:76;;;;;;31339:25:168;;;31395:2;31380:18;;31373:34;31327:2;31312:18;;31165:248;12712:76:37;;;;;;;;11878:917;;11664:1131;;;;;:::o;1875:1514:29:-;2027:48;;2058:7;2027:48;-1:-1:-1;;;;;1693:22:8;;2085:1298:29;;2118:67;2128:19;2127:20;8810:3:10;2118:8:29;:67::i;:::-;2572:66;2606:6;2581:21;:31;;8927:3:10;2572:8:29;:66::i;:::-;1504:5:8;-1:-1:-1;;;;;2652:15:29;;2676:6;2652:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2085:1298;;;2742:5;2763:494;;;;2926:23;2952:53;2977:6;2985:5;2992:6;3000:4;2952:24;:53::i;:::-;2926:79;-1:-1:-1;3217:25:29;2926:79;3217:25;;:::i;:::-;;;2788:469;2763:494;3275:10;;3271:102;;3305:53;-1:-1:-1;;;;;3305:22:29;;3328:6;3344:4;3351:6;3305:22;:53::i;:::-;2703:680;1875:1514;;;;:::o;3759:1086::-;3917:48;;3948:7;3917:48;-1:-1:-1;;;;;1693:22:8;;3975:864:29;;4159:65;4169:17;4168:18;8810:3:10;4159:8:29;:65::i;:::-;4440:24;;;;;;;;1032:25:168;;;-1:-1:-1;;;;;1504:5:8;4440:16:29;;;;1005:18:168;;4440:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4544:27:29;;-1:-1:-1;;;;;;;;4544:19:29;;4564:6;4544:19;:27::i;:::-;3975:864;;;4627:5;4647:182;;;;4688:50;4713:9;4724:5;4731:6;4688:24;:50::i;:::-;4647:182;;;4777:37;-1:-1:-1;;;;;4777:18:29;;4796:9;4807:6;4777:18;:37::i;872:131:14:-;950:46;964:1;959;:6;5010:3:10;950:8:14;:46::i;1904:405:31:-;1981:7;;1547:22;-1:-1:-1;;;;;2195:52:31;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2174:75;;2266:36;2283:6;2291:10;2266:16;:36::i;636:214:27:-;784:58;;-1:-1:-1;;;;;33822:55:168;;784:58:27;;;33804:74:168;33894:18;;;33887:34;;;748:95:27;;776:5;;807:23;;33777:18:168;;784:58:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:19;:95::i;2315:182:31:-;2391:10;;2387:104;;2417:63;-1:-1:-1;;;;;2417:18:31;;1547:22;2473:6;2417:18;:63::i;2333:185:34:-;2401:29;2423:6;2401:21;:29::i;:::-;2440:71;2463:23;2479:6;5299;5279:27;;4992:323;2463:23;-1:-1:-1;;;;;2449:37:34;:10;-1:-1:-1;;;;;2449:37:34;;8039:3:10;2440:8:34;:71::i;5502:1061::-;5573:33;5773:14;5761:6;5750:18;;;5742:46;6270:43;6287:1;6279:9;;7986:3:10;6270:8:34;:43::i;3781:1034:44:-;4067:59;4086:6;-1:-1:-1;;;;;4076:16:44;:6;-1:-1:-1;;;;;4076:16:44;;;9264:3:10;4067:8:44;:59::i;:::-;4137:49;4155:6;-1:-1:-1;;;;;4146:15:44;:6;-1:-1:-1;;;;;4146:15:44;;4951:3:10;4137:8:44;:49::i;:::-;4310:37;4350:27;;;:19;:27;;;;;4409:17;;4387:153;;-1:-1:-1;;;;;4409:17:44;:39;:82;;;;-1:-1:-1;4452:17:44;;;;-1:-1:-1;;;;;4452:17:44;:39;4409:82;9320:3:10;4387:8:44;:153::i;:::-;4613:26;;-1:-1:-1;;;;;4613:26:44;;;;;;;;;;;4649:17;;;:26;;;;;;;;;;;-1:-1:-1;3781:1034:44:o;2256:519:43:-;2359:43;2405:35;;;:27;:35;;;;;;2451:318;2475:6;:13;2471:1;:17;2451:318;;;2509:10;2522:34;2545:6;2552:1;2545:9;;;;;;;;:::i;:::-;;;;;;;2522:10;:14;;:34;;;;:::i;:::-;2509:47;;2570:48;2579:5;9264:3:10;2570:8:43;:48::i;:::-;-1:-1:-1;2490:3:43;;;:::i;:::-;;;2451:318;;2340:589:42;2435:53;2491:29;;;:21;:29;;;;;;2531:392;2555:6;:13;2551:1;:17;2531:392;;;2807:10;2820:30;2837:6;2844:1;2837:9;;;;;;;;:::i;:::-;;;;;;;;;;;2820:12;;2848:1;2820:16;:30::i;:::-;2807:43;;2864:48;2873:5;9264:3:10;2864:8:42;:48::i;:::-;-1:-1:-1;2570:3:42;;;:::i;:::-;;;2531:392;;5152:666:44;5300:16;5330;5360:41;5414:54;5445:6;5453;5461;5414:30;:54::i;:::-;5286:182;;;;;;5479:78;5488:17;:8;5822:12:41;5852:23;5851:30;;5623:265;5488:17:44;:38;;;;-1:-1:-1;5822:12:41;5852:23;;5851:30;5509:17:44;9440:3:10;5479:8:44;:78::i;:::-;5575:27;;;;:19;:27;;;;;5568:34;;;;;;;;;;;;;;;;;;;5781:30;;;;-1:-1:-1;;;;5152:666:44:o;3168:758:43:-;3273:43;3319:35;;;:27;:35;;;;;;3365:555;3389:6;:13;3385:1;:17;3365:555;;;3423:12;3438:6;3445:1;3438:9;;;;;;;;:::i;:::-;;;;;;;;;;;;3470:37;;;;:29;:37;;;;;;-1:-1:-1;;;;;3470:44:43;;;;;;;;;;;;3438:9;;-1:-1:-1;3461:93:43;;5822:12:41;5852:23;5851:30;3470:53:43;5623:265:41;3461:93:43;3742:37;;;;:29;:37;;;;;;;;-1:-1:-1;;;;;3742:44:43;;;;;;;;;3735:51;;;3816:33;:10;3780:5;3816:17;:33::i;:::-;3801:48;;3863:46;3872:7;9202:3:10;3863:8:43;:46::i;:::-;3409:511;;3404:3;;;;:::i;:::-;;;3365:555;;3302:643:42;3399:53;3455:29;;;:21;:29;;;;;;3495:444;3519:6;:13;3515:1;:17;3495:444;;;3553:12;3568:6;3575:1;3568:9;;;;;;;;:::i;:::-;;;;;;;3553:24;;3591:22;3616:43;3639:12;3653:5;3616:22;:43::i;:::-;3591:68;-1:-1:-1;3673:63:42;5822:12:41;5852:23;;5851:30;3682:23:42;5623:265:41;3673:63:42;3902:26;:12;3922:5;3902:19;:26::i;:::-;;3539:400;;3534:3;;;;:::i;:::-;;;3495:444;;3593:267:33;3701:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701:31:33;-1:-1:-1;3837:7:33;3593:267::o;3954:2358::-;2569:20:25;:18;:20::i;:::-;4181:6:33::1;1706:29:34;1728:6;1706:21;:29::i;:::-;4205:6:33::2;3392:22:40;3409:4;3392:16;:22::i;:::-;4512:79:33::3;4548:6;:13;;;:20;4570:6;:13;;;:20;4512:35;:79::i;:::-;4756:22;4781:33;4800:6;:13;;;4781:18;:33::i;:::-;4756:58;;4824:25;4852:45;4882:6;4890;4852:29;:45::i;:::-;4824:73;;5094:30;5138:31:::0;5183:43:::3;5239:73;5262:4;5268:6;5276;5284:9;5295:6;5303:8;5239:22;:73::i;:::-;5080:232;;;;;;5385:33;5421:30;5444:6;5421:22;:30::i;:::-;5385:66:::0;-1:-1:-1;5483:28:33::3;5465:14;:46;;;;;;;;:::i;:::-;::::0;5461:443:::3;;5527:94;5556:6;5564;5571:1;5564:9;;;;;;;;:::i;:::-;;;;;;;5575:13;5589:1;5575:16;;;;;;;;:::i;:::-;;;;;;;5593:6;5600:1;5593:9;;;;;;;;:::i;:::-;;;;;;;5604:13;5618:1;5604:16;;;;;;;;:::i;:::-;;;;;;;5527:28;:94::i;:::-;5461:443;;;5660:36;5642:14;:54;;;;;;;;:::i;:::-;::::0;5638:266:::3;;5712:62;5744:6;5752;5760:13;5712:31;:62::i;5638:266::-;5847:46;5871:6;5879:13;5847:23;:46::i;:::-;5914:13;::::0;5930:4:::3;:34;;;;;;;;:::i;:::-;;5914:50;;6076:6;-1:-1:-1::0;;;;;6024:281:33::3;6056:6;6024:281;6096:6;6210:45;6230:14;6246:8;6210:19;:45::i;:::-;6269:26;6024:281;;;;;;;;:::i;:::-;;;;;;;;4213:2099;;;;;;;1745:1:34::2;2599::25::1;2610:19:::0;2026:1;3098:7;:22;2919:208;8211:3150:37;8388:27;8454:6;:13;8441:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8441:27:37;;8427:41;;8646:34;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8646:34:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8930:2425:37;8954:5;:12;8950:1;:16;8930:2425;;;9003:5;9009:1;9003:8;;;;;;;;:::i;:::-;;;;;;;8987:24;;9026:17;9075:6;:13;9046;:26;;;:42;:105;;;;;9138:6;:13;9108;:27;;;:43;9046:105;9026:125;;9165:44;9174:12;4846:3:10;9165:8:37;:44::i;:::-;9224:14;9241:54;9260:6;9267:13;:26;;;9260:34;;;;;;;;:::i;:::-;;;;;;;9241:18;:54::i;:::-;9224:71;;9309:15;9327:55;9346:6;9353:13;:27;;;9346:35;;;;;;;;:::i;9327:55::-;9309:73;;9396:60;9416:8;-1:-1:-1;;;;;9405:19:37;:7;-1:-1:-1;;;;;9405:19:37;;;8482:3:10;9396:8:37;:60::i;:::-;9524:13;:20;;;9548:1;9524:25;9520:720;;9918:52;9931:1;9927;:5;8548:3:10;9918:8:37;:52::i;:::-;9988:23;10041:36;10053:4;10059:7;10068:8;10041:11;:36::i;:::-;-1:-1:-1;;;;;10014:63:37;:23;-1:-1:-1;;;;;10014:63:37;;9988:89;;10095:65;10104:18;8614:3:10;10095:8:37;:65::i;:::-;-1:-1:-1;10178:20:37;;;:47;;;9520:720;10371:20;;10350:18;;;:41;:11;10424:4;10405:23;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;10442:29:37;;;:19;;;:29;10485:31;;;:20;;;;:31;;;;10551:20;;;;;10530:18;;;:41;10608:22;;;;10585:20;;;:45;10663:12;;10644:31;;:16;;;:31;10706:15;;;10689:32;:14;;;:32;-1:-1:-1;;10910:26:37;10442:11;10910:13;:26::i;:::-;10860:76;;-1:-1:-1;10860:76:37;-1:-1:-1;10860:76:37;-1:-1:-1;10977:41:37;10994:4;11000:7;11009:8;10977:16;:41::i;:::-;10951:67;;11127:64;11171:19;:8;:17;:19::i;:::-;11127:11;11139:13;:26;;;11127:39;;;;;;;;:::i;:::-;;;;;;;:43;;:64;;;;:::i;:::-;11085:11;11097:13;:26;;;11085:39;;;;;;;;:::i;:::-;;;;;;:106;;;;;11248:96;11310:20;:9;:18;:20::i;:::-;11248:11;11260:13;:27;;;11248:40;;;;;;;;:::i;:::-;;;;;;;:44;;:96;;;;:::i;:::-;11205:11;11217:13;:27;;;11205:40;;;;;;;;:::i;:::-;;;;;;:139;;;;;8973:2382;;;;;8968:3;;;;:::i;:::-;;;8930:2425;;;;8417:2944;;;;8211:3150;;;;;;:::o;2065:137:34:-;2145:25;;;;:17;:25;;;;;;2136:59;;2145:25;;7986:3:10;2136:8:34;:59::i;12332:636:44:-;12418:7;12656:13;12671:16;12689:13;12704:16;12724:32;12749:6;12724:24;:32::i;:::-;12653:103;;;;;;;;;12780:6;-1:-1:-1;;;;;12771:15:44;:5;-1:-1:-1;;;;;12771:15:44;;12767:195;;12809:8;12802:15;;;;;;;;12767:195;12847:6;-1:-1:-1;;;;;12838:15:44;:5;-1:-1:-1;;;;;12838:15:44;;12834:128;;12876:8;-1:-1:-1;12869:15:44;;-1:-1:-1;;;12869:15:44;12834:128;12915:36;9202:3:10;12915:7:44;:36::i;:::-;12427:541;;;;12332:636;;;;:::o;8322:898:43:-;8415:7;8452:37;;;:29;:37;;;;;;;;-1:-1:-1;;;;;8452:44:43;;;;;;;;;;8415:7;5822:12:41;5852:23;;5851:30;6131:16;8806:83:43;;;-1:-1:-1;8829:35:43;;;;:27;:35;;;;;;;;-1:-1:-1;;;;;4104:19:24;;;;:12;;:19;;;;;;:24;;8829:60:43;8783:106;;8905:15;8900:289;;9099:29;9121:6;9099:21;:29::i;:::-;9142:36;9202:3:10;9142:7:43;:36::i;:::-;-1:-1:-1;9206:7:43;8322:898;-1:-1:-1;;;8322:898:43:o;8369:256:42:-;8454:7;8529:29;;;:21;:29;;;;;8575:43;8529:29;8612:5;8575:22;:43::i;7125:581:28:-;7205:4;7221:33;7257:30;7280:6;7257:22;:30::i;:::-;7221:66;-1:-1:-1;7319:28:28;7301:14;:46;;;;;;;;:::i;:::-;;7297:403;;7370:45;7401:6;7409:5;7370:30;:45::i;:::-;7363:52;;;;;7297:403;7454:36;7436:14;:54;;;;;;;;:::i;:::-;;7432:268;;7513:52;7551:6;7559:5;7513:37;:52::i;7432:268::-;7645:44;7675:6;7683:5;7645:29;:44::i;3017:679::-;3183:6;3191;3209:33;3245:30;3268:6;3245:22;:30::i;:::-;3209:66;-1:-1:-1;3298:26:28;3290:4;:34;;;;;;;;:::i;:::-;;3286:404;;3347:59;3368:6;3376:14;3392:5;3399:6;3347:20;:59::i;:::-;3340:66;;;;;;;3286:404;3435:25;3427:4;:33;;;;;;;;:::i;:::-;;3423:267;;3483:58;3503:6;3511:14;3527:5;3534:6;3483:19;:58::i;3423:267::-;3619:60;3641:6;3649:14;3665:5;3672:6;3619:21;:60::i;3017:679::-;;;;;;;;:::o;4934:564:35:-;4997:22;5021:25;5058:33;5094:30;5117:6;5094:22;:30::i;:::-;5058:66;-1:-1:-1;5156:28:35;5138:14;:46;;;;;;;;:::i;:::-;;5134:358;;5207:30;5230:6;5207:22;:30::i;5134:358::-;5276:36;5258:14;:54;;;;;;;;:::i;:::-;;5254:238;;5335:37;5365:6;5335:29;:37::i;5254:238::-;5452:29;5474:6;5452:21;:29::i;4927:539:41:-;5048:24;5086;5178:8;:15;5164:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5164:30:41;;5154:40;;5223:1;5204:20;;5240:9;5235:225;5259:7;:14;5255:1;:18;5235:225;;;5294:15;5312:8;5321:1;5312:11;;;;;;;;:::i;:::-;;;;;;;5294:29;;5350:14;5356:7;5350:5;:14::i;:::-;5337:7;5345:1;5337:10;;;;;;;;:::i;:::-;;;;;;:27;;;;;5397:52;5406:16;5424:24;5440:7;4359:3;4348:14;;4213:164;5424:24;5397:8;:52::i;:::-;5378:71;;5280:180;5275:3;;;;;:::i;:::-;;;;5235:225;;5825:226:40;5991:11;;:53;;;;;;;;35344:25:168;;;-1:-1:-1;;;;;35466:15:168;;;35446:18;;;35439:43;6038:4:40;35498:18:168;;;35491:43;5910:4:40;;5991:11;;;;;:22;;35317:18:168;;5991:53:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7201:684:38:-;-1:-1:-1;;;;;8750:30:38;;;7366:16;8750:30;;;:21;:30;;;;;;;;:37;;;;;;;;;;;;7464:90;7473:12;:42;;;;7508:6;7490:14;:24;;7473:42;8744:3:10;7464:8:38;:90::i;:::-;7576:32;7585:14;7601:6;7576:8;:32::i;:::-;7565:43;-1:-1:-1;7751:18:38;7772:25;7565:43;7772:14;:25;:::i;:::-;7751:46;;7807:71;7827:7;7836:5;7843:10;7857:19;:8;:17;:19::i;:::-;7855:22;;;:::i;:::-;7807:19;:71::i;:::-;7384:501;;7201:684;;;;;;:::o;6591:339::-;-1:-1:-1;;;;;8750:30:38;;;6730:22;8750:30;;;:21;:30;;;;;;;;:37;;;;;;;;;;;;;6821:26;8750:37;6840:6;6821:18;:26::i;:::-;6800:47;;6857:66;6877:7;6886:5;6893:10;6905:17;:6;:15;:17::i;856:250:27:-;1030:68;;-1:-1:-1;;;;;36076:15:168;;;1030:68:27;;;36058:34:168;36128:15;;36108:18;;;36101:43;36160:18;;;36153:34;;;994:105:27;;1022:5;;1053:27;;35970:18:168;;1030:68:27;35795:398:168;2156:369:21;2237:78;2271:6;2246:21;:31;;7542:3:10;2237:8:21;:78::i;:::-;2404:12;2422:9;-1:-1:-1;;;;;2422:14:21;2445:6;2422:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2403:54;;;2467:51;2476:7;7605:3:10;2467:8:21;:51::i;2123:190:15:-;-1:-1:-1;;;;;2223:16:15;;2203:17;2223:16;;;:10;:16;;;;;:18;;;2203:17;2223:18;;;:::i;:::-;;;;;2203:38;;2251:55;2260:34;2278:4;2284:9;2260:17;:34::i;:::-;2296:9;2251:8;:55::i;12801:1849:37:-;12947:24;13202:21;13237;13272:41;13326:81;13357:7;:14;;;13373:7;:15;;;13390:7;:16;;;13326:30;:81::i;:::-;13188:219;;;;;;13518:22;13550:23;13680:7;:16;;;-1:-1:-1;;;;;13662:34:37;:7;:15;;;-1:-1:-1;;;;;13662:34:37;;13658:312;;;-1:-1:-1;13762:13:37;;-1:-1:-1;13807:13:37;13658:312;;;-1:-1:-1;13946:13:37;;-1:-1:-1;13902:13:37;13658:312;14145:140;14193:7;14214:4;14232:14;14260:15;14145:34;:140::i;:::-;14429:16;;;;14411:15;;;;14091:194;;-1:-1:-1;14091:194:37;;-1:-1:-1;14091:194:37;;-1:-1:-1;;;;;;14411:34:37;;;;;;:211;;14559:63;14590:15;14607:14;14559:30;:63::i;:::-;14411:211;;;14460:63;14491:14;14507:15;14460:30;:63::i;:::-;14385:237;;;-1:-1:-1;12801:1849:37;;;-1:-1:-1;;;;;12801:1849:37:o;14656:887::-;14815:24;14851:22;14876:63;14907:7;:14;;;14923:7;:15;;;14876:30;:63::i;:::-;14851:88;;14949:23;14975:64;15006:7;:14;;;15022:7;:16;;;14975:30;:64::i;:::-;14949:90;;15215:140;15263:7;15284:4;15302:14;15330:15;15215:34;:140::i;:::-;15396:14;;;;;15366:45;;;;:29;:45;;;;;;;;15412:15;;;;-1:-1:-1;;;;;15366:62:37;;;;;;;;;;;:79;;;;15485:14;;15455:45;;;;;;;;15501:16;;;;15455:63;;;;;;;;;;;;;:81;;;;-1:-1:-1;15161:194:37;;14656:887;-1:-1:-1;;;14656:887:37:o;16760:2740::-;17199:14;;;;16897:24;17177:37;;;:21;:37;;;;;;;;17273:15;;;;-1:-1:-1;;;;;8289:17:23;;;:12;;;:17;;;;;;16897:24:37;;;;17299:16;17318:48;17349:7;:16;;;17318:12;:30;;:48;;;;:::i;:::-;17299:67;-1:-1:-1;17381:12:37;;;:29;;-1:-1:-1;17397:13:37;;17381:29;17377:311;;;17590:37;17612:7;:14;;;17590:21;:37::i;:::-;17641:36;9202:3:10;17641:7:37;:36::i;:::-;17847:12;17858:1;17847:12;;:::i;:::-;;-1:-1:-1;17869:13:37;17881:1;17869:13;;:::i;:::-;;;17893:19;17915:21;:12;6121:11:23;;6024:115;17915:21:37;17893:43;;17946:32;17995:11;17981:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17981:26:37;-1:-1:-1;18044:1:37;18018:23;;;:27;;;17946:61;;-1:-1:-1;18055:663:37;18079:11;18075:1;:15;18055:663;;;18333:15;7519:19:23;;;:12;;;;:19;;;;;;:26;;18420:15:37;7519:26:23;18420:13:37;:15::i;:::-;18399;18415:1;18399:18;;;;;;;;:::i;:::-;;;;;;:36;;;;;18475:60;18484:7;:23;;;18509:25;:7;4359:3:41;4348:14;;4213:164;18475:60:37;18449:23;;;:86;18554:12;;;18550:158;;18603:7;18586:24;;18550:158;;;18640:8;18635:1;:13;18631:77;;18686:7;18668:25;;18631:77;-1:-1:-1;18092:3:37;;;;:::i;:::-;;;;18055:663;;;-1:-1:-1;18867:56:37;;;;;-1:-1:-1;;;;;18867:11:37;;;;;:56;;18879:7;;18888:15;;18905:7;;18914:8;;18867:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18848:75;;18934:16;18952:17;18973:59;18985:7;:12;;;18999:7;:14;;;19015:16;18973:11;:59::i;:::-;18933:99;;-1:-1:-1;18933:99:37;-1:-1:-1;19059:37:37;:14;18933:99;19059:27;:37::i;:::-;19042:54;-1:-1:-1;19124:39:37;:15;19153:9;19124:28;:39::i;:::-;3896:19:23;;;;:12;;;;:19;;;;;;:26;;:34;;;;:19;;;-1:-1:-1;;;3896:19:23;;;;:26;;;:34;-1:-1:-1;16760:2740:37;;;-1:-1:-1;;;16760:2740:37:o;7483:419::-;7618:16;;;7669:4;:25;;;;;;;;:::i;:::-;;7665:231;;-1:-1:-1;7735:11:37;;-1:-1:-1;7748:16:37;7665:231;;;-1:-1:-1;7855:16:37;;-1:-1:-1;7873:11:37;7665:231;7483:419;;;;;;:::o;1870:617:17:-;1930:7;;1967:5;1971:1;1967;:5;:::i;:::-;1949:23;-1:-1:-1;1982:57:17;1991:6;;;:26;;-1:-1:-1;2016:1:17;2001:11;2011:1;2001:7;:11;:::i;:::-;:16;1991:26;4475:1:10;1982:8:17;:57::i;:::-;2054:7;2065:1;2054:12;2050:431;;2089:1;2082:8;;;;;2050:431;901:4;2447:11;2457:1;2447:7;:11;:::i;:::-;2446:19;;;;:::i;:::-;2445:25;;2469:1;2445:25;:::i;1446:799:27:-;1689:12;1703:23;1730:5;-1:-1:-1;;;;;1730:10:27;1741:4;1730:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1688:58:27;;-1:-1:-1;1688:58:27;-1:-1:-1;1688:58:27;1869:132;;1926:16;1923:1;1920;1905:38;1970:16;1967:1;1960:27;1869:132;2141:97;2150:10;:17;2171:1;2150:22;:56;;;;2187:10;2176:30;;;;;;;;;;;;:::i;:::-;7476:3:10;2141:8:27;:97::i;1811:410:24:-;-1:-1:-1;;;;;4104:19:24;;1881:4;4104:19;;;:12;;;:19;;;;;;1897:318;;-1:-1:-1;1938:23:24;;;;;;;;-1:-1:-1;1938:23:24;;;;;;;;;;;;;;-1:-1:-1;;;;;1938:23:24;;;;;;;;2118:18;;2096:19;;;:12;;;:19;;;;;;:40;;;;2150:11;;1897:318;-1:-1:-1;2199:5:24;2192:12;;2512:859:23;-1:-1:-1;;;;;2765:17:23;;2632:4;2765:17;;;:12;;;:17;;;;;;2842:13;;;2838:527;;2896:11;;2952:53;;;;;;;;-1:-1:-1;;;;;2952:53:23;;;;;;;;;;;;-1:-1:-1;2921:28:23;;;:12;;;;:28;;;;;;;:84;;;;;;;;;;;;;;;;;;;;3033:18;;2896:11;;3033:18;:::i;:::-;3019:32;;3213:18;:14;3230:1;3213:18;:::i;:::-;-1:-1:-1;;;;;3193:17:23;;;;;;:12;;;:17;;;;;:38;-1:-1:-1;3252:4:23;;-1:-1:-1;3245:11:23;;-1:-1:-1;3245:11:23;2838:527;3323:5;3287:3;:12;;:26;3311:1;3300:8;:12;;;;:::i;:::-;3287:26;;;;;;;;;;;:33;;:41;;;;3349:5;3342:12;;;;;13585:1758:44;13761:16;13791;13821:41;13888:13;13903;13920:30;13935:6;13943;13920:14;:30::i;:::-;13887:63;;;;13960:16;13979:36;14000:6;14008;16101:32;;43321:66:168;43416:2;43412:15;;;43408:24;;16101:32:44;;;43396:37:168;43467:15;;;43463:24;43449:12;;;43442:46;16065:7:44;;43504:12:168;;16101:32:44;;;;;;;;;;;;16091:43;;;;;;16084:50;;15983:158;;;;;13979:36;14041:27;;;;:19;:27;;;;;;;;:46;;;:36;;:46;;;;;14282:23;;14339:26;;;;14041:46;;-1:-1:-1;14041:46:44;;-1:-1:-1;14339:26:44;5822:12:41;5852:23;;5851:30;6131:16;14685:63:44;;;-1:-1:-1;5822:12:41;5852:23;;5851:30;6131:16;14723:25:44;14685:177;;;;14765:46;14796:6;14804;14765:30;:46::i;:::-;:96;;;;;14815:46;14846:6;14854;14815:30;:46::i;:::-;14661:201;;14878:16;14873:291;;15074:29;15096:6;15074:21;:29::i;:::-;15117:36;9202:3:10;15117:7:44;:36::i;:::-;15185:65;15224:10;15236:13;15185:38;:65::i;:::-;15174:76;;15271:65;15310:10;15322:13;15271:38;:65::i;:::-;15260:76;;13877:1466;;;;;;13585:1758;;;;;;;:::o;2389:1531:24:-;-1:-1:-1;;;;;2599:19:24;;2462:4;2599:19;;;:12;;;:19;;;;;;2633:15;;2629:1285;;3002:21;3026:14;3039:1;3026:10;:14;:::i;:::-;3074:18;;3002:38;;-1:-1:-1;3054:17:24;;3074:22;;3095:1;;3074:22;:::i;:::-;3054:42;;3336:17;3356:3;:11;;3368:9;3356:22;;;;;;;;:::i;:::-;;;;;;;;;;;3470:26;;-1:-1:-1;;;;;3356:22:24;;;;-1:-1:-1;3356:22:24;;3470:3;;3482:13;;3470:26;;;;;;:::i;:::-;;;;;;;;;;:38;;;;-1:-1:-1;;;;;3470:38:24;;;;;;;;;;3600:17;:13;-1:-1:-1;3600:17:24;:::i;:::-;-1:-1:-1;;;;;3574:23:24;;;;;;:12;;;:23;;;;;:43;3723:17;;3574:3;;3723:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3815:19:24;;;;3723:17;3815:12;;;:19;;;;;;3808:26;;;;3723:17;-1:-1:-1;3849:11:24;;-1:-1:-1;;;;3849:11:24;2629:1285;3898:5;3891:12;;;;;8781:236:42;8928:7;8958:52;:12;8975:5;9202:3:10;8958:16:42;:52::i;4105:1613:23:-;-1:-1:-1;;;;;4316:17:23;;4183:4;4316:17;;;:12;;;:17;;;;;;4392:13;;4388:1324;;4730:21;4754:12;4765:1;4754:8;:12;:::i;:::-;4730:36;;4780:17;4814:1;4800:3;:11;;;:15;;;;:::i;:::-;5055:41;5099:23;;;:12;;;;:23;;;;;;5214:27;;;;;:39;;;;;;-1:-1:-1;;;;;5214:39:23;;;;;;;;;;;;;;4780:35;;-1:-1:-1;5099:23:23;5350:17;;5227:13;;5350:17;:::i;:::-;5332:14;;-1:-1:-1;;;;;5332:14:23;;;5319:28;;;;:12;;;:28;;;;;;;;:48;;;;5480:23;;;5332:14;5480:12;;;:23;;;;;5473:30;;;;;;;;;;;5517:23;;;5615:17;;;;;;;;;;;5608:24;5332:14;-1:-1:-1;5647:11:23;;-1:-1:-1;;5647:11:23;2130:303:8;2205:15;2232:22;2270:6;:13;2257:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2257:27:8;;2232:52;;2299:9;2294:110;2318:6;:13;2314:1;:17;2294:110;;;2364:29;2383:6;2390:1;2383:9;;;;;;;;:::i;2364:29::-;2352:6;2359:1;2352:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2352:41:8;;;:9;;;;;;;;;;;:41;2333:3;;;:::i;:::-;;;2294:110;;11937:590:33;12070:16;12103:28;12133:25;12162:22;12177:6;12162:14;:22::i;:::-;12102:82;;;;12194:79;12230:12;:19;12251:14;:21;12194:35;:79::i;:::-;12283:56;12314:1;12292:12;:19;:23;9552:3:10;12283:8:33;:56::i;:::-;12355:9;12350:145;12374:12;:19;12370:1;:23;12350:145;;;12414:70;12442:14;12457:1;12442:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12423:36:33;:12;12436:1;12423:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12423:36:33;;9144:3:10;12414:8:33;:70::i;:::-;12395:3;;;:::i;:::-;;;12350:145;;;-1:-1:-1;12512:8:33;11937:590;-1:-1:-1;;;;11937:590:33:o;6539:1752::-;6818:30;6862:31;6907:38;6971:30;7003:23;7030:35;:8;:33;:35::i;:::-;6970:95;;;;7076:14;7103:23;7119:6;5299::34;5279:27;;4992:323;7103:23:33;7076:51;-1:-1:-1;7187:26:33;7179:4;:34;;;;;;;;:::i;:::-;;:564;;7493:4;-1:-1:-1;;;;;7493:15:33;;7526:6;7550;7574:9;7601:13;7632:15;7665:31;:29;:31::i;:::-;7714:6;:15;;;7493:250;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7179:564;;;7228:4;-1:-1:-1;;;;;7228:15:33;;7261:6;7285;7309:9;7336:13;7367:15;7400:31;:29;:31::i;:::-;7449:6;:15;;;7228:250;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7137:606;;;;;;;;7754:105;7790:8;:15;7807:14;:21;7830;:28;7754:35;:105::i;:::-;8045:26;8037:4;:34;;;;;;;;:::i;:::-;;:247;;8191:93;8217:9;8228:6;8236:8;8246:14;8262:21;8191:25;:93::i;:::-;8037:247;;;8086:90;8112:6;8120;8128:8;8138:14;8154:21;8086:25;:90::i;:::-;8021:263;;6960:1331;;;6539:1752;;;;;;;;;;:::o;6031:433:44:-;16101:32;;;43416:2:168;43412:15;;;43321:66;43408:24;;;16101:32:44;;;;43396:37:168;;;;43467:15;;;;43463:24;43449:12;;;43442:46;16101:32:44;;;;;;;;;43504:12:168;;;;16101:32:44;;16091:43;;;;;;;;;-1:-1:-1;6325:27:44;;;:19;:27;;;;;:46;;;:36;;:46;;;;;;6407:50;6438:8;6448;6407:30;:50::i;:::-;6381:76;;-1:-1:-1;;;;;;6031:433:44:o;4129:294:43:-;4291:9;4286:131;4310:6;:13;4306:1;:17;4286:131;;;4395:8;4404:1;4395:11;;;;;;;;:::i;:::-;;;;;;;4344:29;:37;4374:6;4344:37;;;;;;;;;;;:48;4382:6;4389:1;4382:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4344:48:43;-1:-1:-1;;;;;4344:48:43;;;;;;;;;;;;:62;;;;4325:3;;;;:::i;:::-;;;4286:131;;4138:471:42;4233:53;4289:29;;;:21;:29;;;;;;4329:274;4353:8;:15;4349:1;:19;4329:274;;;4548:44;4577:1;4580:8;4589:1;4580:11;;;;;;;;:::i;:::-;;;;;;;4548:12;:28;;:44;;;;;:::i;:::-;4370:3;;;:::i;:::-;;;4329:274;;12739:353:33;12854:28;12926:6;:13;12913:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12913:27:33;;12898:42;;12955:9;12950:136;12974:6;:13;12970:1;:17;12950:136;;;13026:8;:49;;13065:6;13072:1;13065:9;;;;;;;;:::i;:::-;;;;;;;13057:18;;;:::i;:::-;13026:49;;;13044:6;13051:1;13044:9;;;;;;;;:::i;:::-;;;;;;;13026:49;13008:12;13021:1;13008:15;;;;;;;;:::i;:::-;;;;;;;;;;:67;12989:3;;;;:::i;:::-;;;;12950:136;;6755:199:37;6876:6;;6901:4;:25;;;;;;;;:::i;:::-;;:46;;6939:8;6901:46;;;-1:-1:-1;6929:7:37;;6894:53;-1:-1:-1;;6755:199:37:o;7136:204::-;7262:6;;7287:4;:25;;;;;;;;:::i;:::-;;:46;;7326:7;7287:46;;1010:175:26;1066:6;1084:64;1101:6;1093:5;:14;7674:3:10;1084:8:26;:64::i;643:194:19:-;699:6;;728:5;732:1;728;:5;:::i;:::-;717:16;;743:69;758:1;753;:6;;:16;;;;;768:1;763;:6;;753:16;752:38;;;;779:1;775;:5;:14;;;;;788:1;784;:5;775:14;4330:1:10;743:8:19;:69::i;1227:194::-;1283:6;;1312:5;1316:1;1312;:5;:::i;:::-;1301:16;;1327:69;1342:1;1337;:6;;:16;;;;;1352:1;1347;:6;;1337:16;1336:38;;;;1363:1;1359;:5;:14;;;;;1372:1;1368;:5;1359:14;4378:1:10;1327:8:19;:69::i;10980:843:44:-;11089:41;11309:27;;;:19;:27;;;;;11355:17;;;11391;;;-1:-1:-1;;;;;11355:17:44;;;;11089:41;;11391:17;;;;11089:41;;;11438:36;11355:17;11391;16101:32;;43321:66:168;43416:2;43412:15;;;43408:24;;16101:32:44;;;43396:37:168;43467:15;;;43463:24;43449:12;;;43442:46;16065:7:44;;43504:12:168;;16101:32:44;;;;;;;;;;;;16091:43;;;;;;16084:50;;15983:158;;;;;11438:36;11499:29;;;;:19;;;:29;;;;;11560:23;;11617:26;;;;11499:29;;-1:-1:-1;11419:55:44;;-1:-1:-1;11665:65:44;11560:23;11617:26;11665:38;:65::i;:::-;11654:76;;11751:65;11790:10;11802:13;11751:38;:65::i;:::-;11740:76;;11259:564;;;;10980:843;;;;;;;:::o;15545:351::-;15638:4;15694:27;;;:19;:27;;;;;15810:17;;-1:-1:-1;;;;;15801:26:44;;;15810:17;;15801:26;;:56;;-1:-1:-1;15840:17:44;;;;-1:-1:-1;;;;;15831:26:44;;;15840:17;;15831:26;15801:56;15800:89;;;;-1:-1:-1;;;;;;;;15862:27:44;;;;15545:351;-1:-1:-1;15545:351:44:o;9438:256:43:-;9538:4;9600:35;;;:27;:35;;;;;;;;-1:-1:-1;;;;;4104:19:24;;;;:12;;;:19;;;;;;:24;;9652:35:43;4001:134:24;9215:245:42;9307:4;9379:29;;;:21;:29;;;;;;;;-1:-1:-1;;;;;5905:17:23;;;;:12;;;:17;;;;;;:22;;9425:28:42;5797:137:23;3946:960:28;4112:16;;4183:28;4165:14;:46;;;;;;;;:::i;:::-;;4161:394;;4227:49;4254:6;4262:5;4269:6;4227:26;:49::i;:::-;4161:394;;;4315:36;4297:14;:54;;;;;;;;:::i;:::-;;4293:262;;4367:56;4401:6;4409:5;4416:6;4367:33;:56::i;4293:262::-;4496:48;4522:6;4530:5;4537:6;4496:25;:48::i;:::-;4569:10;;4565:79;;4595:38;-1:-1:-1;;;;;4595:18:28;;4614:10;4626:6;4595:18;:38::i;:::-;4844:15;4852:6;4844:15;:::i;:::-;4825:35;4892:6;;-1:-1:-1;3946:960:28;;-1:-1:-1;;;;3946:960:28:o;5158:978::-;5323:16;;5394:28;5376:14;:46;;;;;;;;:::i;:::-;;5372:394;;5438:49;5465:6;5473:5;5480:6;5438:26;:49::i;:::-;5372:394;;;5526:36;5508:14;:54;;;;;;;;:::i;:::-;;5504:262;;5578:56;5612:6;5620:5;5627:6;5578:33;:56::i;5504:262::-;5707:48;5733:6;5741:5;5748:6;5707:25;:48::i;:::-;5780:10;;5776:98;;5806:57;-1:-1:-1;;;;;5806:22:28;;5829:10;5849:4;5856:6;5806:22;:57::i;:::-;6074:6;;-1:-1:-1;6113:15:28;6074:6;6113:15;:::i;:::-;6091:38;;5158:978;;;;;;;:::o;6342:697::-;6509:16;;6580:28;6562:14;:46;;;;;;;;:::i;:::-;;6558:451;;6639:53;6670:6;6678:5;6685:6;6639:30;:53::i;:::-;6624:68;;6558:451;;;6731:36;6713:14;:54;;;;;;;;:::i;:::-;;6709:300;;6798:60;6836:6;6844:5;6851:6;6798:37;:60::i;6709:300::-;6946:52;6976:6;6984:5;6991:6;6946:29;:52::i;:::-;6931:67;;6709:300;7031:1;7019:13;;6342:697;;;;;;;:::o;9776:882:44:-;9871:22;9895:25;9939:13;9954:16;9972:13;9987:16;10007:32;10032:6;10007:24;:32::i;:::-;9936:103;;-1:-1:-1;9936:103:44;;-1:-1:-1;9936:103:44;-1:-1:-1;9936:103:44;-1:-1:-1;;;;;;;10195:28:44;;;;:60;;-1:-1:-1;;;;;;10227:28:44;;;10195:60;10191:133;;;-1:-1:-1;;10279:15:44;;;10292:1;10279:15;;;;;;10296:16;;;;;;;;;10279:15;;;-1:-1:-1;9776:882:44;-1:-1:-1;;;;9776:882:44:o;10191:133::-;10478:15;;;10491:1;10478:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10478:15:44;10469:24;;10515:6;10503;10510:1;10503:9;;;;;;;;:::i;:::-;;;;;;:18;-1:-1:-1;;;;;10503:18:44;;;-1:-1:-1;;;;;10503:18:44;;;;;10543:6;10531;10538:1;10531:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10531:18:44;;;;:9;;;;;;;;;;:18;10571:16;;;10585:1;10571:16;;;;;;;;;;10585:1;;10571:16;;;;;;;;;;-1:-1:-1;10571:16:44;10560:27;;10611:8;10597;10606:1;10597:11;;;;;;;;:::i;:::-;;;;;;:22;;;;;10643:8;10629;10638:1;10629:11;;;;;;;;:::i;:::-;;;;;;:22;;;;;9926:732;;;;9776:882;;;:::o;7295:799:43:-;7462:43;7508:35;;;:27;:35;;;;;4305:18:24;;7397:22:43;;;;7562:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7562:33:43;;7553:42;;7630:6;:13;7616:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7616:28:43;;7605:39;;7660:9;7655:433;7679:6;:13;7675:1;:17;7655:433;;;7925:12;7947:26;:10;7971:1;7947:23;:26::i;:::-;7925:49;;8000:5;7988:6;7995:1;7988:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7988:17:43;;;:9;;;;;;;;;;:17;;;;8033:37;;;;:29;:37;;;;;;:44;;;;;;;;;;;8019:11;;:8;;8028:1;;8019:11;;;;;;:::i;:::-;;;;;;;;;;:58;-1:-1:-1;7694:3:43;;;:::i;:::-;;;7655:433;;;;7452:642;7295:799;;;:::o;7395:700:42:-;7554:53;7610:29;;;:21;:29;;;;;6121:11:23;;7489:22:42;;;;7658:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7658:35:42;;7649:44;;7728:6;:13;7714:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7714:28:42;;7703:39;;7758:9;7753:336;7777:6;:13;7773:1;:17;7753:336;;;7104:6:23;7171:19;;;:12;;;;:19;;;;;;7208:10;;7220:12;;;-1:-1:-1;;;;;7208:10:23;;;;8024:6:42;8031:1;8024:9;;;;;;;;:::i;:::-;;;;;;8035:8;8044:1;8035:11;;;;;;;;:::i;:::-;;;;;;;;;;8023:55;;;;-1:-1:-1;;;;;8023:55:42;;;;;7792:3;;;:::i;:::-;;;7753:336;;3321:295:41;3376:7;3593:16;3601:7;4106:3;4095:14;4058:12;4087:30;;3967:157;3593:16;3577:32;;3796:12;3825:23;;3577:32;:::i;1503:105:19:-;1561:7;1592:1;1587;:6;;:14;;1600:1;1587:14;;;-1:-1:-1;1596:1:19;;1503:105;-1:-1:-1;1503:105:19:o;1691:104::-;1749:7;1779:1;1775;:5;:13;;1787:1;1775:13;;8290:267:38;-1:-1:-1;;;;;8440:30:38;;;;;;;:21;:30;;;;;;;;:37;;;;;;;;;;;;;:50;;;8505:45;;1032:25:168;;;8505:45:38;;1005:18:168;8505:45:38;886:177:168;2319:1170:15;2397:4;6089:14;6085:43;6081:56;6068:70;2621:15;2610:26;;2606:69;;;2659:5;2652:12;;;;;2606:69;2685:16;2704:11;:9;:11::i;:::-;2685:30;-1:-1:-1;2685:30:15;2725:175;;2884:5;2877:12;;;;;;2725:175;3022:18;3064:8;3084:11;:9;:11::i;:::-;3074:22;;;;;;;3053:73;;;;;;42046:25:168;;;;42087:18;;;42080:34;;;;3098:10:15;42130:18:168;;;42123:83;42222:18;;;42215:34;;;42265:19;;;42258:35;;;42018:19;;3053:73:15;;;;;;;;;;;;3043:84;;;;;;3022:105;;3137:14;3154:28;3171:10;3154:16;:28::i;:::-;3137:45;;3193:7;3202:9;3213;3226:12;:10;:12::i;:::-;3192:46;;;;;;3249:24;3276:26;3286:6;3294:1;3297;3300;3276:26;;;;;;;;;;;;;;;;;42531:25:168;;;42604:4;42592:17;;;;42587:2;42572:18;;42565:45;42641:2;42626:18;;42619:34;42684:2;42669:18;;42662:34;42518:3;42503:19;;42304:398;3276:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3276:26:15;;;;;;-1:-1:-1;;;;;;;3424:30:15;;;;;;:58;;;3478:4;-1:-1:-1;;;;;3458:24:15;:16;-1:-1:-1;;;;;3458:24:15;;3424:58;3417:65;2319:1170;-1:-1:-1;;;;;;;;;;;2319:1170:15:o;15707:1047:37:-;15957:25;15996:26;16036:24;16085:20;16108:22;:14;:20;:22::i;:::-;16085:45;;16140:21;16164:23;:15;:21;:23::i;:::-;16140:47;;16223:77;16232:32;:14;4359:3:41;4348:14;;4213:164;16232:32:37;16266:33;:15;4359:3:41;4348:14;;4213:164;16223:77:37;16197:23;;;:103;16451:49;;;;;-1:-1:-1;;;;;16451:11:37;;;;;:49;;16197:7;;16472:12;;16486:13;;16451:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16432:68;;16511:16;16529:17;16550:59;16562:7;:12;;;16576:7;:14;;;16592:16;16550:11;:59::i;:::-;16510:99;;-1:-1:-1;16510:99:37;-1:-1:-1;16640:37:37;:14;16510:99;16640:27;:37::i;:::-;16620:57;-1:-1:-1;16708:39:37;:15;16737:9;16708:28;:39::i;:::-;16687:60;;16075:679;;;;15707:1047;;;;;;;;:::o;12984:506:41:-;13075:7;13290:25;13325:72;13334:30;13350:13;4359:3;4348:14;;4213:164;13334:30;13366;13382:13;4359:3;4348:14;;4213:164;13325:72;13290:108;-1:-1:-1;13416:67:41;3796:12;3825:23;;3796:12;3825:23;;13464:18;13416:67;;:5;:67::i;8169:144:23:-;-1:-1:-1;;;;;8289:17:23;8263:7;8289:17;;;:12;;;;;:17;;;;;;;8169:144::o;7299:321:41:-;7377:7;;7414:25;7432:6;3796:12;3825:23;;7414:13;:17;;:25::i;:::-;7396:43;;7449:22;7474:16;7482:7;4106:3;4095:14;4058:12;4087:30;;3967:157;7474:16;7449:41;-1:-1:-1;7529:12:41;7559:54;7569:7;7449:41;7529:12;7559:9;:54::i;7889:321::-;7967:7;;8004:25;8022:6;3796:12;3825:23;;8004:13;:17;;:25::i;3760:177:23:-;3896:19;;;;:12;;;;:19;;;;;;:26;;;:34;3760:177::o;16256:169:44:-;16332:6;16340;16374;-1:-1:-1;;;;;16365:15:44;:6;-1:-1:-1;;;;;16365:15:44;;:53;;16403:6;16411;16365:53;;;16384:6;16392;16365:53;16358:60;;;;16256:169;;;;;:::o;11942:395:41:-;12038:7;12231:99;3796:12;3825:23;;3796:12;3825:23;;12270:30;12302:27;12318:10;4359:3;4348:14;;4213:164;12302:27;12231:9;:99::i;12466:395::-;12562:7;12755:99;12765:27;12781:10;4106:3;4095:14;4058:12;4087:30;;3967:157;12765:27;12794:30;12810:13;4106:3;4095:14;4058:12;4087:30;;3967:157;7739:278:23;-1:-1:-1;;;;;7903:17:23;;7868:7;7903:17;;;:12;;;:17;;;;;;7930:30;7939:9;;;7950;7930:8;:30::i;:::-;7977:33;7995:3;8000:9;8008:1;8000:5;:9;:::i;:::-;7493:7;7519:19;;;:12;;;;:19;;;;;:26;;;7396:156;7977:33;7970:40;7739:278;-1:-1:-1;;;;;7739:278:23:o;1652:146:31:-;1716:7;1547:22;-1:-1:-1;;;;;1742:47:31;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1009:182:14:-;1128:56;1142:1;1137;:6;:16;;;;;1152:1;1147;:6;1137:16;5010:3:10;1128:8:14;:56::i;10547:1072:33:-;10801:30;10873:8;:15;10859:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10859:30:33;;10843:46;;10904:9;10899:714;10923:13;;:20;10919:24;;10899:714;;;10964:17;10984:10;10995:1;10984:13;;;;;;;;:::i;:::-;;;;;;;10964:33;;11011:62;11033:6;:13;;;11047:1;11033:16;;;;;;;;:::i;:::-;;;;;;;11020:9;:29;;8271:3:10;11011:8:33;:62::i;:::-;11163:12;11178:6;:13;;;11192:1;11178:16;;;;;;;;:::i;:::-;;;;;;;11163:31;;11208:66;11219:5;11226:9;11237;11248:6;:25;;;11208:10;:66::i;:::-;11289:17;11309:21;11331:1;11309:24;;;;;;;;:::i;:::-;;;;;;;11289:44;;11347:51;11361:25;11380:5;11361:18;:25::i;:::-;11388:9;11347:13;:51::i;:::-;11552:50;11577:24;:9;11591;11577:13;:24::i;:::-;11552:8;11561:1;11552:11;;;;;;;;:::i;:::-;;;;;;;:24;;:50;;;;:::i;:::-;11533:13;11547:1;11533:16;;;;;;;;:::i;:::-;;;;;;:69;;;;;10950:663;;;10945:3;;;;:::i;:::-;;;10899:714;;;;10547:1072;;;;;;;:::o;8605:1605::-;8847:30;8999:18;9062:8;:15;9048:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9048:30:33;;9032:46;;9093:9;9088:1028;9112:13;;:20;9108:24;;9088:1028;;;9153:16;9172:9;9182:1;9172:12;;;;;;;;:::i;:::-;;;;;;;9153:31;;9198:61;9219:6;:13;;;9233:1;9219:16;;;;;;;;:::i;:::-;;;;;;;9207:8;:28;;8323:3:10;9198:8:33;:61::i;:::-;9354:12;9369:6;:13;;;9383:1;9369:16;;;;;;;;:::i;:::-;;;;;;;9354:31;;9399:65;9413:5;9420:8;9430:6;9438;:25;;;9399:13;:65::i;:::-;-1:-1:-1;;;;;1693:22:8;;9479:89:33;;9529:24;:10;9544:8;9529:14;:24::i;:::-;9516:37;;9479:89;9582:17;9602:21;9624:1;9602:24;;;;;;;;:::i;:::-;;;;;;;9582:44;;9640:51;9654:25;9673:5;9654:18;:25::i;9640:51::-;9925:9;9913:8;:21;;9912:193;;10059:46;10084:20;10096:8;10084:9;:20;:::i;:::-;10059:8;10068:1;10059:11;;;;;;;;:::i;:46::-;9912:193;;;9994:46;10019:20;10030:9;10019:8;:20;:::i;:::-;9994:8;10003:1;9994:11;;;;;;;;:::i;:::-;;;;;;;:24;;:46;;;;:::i;:::-;9893:13;9907:1;9893:16;;;;;;;;:::i;:::-;;;;;;:212;;;;;9139:977;;;9134:3;;;;:::i;:::-;;;9088:1028;;;;10172:31;10192:10;10172:19;:31::i;6742:226:44:-;6873:88;6906:6;6914:5;6921:31;6954:6;6873:32;:88::i;4717:234:43:-;4855:89;4889:6;4897:5;4904:31;4937:6;4855:33;:89::i;4883:218:42:-;5013:81;5039:6;5047:5;5054:31;5087:6;5013:25;:81::i;7246:226:44:-;7377:88;7410:6;7418:5;7425:31;7458:6;7377:32;:88::i;5245:234:43:-;5383:89;5417:6;5425:5;5432:31;5465:6;5383:33;:89::i;5375:218:42:-;5505:81;5531:6;5539:5;5546:31;5579:6;5505:25;:81::i;7803:251:44:-;7937:6;7962:85;7995:6;8003:5;8010:28;8040:6;7962:32;:85::i;5826:259:43:-;5967:6;5992:86;6026:6;6034:5;6041:28;6071:6;5992:33;:86::i;5920:243:42:-;6053:6;6078:78;6104:6;6112:5;6119:28;6149:6;6078:25;:78::i;5183:135:24:-;5267:7;5293:3;:11;;5305:5;5293:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5293:18:24;;5183:135;-1:-1:-1;;;5183:135:24:o;6057:1492:40:-;6110:12;6695:1;6682:15;6677:3;6673:25;6893:8;6923:10;6918:79;;;;7019:10;7014:79;;;;7115:10;7110:79;;;;7211:10;7206:85;;;;7313:10;7308:86;;;;7449:66;7441:74;;6886:647;;6057:1492;:::o;6918:79::-;6964:15;6956:23;;6886:647;;6057:1492;:::o;7014:79::-;7060:15;7052:23;;6886:647;;6057:1492;:::o;7110:79::-;7156:15;7148:23;;6886:647;;6057:1492;:::o;7206:85::-;7252:21;7244:29;;6886:647;;6057:1492;:::o;7308:86::-;7354:22;7346:30;;6886:647;;6057:1492;:::o;5162:500:15:-;5206:19;5246:8;;5237:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5354:13:15;;5237:17;;-1:-1:-1;;;1526:6:15;-1:-1:-1;5350:306:15;;;5608:22;5592:14;5588:43;5580:6;5573:59;5350:306;5162:500;:::o;3207:183:22:-;3284:7;3349:20;2455:7;2502:10;2514:12;2528:15;3798:9;2491:83;;;;;;34884:25:168;;;;34925:18;;34918:34;;;;34968:18;;;34961:34;35011:18;;;35004:34;2568:4:22;35054:19:168;;;35047:84;34856:19;;2491:83:22;;;;;;;;;;;;2481:94;;;;;;2474:101;;2394:188;;3349:20;3320:62;;43797:66:168;3320:62:22;;;43785:79:168;43880:11;;;43873:27;;;;43916:12;;;43909:28;;;43953:12;;3320:62:22;43527:444:168;4586:385:15;6089:14;6081:56;;;6068:70;;6081:56;;;6068:70;;4668:7;;6081:56;;6068:70;4934:30;5881:273;14013:259:41;14158:7;14247:17;14192:52;14240:3;14221:22;;;14213:3;14193:23;;;14192:52;:::i;:::-;:72;;;;:::i;6385:650::-;6512:7;;6548:16;6556:8;6548:5;:16;:::i;:::-;6531:33;;6797:75;6816:5;6806:6;:15;;:34;;;;;6834:6;6825;:15;6806:34;9500:3:10;6797:8:41;:75::i;:::-;6992:36;6998:5;7005:8;7015:12;6992:5;:36::i;956:166:19:-;1014:7;1033:37;1047:1;1042;:6;;4378:1:10;1033:8:19;:37::i;:::-;1080:9;1092:5;1096:1;1092;:5;:::i;8374:346:41:-;8453:7;;8490:25;8508:6;3796:12;3825:23;;8490:13;3708:147;8490:25;8472:43;;8525:18;8546:28;8567:6;8546:16;8554:7;4106:3;4095:14;4058:12;4087:30;;3967:157;8546:28;8525:49;;8584:30;8617:24;8633:7;4359:3;4348:14;;4213:164;8617:24;8584:57;;8659:54;8669:7;8678:10;8690:22;8659:9;:54::i;8463:1028:44:-;8661:6;8693:37;8744:13;8771:16;8815;8844:32;8869:6;8844:24;:32::i;:::-;8679:197;;;;;;;;;8887:12;8922:6;-1:-1:-1;;;;;8913:15:44;:5;-1:-1:-1;;;;;8913:15:44;;8909:382;;8944:18;8965:26;8974:8;8984:6;8965:8;:26;;:::i;:::-;8944:47;-1:-1:-1;9013:33:44;8944:47;9037:8;9013:23;:33::i;:::-;9071:10;;-1:-1:-1;9005:41:44;-1:-1:-1;8909:382:44;;;9143:18;9164:26;9173:8;9183:6;9164:8;:26;;:::i;:::-;9143:47;-1:-1:-1;9212:33:44;9143:47;9236:8;9212:23;:33::i;:::-;9270:10;;-1:-1:-1;9204:41:44;-1:-1:-1;8909:382:44;9323:50;9354:8;9364;9323:30;:50::i;:::-;9301:72;;9408:53;9442:8;9452;9408:33;:53::i;:::-;9383:22;;;;:78;;;;-1:-1:-1;9479:5:44;;-1:-1:-1;;;8463:1028:44;;;;;;:::o;6510:483:43:-;6710:6;6728:22;6753:45;6784:6;6792:5;6753:30;:45::i;:::-;6728:70;;6809:18;6830:32;6839:14;6855:6;6830:8;:32;;:::i;:::-;6872:37;;;;:29;:37;;;;;;;;-1:-1:-1;;;;;6872:44:43;;;;;;;;;:57;;;6809:53;-1:-1:-1;6947:39:43;6809:53;6971:14;6947:23;:39::i;:::-;6940:46;6510:483;-1:-1:-1;;;;;;;6510:483:43:o;6568:545:42:-;6759:6;6833:29;;;:21;:29;;;;;6759:6;6897:43;6833:29;6934:5;6897:22;:43::i;:::-;6872:68;;6951:18;6972:32;6981:14;6997:6;6972:8;:32;;:::i;:::-;6951:53;-1:-1:-1;7014:35:42;:12;7031:5;6951:53;7014:16;:35::i;:::-;-1:-1:-1;7067:39:42;:10;7091:14;7067:23;:39::i;:::-;7060:46;6568:545;-1:-1:-1;;;;;;;;6568:545:42:o;8883:346:41:-;8962:7;;8999:25;9017:6;3796:12;3825:23;;8999:13;3708:147;8999:25;8981:43;;9034:18;9055:28;9076:6;9055:16;9063:7;4106:3;4095:14;4058:12;4087:30;;3967:157;9577:263;9657:7;3796:12;3825:23;;9750:12;9779:54;3825:23;9802:10;9750:12;9779:9;:54::i;4469:279::-;4554:6;4721:19;4729:10;4106:3;4095:14;4058:12;4087:30;;3967:157;4721:19;4691;4699:10;4106:3;4095:14;4058:12;4087:30;;3967:157;4691:19;4684:57;;;;:::i;13616:281::-;13710:7;13834:56;13840:22;13848:13;4106:3;4095:14;4058:12;4087:30;;3967:157;13840:22;13864;13872:13;4106:3;4095:14;4058:12;4087:30;;3967:157;13864:22;13888:1;13834:5;:56::i;14:167:168:-;-1:-1:-1;;;;;106:5:168;102:54;95:5;92:65;82:93;;171:1;168;161:12;186:281;266:6;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;374:9;361:23;393:44;431:5;393:44;:::i;472:117::-;563:1;556:5;553:12;543:40;;579:1;576;569:12;594:287;677:6;730:2;718:9;709:7;705:23;701:32;698:52;;;746:1;743;736:12;698:52;785:9;772:23;804:47;845:5;804:47;:::i;1068:184::-;1120:77;1117:1;1110:88;1217:4;1214:1;1207:15;1241:4;1238:1;1231:15;1257:253;1329:2;1323:9;1371:4;1359:17;;1406:18;1391:34;;1427:22;;;1388:62;1385:88;;;1453:18;;:::i;:::-;1489:2;1482:22;1257:253;:::o;1515:::-;1587:2;1581:9;1629:4;1617:17;;1664:18;1649:34;;1685:22;;;1646:62;1643:88;;;1711:18;;:::i;1773:253::-;1845:2;1839:9;1887:4;1875:17;;1922:18;1907:34;;1943:22;;;1904:62;1901:88;;;1969:18;;:::i;2031:334::-;2102:2;2096:9;2158:2;2148:13;;2163:66;2144:86;2132:99;;2261:18;2246:34;;2282:22;;;2243:62;2240:88;;;2308:18;;:::i;:::-;2344:2;2337:22;2031:334;;-1:-1:-1;2031:334:168:o;2370:196::-;2443:4;2476:18;2468:6;2465:30;2462:56;;;2498:18;;:::i;:::-;-1:-1:-1;2543:1:168;2539:14;2555:4;2535:25;;2370:196::o;2571:1940::-;2687:6;2718:2;2761;2749:9;2740:7;2736:23;2732:32;2729:52;;;2777:1;2774;2767:12;2729:52;2817:9;2804:23;2850:18;2842:6;2839:30;2836:50;;;2882:1;2879;2872:12;2836:50;2905:22;;2958:4;2950:13;;2946:27;-1:-1:-1;2936:55:168;;2987:1;2984;2977:12;2936:55;3023:2;3010:16;3046:73;3062:56;3115:2;3062:56;:::i;:::-;3046:73;:::i;:::-;3153:15;;;3215:4;3254:11;;;3246:20;;3242:29;;;3184:12;;;;3141:3;3283:19;;;3280:39;;;3315:1;3312;3305:12;3280:39;3339:11;;;;3359:1122;3375:6;3370:3;3367:15;3359:1122;;;3455:2;3449:3;3440:7;3436:17;3432:26;3429:116;;;3499:1;3528:2;3524;3517:14;3429:116;3571:22;;:::i;:::-;3634:3;3621:17;3673:1;3664:7;3661:14;3651:112;;3717:1;3746:2;3742;3735:14;3651:112;3776:22;;3839:12;;;3826:26;3865:46;3826:26;3865:46;:::i;:::-;3931:14;;;3924:31;3978:2;4029:12;;;4016:26;4000:14;;;3993:50;4066:2;4109:12;;;4096:26;4135:46;4096:26;4135:46;:::i;:::-;4201:14;;;4194:31;4248:3;4292:12;;;4279:26;4318:46;4279:26;4318:46;:::i;:::-;4384:14;;;4377:31;4421:18;;3392:12;;;;4459;;;;3359:1122;;;-1:-1:-1;4500:5:168;2571:1940;-1:-1:-1;;;;;;;2571:1940:168:o;4516:771::-;4578:5;4631:3;4624:4;4616:6;4612:17;4608:27;4598:55;;4649:1;4646;4639:12;4598:55;4685:6;4672:20;4711:4;4735:73;4751:56;4804:2;4751:56;:::i;4735:73::-;4842:15;;;4928:1;4924:10;;;;4912:23;;4908:32;;;4873:12;;;;4952:15;;;4949:35;;;4980:1;4977;4970:12;4949:35;5016:2;5008:6;5004:15;5028:230;5044:6;5039:3;5036:15;5028:230;;;5124:3;5111:17;5141:44;5179:5;5141:44;:::i;:::-;5198:18;;5236:12;;;;5061;;5028:230;;;-1:-1:-1;5276:5:168;4516:771;-1:-1:-1;;;;;;4516:771:168:o;5292:518::-;5399:6;5407;5460:2;5448:9;5439:7;5435:23;5431:32;5428:52;;;5476:1;5473;5466:12;5428:52;5515:9;5502:23;5534:44;5572:5;5534:44;:::i;:::-;5597:5;-1:-1:-1;5653:2:168;5638:18;;5625:32;5680:18;5669:30;;5666:50;;;5712:1;5709;5702:12;5666:50;5735:69;5796:7;5787:6;5776:9;5772:22;5735:69;:::i;:::-;5725:79;;;5292:518;;;;;:::o;5815:435::-;5868:3;5906:5;5900:12;5933:6;5928:3;5921:19;5959:4;5988:2;5983:3;5979:12;5972:19;;6025:2;6018:5;6014:14;6046:1;6056:169;6070:6;6067:1;6064:13;6056:169;;;6131:13;;6119:26;;6165:12;;;;6200:15;;;;6092:1;6085:9;6056:169;;;-1:-1:-1;6241:3:168;;5815:435;-1:-1:-1;;;;;5815:435:168:o;6255:261::-;6434:2;6423:9;6416:21;6397:4;6454:56;6506:2;6495:9;6491:18;6483:6;6454:56;:::i;6521:118::-;6607:5;6600:13;6593:21;6586:5;6583:32;6573:60;;6629:1;6626;6619:12;6644:241;6700:6;6753:2;6741:9;6732:7;6728:23;6724:32;6721:52;;;6769:1;6766;6759:12;6721:52;6808:9;6795:23;6827:28;6849:5;6827:28;:::i;7224:149::-;7298:20;;7347:1;7337:12;;7327:40;;7363:1;7360;7353:12;7378:589;7420:5;7473:3;7466:4;7458:6;7454:17;7450:27;7440:55;;7491:1;7488;7481:12;7440:55;7527:6;7514:20;7553:18;7549:2;7546:26;7543:52;;;7575:18;;:::i;:::-;7619:114;7727:4;7658:66;7651:4;7647:2;7643:13;7639:86;7635:97;7619:114;:::i;:::-;7758:2;7749:7;7742:19;7804:3;7797:4;7792:2;7784:6;7780:15;7776:26;7773:35;7770:55;;;7821:1;7818;7811:12;7770:55;7886:2;7879:4;7871:6;7867:17;7860:4;7851:7;7847:18;7834:55;7934:1;7909:16;;;7927:4;7905:27;7898:38;;;;7913:7;7378:589;-1:-1:-1;;;7378:589:168:o;7972:731::-;8033:5;8081:4;8069:9;8064:3;8060:19;8056:30;8053:50;;;8099:1;8096;8089:12;8053:50;8121:22;;:::i;:::-;8112:31;;8180:9;8167:23;8199:46;8237:7;8199:46;:::i;:::-;8254:22;;8328:2;8313:18;;8300:32;8341:30;8300:32;8341:30;:::i;:::-;8398:2;8387:14;;8380:31;8463:2;8448:18;;8435:32;8476:46;8435:32;8476:46;:::i;:::-;8549:2;8538:14;;8531:31;8614:2;8599:18;;8586:32;8627:30;8586:32;8627:30;:::i;:::-;8684:2;8673:14;;8666:31;8677:5;7972:731;-1:-1:-1;;7972:731:168:o;8708:1360::-;8856:6;8864;8872;8880;8933:3;8921:9;8912:7;8908:23;8904:33;8901:53;;;8950:1;8947;8940:12;8901:53;8990:9;8977:23;9019:18;9060:2;9052:6;9049:14;9046:34;;;9076:1;9073;9066:12;9046:34;9099:22;;;;9155:4;9137:16;;;9133:27;9130:47;;;9173:1;9170;9163:12;9130:47;9199:22;;:::i;:::-;9257:2;9244:16;9237:5;9230:31;9293:37;9326:2;9322;9318:11;9293:37;:::i;:::-;9288:2;9281:5;9277:14;9270:61;9376:2;9372;9368:11;9355:25;9389:46;9427:7;9389:46;:::i;:::-;9462:2;9451:14;;9444:31;9520:2;9512:11;;9499:25;9533:46;9499:25;9533:46;:::i;:::-;9606:2;9595:14;;9588:31;9673:3;9665:12;;;9652:26;9635:15;;;9628:51;9725:3;9717:12;;9704:26;9742:16;;;9739:36;;;9771:1;9768;9761:12;9739:36;9808:44;9844:7;9833:8;9829:2;9825:17;9808:44;:::i;:::-;9802:3;9795:5;9791:15;9784:69;;9872:5;9862:15;;;;;9896:61;9949:7;9944:2;9933:9;9929:18;9896:61;:::i;:::-;8708:1360;;9886:71;;-1:-1:-1;;;;10004:3:168;9989:19;;9976:33;;10056:4;10041:20;10028:34;;8708:1360::o;10255:675::-;10309:5;10362:3;10355:4;10347:6;10343:17;10339:27;10329:55;;10380:1;10377;10370:12;10329:55;10416:6;10403:20;10442:4;10466:73;10482:56;10535:2;10482:56;:::i;10466:73::-;10573:15;;;10659:1;10655:10;;;;10643:23;;10639:32;;;10604:12;;;;10683:15;;;10680:35;;;10711:1;10708;10701:12;10680:35;10747:2;10739:6;10735:15;10759:142;10775:6;10770:3;10767:15;10759:142;;;10841:17;;10829:30;;10879:12;;;;10792;;10759:142;;10935:993;11123:6;11131;11139;11147;11200:3;11188:9;11179:7;11175:23;11171:33;11168:53;;;11217:1;11214;11207:12;11168:53;11256:9;11243:23;11275:44;11313:5;11275:44;:::i;:::-;11338:5;-1:-1:-1;11394:2:168;11379:18;;11366:32;11417:18;11447:14;;;11444:34;;;11474:1;11471;11464:12;11444:34;11497:69;11558:7;11549:6;11538:9;11534:22;11497:69;:::i;:::-;11487:79;;11619:2;11608:9;11604:18;11591:32;11575:48;;11648:2;11638:8;11635:16;11632:36;;;11664:1;11661;11654:12;11632:36;11687:63;11742:7;11731:8;11720:9;11716:24;11687:63;:::i;:::-;11677:73;;11803:2;11792:9;11788:18;11775:32;11759:48;;11832:2;11822:8;11819:16;11816:36;;;11848:1;11845;11838:12;11816:36;;11871:51;11914:7;11903:8;11892:9;11888:24;11871:51;:::i;:::-;11861:61;;;10935:993;;;;;;;:::o;11933:1329::-;12074:6;12082;12090;12143:2;12131:9;12122:7;12118:23;12114:32;12111:52;;;12159:1;12156;12149:12;12111:52;12195:9;12182:23;12172:33;;12224:2;12277;12266:9;12262:18;12249:32;12300:18;12341:2;12333:6;12330:14;12327:34;;;12357:1;12354;12347:12;12327:34;12380:69;12441:7;12432:6;12421:9;12417:22;12380:69;:::i;:::-;12370:79;;12502:2;12491:9;12487:18;12474:32;12458:48;;12531:2;12521:8;12518:16;12515:36;;;12547:1;12544;12537:12;12515:36;-1:-1:-1;12570:24:168;;12625:4;12617:13;;12613:27;-1:-1:-1;12603:55:168;;12654:1;12651;12644:12;12603:55;12690:2;12677:16;12713:73;12729:56;12782:2;12729:56;:::i;12713:73::-;12820:15;;;12902:1;12898:10;;;;12890:19;;12886:28;;;12851:12;;;;12926:19;;;12923:39;;;12958:1;12955;12948:12;12923:39;12982:11;;;;13002:230;13018:6;13013:3;13010:15;13002:230;;;13098:3;13085:17;13115:44;13153:5;13115:44;:::i;:::-;13172:18;;13035:12;;;;13210;;;;13002:230;;;13251:5;13241:15;;;;;;;11933:1329;;;;;:::o;13267:438::-;13374:6;13382;13435:2;13423:9;13414:7;13410:23;13406:32;13403:52;;;13451:1;13448;13441:12;13403:52;13487:9;13474:23;13464:33;;13548:2;13537:9;13533:18;13520:32;13575:18;13567:6;13564:30;13561:50;;;13607:1;13604;13597:12;13710:332;13768:6;13821:2;13809:9;13800:7;13796:23;13792:32;13789:52;;;13837:1;13834;13827:12;13789:52;13876:9;13863:23;13926:66;13919:5;13915:78;13908:5;13905:89;13895:117;;14008:1;14005;13998:12;14047:904;14109:5;14157:4;14145:9;14140:3;14136:19;14132:30;14129:50;;;14175:1;14172;14165:12;14129:50;14197:22;;:::i;:::-;14188:31;;14255:9;14242:23;14284:18;14325:2;14317:6;14314:14;14311:34;;;14341:1;14338;14331:12;14311:34;14368:65;14429:3;14420:6;14409:9;14405:22;14368:65;:::i;:::-;14361:5;14354:80;14487:2;14476:9;14472:18;14459:32;14443:48;;14516:2;14506:8;14503:16;14500:36;;;14532:1;14529;14522:12;14500:36;14568:59;14623:3;14612:8;14601:9;14597:24;14568:59;:::i;:::-;14563:2;14556:5;14552:14;14545:83;14681:2;14670:9;14666:18;14653:32;14637:48;;14710:2;14700:8;14697:16;14694:36;;;14726:1;14723;14716:12;14694:36;;14762:47;14805:3;14794:8;14783:9;14779:24;14762:47;:::i;:::-;14757:2;14750:5;14746:14;14739:71;;14862:2;14851:9;14847:18;14834:32;14875:30;14897:7;14875:30;:::i;14956:741::-;15084:6;15092;15100;15108;15161:3;15149:9;15140:7;15136:23;15132:33;15129:53;;;15178:1;15175;15168:12;15129:53;15214:9;15201:23;15191:33;;15274:2;15263:9;15259:18;15246:32;15287:44;15325:5;15287:44;:::i;:::-;15350:5;-1:-1:-1;15407:2:168;15392:18;;15379:32;15420:46;15379:32;15420:46;:::i;:::-;15485:7;-1:-1:-1;15543:2:168;15528:18;;15515:32;15570:18;15559:30;;15556:50;;;15602:1;15599;15592:12;15556:50;15625:66;15683:7;15674:6;15663:9;15659:22;15625:66;:::i;15967:1787::-;16034:5;16087:3;16080:4;16072:6;16068:17;16064:27;16054:55;;16105:1;16102;16095:12;16054:55;16141:6;16128:20;16167:4;16191:73;16207:56;16260:2;16207:56;:::i;16191:73::-;16298:15;;;16384:1;16380:10;;;;16368:23;;16364:32;;;16329:12;;;;16408:15;;;16405:35;;;16436:1;16433;16426:12;16405:35;16472:2;16464:6;16460:15;16484:1241;16500:6;16495:3;16492:15;16484:1241;;;16586:3;16573:17;16613:18;16663:2;16650:11;16647:19;16644:109;;;16707:1;16736:2;16732;16725:14;16644:109;16788:11;16780:6;16776:24;16766:34;;16823:4;16934:2;16865:66;16860:2;16855:3;16851:12;16847:85;16843:94;16840:184;;;16978:1;17007:2;17003;16996:14;16840:184;17050:22;;:::i;:::-;17120:2;17116;17112:11;17099:25;17092:5;17085:40;17148:2;17207;17203;17199:11;17186:25;17181:2;17174:5;17170:14;17163:49;17235:2;17294;17290;17286:11;17273:25;17268:2;17261:5;17257:14;17250:49;17323:3;17312:14;;17383:3;17379:2;17375:12;17362:26;17357:2;17350:5;17346:14;17339:50;;17439:2;17435;17431:11;17418:25;17402:41;;17472:2;17462:8;17459:16;17456:109;;;17517:1;17547:3;17542;17535:16;17456:109;17602:49;17647:3;17642:2;17631:8;17627:2;17623:17;17619:26;17602:49;:::i;:::-;17585:15;;;17578:74;17665:18;;-1:-1:-1;;;17703:12:168;;;;16517;;16484:1241;;17759:1740;18032:6;18040;18048;18056;18064;18072;18125:3;18113:9;18104:7;18100:23;18096:33;18093:53;;;18142:1;18139;18132:12;18093:53;18165:35;18190:9;18165:35;:::i;:::-;18155:45;;18219:2;18272;18261:9;18257:18;18244:32;18295:18;18336:2;18328:6;18325:14;18322:34;;;18352:1;18349;18342:12;18322:34;18375:74;18441:7;18432:6;18421:9;18417:22;18375:74;:::i;:::-;18365:84;;18502:2;18491:9;18487:18;18474:32;18458:48;;18531:2;18521:8;18518:16;18515:36;;;18547:1;18544;18537:12;18515:36;18570:71;18633:7;18622:8;18611:9;18607:24;18570:71;:::i;:::-;18560:81;;18660:61;18713:7;18708:2;18697:9;18693:18;18660:61;:::i;:::-;18650:71;;18774:3;18763:9;18759:19;18746:33;18730:49;;18804:2;18794:8;18791:16;18788:36;;;18820:1;18817;18810:12;18788:36;-1:-1:-1;18843:24:168;;18898:4;18890:13;;18886:27;-1:-1:-1;18876:55:168;;18927:1;18924;18917:12;18876:55;18963:2;18950:16;18986:73;19002:56;19055:2;19002:56;:::i;18986:73::-;19093:15;;;19175:1;19171:10;;;;19163:19;;19159:28;;;19124:12;;;;19199:19;;;19196:39;;;19231:1;19228;19221:12;19196:39;19255:11;;;;19275:142;19291:6;19286:3;19283:15;19275:142;;;19357:17;;19345:30;;19308:12;;;;19395;;;;19275:142;;;19436:5;19426:15;;;;;;;19488:3;19477:9;19473:19;19460:33;19450:43;;17759:1740;;;;;;;;:::o;20849:342::-;20931:6;20939;20992:2;20980:9;20971:7;20967:23;20963:32;20960:52;;;21008:1;21005;20998:12;20960:52;21044:9;21031:23;21021:33;;21104:2;21093:9;21089:18;21076:32;21117:44;21155:5;21117:44;:::i;:::-;21180:5;21170:15;;;20849:342;;;;;:::o;22641:1580::-;22757:6;22788:2;22831;22819:9;22810:7;22806:23;22802:32;22799:52;;;22847:1;22844;22837:12;22799:52;22887:9;22874:23;22920:18;22912:6;22909:30;22906:50;;;22952:1;22949;22942:12;22906:50;22975:22;;23028:4;23020:13;;23016:27;-1:-1:-1;23006:55:168;;23057:1;23054;23047:12;23006:55;23093:2;23080:16;23116:73;23132:56;23185:2;23132:56;:::i;23116:73::-;23223:15;;;23305:1;23301:10;;;;23293:19;;23289:28;;;23254:12;;;;23329:19;;;23326:39;;;23361:1;23358;23351:12;23326:39;23385:11;;;;23405:786;23421:6;23416:3;23413:15;23405:786;;;23503:4;23497:3;23488:7;23484:17;23480:28;23477:118;;;23549:1;23578:2;23574;23567:14;23477:118;23621:22;;:::i;:::-;23684:3;23671:17;23701:49;23742:7;23701:49;:::i;:::-;23763:22;;23834:12;;;23821:26;23805:14;;;23798:50;23871:2;23914:12;;;23901:26;23940:46;23901:26;23940:46;:::i;:::-;24006:14;;;23999:31;24053:2;24104:12;;;24091:26;24075:14;;;24068:50;24131:18;;23447:4;23438:14;;;;24169:12;;;;23405:786;;24226:180;24285:6;24338:2;24326:9;24317:7;24313:23;24309:32;24306:52;;;24354:1;24351;24344:12;24306:52;-1:-1:-1;24377:23:168;;24226:180;-1:-1:-1;24226:180:168:o;24411:184::-;24463:77;24460:1;24453:88;24560:4;24557:1;24550:15;24584:4;24581:1;24574:15;24600:149;24690:1;24683:5;24680:12;24670:46;;24696:18;;:::i;:::-;24725;;24600:149::o;24754:347::-;-1:-1:-1;;;;;24968:55:168;;24950:74;;24938:2;24923:18;;25033:62;25091:2;25076:18;;25068:6;25033:62;:::i;25106:889::-;25337:6;25345;25353;25361;25414:3;25402:9;25393:7;25389:23;25385:33;25382:53;;;25431:1;25428;25421:12;25382:53;25454:35;25479:9;25454:35;:::i;:::-;25444:45;;25540:2;25529:9;25525:18;25512:32;25563:18;25604:2;25596:6;25593:14;25590:34;;;25620:1;25617;25610:12;25590:34;25643:74;25709:7;25700:6;25689:9;25685:22;25643:74;:::i;:::-;25633:84;;25770:2;25759:9;25755:18;25742:32;25726:48;;25799:2;25789:8;25786:16;25783:36;;;25815:1;25812;25805:12;25783:36;;25838:71;25901:7;25890:8;25879:9;25875:24;25838:71;:::i;:::-;25828:81;;;25928:61;25981:7;25976:2;25965:9;25961:18;25928:61;:::i;:::-;25918:71;;25106:889;;;;;;;:::o;26000:492::-;26061:3;26099:5;26093:12;26126:6;26121:3;26114:19;26152:4;26181:2;26176:3;26172:12;26165:19;;26218:2;26211:5;26207:14;26239:1;26249:218;26263:6;26260:1;26257:13;26249:218;;;26328:13;;-1:-1:-1;;;;;26324:62:168;26312:75;;26407:12;;;;26442:15;;;;26285:1;26278:9;26249:218;;26497:558;26796:2;26785:9;26778:21;26759:4;26822:64;26882:2;26871:9;26867:18;26859:6;26822:64;:::i;:::-;26934:9;26926:6;26922:22;26917:2;26906:9;26902:18;26895:50;26962:44;26999:6;26991;26962:44;:::i;:::-;26954:52;;;27042:6;27037:2;27026:9;27022:18;27015:34;26497:558;;;;;;:::o;27060:549::-;27134:6;27142;27150;27203:2;27191:9;27182:7;27178:23;27174:32;27171:52;;;27219:1;27216;27209:12;27171:52;27258:9;27245:23;27277:44;27315:5;27277:44;:::i;:::-;27340:5;-1:-1:-1;27397:2:168;27382:18;;27369:32;27410:46;27369:32;27410:46;:::i;:::-;27475:7;-1:-1:-1;27534:2:168;27519:18;;27506:32;27547:30;27506:32;27547:30;:::i;:::-;27596:7;27586:17;;;27060:549;;;;;:::o;27614:414::-;27682:6;27690;27743:2;27731:9;27722:7;27718:23;27714:32;27711:52;;;27759:1;27756;27749:12;27711:52;27798:9;27785:23;27817:44;27855:5;27817:44;:::i;:::-;27880:5;-1:-1:-1;27937:2:168;27922:18;;27909:32;27950:46;27909:32;27950:46;:::i;28225:184::-;28277:77;28274:1;28267:88;28374:4;28371:1;28364:15;28398:4;28395:1;28388:15;28414:125;28479:9;;;28500:10;;;28497:36;;;28513:18;;:::i;28544:227::-;28700:2;28685:18;;28712:53;28689:9;28747:6;28712:53;:::i;28776:184::-;28828:77;28825:1;28818:88;28925:4;28922:1;28915:15;28949:4;28946:1;28939:15;28965:195;29004:3;29035:66;29028:5;29025:77;29022:103;;29105:18;;:::i;:::-;-1:-1:-1;29152:1:168;29141:13;;28965:195::o;29396:184::-;29466:6;29519:2;29507:9;29498:7;29494:23;29490:32;29487:52;;;29535:1;29532;29525:12;29487:52;-1:-1:-1;29558:16:168;;29396:184;-1:-1:-1;29396:184:168:o;29585:250::-;29670:1;29680:113;29694:6;29691:1;29688:13;29680:113;;;29770:11;;;29764:18;29751:11;;;29744:39;29716:2;29709:10;29680:113;;;-1:-1:-1;;29827:1:168;29809:16;;29802:27;29585:250::o;29840:329::-;29881:3;29919:5;29913:12;29946:6;29941:3;29934:19;29962:76;30031:6;30024:4;30019:3;30015:14;30008:4;30001:5;29997:16;29962:76;:::i;:::-;30083:2;30071:15;30088:66;30067:88;30058:98;;;;30158:4;30054:109;;29840:329;-1:-1:-1;;29840:329:168:o;30174:853::-;30569:3;30558:9;30551:22;30532:4;30596:65;30656:3;30645:9;30641:19;30633:6;30596:65;:::i;:::-;30709:9;30701:6;30697:22;30692:2;30681:9;30677:18;30670:50;30743:44;30780:6;30772;30743:44;:::i;:::-;30729:58;;30835:9;30827:6;30823:22;30818:2;30807:9;30803:18;30796:50;30869:44;30906:6;30898;30869:44;:::i;:::-;30855:58;;30961:9;30953:6;30949:22;30944:2;30933:9;30929:18;30922:50;30989:32;31014:6;31006;30989:32;:::i;31032:128::-;31099:9;;;31120:11;;;31117:37;;;31134:18;;:::i;31418:875::-;31689:2;31678:9;31671:21;31652:4;31715:64;31775:2;31764:9;31760:18;31752:6;31715:64;:::i;:::-;31836:22;;;31798:2;31816:18;;;31809:50;;;;31908:13;;31930:22;;;32006:15;;;;31968;;;32039:1;32049:218;32063:6;32060:1;32057:13;32049:218;;;32128:13;;-1:-1:-1;;;;;32124:62:168;32112:75;;32242:15;;;;32207:12;;;;32085:1;32078:9;32049:218;;;-1:-1:-1;32284:3:168;;31418:875;-1:-1:-1;;;;;;;31418:875:168:o;32298:283::-;32491:2;32480:9;32473:21;32454:4;32511:64;32571:2;32560:9;32556:18;32548:6;32511:64;:::i;32909:191::-;32944:3;32975:66;32968:5;32965:77;32962:103;;33045:18;;:::i;:::-;-1:-1:-1;33085:1:168;33081:13;;32909:191::o;33354:271::-;33537:6;33529;33524:3;33511:33;33493:3;33563:16;;33588:13;;;33563:16;33354:271;-1:-1:-1;33354:271:168:o;33932:688::-;34279:2;34268:9;34261:21;34242:4;34305:64;34365:2;34354:9;34350:18;34342:6;34305:64;:::i;:::-;34417:9;34409:6;34405:22;34400:2;34389:9;34385:18;34378:50;34451:43;34487:6;34479;34451:43;:::i;:::-;34437:57;;34542:9;34534:6;34530:22;34525:2;34514:9;34510:18;34503:50;34570:44;34607:6;34599;34570:44;:::i;35545:245::-;35612:6;35665:2;35653:9;35644:7;35640:23;35636:32;35633:52;;;35681:1;35678;35671:12;35633:52;35713:9;35707:16;35732:28;35754:5;35732:28;:::i;36408:1041::-;36462:3;36490:6;36521:5;36515:12;36553:1;36549:2;36546:9;36536:43;;36559:18;;:::i;:::-;36600:2;36595:3;36588:15;;36649:4;36642:5;36638:16;36632:23;36664:61;36719:4;36714:3;36710:14;36696:12;-1:-1:-1;;;;;20285:54:168;20273:67;;20206:140;36664:61;;36773:4;36766:5;36762:16;36756:23;36788:63;36845:4;36840:3;36836:14;36820;-1:-1:-1;;;;;20285:54:168;20273:67;;20206:140;36788:63;;36900:4;36893:5;36889:16;36883:23;36876:4;36871:3;36867:14;36860:47;36956:4;36949:5;36945:16;36939:23;36932:4;36927:3;36923:14;36916:47;37012:4;37005:5;37001:16;36995:23;36988:4;36983:3;36979:14;36972:47;37067:4;37060:5;37056:16;37050:23;37082:63;37139:4;37134:3;37130:14;37114;-1:-1:-1;;;;;20285:54:168;20273:67;;20206:140;37082:63;;37193:4;37186:5;37182:16;37176:23;37208:63;37265:4;37260:3;37256:14;37240;-1:-1:-1;;;;;20285:54:168;20273:67;;20206:140;37208:63;;37290:6;37344:2;37337:5;37333:14;37327:21;37378:2;37373;37368:3;37364:12;37357:24;37397:46;37439:2;37434:3;37430:12;37414:14;37397:46;:::i;37454:620::-;37777:3;37766:9;37759:22;37740:4;37804:58;37857:3;37846:9;37842:19;37834:6;37804:58;:::i;:::-;37910:9;37902:6;37898:22;37893:2;37882:9;37878:18;37871:50;37938:44;37975:6;37967;37938:44;:::i;:::-;38013:2;37998:18;;37991:34;;;;-1:-1:-1;;38056:2:168;38041:18;38034:34;37930:52;37454:620;-1:-1:-1;;37454:620:168:o;38079:168::-;38152:9;;;38183;;38200:15;;;38194:22;;38180:37;38170:71;;38221:18;;:::i;38252:274::-;38292:1;38318;38308:189;;38353:77;38350:1;38343:88;38454:4;38451:1;38444:15;38482:4;38479:1;38472:15;38308:189;-1:-1:-1;38511:9:168;;38252:274::o;38531:287::-;38660:3;38698:6;38692:13;38714:66;38773:6;38768:3;38761:4;38753:6;38749:17;38714:66;:::i;:::-;38796:16;;;;;38531:287;-1:-1:-1;;38531:287:168:o;38823:184::-;38875:77;38872:1;38865:88;38972:4;38969:1;38962:15;38996:4;38993:1;38986:15;39012:868;39385:6;39374:9;39367:25;39348:4;-1:-1:-1;;;;;39501:2:168;39493:6;39489:15;39484:2;39473:9;39469:18;39462:43;39553:2;39545:6;39541:15;39536:2;39525:9;39521:18;39514:43;;39593:3;39588:2;39577:9;39573:18;39566:31;39620:57;39672:3;39661:9;39657:19;39649:6;39620:57;:::i;:::-;39714:6;39708:3;39697:9;39693:19;39686:35;39758:6;39752:3;39741:9;39737:19;39730:35;39814:9;39806:6;39802:22;39796:3;39785:9;39781:19;39774:51;39842:32;39867:6;39859;39842:32;:::i;:::-;39834:40;39012:868;-1:-1:-1;;;;;;;;;;39012:868:168:o;39885:672::-;39950:5;40003:3;39996:4;39988:6;39984:17;39980:27;39970:55;;40021:1;40018;40011:12;39970:55;40050:6;40044:13;40076:4;40100:73;40116:56;40169:2;40116:56;:::i;40100:73::-;40207:15;;;40293:1;40289:10;;;;40277:23;;40273:32;;;40238:12;;;;40317:15;;;40314:35;;;40345:1;40342;40335:12;40314:35;40381:2;40373:6;40369:15;40393:135;40409:6;40404:3;40401:15;40393:135;;;40475:10;;40463:23;;40506:12;;;;40426;;40393:135;;40562:614;40691:6;40699;40752:2;40740:9;40731:7;40727:23;40723:32;40720:52;;;40768:1;40765;40758:12;40720:52;40801:9;40795:16;40830:18;40871:2;40863:6;40860:14;40857:34;;;40887:1;40884;40877:12;40857:34;40910:72;40974:7;40965:6;40954:9;40950:22;40910:72;:::i;:::-;40900:82;;41028:2;41017:9;41013:18;41007:25;40991:41;;41057:2;41047:8;41044:16;41041:36;;;41073:1;41070;41063:12;41041:36;;41096:74;41162:7;41151:8;41140:9;41136:24;41096:74;:::i;41181:216::-;41245:9;;;41273:11;;;41220:3;41303:9;;41331:10;;41327:19;;41356:10;;41348:19;;41324:44;41321:70;;;41371:18;;:::i;:::-;41321:70;;41181:216;;;;:::o;41402:200::-;41468:9;;;41441:4;41496:9;;41524:10;;41536:12;;;41520:29;41559:12;;;41551:21;;41517:56;41514:82;;;41576:18;;:::i;42707:414::-;42952:2;42941:9;42934:21;42915:4;42972:57;43025:2;43014:9;43010:18;43002:6;42972:57;:::i;:::-;43060:2;43045:18;;43038:34;;;;-1:-1:-1;43103:2:168;43088:18;43081:34;42964:65;42707:414;-1:-1:-1;42707:414:168:o",
    "linkReferences": {},
    "immutableReferences": {
      "2794": [
        {
          "start": 440,
          "length": 32
        },
        {
          "start": 1039,
          "length": 32
        },
        {
          "start": 8045,
          "length": 32
        },
        {
          "start": 8395,
          "length": 32
        },
        {
          "start": 8674,
          "length": 32
        }
      ],
      "2937": [
        {
          "start": 4974,
          "length": 32
        }
      ],
      "3764": [
        {
          "start": 2348,
          "length": 32
        },
        {
          "start": 7694,
          "length": 32
        }
      ],
      "3766": [
        {
          "start": 2383,
          "length": 32
        },
        {
          "start": 7745,
          "length": 32
        },
        {
          "start": 7891,
          "length": 32
        }
      ],
      "6152": [
        {
          "start": 6095,
          "length": 32
        },
        {
          "start": 21884,
          "length": 32
        }
      ],
      "6154": [
        {
          "start": 6128,
          "length": 32
        },
        {
          "start": 21917,
          "length": 32
        }
      ],
      "6156": [
        {
          "start": 6062,
          "length": 32
        },
        {
          "start": 21851,
          "length": 32
        }
      ],
      "7947": [
        {
          "start": 1182,
          "length": 32
        },
        {
          "start": 8852,
          "length": 32
        },
        {
          "start": 9212,
          "length": 32
        },
        {
          "start": 20348,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH()": "ad5c4648",
    "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
    "deregisterTokens(bytes32,address[])": "7d3aeb96",
    "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
    "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
    "getActionId(bytes4)": "851c1bb3",
    "getAuthorizer()": "aaabadc5",
    "getDomainSeparator()": "ed24911d",
    "getInternalBalance(address,address[])": "0f5a6efa",
    "getNextNonce(address)": "90193b7c",
    "getPausedState()": "1c0de051",
    "getPool(bytes32)": "f6c00927",
    "getPoolTokenInfo(bytes32,address)": "b05f8e48",
    "getPoolTokens(bytes32)": "f94d4668",
    "getProtocolFeesCollector()": "d2946c2b",
    "hasApprovedRelayer(address,address)": "fec90d72",
    "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
    "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
    "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
    "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
    "registerPool(uint8)": "09b2760f",
    "registerTokens(bytes32,address[],address[])": "66a9c7d2",
    "setAuthorizer(address)": "058a628f",
    "setPaused(bool)": "16c38b3c",
    "setRelayerApproval(address,address,bool)": "fa6e671d",
    "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"contract IWETH\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract ProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculated\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"The `Vault` is Balancer V2's core contract. A single instance of it exists for the entire network, and it is the entity used to interact with Pools by Liquidity Providers who join and exit them, Traders who swap, and Asset Managers who withdraw and deposit tokens. The `Vault`'s source code is split among a number of sub-contracts, with the goal of improving readability and making understanding the system easier. Most sub-contracts have been marked as `abstract` to explicitly indicate that only the full `Vault` is meant to be deployed. Roughly speaking, these are the contents of each sub-contract:  - `AssetManagers`: Pool token Asset Manager registry, and Asset Manager interactions.  - `Fees`: set and compute protocol fees.  - `FlashLoans`: flash loan transfers and fees.  - `PoolBalances`: Pool joins and exits.  - `PoolRegistry`: Pool registration, ID management, and basic queries.  - `PoolTokens`: Pool token registration and registration, and balance queries.  - `Swaps`: Pool swaps.  - `UserBalance`: manage user balances (Internal Balance operations and external balance transfers)  - `VaultAuthorization`: access control, relayers and signature validation. Additionally, the different Pool specializations are handled by the `GeneralPoolsBalance`, `MinimalSwapInfoPoolsBalance` and `TwoTokenPoolsBalance` sub-contracts, which in turn make use of the `BalanceAllocation` library. The most important goal of the `Vault` is to make token swaps use as little gas as possible. This is reflected in a multitude of design decisions, from minor things like the format used to store Pool IDs, to major features such as the different Pool specialization settings. Finally, the large number of tasks carried out by the Vault means its bytecode is very large, close to exceeding the contract size limit imposed by EIP 170 (https://eips.ethereum.org/EIPS/eip-170). Manual tuning of the source code was required to improve code generation and bring the bytecode size below this limit. This includes extensive utilization of `internal` functions (particularly inside modifiers), usage of named return arguments, dedicated storage access methods, dynamic revert reason generation, and usage of inline assembly, to name a few.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer/src/vault/Vault.sol\":\"Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/balancer/src/lib/helpers/AssetHelpers.sol\":{\"keccak256\":\"0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76\",\"dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH\"]},\"lib/balancer/src/lib/helpers/Authentication.sol\":{\"keccak256\":\"0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b\",\"dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF\"]},\"lib/balancer/src/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32\",\"dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9\"]},\"lib/balancer/src/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb\",\"dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH\"]},\"lib/balancer/src/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a\",\"dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq\"]},\"lib/balancer/src/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3\",\"dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ\"]},\"lib/balancer/src/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d\",\"dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc\"]},\"lib/balancer/src/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45\",\"dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9\"]},\"lib/balancer/src/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985\",\"dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj\"]},\"lib/balancer/src/lib/math/FixedPoint.sol\":{\"keccak256\":\"0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a\",\"dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8\"]},\"lib/balancer/src/lib/math/LogExpMath.sol\":{\"keccak256\":\"0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f\",\"dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T\"]},\"lib/balancer/src/lib/math/Math.sol\":{\"keccak256\":\"0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5\",\"dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp\"]},\"lib/balancer/src/lib/openzeppelin/Address.sol\":{\"keccak256\":\"0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e\",\"dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM\"]},\"lib/balancer/src/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246\",\"dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47\",\"dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae\"]},\"lib/balancer/src/lib/openzeppelin/EnumerableSet.sol\":{\"keccak256\":\"0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57\",\"dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK\"]},\"lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6\",\"dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C\"]},\"lib/balancer/src/lib/openzeppelin/SafeCast.sol\":{\"keccak256\":\"0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032\",\"dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk\"]},\"lib/balancer/src/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19\",\"dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj\"]},\"lib/balancer/src/vault/AssetManagers.sol\":{\"keccak256\":\"0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e\",\"dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn\"]},\"lib/balancer/src/vault/AssetTransfersHandler.sol\":{\"keccak256\":\"0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d\",\"dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR\"]},\"lib/balancer/src/vault/Fees.sol\":{\"keccak256\":\"0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de\",\"dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY\"]},\"lib/balancer/src/vault/FlashLoans.sol\":{\"keccak256\":\"0x26fb5818caeb8980cbbab2cccb51f41fea5e5e28ef1516ab5d792427661e2f59\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ce3bc3abda989089faf10f3215abf5daa1cdceb11c80bfdb486d02c8656817b0\",\"dweb:/ipfs/Qmaq3wovoZr22zSfQGWNp3E1gsVHVwkRiAg15EnTtCML3S\"]},\"lib/balancer/src/vault/PoolBalances.sol\":{\"keccak256\":\"0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5\",\"dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b\"]},\"lib/balancer/src/vault/PoolRegistry.sol\":{\"keccak256\":\"0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61\",\"dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo\"]},\"lib/balancer/src/vault/PoolTokens.sol\":{\"keccak256\":\"0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18\",\"dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW\"]},\"lib/balancer/src/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1\",\"dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy\"]},\"lib/balancer/src/vault/Swaps.sol\":{\"keccak256\":\"0xc98ad2e27bcfd93272ce35b5be8b80f65876142e3a23af7dbe2cc18de3fe03f3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2e34f80abec5db0b6e3abba2ce3958bcaffe7fd53ea4d9af947400afdcff103a\",\"dweb:/ipfs/QmV2WTXMYdSDVx1HMEzMqSYak6F2g8iJqhTzPSNAQmEgpC\"]},\"lib/balancer/src/vault/UserBalance.sol\":{\"keccak256\":\"0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145\",\"dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv\"]},\"lib/balancer/src/vault/Vault.sol\":{\"keccak256\":\"0x8e26e3970f533eef5c24bb9c581e3f340b81f1f096217843fe3a67f22c7a6d58\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d55f23ed8b0e1cd52d517e640d856ae529308072de03cbf05797ec524ddeff50\",\"dweb:/ipfs/QmTsJudtVpPCyVVs1r1x5mgF1PuuH2FSuGQh3eFGjtJ4sx\"]},\"lib/balancer/src/vault/VaultAuthorization.sol\":{\"keccak256\":\"0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb\",\"dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz\"]},\"lib/balancer/src/vault/balances/BalanceAllocation.sol\":{\"keccak256\":\"0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0\",\"dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny\"]},\"lib/balancer/src/vault/balances/GeneralPoolsBalance.sol\":{\"keccak256\":\"0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e\",\"dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh\"]},\"lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol\":{\"keccak256\":\"0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8\",\"dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH\"]},\"lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol\":{\"keccak256\":\"0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9\",\"dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4\"]},\"lib/balancer/src/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4\",\"dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4\"]},\"lib/balancer/src/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2\",\"dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB\"]},\"lib/balancer/src/vault/interfaces/IBasePool.sol\":{\"keccak256\":\"0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd\",\"dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW\"]},\"lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce\",\"dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP\"]},\"lib/balancer/src/vault/interfaces/IGeneralPool.sol\":{\"keccak256\":\"0x450c3ed5a9bc6116697b9b424de93d00f23e870fdee9c0bda009cc7ef9268abc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://98fb2bd1c1f94dc1dfd70adad46df1fedd9697aee089b048696444641154d315\",\"dweb:/ipfs/QmU41tYKnbfqYqwvQxFj8JVpaVnYYsHfTL9oPNmE1peqkT\"]},\"lib/balancer/src/vault/interfaces/IMinimalSwapInfoPool.sol\":{\"keccak256\":\"0x5119d39c32df88286cc5391b81a7ad1208e46825b32dd49e68900342c5f0c741\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1400c06d1b8c0a6075f0d03e5bc1b02336f952f94eb4753726cbb206a0741372\",\"dweb:/ipfs/Qmcu8MRnpV39xyxzHAvAdGJXHp9yKxCvGcixbtci6YseA7\"]},\"lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol\":{\"keccak256\":\"0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05\",\"dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp\"]},\"lib/balancer/src/vault/interfaces/IVault.sol\":{\"keccak256\":\"0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619\",\"dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq\"]},\"lib/canonical-weth/src/interfaces/IWETH.sol\":{\"keccak256\":\"0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05\",\"dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "authorizer",
              "type": "address"
            },
            {
              "internalType": "contract IWETH",
              "name": "weth",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pauseWindowDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bufferPeriodDuration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExternalBalanceTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashLoan",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InternalBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PausedStateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "deltas",
              "type": "int256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "protocolFeeAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "cashDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "managedDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceManaged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelayerApprovalChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "int256[]",
              "name": "limits",
              "type": "int256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "batchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "assetDeltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exitPool"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashLoan"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuthorizer",
          "outputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInternalBalance",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPausedState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "pauseWindowEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bufferPeriodEndTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokenInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "managed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolFeesCollector",
          "outputs": [
            {
              "internalType": "contract ProtocolFeesCollector",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasApprovedRelayer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinPool"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.PoolBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.PoolBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "managePoolBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.UserBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.UserBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "manageUserBalance"
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queryBatchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPool",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTokens"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthorizer"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelayerApproval"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountCalculated",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "WETH()": {
            "details": "Returns the Vault's WETH instance."
          },
          "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
            "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
          },
          "deregisterTokens(bytes32,address[])": {
            "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
          },
          "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
          },
          "flashLoan(address,address[],uint256[],bytes)": {
            "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
          },
          "getActionId(bytes4)": {
            "details": "Returns the action identifier associated with the external function described by `selector`."
          },
          "getAuthorizer()": {
            "details": "Returns the Vault's Authorizer."
          },
          "getDomainSeparator()": {
            "details": "Returns the EIP712 domain separator."
          },
          "getInternalBalance(address,address[])": {
            "details": "Returns `user`'s Internal Balance for a set of tokens."
          },
          "getNextNonce(address)": {
            "details": "Returns the next nonce used by an address to sign messages."
          },
          "getPausedState()": {
            "details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."
          },
          "getPool(bytes32)": {
            "details": "Returns a Pool's contract address and specialization setting."
          },
          "getPoolTokenInfo(bytes32,address)": {
            "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
          },
          "getPoolTokens(bytes32)": {
            "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
          },
          "getProtocolFeesCollector()": {
            "details": "Returns the current protocol fee module."
          },
          "hasApprovedRelayer(address,address)": {
            "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
          },
          "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
          },
          "managePoolBalance((uint8,bytes32,address,uint256)[])": {
            "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
          },
          "manageUserBalance((uint8,address,uint256,address,address)[])": {
            "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
          },
          "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
            "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
          },
          "registerPool(uint8)": {
            "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
          },
          "registerTokens(bytes32,address[],address[])": {
            "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
          },
          "setAuthorizer(address)": {
            "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
          },
          "setPaused(bool)": {
            "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
          },
          "setRelayerApproval(address,address,bool)": {
            "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
          },
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
            "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/balancer/src/vault/Vault.sol": "Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/helpers/AssetHelpers.sol": {
        "keccak256": "0x8919c48601af68bdfd8fb1946fa0af1e54a863ba933a48bdc64b2852a749bd00",
        "urls": [
          "bzz-raw://5aab8fc0dcd62002d4c02f85d46bd6dc771b871a273347c1b6c3b32a2c131a76",
          "dweb:/ipfs/QmYWFnb7LEk85DS7JkMDDxENcJhWxiaoXCNAUQTvmZcPCH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/Authentication.sol": {
        "keccak256": "0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3",
        "urls": [
          "bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b",
          "dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942",
        "urls": [
          "bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32",
          "dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537",
        "urls": [
          "bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb",
          "dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b",
        "urls": [
          "bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a",
          "dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2",
        "urls": [
          "bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3",
          "dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/InputHelpers.sol": {
        "keccak256": "0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42",
        "urls": [
          "bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d",
          "dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c",
        "urls": [
          "bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45",
          "dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12",
        "urls": [
          "bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985",
          "dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/FixedPoint.sol": {
        "keccak256": "0xa76130c94d6bb62072b28d193fbee5a87d3701a452f491c4a209d869a0528756",
        "urls": [
          "bzz-raw://9915f5909b86affb9cd06450e676dfed644543265516a21240a3568188ff5e5a",
          "dweb:/ipfs/QmYJZ7RRtGyUzwc8z4qtRyhyAaPDumA97SqBEXpLoRV4d8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/LogExpMath.sol": {
        "keccak256": "0x2b0f4d2c30da402a5fad1b073e5b012a02039069d62458aa3e044e2705a174cb",
        "urls": [
          "bzz-raw://c3c683dba7eb91f04239e7d4c56228147d67ca8631f91ed40fe49a5a76563a0f",
          "dweb:/ipfs/QmTnFknptmqySHSGDntypy6fyyJYbpH1g5ktDUj2DVXj4T"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/Math.sol": {
        "keccak256": "0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d",
        "urls": [
          "bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5",
          "dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/Address.sol": {
        "keccak256": "0xd18d27a553120116908ad6d58fcc4556bc6b96ab27c7af84f3aa2c2621ac022b",
        "urls": [
          "bzz-raw://451d010c7efa1d87285a4c6e68c2c6bfe6774aff7aada14d6805a169023c533e",
          "dweb:/ipfs/QmdGUThM5JXdwEkn4kRg1sVuhXPGMNDRh3hwskx2upjpJM"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717",
        "urls": [
          "bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246",
          "dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableMap.sol": {
        "keccak256": "0x971db51d8bd1d5ebb808ab46376a03a7430de50ea5b56eb15e3f4845d1035f27",
        "urls": [
          "bzz-raw://51cfc148e417aacf7bf31e2d92db047e858ecccbbc3e8dd013253e4461490a47",
          "dweb:/ipfs/QmWwTXt5imULRv7srgKwF4Uo56QiZ7cARW7DFME1nDyoae"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EnumerableSet.sol": {
        "keccak256": "0xf316c789176ce975f4d1da11275398fcf228b4f6101c40708bcd042e24c8a780",
        "urls": [
          "bzz-raw://b8e4f39cf333bb1eb610af95680095e5db1ae71a0d19cac0f9be0598b204cd57",
          "dweb:/ipfs/QmNbr1LNzHuKNMY3TKEW3mst1XdbdFDabq41eW924FvWrK"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862",
        "urls": [
          "bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6",
          "dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeCast.sol": {
        "keccak256": "0x962b6e641fa3c305176e88ad54d00ebdfea448e0ab25b712828f5c78e9a917ec",
        "urls": [
          "bzz-raw://b24e7a2dd6ede68aff01530ab90918a187e8bf3010584bd73dcdd0031c5eb032",
          "dweb:/ipfs/QmSAETq7UmZjyntWyxD2kJSnWSuBkYjUnAoT17tuS24EVk"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8",
        "urls": [
          "bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19",
          "dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/vault/AssetManagers.sol": {
        "keccak256": "0xa035d80740041812057542892092a1a4d820aacd24a901dd598b29b63b5e709d",
        "urls": [
          "bzz-raw://927323450bf446e252ff70b039ad2a228fa72326065107087161549850d8a03e",
          "dweb:/ipfs/QmZubY3E4ahd5vAFHdW2xUEdCLajfcJHJXcDmhzaNx6hWn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/AssetTransfersHandler.sol": {
        "keccak256": "0x4abf5b9f0981177a68a628b8ebcc5781dda876f02a7ca75c57092e6899113e45",
        "urls": [
          "bzz-raw://f1ef2a74f50565ae31f7f16c3667ef4eb806be030cbda275d162dc356f6c865d",
          "dweb:/ipfs/QmQiUe9PMkDKF68v4mhUK2mEFKV5SVAFJ8wbX1aYcQifFR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Fees.sol": {
        "keccak256": "0x1efa5220be97d81503c8f81595e2cb74ca807dff79c189e79691161c5b8a6654",
        "urls": [
          "bzz-raw://bd8f591578c77f263666d28a6d7951a25c9c626dfb310c784a9db60c262204de",
          "dweb:/ipfs/QmPBZ9PHruhMvdJjzeQfruvEtHeiqhud32C4PZFiJKb8dY"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/FlashLoans.sol": {
        "keccak256": "0x26fb5818caeb8980cbbab2cccb51f41fea5e5e28ef1516ab5d792427661e2f59",
        "urls": [
          "bzz-raw://ce3bc3abda989089faf10f3215abf5daa1cdceb11c80bfdb486d02c8656817b0",
          "dweb:/ipfs/Qmaq3wovoZr22zSfQGWNp3E1gsVHVwkRiAg15EnTtCML3S"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolBalances.sol": {
        "keccak256": "0xd6c2b56e661fe9f97fc007d51731ceed59df3771cba26161a815204906afa8ec",
        "urls": [
          "bzz-raw://6ae722679cbe89b9ba763b121f25f7cd0be607b6a7ed3f682b5e44d6408238d5",
          "dweb:/ipfs/QmbZmAEzEHGpVnPfFTR8DZT4M1tn6JSKDTYw4a6v5mDY2b"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolRegistry.sol": {
        "keccak256": "0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5",
        "urls": [
          "bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61",
          "dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/PoolTokens.sol": {
        "keccak256": "0xeea9563c1ce522ab5fba46cc4384ed5899c0025e08482e8ee0f5a891d7c43d33",
        "urls": [
          "bzz-raw://59943db10a9016b85a3acdda0c95d3c27ed9de9572e39112da70b0ab8812ff18",
          "dweb:/ipfs/QmXNRbqyZxUUFad5wQjP6HcqggpAtXUJX9JQNPLu7A1vAW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e",
        "urls": [
          "bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1",
          "dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Swaps.sol": {
        "keccak256": "0xc98ad2e27bcfd93272ce35b5be8b80f65876142e3a23af7dbe2cc18de3fe03f3",
        "urls": [
          "bzz-raw://2e34f80abec5db0b6e3abba2ce3958bcaffe7fd53ea4d9af947400afdcff103a",
          "dweb:/ipfs/QmV2WTXMYdSDVx1HMEzMqSYak6F2g8iJqhTzPSNAQmEgpC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/UserBalance.sol": {
        "keccak256": "0x6c8c2b5a4f2cb412b643e47cad02aa65c8208ca3709d87a91983e44ea8e47b5d",
        "urls": [
          "bzz-raw://c6f3d9cea8579ffd715a02c16fdc6586faffb58958b107ebb0e05fe834da9145",
          "dweb:/ipfs/QmcY8CgXLYZFxUXkE8qMvhRhJu8fKBfX6yLhLTcHd9HJzv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/Vault.sol": {
        "keccak256": "0x8e26e3970f533eef5c24bb9c581e3f340b81f1f096217843fe3a67f22c7a6d58",
        "urls": [
          "bzz-raw://d55f23ed8b0e1cd52d517e640d856ae529308072de03cbf05797ec524ddeff50",
          "dweb:/ipfs/QmTsJudtVpPCyVVs1r1x5mgF1PuuH2FSuGQh3eFGjtJ4sx"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/VaultAuthorization.sol": {
        "keccak256": "0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1",
        "urls": [
          "bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb",
          "dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/BalanceAllocation.sol": {
        "keccak256": "0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349",
        "urls": [
          "bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0",
          "dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/GeneralPoolsBalance.sol": {
        "keccak256": "0xf93cc0a65759b2c3ca3395bbaae92a9a26b0f67bedb5ea0d635818b4d3553597",
        "urls": [
          "bzz-raw://efcc89408bc4ef8416921c54f4eb6739d987996fe87c341403fa7e3b7e4e3c6e",
          "dweb:/ipfs/QmXHG2nV6JZ8qNKYNTSufcq9BT2JXi2j5qTzdRu63z9mBh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/MinimalSwapInfoPoolsBalance.sol": {
        "keccak256": "0x9af5e92ef5dea7c8ec8b081bc6eb84be3cff841973a8ee3e414c959b7cad8c5a",
        "urls": [
          "bzz-raw://d1b06ccc6aa13cf8d331f1685df07ee44d6bd93f5341d0165cb42ff2bc6ff8e8",
          "dweb:/ipfs/QmcQe6GRBpLhVacZu58XVebP49tBajFvfA5x2rqHnhnCaH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol": {
        "keccak256": "0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26",
        "urls": [
          "bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9",
          "dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAsset.sol": {
        "keccak256": "0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c",
        "urls": [
          "bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4",
          "dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa",
        "urls": [
          "bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2",
          "dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IBasePool.sol": {
        "keccak256": "0x5c8b9e7a69732b8d718b15abf8ab7479f1661dc397ad0b68574ba79e77628a7d",
        "urls": [
          "bzz-raw://429f0a529798adee4261f454f8fe601551a7c007c8b4cbfb2962ba99a51f9ccd",
          "dweb:/ipfs/QmRDcGbJMPRyV735QC6cP332TsZ7SKgNbisACMw1jfMzuW"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f",
        "urls": [
          "bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce",
          "dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IGeneralPool.sol": {
        "keccak256": "0x450c3ed5a9bc6116697b9b424de93d00f23e870fdee9c0bda009cc7ef9268abc",
        "urls": [
          "bzz-raw://98fb2bd1c1f94dc1dfd70adad46df1fedd9697aee089b048696444641154d315",
          "dweb:/ipfs/QmU41tYKnbfqYqwvQxFj8JVpaVnYYsHfTL9oPNmE1peqkT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IMinimalSwapInfoPool.sol": {
        "keccak256": "0x5119d39c32df88286cc5391b81a7ad1208e46825b32dd49e68900342c5f0c741",
        "urls": [
          "bzz-raw://1400c06d1b8c0a6075f0d03e5bc1b02336f952f94eb4753726cbb206a0741372",
          "dweb:/ipfs/Qmcu8MRnpV39xyxzHAvAdGJXHp9yKxCvGcixbtci6YseA7"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IPoolSwapStructs.sol": {
        "keccak256": "0xc4c72b44bec181e3b3a360d54c1dcac2104b20ca56e9b939210f9673e58d550e",
        "urls": [
          "bzz-raw://6e22aa83552c18a3659ec0f8c765c21e8d9125a634f0cf9b4ef6ec26afc61b05",
          "dweb:/ipfs/QmSfGVR4F2bwyBu4y78aVRQfGB4Pd1GDgVkC1HYUG3icxp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IVault.sol": {
        "keccak256": "0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c",
        "urls": [
          "bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619",
          "dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/canonical-weth/src/interfaces/IWETH.sol": {
        "keccak256": "0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3",
        "urls": [
          "bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05",
          "dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/balancer/src/vault/Vault.sol",
    "id": 11982,
    "exportedSymbols": {
      "Address": [
        6147
      ],
      "AssetHelpers": [
        2928
      ],
      "AssetManagers": [
        7482
      ],
      "AssetTransfersHandler": [
        7742
      ],
      "Authentication": [
        3005
      ],
      "BalanceAllocation": [
        12871
      ],
      "EIP712": [
        6240
      ],
      "EnumerableMap": [
        6614
      ],
      "EnumerableSet": [
        6827
      ],
      "Errors": [
        3317
      ],
      "Fees": [
        8031
      ],
      "FixedPoint": [
        4271
      ],
      "FlashLoans": [
        8287
      ],
      "GeneralPoolsBalance": [
        13303
      ],
      "IAsset": [
        14558
      ],
      "IAuthentication": [
        3328
      ],
      "IAuthorizer": [
        14573
      ],
      "IBasePool": [
        14631
      ],
      "IERC20": [
        670
      ],
      "IFlashLoanRecipient": [
        14651
      ],
      "IGeneralPool": [
        14673
      ],
      "IMinimalSwapInfoPool": [
        14692
      ],
      "IPoolSwapStructs": [
        14719
      ],
      "ISignaturesValidator": [
        3346
      ],
      "ITemporarilyPausable": [
        3365
      ],
      "IVault": [
        15228
      ],
      "IWETH": [
        15479
      ],
      "InputHelpers": [
        3498
      ],
      "LogExpMath": [
        5540
      ],
      "Math": [
        5806
      ],
      "MinimalSwapInfoPoolsBalance": [
        13772
      ],
      "PoolBalances": [
        9039
      ],
      "PoolRegistry": [
        9320
      ],
      "PoolTokens": [
        9741
      ],
      "ProtocolFeesCollector": [
        10020
      ],
      "ReentrancyGuard": [
        6883
      ],
      "SafeCast": [
        6912
      ],
      "SafeERC20": [
        7009
      ],
      "SignaturesValidator": [
        3749
      ],
      "Swaps": [
        11348
      ],
      "TemporarilyPausable": [
        3929
      ],
      "TwoTokenPoolsBalance": [
        14554
      ],
      "UserBalance": [
        11916
      ],
      "Vault": [
        11981
      ],
      "VaultAuthorization": [
        12232
      ],
      "_require": [
        3023
      ],
      "_revert": [
        3031
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:3191:39",
    "nodes": [
      {
        "id": 11918,
        "nodeType": "PragmaDirective",
        "src": "688:31:39",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 11919,
        "nodeType": "ImportDirective",
        "src": "721:38:39",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/interfaces/IAuthorizer.sol",
        "file": "./interfaces/IAuthorizer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11982,
        "sourceUnit": 14574,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11920,
        "nodeType": "ImportDirective",
        "src": "760:45:39",
        "nodes": [],
        "absolutePath": "lib/canonical-weth/src/interfaces/IWETH.sol",
        "file": "canonical-weth/interfaces/IWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11982,
        "sourceUnit": 15480,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11921,
        "nodeType": "ImportDirective",
        "src": "807:34:39",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/VaultAuthorization.sol",
        "file": "./VaultAuthorization.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11982,
        "sourceUnit": 12233,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11922,
        "nodeType": "ImportDirective",
        "src": "842:26:39",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/FlashLoans.sol",
        "file": "./FlashLoans.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11982,
        "sourceUnit": 8288,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11923,
        "nodeType": "ImportDirective",
        "src": "869:21:39",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/Swaps.sol",
        "file": "./Swaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11982,
        "sourceUnit": 11349,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11981,
        "nodeType": "ContractDefinition",
        "src": "3231:648:39",
        "nodes": [
          {
            "id": 11954,
            "nodeType": "FunctionDefinition",
            "src": "3293:322:39",
            "nodes": [],
            "body": {
              "id": 11953,
              "nodeType": "Block",
              "src": "3551:64:39",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11943,
                    "name": "authorizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11933,
                    "src": "3457:10:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$14573",
                      "typeString": "contract IAuthorizer"
                    }
                  }
                ],
                "id": 11944,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11942,
                  "name": "VaultAuthorization",
                  "nameLocations": [
                    "3438:18:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12232,
                  "src": "3438:18:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3438:30:39"
              },
              {
                "arguments": [
                  {
                    "id": 11946,
                    "name": "weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11936,
                    "src": "3482:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$15479",
                      "typeString": "contract IWETH"
                    }
                  }
                ],
                "id": 11947,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11945,
                  "name": "AssetHelpers",
                  "nameLocations": [
                    "3469:12:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2928,
                  "src": "3469:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3469:18:39"
              },
              {
                "arguments": [
                  {
                    "id": 11949,
                    "name": "pauseWindowDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11938,
                    "src": "3508:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 11950,
                    "name": "bufferPeriodDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11940,
                    "src": "3529:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11951,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11948,
                  "name": "TemporarilyPausable",
                  "nameLocations": [
                    "3488:19:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3929,
                  "src": "3488:19:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3488:62:39"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11933,
                  "mutability": "mutable",
                  "name": "authorizer",
                  "nameLocation": "3326:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11954,
                  "src": "3314:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizer_$14573",
                    "typeString": "contract IAuthorizer"
                  },
                  "typeName": {
                    "id": 11932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11931,
                      "name": "IAuthorizer",
                      "nameLocations": [
                        "3314:11:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14573,
                      "src": "3314:11:39"
                    },
                    "referencedDeclaration": 14573,
                    "src": "3314:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$14573",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11936,
                  "mutability": "mutable",
                  "name": "weth",
                  "nameLocation": "3352:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11954,
                  "src": "3346:10:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWETH_$15479",
                    "typeString": "contract IWETH"
                  },
                  "typeName": {
                    "id": 11935,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11934,
                      "name": "IWETH",
                      "nameLocations": [
                        "3346:5:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15479,
                      "src": "3346:5:39"
                    },
                    "referencedDeclaration": 15479,
                    "src": "3346:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$15479",
                      "typeString": "contract IWETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11938,
                  "mutability": "mutable",
                  "name": "pauseWindowDuration",
                  "nameLocation": "3374:19:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11954,
                  "src": "3366:27:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3366:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11940,
                  "mutability": "mutable",
                  "name": "bufferPeriodDuration",
                  "nameLocation": "3411:20:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11954,
                  "src": "3403:28:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3403:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:133:39"
            },
            "returnParameters": {
              "id": 11952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3551:0:39"
            },
            "scope": 11981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11969,
            "nodeType": "FunctionDefinition",
            "src": "3621:111:39",
            "nodes": [],
            "body": {
              "id": 11968,
              "nodeType": "Block",
              "src": "3697:35:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11965,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11956,
                        "src": "3718:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11964,
                      "name": "_setPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3884,
                      "src": "3707:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 11966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:18:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11967,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:18:39"
                }
              ]
            },
            "baseFunctions": [
              15220
            ],
            "functionSelector": "16c38b3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11960,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11959,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3671:12:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6858,
                  "src": "3671:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3671:12:39"
              },
              {
                "id": 11962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11961,
                  "name": "authenticate",
                  "nameLocations": [
                    "3684:12:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2956,
                  "src": "3684:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3684:12:39"
              }
            ],
            "name": "setPaused",
            "nameLocation": "3630:9:39",
            "overrides": {
              "id": 11958,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3662:8:39"
            },
            "parameters": {
              "id": 11957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11956,
                  "mutability": "mutable",
                  "name": "paused",
                  "nameLocation": "3645:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11969,
                  "src": "3640:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3639:13:39"
            },
            "returnParameters": {
              "id": 11963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3697:0:39"
            },
            "scope": 11981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11980,
            "nodeType": "FunctionDefinition",
            "src": "3791:86:39",
            "nodes": [],
            "body": {
              "id": 11979,
              "nodeType": "Block",
              "src": "3846:31:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11976,
                      "name": "_WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2820,
                      "src": "3863:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWETH_$15479_$",
                        "typeString": "function () view returns (contract IWETH)"
                      }
                    },
                    "id": 11977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:7:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$15479",
                      "typeString": "contract IWETH"
                    }
                  },
                  "functionReturnParameters": 11975,
                  "id": 11978,
                  "nodeType": "Return",
                  "src": "3856:14:39"
                }
              ]
            },
            "baseFunctions": [
              15227
            ],
            "functionSelector": "ad5c4648",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WETH",
            "nameLocation": "3800:4:39",
            "overrides": {
              "id": 11971,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3821:8:39"
            },
            "parameters": {
              "id": 11970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3804:2:39"
            },
            "returnParameters": {
              "id": 11975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11974,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11980,
                  "src": "3839:5:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWETH_$15479",
                    "typeString": "contract IWETH"
                  },
                  "typeName": {
                    "id": 11973,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11972,
                      "name": "IWETH",
                      "nameLocations": [
                        "3839:5:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15479,
                      "src": "3839:5:39"
                    },
                    "referencedDeclaration": 15479,
                    "src": "3839:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$15479",
                      "typeString": "contract IWETH"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3838:7:39"
            },
            "scope": 11981,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11925,
              "name": "VaultAuthorization",
              "nameLocations": [
                "3249:18:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12232,
              "src": "3249:18:39"
            },
            "id": 11926,
            "nodeType": "InheritanceSpecifier",
            "src": "3249:18:39"
          },
          {
            "baseName": {
              "id": 11927,
              "name": "FlashLoans",
              "nameLocations": [
                "3269:10:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8287,
              "src": "3269:10:39"
            },
            "id": 11928,
            "nodeType": "InheritanceSpecifier",
            "src": "3269:10:39"
          },
          {
            "baseName": {
              "id": 11929,
              "name": "Swaps",
              "nameLocations": [
                "3281:5:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11348,
              "src": "3281:5:39"
            },
            "id": 11930,
            "nodeType": "InheritanceSpecifier",
            "src": "3281:5:39"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [
          10020
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11924,
          "nodeType": "StructuredDocumentation",
          "src": "892:2338:39",
          "text": " @dev The `Vault` is Balancer V2's core contract. A single instance of it exists for the entire network, and it is the\n entity used to interact with Pools by Liquidity Providers who join and exit them, Traders who swap, and Asset\n Managers who withdraw and deposit tokens.\n The `Vault`'s source code is split among a number of sub-contracts, with the goal of improving readability and making\n understanding the system easier. Most sub-contracts have been marked as `abstract` to explicitly indicate that only\n the full `Vault` is meant to be deployed.\n Roughly speaking, these are the contents of each sub-contract:\n  - `AssetManagers`: Pool token Asset Manager registry, and Asset Manager interactions.\n  - `Fees`: set and compute protocol fees.\n  - `FlashLoans`: flash loan transfers and fees.\n  - `PoolBalances`: Pool joins and exits.\n  - `PoolRegistry`: Pool registration, ID management, and basic queries.\n  - `PoolTokens`: Pool token registration and registration, and balance queries.\n  - `Swaps`: Pool swaps.\n  - `UserBalance`: manage user balances (Internal Balance operations and external balance transfers)\n  - `VaultAuthorization`: access control, relayers and signature validation.\n Additionally, the different Pool specializations are handled by the `GeneralPoolsBalance`,\n `MinimalSwapInfoPoolsBalance` and `TwoTokenPoolsBalance` sub-contracts, which in turn make use of the\n `BalanceAllocation` library.\n The most important goal of the `Vault` is to make token swaps use as little gas as possible. This is reflected in a\n multitude of design decisions, from minor things like the format used to store Pool IDs, to major features such as\n the different Pool specialization settings.\n Finally, the large number of tasks carried out by the Vault means its bytecode is very large, close to exceeding\n the contract size limit imposed by EIP 170 (https://eips.ethereum.org/EIPS/eip-170). Manual tuning of the source code\n was required to improve code generation and bring the bytecode size below this limit. This includes extensive\n utilization of `internal` functions (particularly inside modifiers), usage of named return arguments, dedicated\n storage access methods, dynamic revert reason generation, and usage of inline assembly, to name a few."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11981,
          11348,
          9039,
          11916,
          9741,
          7482,
          14554,
          13772,
          9320,
          8287,
          12232,
          3929,
          3749,
          6240,
          3005,
          3328,
          7742,
          13303,
          6883,
          8031,
          15228,
          3365,
          3346,
          2928
        ],
        "name": "Vault",
        "nameLocation": "3240:5:39",
        "scope": 11982,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 39
}