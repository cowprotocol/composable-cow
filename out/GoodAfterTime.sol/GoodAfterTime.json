{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "OrderNotValid",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "ConditionalOrderCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "offchainInput",
          "type": "bytes"
        }
      ],
      "name": "getTradeableOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "order",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ctx",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "offchainInput",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610fa2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806314a2a7841461006e578063b8296fc414610083575b600080fd5b610059610054366004610771565b6100a3565b60405190151581526020015b60405180910390f35b61008161007c366004610838565b61013c565b005b610096610091366004610926565b610259565b60405161006591906109c5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061013657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061014d8b8b8989898989610259565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461024c57604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906102c686860187610cab565b90508060a0015142101561033957604080518082018252600981527f746f6f206561726c790000000000000000000000000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b608081015181516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c81166004830152909116906370a0823190602401602060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610d96565b101561043c57604080518082018252601481527f62616c616e636520696e73756666696369656e74000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b600061044a84860186610daf565b61010083015151909150156105a65760008261010001518060200190518101906104749190610dc8565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16630d1003ee85606001518660000151876020015186602001516040518563ffffffff1660e01b81526004016104cb9493929190610e8f565b602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190610d96565b905061271082604001516127106105239190610f07565b61052d9083610f1a565b6105379190610f31565b8310156105a357604080518082018252601481527f707269636520636865636b6572206661696c6564000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b50505b604051806101800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200182815260200161062f8460c001516106d7565b63ffffffff1681526020018361012001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018360e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981525092505050979650505050505050565b600063ffffffff82111561076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610243565b5090565b60006020828403121561078357600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146107b357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146107dc57600080fd5b50565b80356107ea816107ba565b919050565b60008083601f84011261080157600080fd5b50813567ffffffffffffffff81111561081957600080fd5b60208301915083602082850101111561083157600080fd5b9250929050565b6000806000806000806000806000806102608b8d03121561085857600080fd5b6108628b356107ba565b8a35995060208b0135610874816107ba565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff808211156108a657600080fd5b6108b28e838f016107ef565b909750955060c08d01359150808211156108cb57600080fd5b506108d88d828e016107ef565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561091157600080fd5b60e08b0190509295989b9194979a5092959850565b600080600080600080600060a0888a03121561094157600080fd5b873561094c816107ba565b9650602088013561095c816107ba565b955060408801359450606088013567ffffffffffffffff8082111561098057600080fd5b61098c8b838c016107ef565b909650945060808a01359150808211156109a557600080fd5b506109b28a828b016107ef565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610a0b602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610a33604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610a5f60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610a948285018215159052565b5050610140838101519083015261016092830151929091019190915290565b60005b83811015610ace578181015183820152602001610ab6565b50506000910152565b60008151808452610aef816020860160208601610ab3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107b36020830184610ad7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610b8757610b87610b34565b60405290565b6040516060810167ffffffffffffffff81118282101715610b8757610b87610b34565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bf757610bf7610b34565b604052919050565b803580151581146107ea57600080fd5b600067ffffffffffffffff821115610c2957610c29610b34565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112610c6657600080fd5b8135610c79610c7482610c0f565b610bb0565b818152846020838601011115610c8e57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610cbd57600080fd5b813567ffffffffffffffff80821115610cd557600080fd5b908301906101408286031215610cea57600080fd5b610cf2610b63565b610cfb836107df565b8152610d09602084016107df565b6020820152610d1a604084016107df565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610d5360e08401610bff565b60e08201526101008084013583811115610d6c57600080fd5b610d7888828701610c55565b91830191909152506101209283013592810192909252509392505050565b600060208284031215610da857600080fd5b5051919050565b600060208284031215610dc157600080fd5b5035919050565b60006020808385031215610ddb57600080fd5b825167ffffffffffffffff80821115610df357600080fd5b9084019060608287031215610e0757600080fd5b610e0f610b8d565b8251610e1a816107ba565b81528284015182811115610e2d57600080fd5b83019150601f82018713610e4057600080fd5b8151610e4e610c7482610c0f565b8181528886838601011115610e6257600080fd5b610e7182878301888701610ab3565b80868401525050604083015160408201528094505050505092915050565b848152600073ffffffffffffffffffffffffffffffffffffffff808616602084015280851660408401525060806060830152610ece6080830184610ad7565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561013657610136610ed8565b808202811582820484141761013657610136610ed8565b600082610f67577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122035dc2f2b19fa5013e81263fdc060f99f34eaeb7dc2968d9eeb3e9b8306a1b2bd64736f6c63430008130033",
    "sourceMap": "1384:2698:143:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806314a2a7841461006e578063b8296fc414610083575b600080fd5b610059610054366004610771565b6100a3565b60405190151581526020015b60405180910390f35b61008161007c366004610838565b61013c565b005b610096610091366004610926565b610259565b60405161006591906109c5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061013657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061014d8b8b8989898989610259565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461024c57604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906102c686860187610cab565b90508060a0015142101561033957604080518082018252600981527f746f6f206561726c790000000000000000000000000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b608081015181516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c81166004830152909116906370a0823190602401602060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610d96565b101561043c57604080518082018252601481527f62616c616e636520696e73756666696369656e74000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b600061044a84860186610daf565b61010083015151909150156105a65760008261010001518060200190518101906104749190610dc8565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16630d1003ee85606001518660000151876020015186602001516040518563ffffffff1660e01b81526004016104cb9493929190610e8f565b602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190610d96565b905061271082604001516127106105239190610f07565b61052d9083610f1a565b6105379190610f31565b8310156105a357604080518082018252601481527f707269636520636865636b6572206661696c6564000000000000000000000000602082015290517fc8fc27250000000000000000000000000000000000000000000000000000000081526102439190600401610b21565b50505b604051806101800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200182815260200161062f8460c001516106d7565b63ffffffff1681526020018361012001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018360e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981525092505050979650505050505050565b600063ffffffff82111561076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610243565b5090565b60006020828403121561078357600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146107b357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146107dc57600080fd5b50565b80356107ea816107ba565b919050565b60008083601f84011261080157600080fd5b50813567ffffffffffffffff81111561081957600080fd5b60208301915083602082850101111561083157600080fd5b9250929050565b6000806000806000806000806000806102608b8d03121561085857600080fd5b6108628b356107ba565b8a35995060208b0135610874816107ba565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff808211156108a657600080fd5b6108b28e838f016107ef565b909750955060c08d01359150808211156108cb57600080fd5b506108d88d828e016107ef565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561091157600080fd5b60e08b0190509295989b9194979a5092959850565b600080600080600080600060a0888a03121561094157600080fd5b873561094c816107ba565b9650602088013561095c816107ba565b955060408801359450606088013567ffffffffffffffff8082111561098057600080fd5b61098c8b838c016107ef565b909650945060808a01359150808211156109a557600080fd5b506109b28a828b016107ef565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610a0b602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610a33604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610a5f60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610a948285018215159052565b5050610140838101519083015261016092830151929091019190915290565b60005b83811015610ace578181015183820152602001610ab6565b50506000910152565b60008151808452610aef816020860160208601610ab3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107b36020830184610ad7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610b8757610b87610b34565b60405290565b6040516060810167ffffffffffffffff81118282101715610b8757610b87610b34565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bf757610bf7610b34565b604052919050565b803580151581146107ea57600080fd5b600067ffffffffffffffff821115610c2957610c29610b34565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112610c6657600080fd5b8135610c79610c7482610c0f565b610bb0565b818152846020838601011115610c8e57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610cbd57600080fd5b813567ffffffffffffffff80821115610cd557600080fd5b908301906101408286031215610cea57600080fd5b610cf2610b63565b610cfb836107df565b8152610d09602084016107df565b6020820152610d1a604084016107df565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610d5360e08401610bff565b60e08201526101008084013583811115610d6c57600080fd5b610d7888828701610c55565b91830191909152506101209283013592810192909252509392505050565b600060208284031215610da857600080fd5b5051919050565b600060208284031215610dc157600080fd5b5035919050565b60006020808385031215610ddb57600080fd5b825167ffffffffffffffff80821115610df357600080fd5b9084019060608287031215610e0757600080fd5b610e0f610b8d565b8251610e1a816107ba565b81528284015182811115610e2d57600080fd5b83019150601f82018713610e4057600080fd5b8151610e4e610c7482610c0f565b8181528886838601011115610e6257600080fd5b610e7182878301888701610ab3565b80868401525050604083015160408201528094505050505092915050565b848152600073ffffffffffffffffffffffffffffffffffffffff808616602084015280851660408401525060806060830152610ece6080830184610ad7565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561013657610136610ed8565b808202811582820484141761013657610136610ed8565b600082610f67577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122035dc2f2b19fa5013e81263fdc060f99f34eaeb7dc2968d9eeb3e9b8306a1b2bd64736f6c63430008130033",
    "sourceMap": "1384:2698:143:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:220:133;;;;;;:::i;:::-;;:::i;:::-;;;612:14:168;;605:22;587:41;;575:2;560:18;1944:220:133;;;;;;;;867:634;;;;;;:::i;:::-;;:::i;:::-;;2045:2035:143;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1944:220:133:-;2031:4;2054:59;;;2069:44;2054:59;;:103;;-1:-1:-1;2117:40:133;;;2132:25;2117:40;2054:103;2047:110;1944:220;-1:-1:-1;;1944:220:133:o;867:634::-;1153:36;1192:65;1210:5;1217:6;1225:3;1230:11;;1243:13;;1192:17;:65::i;:::-;5434:14:63;;;5473:16;;5520:9;5502:28;;5578:3;5557:25;;5595:23;;6176:4;6170:11;6220:10;6194:37;;6274:1;6251:25;;6244:50;;;6337:2;6314:26;;6307:46;;;;6410:2;6381:32;;1153:104:133;;-1:-1:-1;1359:5:133;:56;1353:142;;1471:12;;;;;;;;;;;;;;;;1439:45;;;;;;;1471:12;1439:45;;;:::i;:::-;;;;;;;;1353:142;1143:358;867:634;;;;;;;;;;:::o;2045:2035:143:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:31:143;;;;;;:::i;:::-;2345:50;;2502:4;:14;;;2483:15;:33;;2477:116;;2572:9;;;;;;;;;;;;;;;;2540:42;;;;;;;2572:9;2540:42;;;:::i;2477:116::-;2713:19;;;;2678:14;;:31;;;;;:24;9386:55:168;;;2678:31:143;;;9368:74:168;2678:24:143;;;;;;9341:18:168;;2678:31:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;2672:148;;2788:20;;;;;;;;;;;;;;;;2756:53;;;;;;;2788:20;2756:53;;;:::i;2672:148::-;2830:17;2850:36;;;;2861:13;2850:36;:::i;:::-;2948:24;;;;:31;2830:56;;-1:-1:-1;2948:35:143;2944:700;;3068:28;3110:4;:24;;;3099:59;;;;;;;;;;;;:::i;:::-;3068:90;;3233:20;3256:1;:9;;;:24;;;3281:4;:15;;;3298:4;:14;;;3314:4;:13;;;3329:1;:9;;;3256:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3233:106;;271:5:142;3503:1:143;:17;;;271:5:142;3487:33:143;;;;:::i;:::-;3471:50;;:12;:50;:::i;:::-;3470:68;;;;:::i;:::-;3457:9;:81;;3451:183;;3598:20;;;;;;;;;;;;;;;;3566:53;;;;;;;3598:20;3566:53;;;:::i;3451:183::-;2985:659;;2944:700;3662:411;;;;;;;;3690:4;:14;;;3662:411;;;;;;3718:4;:13;;;3662:411;;;;;;3745:4;:13;;;3662:411;;;;;;3772:4;:15;;;3662:411;;;;3801:9;3662:411;;;;3824:23;:4;:12;;;:21;:23::i;:::-;3662:411;;;;;;3861:4;:12;;;3662:411;;;;3887:1;3662:411;;;;3935:19;3662:411;;;;3968:4;:21;;;3662:411;;;;;;4003:23;3662:411;;;;4040:23;3662:411;;;3654:419;;2268:1812;;2045:2035;;;;;;;;;:::o;15264:187:7:-;15320:6;15355:16;15346:25;;;15338:76;;;;;;;12490:2:168;15338:76:7;;;12472:21:168;12529:2;12509:18;;;12502:30;12568:34;12548:18;;;12541:62;12639:8;12619:18;;;12612:36;12665:19;;15338:76:7;12288:402:168;15338:76:7;-1:-1:-1;15438:5:7;15264:187::o;14:332:168:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:168:o;639:154::-;725:42;718:5;714:54;707:5;704:65;694:93;;783:1;780;773:12;694:93;639:154;:::o;798:134::-;866:20;;895:31;866:20;895:31;:::i;:::-;798:134;;;:::o;937:347::-;988:8;998:6;1052:3;1045:4;1037:6;1033:17;1029:27;1019:55;;1070:1;1067;1060:12;1019:55;-1:-1:-1;1093:20:168;;1136:18;1125:30;;1122:50;;;1168:1;1165;1158:12;1122:50;1205:4;1197:6;1193:17;1181:29;;1257:3;1250:4;1241:6;1233;1229:19;1225:30;1222:39;1219:59;;;1274:1;1271;1264:12;1219:59;937:347;;;;;:::o;1289:1401::-;1458:6;1466;1474;1482;1490;1498;1506;1514;1522;1530;1583:3;1571:9;1562:7;1558:23;1554:33;1551:53;;;1600:1;1597;1590:12;1551:53;1613:49;1651:9;1638:23;1613:49;:::i;:::-;1694:9;1681:23;1671:33;;1754:2;1743:9;1739:18;1726:32;1767:31;1792:5;1767:31;:::i;:::-;1817:5;-1:-1:-1;1869:2:168;1854:18;;1841:32;;-1:-1:-1;1920:2:168;1905:18;;1892:32;;-1:-1:-1;1971:3:168;1956:19;;1943:33;;-1:-1:-1;2027:3:168;2012:19;;1999:33;2051:18;2081:14;;;2078:34;;;2108:1;2105;2098:12;2078:34;2147:58;2197:7;2188:6;2177:9;2173:22;2147:58;:::i;:::-;2224:8;;-1:-1:-1;2121:84:168;-1:-1:-1;2312:3:168;2297:19;;2284:33;;-1:-1:-1;2329:16:168;;;2326:36;;;2358:1;2355;2348:12;2326:36;;2397:60;2449:7;2438:8;2427:9;2423:24;2397:60;:::i;:::-;2476:8;;-1:-1:-1;2371:86:168;-1:-1:-1;;2625:3:168;2531:23;;;2556:66;2527:96;2523:106;2520:126;;;2642:1;2639;2632:12;2520:126;2680:3;2669:9;2665:19;2655:29;;1289:1401;;;;;;;;;;;;;:::o;2695:1063::-;2812:6;2820;2828;2836;2844;2852;2860;2913:3;2901:9;2892:7;2888:23;2884:33;2881:53;;;2930:1;2927;2920:12;2881:53;2969:9;2956:23;2988:31;3013:5;2988:31;:::i;:::-;3038:5;-1:-1:-1;3095:2:168;3080:18;;3067:32;3108:33;3067:32;3108:33;:::i;:::-;3160:7;-1:-1:-1;3214:2:168;3199:18;;3186:32;;-1:-1:-1;3269:2:168;3254:18;;3241:32;3292:18;3322:14;;;3319:34;;;3349:1;3346;3339:12;3319:34;3388:58;3438:7;3429:6;3418:9;3414:22;3388:58;:::i;:::-;3465:8;;-1:-1:-1;3362:84:168;-1:-1:-1;3553:3:168;3538:19;;3525:33;;-1:-1:-1;3570:16:168;;;3567:36;;;3599:1;3596;3589:12;3567:36;;3638:60;3690:7;3679:8;3668:9;3664:24;3638:60;:::i;:::-;2695:1063;;;;-1:-1:-1;2695:1063:168;;-1:-1:-1;2695:1063:168;;;;3612:86;;-1:-1:-1;;;2695:1063:168:o;4002:1264::-;4222:13;;3848:42;3837:54;3825:67;;4182:3;4167:19;;4294:4;4286:6;4282:17;4276:24;4309:62;4365:4;4354:9;4350:20;4336:12;3848:42;3837:54;3825:67;;3763:135;4309:62;;4420:4;4412:6;4408:17;4402:24;4435:64;4493:4;4482:9;4478:20;4462:14;3848:42;3837:54;3825:67;;3763:135;4435:64;;4555:4;4547:6;4543:17;4537:24;4530:4;4519:9;4515:20;4508:54;4618:4;4610:6;4606:17;4600:24;4593:4;4582:9;4578:20;4571:54;4674:4;4666:6;4662:17;4656:24;4689:55;4738:4;4727:9;4723:20;4707:14;3979:10;3968:22;3956:35;;3903:94;4689:55;;4800:4;4792:6;4788:17;4782:24;4775:4;4764:9;4760:20;4753:54;4863:4;4855:6;4851:17;4845:24;4838:4;4827:9;4823:20;4816:54;4889:6;4949:2;4941:6;4937:15;4931:22;4926:2;4915:9;4911:18;4904:50;;4973:6;5028:2;5020:6;5016:15;5010:22;5041:51;5088:2;5077:9;5073:18;5057:14;421:13;414:21;402:34;;351:91;5041:51;-1:-1:-1;;5111:6:168;5159:15;;;5153:22;5133:18;;;5126:50;5195:6;5243:15;;;5237:22;5217:18;;;;5210:50;;;;4002:1264;:::o;5271:250::-;5356:1;5366:113;5380:6;5377:1;5374:13;5366:113;;;5456:11;;;5450:18;5437:11;;;5430:39;5402:2;5395:10;5366:113;;;-1:-1:-1;;5513:1:168;5495:16;;5488:27;5271:250::o;5526:330::-;5568:3;5606:5;5600:12;5633:6;5628:3;5621:19;5649:76;5718:6;5711:4;5706:3;5702:14;5695:4;5688:5;5684:16;5649:76;:::i;:::-;5770:2;5758:15;5775:66;5754:88;5745:98;;;;5845:4;5741:109;;5526:330;-1:-1:-1;;5526:330:168:o;5861:220::-;6010:2;5999:9;5992:21;5973:4;6030:45;6071:2;6060:9;6056:18;6048:6;6030:45;:::i;6086:184::-;6138:77;6135:1;6128:88;6235:4;6232:1;6225:15;6259:4;6256:1;6249:15;6275:255;6347:2;6341:9;6389:6;6377:19;;6426:18;6411:34;;6447:22;;;6408:62;6405:88;;;6473:18;;:::i;:::-;6509:2;6502:22;6275:255;:::o;6535:253::-;6607:2;6601:9;6649:4;6637:17;;6684:18;6669:34;;6705:22;;;6666:62;6663:88;;;6731:18;;:::i;6793:334::-;6864:2;6858:9;6920:2;6910:13;;6925:66;6906:86;6894:99;;7023:18;7008:34;;7044:22;;;7005:62;7002:88;;;7070:18;;:::i;:::-;7106:2;7099:22;6793:334;;-1:-1:-1;6793:334:168:o;7132:160::-;7197:20;;7253:13;;7246:21;7236:32;;7226:60;;7282:1;7279;7272:12;7297:245;7345:4;7378:18;7370:6;7367:30;7364:56;;;7400:18;;:::i;:::-;-1:-1:-1;7457:2:168;7445:15;7462:66;7441:88;7531:4;7437:99;;7297:245::o;7547:462::-;7589:5;7642:3;7635:4;7627:6;7623:17;7619:27;7609:55;;7660:1;7657;7650:12;7609:55;7696:6;7683:20;7727:48;7743:31;7771:2;7743:31;:::i;:::-;7727:48;:::i;:::-;7800:2;7791:7;7784:19;7846:3;7839:4;7834:2;7826:6;7822:15;7818:26;7815:35;7812:55;;;7863:1;7860;7853:12;7812:55;7928:2;7921:4;7913:6;7909:17;7902:4;7893:7;7889:18;7876:55;7976:1;7951:16;;;7969:4;7947:27;7940:38;;;;7955:7;7547:462;-1:-1:-1;;;7547:462:168:o;8014:1203::-;8096:6;8149:2;8137:9;8128:7;8124:23;8120:32;8117:52;;;8165:1;8162;8155:12;8117:52;8205:9;8192:23;8234:18;8275:2;8267:6;8264:14;8261:34;;;8291:1;8288;8281:12;8261:34;8314:22;;;;8370:6;8352:16;;;8348:29;8345:49;;;8390:1;8387;8380:12;8345:49;8416:22;;:::i;:::-;8461;8480:2;8461:22;:::i;:::-;8454:5;8447:37;8516:31;8543:2;8539;8535:11;8516:31;:::i;:::-;8511:2;8504:5;8500:14;8493:55;8580:31;8607:2;8603;8599:11;8580:31;:::i;:::-;8575:2;8568:5;8564:14;8557:55;8665:2;8661;8657:11;8644:25;8639:2;8632:5;8628:14;8621:49;8724:3;8720:2;8716:12;8703:26;8697:3;8690:5;8686:15;8679:51;8784:3;8780:2;8776:12;8763:26;8757:3;8750:5;8746:15;8739:51;8844:3;8840:2;8836:12;8823:26;8817:3;8810:5;8806:15;8799:51;8883:29;8907:3;8903:2;8899:12;8883:29;:::i;:::-;8877:3;8870:5;8866:15;8859:54;8932:3;8981:2;8977;8973:11;8960:25;9010:2;9000:8;8997:16;8994:36;;;9026:1;9023;9016:12;8994:36;9062:44;9098:7;9087:8;9083:2;9079:17;9062:44;:::i;:::-;9046:14;;;9039:68;;;;-1:-1:-1;9126:3:168;9174:11;;;9161:25;9145:14;;;9138:49;;;;-1:-1:-1;9050:5:168;8014:1203;-1:-1:-1;;;8014:1203:168:o;9453:184::-;9523:6;9576:2;9564:9;9555:7;9551:23;9547:32;9544:52;;;9592:1;9589;9582:12;9544:52;-1:-1:-1;9615:16:168;;9453:184;-1:-1:-1;9453:184:168:o;9642:180::-;9701:6;9754:2;9742:9;9733:7;9729:23;9725:32;9722:52;;;9770:1;9767;9760:12;9722:52;-1:-1:-1;9793:23:168;;9642:180;-1:-1:-1;9642:180:168:o;9827:1137::-;9935:6;9966:2;10009;9997:9;9988:7;9984:23;9980:32;9977:52;;;10025:1;10022;10015:12;9977:52;10058:9;10052:16;10087:18;10128:2;10120:6;10117:14;10114:34;;;10144:1;10141;10134:12;10114:34;10167:22;;;;10223:4;10205:16;;;10201:27;10198:47;;;10241:1;10238;10231:12;10198:47;10267:22;;:::i;:::-;10319:2;10313:9;10331:33;10356:7;10331:33;:::i;:::-;10373:22;;10426:11;;;10420:18;10450:16;;;10447:36;;;10479:1;10476;10469:12;10447:36;10502:17;;;-1:-1:-1;10550:4:168;10542:13;;10538:27;-1:-1:-1;10528:55:168;;10579:1;10576;10569:12;10528:55;10608:2;10602:9;10633:48;10649:31;10677:2;10649:31;:::i;10633:48::-;10704:2;10697:5;10690:17;10744:7;10739:2;10734;10730;10726:11;10722:20;10719:33;10716:53;;;10765:1;10762;10755:12;10716:53;10778:67;10842:2;10837;10830:5;10826:14;10821:2;10817;10813:11;10778:67;:::i;:::-;10877:5;10872:2;10865:5;10861:14;10854:29;;;10929:2;10925;10921:11;10915:18;10910:2;10903:5;10899:14;10892:42;10953:5;10943:15;;;;;;9827:1137;;;;:::o;10969:540::-;11228:6;11217:9;11210:25;11191:4;11254:42;11344:2;11336:6;11332:15;11327:2;11316:9;11312:18;11305:43;11396:2;11388:6;11384:15;11379:2;11368:9;11364:18;11357:43;;11436:3;11431:2;11420:9;11416:18;11409:31;11457:46;11498:3;11487:9;11483:19;11475:6;11457:46;:::i;:::-;11449:54;10969:540;-1:-1:-1;;;;;;10969:540:168:o;11514:184::-;11566:77;11563:1;11556:88;11663:4;11660:1;11653:15;11687:4;11684:1;11677:15;11703:128;11770:9;;;11791:11;;;11788:37;;;11805:18;;:::i;11836:168::-;11909:9;;;11940;;11957:15;;;11951:22;;11937:37;11927:71;;11978:18;;:::i;12009:274::-;12049:1;12075;12065:189;;12110:77;12107:1;12100:88;12211:4;12208:1;12201:15;12239:4;12236:1;12229:15;12065:189;-1:-1:-1;12268:9:168;;12009:274::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getTradeableOrder(address,address,bytes32,bytes,bytes)": "b8296fc4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": "14a2a784"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"OrderNotValid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"ConditionalOrderCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainInput\",\"type\":\"bytes\"}],\"name\":\"getTradeableOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ctx\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainInput\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"mfw78 <mfw78@rndlabs.xyz>\",\"details\":\"Designed to be used with the CoW Protocol Conditional Order Framework.      This order type allows for placing an order that is valid after a certain time      and that has an optional minimum `sellAmount` determined by a price checker. The      actual `buyAmount` is determined by off chain input. As changing the `buyAmount`      changes the `orderUid` of the order, this allows for placing multiple orders. To      ensure that the order is not filled multiple times, a `minSellBalance` is      checked before the order is placed.\",\"errors\":{\"OrderNotValid(string)\":[{\"details\":\"This error is returned by the `getTradeableOrder` function if the order condition is not met.      A parameter of `string` type is included to allow the caller to specify the reason for the failure.\"}]},\"events\":{\"ConditionalOrderCreated(address,(address,bytes32,bytes))\":{\"details\":\"This event is emitted when a new conditional order is created.\",\"params\":{\"owner\":\"the address that has created the conditional order\",\"params\":\"the address / salt / data of the conditional order\"}}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))\":{\"details\":\"As an order generator, the `GPv2Order.Data` passed as a parameter is ignored / not validated.\",\"params\":{\"_hash\":\"the hash of the order\",\"ctx\":\"the context key of the order (bytes32(0) if a merkle tree is used, otherwise H(params)) with which to lookup the cabinet\",\"domainSeparator\":\"the domain separator used to sign the order\",\"offchainInput\":\"dynamic off-chain input for a discrete order cut from this conditional order\",\"order\":\"`GPv2Order.Data` of a discrete order to be verified (if *not* an `IConditionalOrderGenerator`).\",\"owner\":\"the contract who is the owner of the order\",\"sender\":\"the `msg.sender` of the transaction\",\"staticInput\":\"the static input for all discrete orders cut from this conditional order\"}}},\"title\":\"Good After Time (GAT) Conditional Order - with Milkman price checkers\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))\":{\"notice\":\"Verify if a given discrete order is valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/types/GoodAfterTime.sol\":\"GoodAfterTime\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol\":{\"keccak256\":\"0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f\",\"dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"src/BaseConditionalOrder.sol\":{\"keccak256\":\"0x510558386b92b1d5961d8158ae6e3288a1d520c03123d109042a5ec3290b9588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e071465250cbc11d946f422f4ff774d757291cac00f4c69fbac1d1e34cdae402\",\"dweb:/ipfs/QmUF2qNwJhvs3GeWmsWnL6y21eL6mb3QEW7EPYY7NZc25v\"]},\"src/interfaces/IConditionalOrder.sol\":{\"keccak256\":\"0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699\",\"dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ\"]},\"src/types/ConditionalOrdersUtilsLib.sol\":{\"keccak256\":\"0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777\",\"dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf\"]},\"src/types/GoodAfterTime.sol\":{\"keccak256\":\"0x5c6c0aa4d3eec87053b8b1b80957cc64efcffa2fcb68a35f1c7f8332a2884643\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ae24374d4c5a47713e45d1ef31697708619af6325db73267088ebcd026ac2bc8\",\"dweb:/ipfs/QmciGxpggSCkkAuavUQhmUisi29sohSDVvkZ4a4YBgrSDm\"]},\"src/vendored/Milkman.sol\":{\"keccak256\":\"0x7795717dc0007aea88681ea4a2a84a32db865d97b59513ff77d00c879fb15b66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90628089a4a76a7e8ef0319425f15d974543383c5f875638fba315d24c4bc753\",\"dweb:/ipfs/Qmb7yJyxQJvmx6uQ1z9ptzJ1X7W58LPFH8pTicDfyNzyZQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OrderNotValid"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConditionalOrderCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "offchainInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTradeableOrder",
          "outputs": [
            {
              "internalType": "struct GPv2Order.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "ctx",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "offchainInput",
              "type": "bytes"
            },
            {
              "internalType": "struct GPv2Order.Data",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": {
            "details": "As an order generator, the `GPv2Order.Data` passed as a parameter is ignored / not validated.",
            "params": {
              "_hash": "the hash of the order",
              "ctx": "the context key of the order (bytes32(0) if a merkle tree is used, otherwise H(params)) with which to lookup the cabinet",
              "domainSeparator": "the domain separator used to sign the order",
              "offchainInput": "dynamic off-chain input for a discrete order cut from this conditional order",
              "order": "`GPv2Order.Data` of a discrete order to be verified (if *not* an `IConditionalOrderGenerator`).",
              "owner": "the contract who is the owner of the order",
              "sender": "the `msg.sender` of the transaction",
              "staticInput": "the static input for all discrete orders cut from this conditional order"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": {
            "notice": "Verify if a given discrete order is valid."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/types/GoodAfterTime.sol": "GoodAfterTime"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol": {
        "keccak256": "0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528",
        "urls": [
          "bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f",
          "dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/BaseConditionalOrder.sol": {
        "keccak256": "0x510558386b92b1d5961d8158ae6e3288a1d520c03123d109042a5ec3290b9588",
        "urls": [
          "bzz-raw://e071465250cbc11d946f422f4ff774d757291cac00f4c69fbac1d1e34cdae402",
          "dweb:/ipfs/QmUF2qNwJhvs3GeWmsWnL6y21eL6mb3QEW7EPYY7NZc25v"
        ],
        "license": "MIT"
      },
      "src/interfaces/IConditionalOrder.sol": {
        "keccak256": "0x52c9a2b5d5cc7345fe4b4c039af88c5621bc7c6059534cc7c76b77833aafae7b",
        "urls": [
          "bzz-raw://1660e1510b82216e38b669f16b69f4a37b012b00655d0fc6794e4d77d2182699",
          "dweb:/ipfs/QmNiZ7rMT74sKT9d6SUEnKXiWjaYLL8nAzSdLBXBAzYNmZ"
        ],
        "license": "GPL-3.0"
      },
      "src/types/ConditionalOrdersUtilsLib.sol": {
        "keccak256": "0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae",
        "urls": [
          "bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777",
          "dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf"
        ],
        "license": "MIT"
      },
      "src/types/GoodAfterTime.sol": {
        "keccak256": "0x5c6c0aa4d3eec87053b8b1b80957cc64efcffa2fcb68a35f1c7f8332a2884643",
        "urls": [
          "bzz-raw://ae24374d4c5a47713e45d1ef31697708619af6325db73267088ebcd026ac2bc8",
          "dweb:/ipfs/QmciGxpggSCkkAuavUQhmUisi29sohSDVvkZ4a4YBgrSDm"
        ],
        "license": "GPL-3.0"
      },
      "src/vendored/Milkman.sol": {
        "keccak256": "0x7795717dc0007aea88681ea4a2a84a32db865d97b59513ff77d00c879fb15b66",
        "urls": [
          "bzz-raw://90628089a4a76a7e8ef0319425f15d974543383c5f875638fba315d24c4bc753",
          "dweb:/ipfs/Qmb7yJyxQJvmx6uQ1z9ptzJ1X7W58LPFH8pTicDfyNzyZQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/types/GoodAfterTime.sol",
    "id": 54812,
    "exportedSymbols": {
      "BALANCE_INSUFFICIENT": [
        54611
      ],
      "BaseConditionalOrder": [
        53501
      ],
      "GPv2Interaction": [
        17090
      ],
      "GPv2Order": [
        17246
      ],
      "GoodAfterTime": [
        54811
      ],
      "IConditionalOrder": [
        54437
      ],
      "IConditionalOrderGenerator": [
        54468
      ],
      "IERC165": [
        52197
      ],
      "IERC20": [
        670
      ],
      "IExpectedOutCalculator": [
        55992
      ],
      "INVALID_HASH": [
        53402
      ],
      "PRICE_CHECKER_FAILED": [
        54615
      ],
      "SafeCast": [
        2786
      ],
      "TOO_EARLY": [
        54607
      ],
      "Utils": [
        54593
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4047:143",
    "nodes": [
      {
        "id": 54595,
        "nodeType": "PragmaDirective",
        "src": "36:31:143",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 54597,
        "nodeType": "ImportDirective",
        "src": "69:59:143",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54812,
        "sourceUnit": 3,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54596,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 670,
              "src": "77:6:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54599,
        "nodeType": "ImportDirective",
        "src": "129:63:143",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54812,
        "sourceUnit": 2787,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54598,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2786,
              "src": "137:8:143",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54600,
        "nodeType": "ImportDirective",
        "src": "194:33:143",
        "nodes": [],
        "absolutePath": "src/vendored/Milkman.sol",
        "file": "../vendored/Milkman.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54812,
        "sourceUnit": 55993,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54601,
        "nodeType": "ImportDirective",
        "src": "228:37:143",
        "nodes": [],
        "absolutePath": "src/BaseConditionalOrder.sol",
        "file": "../BaseConditionalOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54812,
        "sourceUnit": 53502,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54603,
        "nodeType": "ImportDirective",
        "src": "266:83:143",
        "nodes": [],
        "absolutePath": "src/types/ConditionalOrdersUtilsLib.sol",
        "file": "./ConditionalOrdersUtilsLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54812,
        "sourceUnit": 54594,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54602,
              "name": "ConditionalOrdersUtilsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54593,
              "src": "274:25:143",
              "typeDescriptions": {}
            },
            "local": "Utils",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54607,
        "nodeType": "VariableDeclaration",
        "src": "438:39:143",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "TOO_EARLY",
        "nameLocation": "454:9:143",
        "scope": 54812,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54605,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "438:6:143",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "746f6f206561726c79",
          "id": 54606,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "466:11:143",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_d87d05e52726880c4bb1003e00ed00463d214b7b936d9983b909b11b18ccd468",
            "typeString": "literal_string \"too early\""
          },
          "value": "too early"
        },
        "visibility": "internal"
      },
      {
        "id": 54611,
        "nodeType": "VariableDeclaration",
        "src": "536:61:143",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "BALANCE_INSUFFICIENT",
        "nameLocation": "552:20:143",
        "scope": 54812,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54609,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "536:6:143",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "62616c616e636520696e73756666696369656e74",
          "id": 54610,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "575:22:143",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_a9ef3b4d07292ad1e9ff9cf86a951bcf260ed39b4c9f3962ba7c62aae85e2c4f",
            "typeString": "literal_string \"balance insufficient\""
          },
          "value": "balance insufficient"
        },
        "visibility": "internal"
      },
      {
        "id": 54615,
        "nodeType": "VariableDeclaration",
        "src": "636:61:143",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "PRICE_CHECKER_FAILED",
        "nameLocation": "652:20:143",
        "scope": 54812,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54613,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "636:6:143",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "707269636520636865636b6572206661696c6564",
          "id": 54614,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "675:22:143",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_5d01b0e3386345eb7eea4e021ec7bc264b1830cdfa164e963e50273f975d315e",
            "typeString": "literal_string \"price checker failed\""
          },
          "value": "price checker failed"
        },
        "visibility": "internal"
      },
      {
        "id": 54811,
        "nodeType": "ContractDefinition",
        "src": "1384:2698:143",
        "nodes": [
          {
            "id": 54621,
            "nodeType": "UsingForDirective",
            "src": "1437:27:143",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54619,
              "name": "SafeCast",
              "nameLocations": [
                "1443:8:143"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2786,
              "src": "1443:8:143"
            },
            "typeName": {
              "id": 54620,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1456:7:143",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 54644,
            "nodeType": "StructDefinition",
            "src": "1488:396:143",
            "nodes": [],
            "canonicalName": "GoodAfterTime.Data",
            "members": [
              {
                "constant": false,
                "id": 54624,
                "mutability": "mutable",
                "name": "sellToken",
                "nameLocation": "1517:9:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1510:16:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$670",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54623,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54622,
                    "name": "IERC20",
                    "nameLocations": [
                      "1510:6:143"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 670,
                    "src": "1510:6:143"
                  },
                  "referencedDeclaration": 670,
                  "src": "1510:6:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54627,
                "mutability": "mutable",
                "name": "buyToken",
                "nameLocation": "1543:8:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1536:15:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$670",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54626,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54625,
                    "name": "IERC20",
                    "nameLocations": [
                      "1536:6:143"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 670,
                    "src": "1536:6:143"
                  },
                  "referencedDeclaration": 670,
                  "src": "1536:6:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54629,
                "mutability": "mutable",
                "name": "receiver",
                "nameLocation": "1569:8:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1561:16:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54628,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1561:7:143",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54631,
                "mutability": "mutable",
                "name": "sellAmount",
                "nameLocation": "1595:10:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1587:18:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54630,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1587:7:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54633,
                "mutability": "mutable",
                "name": "minSellBalance",
                "nameLocation": "1662:14:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1654:22:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54632,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1654:7:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54635,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "1694:9:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1686:17:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54634,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1686:7:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54637,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "1753:7:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1745:15:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54636,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1745:7:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54639,
                "mutability": "mutable",
                "name": "allowPartialFill",
                "nameLocation": "1801:16:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1796:21:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 54638,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1796:4:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54641,
                "mutability": "mutable",
                "name": "priceCheckerPayload",
                "nameLocation": "1833:19:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1827:25:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 54640,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1827:5:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54643,
                "mutability": "mutable",
                "name": "appData",
                "nameLocation": "1870:7:143",
                "nodeType": "VariableDeclaration",
                "scope": 54644,
                "src": "1862:15:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 54642,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1862:7:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nameLocation": "1495:4:143",
            "scope": 54811,
            "visibility": "public"
          },
          {
            "id": 54652,
            "nodeType": "StructDefinition",
            "src": "1890:149:143",
            "nodes": [],
            "canonicalName": "GoodAfterTime.PriceCheckerPayload",
            "members": [
              {
                "constant": false,
                "id": 54647,
                "mutability": "mutable",
                "name": "checker",
                "nameLocation": "1950:7:143",
                "nodeType": "VariableDeclaration",
                "scope": 54652,
                "src": "1927:30:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IExpectedOutCalculator_$55992",
                  "typeString": "contract IExpectedOutCalculator"
                },
                "typeName": {
                  "id": 54646,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54645,
                    "name": "IExpectedOutCalculator",
                    "nameLocations": [
                      "1927:22:143"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 55992,
                    "src": "1927:22:143"
                  },
                  "referencedDeclaration": 55992,
                  "src": "1927:22:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IExpectedOutCalculator_$55992",
                    "typeString": "contract IExpectedOutCalculator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54649,
                "mutability": "mutable",
                "name": "payload",
                "nameLocation": "1973:7:143",
                "nodeType": "VariableDeclaration",
                "scope": 54652,
                "src": "1967:13:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 54648,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:5:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54651,
                "mutability": "mutable",
                "name": "allowedSlippage",
                "nameLocation": "1998:15:143",
                "nodeType": "VariableDeclaration",
                "scope": 54652,
                "src": "1990:23:143",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54650,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1990:7:143",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PriceCheckerPayload",
            "nameLocation": "1897:19:143",
            "scope": 54811,
            "visibility": "public"
          },
          {
            "id": 54810,
            "nodeType": "FunctionDefinition",
            "src": "2045:2035:143",
            "nodes": [],
            "body": {
              "id": 54809,
              "nodeType": "Block",
              "src": "2268:1812:143",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54671,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2357:4:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 54809,
                      "src": "2345:16:143",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                        "typeString": "struct GoodAfterTime.Data"
                      },
                      "typeName": {
                        "id": 54670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54669,
                          "name": "Data",
                          "nameLocations": [
                            "2345:4:143"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54644,
                          "src": "2345:4:143"
                        },
                        "referencedDeclaration": 54644,
                        "src": "2345:4:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$54644_storage_ptr",
                          "typeString": "struct GoodAfterTime.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54678,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54674,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54660,
                        "src": "2375:11:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 54675,
                            "name": "Data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54644,
                            "src": "2389:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Data_$54644_storage_ptr_$",
                              "typeString": "type(struct GoodAfterTime.Data storage pointer)"
                            }
                          }
                        ],
                        "id": 54676,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2388:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$54644_storage_ptr_$",
                          "typeString": "type(struct GoodAfterTime.Data storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Data_$54644_storage_ptr_$",
                          "typeString": "type(struct GoodAfterTime.Data storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 54672,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2364:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2368:6:143",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2364:10:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 54677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:31:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                      "typeString": "struct GoodAfterTime.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2345:50:143"
                },
                {
                  "condition": {
                    "id": 54685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2481:36:143",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54679,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2483:5:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 54680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2489:9:143",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2483:15:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 54681,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54671,
                              "src": "2502:4:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                "typeString": "struct GoodAfterTime.Data memory"
                              }
                            },
                            "id": 54682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2507:9:143",
                            "memberName": "startTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54635,
                            "src": "2502:14:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2483:33:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 54684,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2482:35:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54693,
                  "nodeType": "IfStatement",
                  "src": "2477:116:143",
                  "trueBody": {
                    "id": 54692,
                    "nodeType": "Block",
                    "src": "2519:74:143",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54689,
                              "name": "TOO_EARLY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54607,
                              "src": "2572:9:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 54686,
                              "name": "IConditionalOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54437,
                              "src": "2540:17:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                                "typeString": "type(contract IConditionalOrder)"
                              }
                            },
                            "id": 54688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2558:13:143",
                            "memberName": "OrderNotValid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54407,
                            "src": "2540:31:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 54690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2540:42:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54691,
                        "nodeType": "RevertStatement",
                        "src": "2533:49:143"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 54703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2676:57:143",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 54697,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54654,
                                "src": "2703:5:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 54694,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54671,
                                  "src": "2678:4:143",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                    "typeString": "struct GoodAfterTime.Data memory"
                                  }
                                },
                                "id": 54695,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2683:9:143",
                                "memberName": "sellToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54624,
                                "src": "2678:14:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 54696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2693:9:143",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 627,
                              "src": "2678:24:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 54698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2678:31:143",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 54699,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54671,
                              "src": "2713:4:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                "typeString": "struct GoodAfterTime.Data memory"
                              }
                            },
                            "id": 54700,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2718:14:143",
                            "memberName": "minSellBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54633,
                            "src": "2713:19:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2678:54:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 54702,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2677:56:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54711,
                  "nodeType": "IfStatement",
                  "src": "2672:148:143",
                  "trueBody": {
                    "id": 54710,
                    "nodeType": "Block",
                    "src": "2735:85:143",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54707,
                              "name": "BALANCE_INSUFFICIENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54611,
                              "src": "2788:20:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 54704,
                              "name": "IConditionalOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54437,
                              "src": "2756:17:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                                "typeString": "type(contract IConditionalOrder)"
                              }
                            },
                            "id": 54706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2774:13:143",
                            "memberName": "OrderNotValid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54407,
                            "src": "2756:31:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 54708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2756:53:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54709,
                        "nodeType": "RevertStatement",
                        "src": "2749:60:143"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54713,
                      "mutability": "mutable",
                      "name": "buyAmount",
                      "nameLocation": "2838:9:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 54809,
                      "src": "2830:17:143",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2830:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54721,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54716,
                        "name": "offchainInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54662,
                        "src": "2861:13:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 54718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2877:7:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 54717,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2877:7:143",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 54719,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2876:9:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 54714,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2850:3:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2854:6:143",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2850:10:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 54720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:36:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2830:56:143"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 54722,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54671,
                          "src": "2948:4:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                            "typeString": "struct GoodAfterTime.Data memory"
                          }
                        },
                        "id": 54723,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2953:19:143",
                        "memberName": "priceCheckerPayload",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54641,
                        "src": "2948:24:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2973:6:143",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2948:31:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2982:1:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2948:35:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54778,
                  "nodeType": "IfStatement",
                  "src": "2944:700:143",
                  "trueBody": {
                    "id": 54777,
                    "nodeType": "Block",
                    "src": "2985:659:143",
                    "statements": [
                      {
                        "assignments": [
                          54729
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54729,
                            "mutability": "mutable",
                            "name": "p",
                            "nameLocation": "3095:1:143",
                            "nodeType": "VariableDeclaration",
                            "scope": 54777,
                            "src": "3068:28:143",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceCheckerPayload_$54652_memory_ptr",
                              "typeString": "struct GoodAfterTime.PriceCheckerPayload"
                            },
                            "typeName": {
                              "id": 54728,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 54727,
                                "name": "PriceCheckerPayload",
                                "nameLocations": [
                                  "3068:19:143"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54652,
                                "src": "3068:19:143"
                              },
                              "referencedDeclaration": 54652,
                              "src": "3068:19:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PriceCheckerPayload_$54652_storage_ptr",
                                "typeString": "struct GoodAfterTime.PriceCheckerPayload"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54737,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54732,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54671,
                                "src": "3110:4:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54733,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3115:19:143",
                              "memberName": "priceCheckerPayload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54641,
                              "src": "3110:24:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 54734,
                                  "name": "PriceCheckerPayload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54652,
                                  "src": "3137:19:143",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_PriceCheckerPayload_$54652_storage_ptr_$",
                                    "typeString": "type(struct GoodAfterTime.PriceCheckerPayload storage pointer)"
                                  }
                                }
                              ],
                              "id": 54735,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3136:21:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PriceCheckerPayload_$54652_storage_ptr_$",
                                "typeString": "type(struct GoodAfterTime.PriceCheckerPayload storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_PriceCheckerPayload_$54652_storage_ptr_$",
                                "typeString": "type(struct GoodAfterTime.PriceCheckerPayload storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 54730,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3099:3:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 54731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3103:6:143",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3099:10:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3099:59:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceCheckerPayload_$54652_memory_ptr",
                            "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3068:90:143"
                      },
                      {
                        "assignments": [
                          54739
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54739,
                            "mutability": "mutable",
                            "name": "_expectedOut",
                            "nameLocation": "3241:12:143",
                            "nodeType": "VariableDeclaration",
                            "scope": 54777,
                            "src": "3233:20:143",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 54738,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3233:7:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54752,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54743,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54671,
                                "src": "3281:4:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54744,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3286:10:143",
                              "memberName": "sellAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54631,
                              "src": "3281:15:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 54745,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54671,
                                "src": "3298:4:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54746,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3303:9:143",
                              "memberName": "sellToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54624,
                              "src": "3298:14:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 54747,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54671,
                                "src": "3314:4:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54748,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3319:8:143",
                              "memberName": "buyToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54627,
                              "src": "3314:13:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 54749,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54729,
                                "src": "3329:1:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceCheckerPayload_$54652_memory_ptr",
                                  "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                                }
                              },
                              "id": 54750,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3331:7:143",
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54649,
                              "src": "3329:9:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 54740,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54729,
                                "src": "3256:1:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceCheckerPayload_$54652_memory_ptr",
                                  "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                                }
                              },
                              "id": 54741,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3258:7:143",
                              "memberName": "checker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54647,
                              "src": "3256:9:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IExpectedOutCalculator_$55992",
                                "typeString": "contract IExpectedOutCalculator"
                              }
                            },
                            "id": 54742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3266:14:143",
                            "memberName": "getExpectedOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55991,
                            "src": "3256:24:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,contract IERC20,contract IERC20,bytes memory) view external returns (uint256)"
                            }
                          },
                          "id": 54751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3256:83:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3233:106:143"
                      },
                      {
                        "condition": {
                          "id": 54768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3455:84:143",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 54766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 54753,
                                  "name": "buyAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54713,
                                  "src": "3457:9:143",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 54765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 54761,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 54754,
                                          "name": "_expectedOut",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 54739,
                                          "src": "3471:12:143",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 54759,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 54755,
                                                  "name": "Utils",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 54593,
                                                  "src": "3487:5:143",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54593_$",
                                                    "typeString": "type(library ConditionalOrdersUtilsLib)"
                                                  }
                                                },
                                                "id": 54756,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberLocation": "3493:7:143",
                                                "memberName": "MAX_BPS",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 54514,
                                                "src": "3487:13:143",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 54757,
                                                  "name": "p",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 54729,
                                                  "src": "3503:1:143",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PriceCheckerPayload_$54652_memory_ptr",
                                                    "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                                                  }
                                                },
                                                "id": 54758,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3505:15:143",
                                                "memberName": "allowedSlippage",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 54651,
                                                "src": "3503:17:143",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3487:33:143",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 54760,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3486:35:143",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3471:50:143",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 54762,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3470:52:143",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 54763,
                                      "name": "Utils",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54593,
                                      "src": "3525:5:143",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54593_$",
                                        "typeString": "type(library ConditionalOrdersUtilsLib)"
                                      }
                                    },
                                    "id": 54764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3531:7:143",
                                    "memberName": "MAX_BPS",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54514,
                                    "src": "3525:13:143",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3470:68:143",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3457:81:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 54767,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3456:83:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 54776,
                        "nodeType": "IfStatement",
                        "src": "3451:183:143",
                        "trueBody": {
                          "id": 54775,
                          "nodeType": "Block",
                          "src": "3541:93:143",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 54772,
                                    "name": "PRICE_CHECKER_FAILED",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54615,
                                    "src": "3598:20:143",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54769,
                                    "name": "IConditionalOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54437,
                                    "src": "3566:17:143",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54437_$",
                                      "typeString": "type(contract IConditionalOrder)"
                                    }
                                  },
                                  "id": 54771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3584:13:143",
                                  "memberName": "OrderNotValid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54407,
                                  "src": "3566:31:143",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 54773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3566:53:143",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54774,
                              "nodeType": "RevertStatement",
                              "src": "3559:60:143"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 54807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54779,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54667,
                      "src": "3654:5:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54782,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54671,
                            "src": "3690:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54783,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3695:9:143",
                          "memberName": "sellToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54624,
                          "src": "3690:14:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 54784,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54671,
                            "src": "3718:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54785,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3723:8:143",
                          "memberName": "buyToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54627,
                          "src": "3718:13:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 54786,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54671,
                            "src": "3745:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54787,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3750:8:143",
                          "memberName": "receiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54629,
                          "src": "3745:13:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 54788,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54671,
                            "src": "3772:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54789,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3777:10:143",
                          "memberName": "sellAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54631,
                          "src": "3772:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 54790,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54713,
                          "src": "3801:9:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 54791,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54671,
                                "src": "3824:4:143",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54792,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3829:7:143",
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54637,
                              "src": "3824:12:143",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 54793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3837:8:143",
                            "memberName": "toUint32",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1948,
                            "src": "3824:21:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint32)"
                            }
                          },
                          "id": 54794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3824:23:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54795,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54671,
                            "src": "3861:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54796,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3866:7:143",
                          "memberName": "appData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54643,
                          "src": "3861:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 54797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3887:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 54798,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "3935:9:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 54799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3945:9:143",
                          "memberName": "KIND_SELL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17129,
                          "src": "3935:19:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54800,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54671,
                            "src": "3968:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54644_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54801,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3973:16:143",
                          "memberName": "allowPartialFill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54639,
                          "src": "3968:21:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 54802,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "4003:9:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 54803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4013:13:143",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17137,
                          "src": "4003:23:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54804,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17246,
                            "src": "4040:9:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 54805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4050:13:143",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17137,
                          "src": "4040:23:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 54780,
                          "name": "GPv2Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17246,
                          "src": "3662:9:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GPv2Order_$17246_$",
                            "typeString": "type(library GPv2Order)"
                          }
                        },
                        "id": 54781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3672:4:143",
                        "memberName": "Data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17121,
                        "src": "3662:14:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$17121_storage_ptr_$",
                          "typeString": "type(struct GPv2Order.Data storage pointer)"
                        }
                      },
                      "id": 54806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3662:411:143",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "src": "3654:419:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "id": 54808,
                  "nodeType": "ExpressionStatement",
                  "src": "3654:419:143"
                }
              ]
            },
            "baseFunctions": [
              53476
            ],
            "functionSelector": "b8296fc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeableOrder",
            "nameLocation": "2054:17:143",
            "overrides": {
              "id": 54664,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2221:8:143"
            },
            "parameters": {
              "id": 54663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54654,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2089:5:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 54810,
                  "src": "2081:13:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:143",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54810,
                  "src": "2104:7:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:143",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54658,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54810,
                  "src": "2121:7:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54657,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54660,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "2153:11:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 54810,
                  "src": "2138:26:143",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:5:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54662,
                  "mutability": "mutable",
                  "name": "offchainInput",
                  "nameLocation": "2189:13:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 54810,
                  "src": "2174:28:143",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54661,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:5:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2071:137:143"
            },
            "returnParameters": {
              "id": 54668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54667,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2261:5:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 54810,
                  "src": "2239:27:143",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17121_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 54666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54665,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "2239:9:143",
                        "2249:4:143"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17121,
                      "src": "2239:14:143"
                    },
                    "referencedDeclaration": 17121,
                    "src": "2239:14:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17121_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:29:143"
            },
            "scope": 54811,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54617,
              "name": "BaseConditionalOrder",
              "nameLocations": [
                "1410:20:143"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53501,
              "src": "1410:20:143"
            },
            "id": 54618,
            "nodeType": "InheritanceSpecifier",
            "src": "1410:20:143"
          }
        ],
        "canonicalName": "GoodAfterTime",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54616,
          "nodeType": "StructuredDocumentation",
          "src": "700:683:143",
          "text": " @title Good After Time (GAT) Conditional Order - with Milkman price checkers\n @author mfw78 <mfw78@rndlabs.xyz>\n @dev Designed to be used with the CoW Protocol Conditional Order Framework.\n      This order type allows for placing an order that is valid after a certain time\n      and that has an optional minimum `sellAmount` determined by a price checker. The\n      actual `buyAmount` is determined by off chain input. As changing the `buyAmount`\n      changes the `orderUid` of the order, this allows for placing multiple orders. To\n      ensure that the order is not filled multiple times, a `minSellBalance` is\n      checked before the order is placed."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54811,
          53501,
          54468,
          52197,
          54437
        ],
        "name": "GoodAfterTime",
        "nameLocation": "1393:13:143",
        "scope": 54812,
        "usedErrors": [
          54407
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 143
}