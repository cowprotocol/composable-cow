{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "OrderNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollNever",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollTryAtBlock",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollTryAtEpoch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "PollTryNextBlock",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IConditionalOrder",
              "name": "handler",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct IConditionalOrder.ConditionalOrderParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "ConditionalOrderCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "offchainInput",
          "type": "bytes"
        }
      ],
      "name": "getTradeableOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "order",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "validateData",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ctx",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "staticInput",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "offchainInput",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610ff8806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806314a2a78414610079578063a6ffa36c1461008e578063b8296fc41461009f575b600080fd5b61006461005f36600461078d565b6100bf565b60405190151581526020015b60405180910390f35b61008c610087366004610851565b610158565b005b61008c61009c366004610aa6565b50565b6100b26100ad366004610ae3565b610275565b6040516100709190610b82565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061015257507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006101698b8b8989898989610275565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461026857604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906102e286860187610d01565b90508060a0015142101561035557604080518082018252600981527f746f6f206561726c790000000000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b608081015181516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c81166004830152909116906370a0823190602401602060405180830381865afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190610dec565b101561045857604080518082018252601481527f62616c616e636520696e73756666696369656e74000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b600061046684860186610e05565b61010083015151909150156105c25760008261010001518060200190518101906104909190610e1e565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16630d1003ee85606001518660000151876020015186602001516040518563ffffffff1660e01b81526004016104e79493929190610ee5565b602060405180830381865afa158015610504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105289190610dec565b9050612710826040015161271061053f9190610f5d565b6105499083610f70565b6105539190610f87565b8310156105bf57604080518082018252601481527f707269636520636865636b6572206661696c6564000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b50505b604051806101800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200182815260200161064b8460c001516106f3565b63ffffffff1681526020018361012001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018360e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981525092505050979650505050505050565b600063ffffffff821115610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161025f565b5090565b60006020828403121561079f57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146107cf57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461009c57600080fd5b8035610803816107d6565b919050565b60008083601f84011261081a57600080fd5b50813567ffffffffffffffff81111561083257600080fd5b60208301915083602082850101111561084a57600080fd5b9250929050565b6000806000806000806000806000806102608b8d03121561087157600080fd5b61087b8b356107d6565b8a35995060208b013561088d816107d6565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff808211156108bf57600080fd5b6108cb8e838f01610808565b909750955060c08d01359150808211156108e457600080fd5b506108f18d828e01610808565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561092a57600080fd5b60e08b0190509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156109925761099261093f565b60405290565b6040516060810167ffffffffffffffff811182821017156109925761099261093f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a0257610a0261093f565b604052919050565b600067ffffffffffffffff821115610a2457610a2461093f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112610a6157600080fd5b8135610a74610a6f82610a0a565b6109bb565b818152846020838601011115610a8957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610ab857600080fd5b813567ffffffffffffffff811115610acf57600080fd5b610adb84828501610a50565b949350505050565b600080600080600080600060a0888a031215610afe57600080fd5b8735610b09816107d6565b96506020880135610b19816107d6565b955060408801359450606088013567ffffffffffffffff80821115610b3d57600080fd5b610b498b838c01610808565b909650945060808a0135915080821115610b6257600080fd5b50610b6f8a828b01610808565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610bc8602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610bf0604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610c1c60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610c518285018215159052565b5050610140838101519083015261016092830151929091019190915290565b60005b83811015610c8b578181015183820152602001610c73565b50506000910152565b60008151808452610cac816020860160208601610c70565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107cf6020830184610c94565b8035801515811461080357600080fd5b600060208284031215610d1357600080fd5b813567ffffffffffffffff80821115610d2b57600080fd5b908301906101408286031215610d4057600080fd5b610d4861096e565b610d51836107f8565b8152610d5f602084016107f8565b6020820152610d70604084016107f8565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610da960e08401610cf1565b60e08201526101008084013583811115610dc257600080fd5b610dce88828701610a50565b91830191909152506101209283013592810192909252509392505050565b600060208284031215610dfe57600080fd5b5051919050565b600060208284031215610e1757600080fd5b5035919050565b60006020808385031215610e3157600080fd5b825167ffffffffffffffff80821115610e4957600080fd5b9084019060608287031215610e5d57600080fd5b610e65610998565b8251610e70816107d6565b81528284015182811115610e8357600080fd5b83019150601f82018713610e9657600080fd5b8151610ea4610a6f82610a0a565b8181528886838601011115610eb857600080fd5b610ec782878301888701610c70565b80868401525050604083015160408201528094505050505092915050565b848152600073ffffffffffffffffffffffffffffffffffffffff808616602084015280851660408401525060806060830152610f246080830184610c94565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561015257610152610f2e565b808202811582820484141761015257610152610f2e565b600082610fbd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220a11f7e9eff35f0a31d3ed3bbf599fe2028ce24d0696f19f509ca5639918c71f164736f6c63430008130033",
    "sourceMap": "1404:2698:145:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806314a2a78414610079578063a6ffa36c1461008e578063b8296fc41461009f575b600080fd5b61006461005f36600461078d565b6100bf565b60405190151581526020015b60405180910390f35b61008c610087366004610851565b610158565b005b61008c61009c366004610aa6565b50565b6100b26100ad366004610ae3565b610275565b6040516100709190610b82565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb8296fc400000000000000000000000000000000000000000000000000000000148061015257507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006101698b8b8989898989610275565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f19010000000000000000000000000000000000000000000000000000000000008152600281018b9052602281019190915260429020909150891461026857604080518082018252600c81527f696e76616c696420686173680000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b60405180910390fd5b5050505050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101829052906102e286860187610d01565b90508060a0015142101561035557604080518082018252600981527f746f6f206561726c790000000000000000000000000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b608081015181516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8c81166004830152909116906370a0823190602401602060405180830381865afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190610dec565b101561045857604080518082018252601481527f62616c616e636520696e73756666696369656e74000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b600061046684860186610e05565b61010083015151909150156105c25760008261010001518060200190518101906104909190610e1e565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16630d1003ee85606001518660000151876020015186602001516040518563ffffffff1660e01b81526004016104e79493929190610ee5565b602060405180830381865afa158015610504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105289190610dec565b9050612710826040015161271061053f9190610f5d565b6105499083610f70565b6105539190610f87565b8310156105bf57604080518082018252601481527f707269636520636865636b6572206661696c6564000000000000000000000000602082015290517fc8fc272500000000000000000000000000000000000000000000000000000000815261025f9190600401610cde565b50505b604051806101800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200182815260200161064b8460c001516106f3565b63ffffffff1681526020018361012001518152602001600081526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018360e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981525092505050979650505050505050565b600063ffffffff821115610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161025f565b5090565b60006020828403121561079f57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146107cf57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461009c57600080fd5b8035610803816107d6565b919050565b60008083601f84011261081a57600080fd5b50813567ffffffffffffffff81111561083257600080fd5b60208301915083602082850101111561084a57600080fd5b9250929050565b6000806000806000806000806000806102608b8d03121561087157600080fd5b61087b8b356107d6565b8a35995060208b013561088d816107d6565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff808211156108bf57600080fd5b6108cb8e838f01610808565b909750955060c08d01359150808211156108e457600080fd5b506108f18d828e01610808565b9094509250506101808b8d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001121561092a57600080fd5b60e08b0190509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156109925761099261093f565b60405290565b6040516060810167ffffffffffffffff811182821017156109925761099261093f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a0257610a0261093f565b604052919050565b600067ffffffffffffffff821115610a2457610a2461093f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112610a6157600080fd5b8135610a74610a6f82610a0a565b6109bb565b818152846020838601011115610a8957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610ab857600080fd5b813567ffffffffffffffff811115610acf57600080fd5b610adb84828501610a50565b949350505050565b600080600080600080600060a0888a031215610afe57600080fd5b8735610b09816107d6565b96506020880135610b19816107d6565b955060408801359450606088013567ffffffffffffffff80821115610b3d57600080fd5b610b498b838c01610808565b909650945060808a0135915080821115610b6257600080fd5b50610b6f8a828b01610808565b989b979a50959850939692959293505050565b815173ffffffffffffffffffffffffffffffffffffffff16815261018081016020830151610bc8602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151610bf0604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608301526080830151608083015260a0830151610c1c60a084018263ffffffff169052565b5060c083015160c083015260e083015160e083015261010080840151818401525061012080840151610c518285018215159052565b5050610140838101519083015261016092830151929091019190915290565b60005b83811015610c8b578181015183820152602001610c73565b50506000910152565b60008151808452610cac816020860160208601610c70565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107cf6020830184610c94565b8035801515811461080357600080fd5b600060208284031215610d1357600080fd5b813567ffffffffffffffff80821115610d2b57600080fd5b908301906101408286031215610d4057600080fd5b610d4861096e565b610d51836107f8565b8152610d5f602084016107f8565b6020820152610d70604084016107f8565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610da960e08401610cf1565b60e08201526101008084013583811115610dc257600080fd5b610dce88828701610a50565b91830191909152506101209283013592810192909252509392505050565b600060208284031215610dfe57600080fd5b5051919050565b600060208284031215610e1757600080fd5b5035919050565b60006020808385031215610e3157600080fd5b825167ffffffffffffffff80821115610e4957600080fd5b9084019060608287031215610e5d57600080fd5b610e65610998565b8251610e70816107d6565b81528284015182811115610e8357600080fd5b83019150601f82018713610e9657600080fd5b8151610ea4610a6f82610a0a565b8181528886838601011115610eb857600080fd5b610ec782878301888701610c70565b80868401525050604083015160408201528094505050505092915050565b848152600073ffffffffffffffffffffffffffffffffffffffff808616602084015280851660408401525060806060830152610f246080830184610c94565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561015257610152610f2e565b808202811582820484141761015257610152610f2e565b600082610fbd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220a11f7e9eff35f0a31d3ed3bbf599fe2028ce24d0696f19f509ca5639918c71f164736f6c63430008130033",
    "sourceMap": "1404:2698:145:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:220:135;;;;;;:::i;:::-;;:::i;:::-;;;612:14:170;;605:22;587:41;;575:2;560:18;1944:220:135;;;;;;;;867:634;;;;;;:::i;:::-;;:::i;:::-;;2170:100;;;;;;:::i;:::-;;;2065:2035:145;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1944:220:135:-;2031:4;2054:59;;;2069:44;2054:59;;:103;;-1:-1:-1;2117:40:135;;;2132:25;2117:40;2054:103;2047:110;1944:220;-1:-1:-1;;1944:220:135:o;867:634::-;1153:36;1192:65;1210:5;1217:6;1225:3;1230:11;;1243:13;;1192:17;:65::i;:::-;5434:14:55;;;5473:16;;5520:9;5502:28;;5578:3;5557:25;;5595:23;;6176:4;6170:11;6220:10;6194:37;;6274:1;6251:25;;6244:50;;;6337:2;6314:26;;6307:46;;;;6410:2;6381:32;;1153:104:135;;-1:-1:-1;1359:5:135;:56;1353:142;;1471:12;;;;;;;;;;;;;;;;1439:45;;;;;;;1471:12;1439:45;;;:::i;:::-;;;;;;;;1353:142;1143:358;867:634;;;;;;;;;;:::o;2065:2035:145:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:31:145;;;;;;:::i;:::-;2365:50;;2522:4;:14;;;2503:15;:33;;2497:116;;2592:9;;;;;;;;;;;;;;;;2560:42;;;;;;;2592:9;2560:42;;;:::i;2497:116::-;2733:19;;;;2698:14;;:31;;;;;:24;9711:55:170;;;2698:31:145;;;9693:74:170;2698:24:145;;;;;;9666:18:170;;2698:31:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;2692:148;;2808:20;;;;;;;;;;;;;;;;2776:53;;;;;;;2808:20;2776:53;;;:::i;2692:148::-;2850:17;2870:36;;;;2881:13;2870:36;:::i;:::-;2968:24;;;;:31;2850:56;;-1:-1:-1;2968:35:145;2964:700;;3088:28;3130:4;:24;;;3119:59;;;;;;;;;;;;:::i;:::-;3088:90;;3253:20;3276:1;:9;;;:24;;;3301:4;:15;;;3318:4;:14;;;3334:4;:13;;;3349:1;:9;;;3276:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3253:106;;271:5:144;3523:1:145;:17;;;271:5:144;3507:33:145;;;;:::i;:::-;3491:50;;:12;:50;:::i;:::-;3490:68;;;;:::i;:::-;3477:9;:81;;3471:183;;3618:20;;;;;;;;;;;;;;;;3586:53;;;;;;;3618:20;3586:53;;;:::i;3471:183::-;3005:659;;2964:700;3682:411;;;;;;;;3710:4;:14;;;3682:411;;;;;;3738:4;:13;;;3682:411;;;;;;3765:4;:13;;;3682:411;;;;;;3792:4;:15;;;3682:411;;;;3821:9;3682:411;;;;3844:23;:4;:12;;;:21;:23::i;:::-;3682:411;;;;;;3881:4;:12;;;3682:411;;;;3907:1;3682:411;;;;3955:19;3682:411;;;;3988:4;:21;;;3682:411;;;;;;4023:23;3682:411;;;;4060:23;3682:411;;;3674:419;;2288:1812;;2065:2035;;;;;;;;;:::o;15264:187:92:-;15320:6;15355:16;15346:25;;;15338:76;;;;;;;12819:2:170;15338:76:92;;;12801:21:170;12858:2;12838:18;;;12831:30;12897:34;12877:18;;;12870:62;12968:8;12948:18;;;12941:36;12994:19;;15338:76:92;12617:402:170;15338:76:92;-1:-1:-1;15438:5:92;15264:187::o;14:332:170:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:170:o;639:154::-;725:42;718:5;714:54;707:5;704:65;694:93;;783:1;780;773:12;798:134;866:20;;895:31;866:20;895:31;:::i;:::-;798:134;;;:::o;937:347::-;988:8;998:6;1052:3;1045:4;1037:6;1033:17;1029:27;1019:55;;1070:1;1067;1060:12;1019:55;-1:-1:-1;1093:20:170;;1136:18;1125:30;;1122:50;;;1168:1;1165;1158:12;1122:50;1205:4;1197:6;1193:17;1181:29;;1257:3;1250:4;1241:6;1233;1229:19;1225:30;1222:39;1219:59;;;1274:1;1271;1264:12;1219:59;937:347;;;;;:::o;1289:1401::-;1458:6;1466;1474;1482;1490;1498;1506;1514;1522;1530;1583:3;1571:9;1562:7;1558:23;1554:33;1551:53;;;1600:1;1597;1590:12;1551:53;1613:49;1651:9;1638:23;1613:49;:::i;:::-;1694:9;1681:23;1671:33;;1754:2;1743:9;1739:18;1726:32;1767:31;1792:5;1767:31;:::i;:::-;1817:5;-1:-1:-1;1869:2:170;1854:18;;1841:32;;-1:-1:-1;1920:2:170;1905:18;;1892:32;;-1:-1:-1;1971:3:170;1956:19;;1943:33;;-1:-1:-1;2027:3:170;2012:19;;1999:33;2051:18;2081:14;;;2078:34;;;2108:1;2105;2098:12;2078:34;2147:58;2197:7;2188:6;2177:9;2173:22;2147:58;:::i;:::-;2224:8;;-1:-1:-1;2121:84:170;-1:-1:-1;2312:3:170;2297:19;;2284:33;;-1:-1:-1;2329:16:170;;;2326:36;;;2358:1;2355;2348:12;2326:36;;2397:60;2449:7;2438:8;2427:9;2423:24;2397:60;:::i;:::-;2476:8;;-1:-1:-1;2371:86:170;-1:-1:-1;;2625:3:170;2531:23;;;2556:66;2527:96;2523:106;2520:126;;;2642:1;2639;2632:12;2520:126;2680:3;2669:9;2665:19;2655:29;;1289:1401;;;;;;;;;;;;;:::o;2695:184::-;2747:77;2744:1;2737:88;2844:4;2841:1;2834:15;2868:4;2865:1;2858:15;2884:255;2956:2;2950:9;2998:6;2986:19;;3035:18;3020:34;;3056:22;;;3017:62;3014:88;;;3082:18;;:::i;:::-;3118:2;3111:22;2884:255;:::o;3144:253::-;3216:2;3210:9;3258:4;3246:17;;3293:18;3278:34;;3314:22;;;3275:62;3272:88;;;3340:18;;:::i;3402:334::-;3473:2;3467:9;3529:2;3519:13;;3534:66;3515:86;3503:99;;3632:18;3617:34;;3653:22;;;3614:62;3611:88;;;3679:18;;:::i;:::-;3715:2;3708:22;3402:334;;-1:-1:-1;3402:334:170:o;3741:245::-;3789:4;3822:18;3814:6;3811:30;3808:56;;;3844:18;;:::i;:::-;-1:-1:-1;3901:2:170;3889:15;3906:66;3885:88;3975:4;3881:99;;3741:245::o;3991:462::-;4033:5;4086:3;4079:4;4071:6;4067:17;4063:27;4053:55;;4104:1;4101;4094:12;4053:55;4140:6;4127:20;4171:48;4187:31;4215:2;4187:31;:::i;:::-;4171:48;:::i;:::-;4244:2;4235:7;4228:19;4290:3;4283:4;4278:2;4270:6;4266:15;4262:26;4259:35;4256:55;;;4307:1;4304;4297:12;4256:55;4372:2;4365:4;4357:6;4353:17;4346:4;4337:7;4333:18;4320:55;4420:1;4395:16;;;4413:4;4391:27;4384:38;;;;4399:7;3991:462;-1:-1:-1;;;3991:462:170:o;4458:320::-;4526:6;4579:2;4567:9;4558:7;4554:23;4550:32;4547:52;;;4595:1;4592;4585:12;4547:52;4635:9;4622:23;4668:18;4660:6;4657:30;4654:50;;;4700:1;4697;4690:12;4654:50;4723:49;4764:7;4755:6;4744:9;4740:22;4723:49;:::i;:::-;4713:59;4458:320;-1:-1:-1;;;;4458:320:170:o;4783:1063::-;4900:6;4908;4916;4924;4932;4940;4948;5001:3;4989:9;4980:7;4976:23;4972:33;4969:53;;;5018:1;5015;5008:12;4969:53;5057:9;5044:23;5076:31;5101:5;5076:31;:::i;:::-;5126:5;-1:-1:-1;5183:2:170;5168:18;;5155:32;5196:33;5155:32;5196:33;:::i;:::-;5248:7;-1:-1:-1;5302:2:170;5287:18;;5274:32;;-1:-1:-1;5357:2:170;5342:18;;5329:32;5380:18;5410:14;;;5407:34;;;5437:1;5434;5427:12;5407:34;5476:58;5526:7;5517:6;5506:9;5502:22;5476:58;:::i;:::-;5553:8;;-1:-1:-1;5450:84:170;-1:-1:-1;5641:3:170;5626:19;;5613:33;;-1:-1:-1;5658:16:170;;;5655:36;;;5687:1;5684;5677:12;5655:36;;5726:60;5778:7;5767:8;5756:9;5752:24;5726:60;:::i;:::-;4783:1063;;;;-1:-1:-1;4783:1063:170;;-1:-1:-1;4783:1063:170;;;;5700:86;;-1:-1:-1;;;4783:1063:170:o;6090:1264::-;6310:13;;5936:42;5925:54;5913:67;;6270:3;6255:19;;6382:4;6374:6;6370:17;6364:24;6397:62;6453:4;6442:9;6438:20;6424:12;5936:42;5925:54;5913:67;;5851:135;6397:62;;6508:4;6500:6;6496:17;6490:24;6523:64;6581:4;6570:9;6566:20;6550:14;5936:42;5925:54;5913:67;;5851:135;6523:64;;6643:4;6635:6;6631:17;6625:24;6618:4;6607:9;6603:20;6596:54;6706:4;6698:6;6694:17;6688:24;6681:4;6670:9;6666:20;6659:54;6762:4;6754:6;6750:17;6744:24;6777:55;6826:4;6815:9;6811:20;6795:14;6067:10;6056:22;6044:35;;5991:94;6777:55;;6888:4;6880:6;6876:17;6870:24;6863:4;6852:9;6848:20;6841:54;6951:4;6943:6;6939:17;6933:24;6926:4;6915:9;6911:20;6904:54;6977:6;7037:2;7029:6;7025:15;7019:22;7014:2;7003:9;6999:18;6992:50;;7061:6;7116:2;7108:6;7104:15;7098:22;7129:51;7176:2;7165:9;7161:18;7145:14;421:13;414:21;402:34;;351:91;7129:51;-1:-1:-1;;7199:6:170;7247:15;;;7241:22;7221:18;;;7214:50;7283:6;7331:15;;;7325:22;7305:18;;;;7298:50;;;;6090:1264;:::o;7359:250::-;7444:1;7454:113;7468:6;7465:1;7462:13;7454:113;;;7544:11;;;7538:18;7525:11;;;7518:39;7490:2;7483:10;7454:113;;;-1:-1:-1;;7601:1:170;7583:16;;7576:27;7359:250::o;7614:330::-;7656:3;7694:5;7688:12;7721:6;7716:3;7709:19;7737:76;7806:6;7799:4;7794:3;7790:14;7783:4;7776:5;7772:16;7737:76;:::i;:::-;7858:2;7846:15;7863:66;7842:88;7833:98;;;;7933:4;7829:109;;7614:330;-1:-1:-1;;7614:330:170:o;7949:220::-;8098:2;8087:9;8080:21;8061:4;8118:45;8159:2;8148:9;8144:18;8136:6;8118:45;:::i;8174:160::-;8239:20;;8295:13;;8288:21;8278:32;;8268:60;;8324:1;8321;8314:12;8339:1203;8421:6;8474:2;8462:9;8453:7;8449:23;8445:32;8442:52;;;8490:1;8487;8480:12;8442:52;8530:9;8517:23;8559:18;8600:2;8592:6;8589:14;8586:34;;;8616:1;8613;8606:12;8586:34;8639:22;;;;8695:6;8677:16;;;8673:29;8670:49;;;8715:1;8712;8705:12;8670:49;8741:22;;:::i;:::-;8786;8805:2;8786:22;:::i;:::-;8779:5;8772:37;8841:31;8868:2;8864;8860:11;8841:31;:::i;:::-;8836:2;8829:5;8825:14;8818:55;8905:31;8932:2;8928;8924:11;8905:31;:::i;:::-;8900:2;8893:5;8889:14;8882:55;8990:2;8986;8982:11;8969:25;8964:2;8957:5;8953:14;8946:49;9049:3;9045:2;9041:12;9028:26;9022:3;9015:5;9011:15;9004:51;9109:3;9105:2;9101:12;9088:26;9082:3;9075:5;9071:15;9064:51;9169:3;9165:2;9161:12;9148:26;9142:3;9135:5;9131:15;9124:51;9208:29;9232:3;9228:2;9224:12;9208:29;:::i;:::-;9202:3;9195:5;9191:15;9184:54;9257:3;9306:2;9302;9298:11;9285:25;9335:2;9325:8;9322:16;9319:36;;;9351:1;9348;9341:12;9319:36;9387:44;9423:7;9412:8;9408:2;9404:17;9387:44;:::i;:::-;9371:14;;;9364:68;;;;-1:-1:-1;9451:3:170;9499:11;;;9486:25;9470:14;;;9463:49;;;;-1:-1:-1;9375:5:170;8339:1203;-1:-1:-1;;;8339:1203:170:o;9778:184::-;9848:6;9901:2;9889:9;9880:7;9876:23;9872:32;9869:52;;;9917:1;9914;9907:12;9869:52;-1:-1:-1;9940:16:170;;9778:184;-1:-1:-1;9778:184:170:o;9967:180::-;10026:6;10079:2;10067:9;10058:7;10054:23;10050:32;10047:52;;;10095:1;10092;10085:12;10047:52;-1:-1:-1;10118:23:170;;9967:180;-1:-1:-1;9967:180:170:o;10152:1137::-;10260:6;10291:2;10334;10322:9;10313:7;10309:23;10305:32;10302:52;;;10350:1;10347;10340:12;10302:52;10383:9;10377:16;10412:18;10453:2;10445:6;10442:14;10439:34;;;10469:1;10466;10459:12;10439:34;10492:22;;;;10548:4;10530:16;;;10526:27;10523:47;;;10566:1;10563;10556:12;10523:47;10592:22;;:::i;:::-;10644:2;10638:9;10656:33;10681:7;10656:33;:::i;:::-;10698:22;;10751:11;;;10745:18;10775:16;;;10772:36;;;10804:1;10801;10794:12;10772:36;10827:17;;;-1:-1:-1;10875:4:170;10867:13;;10863:27;-1:-1:-1;10853:55:170;;10904:1;10901;10894:12;10853:55;10933:2;10927:9;10958:48;10974:31;11002:2;10974:31;:::i;10958:48::-;11029:2;11022:5;11015:17;11069:7;11064:2;11059;11055;11051:11;11047:20;11044:33;11041:53;;;11090:1;11087;11080:12;11041:53;11103:67;11167:2;11162;11155:5;11151:14;11146:2;11142;11138:11;11103:67;:::i;:::-;11202:5;11197:2;11190:5;11186:14;11179:29;;;11254:2;11250;11246:11;11240:18;11235:2;11228:5;11224:14;11217:42;11278:5;11268:15;;;;;;10152:1137;;;;:::o;11294:544::-;11557:6;11546:9;11539:25;11520:4;11583:42;11673:2;11665:6;11661:15;11656:2;11645:9;11641:18;11634:43;11725:2;11717:6;11713:15;11708:2;11697:9;11693:18;11686:43;;11765:3;11760:2;11749:9;11745:18;11738:31;11786:46;11827:3;11816:9;11812:19;11804:6;11786:46;:::i;:::-;11778:54;11294:544;-1:-1:-1;;;;;;11294:544:170:o;11843:184::-;11895:77;11892:1;11885:88;11992:4;11989:1;11982:15;12016:4;12013:1;12006:15;12032:128;12099:9;;;12120:11;;;12117:37;;;12134:18;;:::i;12165:168::-;12238:9;;;12269;;12286:15;;;12280:22;;12266:37;12256:71;;12307:18;;:::i;12338:274::-;12378:1;12404;12394:189;;12439:77;12436:1;12429:88;12540:4;12537:1;12530:15;12568:4;12565:1;12558:15;12394:189;-1:-1:-1;12597:9:170;;12338:274::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getTradeableOrder(address,address,bytes32,bytes,bytes)": "b8296fc4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "validateData(bytes)": "a6ffa36c",
    "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": "14a2a784"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"OrderNotValid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollNever\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollTryAtBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollTryAtEpoch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PollTryNextBlock\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IConditionalOrder\",\"name\":\"handler\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IConditionalOrder.ConditionalOrderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"ConditionalOrderCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainInput\",\"type\":\"bytes\"}],\"name\":\"getTradeableOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"validateData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ctx\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"staticInput\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainInput\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"mfw78 <mfw78@rndlabs.xyz>\",\"details\":\"Designed to be used with the CoW Protocol Conditional Order Framework.      This order type allows for placing an order that is valid after a certain time      and that has an optional minimum `sellAmount` determined by a price checker. The      actual `buyAmount` is determined by off chain input. As changing the `buyAmount`      changes the `orderUid` of the order, this allows for placing multiple orders. To      ensure that the order is not filled multiple times, a `minSellBalance` is      checked before the order is placed.\",\"errors\":{\"OrderNotValid(string)\":[{\"details\":\"This error is returned by the `getTradeableOrder` function if the order condition is not met.      A parameter of `string` type is included to allow the caller to specify the reason for the failure.\"}]},\"events\":{\"ConditionalOrderCreated(address,(address,bytes32,bytes))\":{\"details\":\"This event is emitted when a new conditional order is created.\",\"params\":{\"owner\":\"the address that has created the conditional order\",\"params\":\"the address / salt / data of the conditional order\"}}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"validateData(bytes)\":{\"details\":\"Throws if the data is invalid.\",\"params\":{\"data\":\"The ABI-encoded concrete order type's `Data` struct to be validated.\"}},\"verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))\":{\"details\":\"As an order generator, the `GPv2Order.Data` passed as a parameter is ignored / not validated.\",\"params\":{\"_hash\":\"the hash of the order\",\"ctx\":\"the context key of the order (bytes32(0) if a merkle tree is used, otherwise H(params)) with which to lookup the cabinet\",\"domainSeparator\":\"the domain separator used to sign the order\",\"offchainInput\":\"dynamic off-chain input for a discrete order cut from this conditional order\",\"order\":\"`GPv2Order.Data` of a discrete order to be verified (if *not* an `IConditionalOrderGenerator`).\",\"owner\":\"the contract who is the owner of the order\",\"sender\":\"the `msg.sender` of the transaction\",\"staticInput\":\"the static input for all discrete orders cut from this conditional order\"}}},\"title\":\"Good After Time (GAT) Conditional Order - with Milkman price checkers\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateData(bytes)\":{\"notice\":\"A helper function for SDK users to verify if a given conditional order's data is valid.\"},\"verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))\":{\"notice\":\"Verify if a given discrete order is valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/types/GoodAfterTime.sol\":\"GoodAfterTime\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol\":{\"keccak256\":\"0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f\",\"dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/safe/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"src/BaseConditionalOrder.sol\":{\"keccak256\":\"0x83d14b5411a5a1adc00da2d3e17703cd7be15de3f5637b2a3f77501df14c5e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c007603000bb506c58265f61863bb90966a210429f2985a2632d4f00c7bbc1f\",\"dweb:/ipfs/QmUz7ikMYiS8MGNsMxvcHzpkX2yYiPidxvcfG97Vpqs73j\"]},\"src/interfaces/IConditionalOrder.sol\":{\"keccak256\":\"0x9ce9ab9b32a1cea3dd9390407f9733458868f0c4e706acbf5373d2c083ec363e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e033e894f26b27544fc11d9cc1cd21351693defc8bd8716a47a74da57c634e28\",\"dweb:/ipfs/QmcC4PtfpCpf3srEqAuU3GNxz4qvgX8bU5B78hAQQjQhMW\"]},\"src/types/ConditionalOrdersUtilsLib.sol\":{\"keccak256\":\"0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777\",\"dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf\"]},\"src/types/GoodAfterTime.sol\":{\"keccak256\":\"0xf46af01221ffa5064a5acb7de5b9b8f1b2fc963dc83350211a0f061105d7a45a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6048f3c4d39662759022c4f99a53c234d71d07bb08acd77623ba7738657f00ca\",\"dweb:/ipfs/QmPSYbLk5QsvUZGqMY2dgDtqbHNLSa8dw3QGLYBvrHTQK5\"]},\"src/vendored/Milkman.sol\":{\"keccak256\":\"0x79357bd8fc886e4de7fb7228ee2b7eafce7dfefc8dfa60c4f4e59046a67bb44b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c39a03abcd4b9813478020f30e8f286c778272f878a2556f4d392ac7d5aebeb\",\"dweb:/ipfs/QmUzj7RphTdxvXeLqaevz3D7DYZTsMBqsovnibcxP5qbB5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OrderNotValid"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollNever"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollTryAtBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollTryAtEpoch"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "PollTryNextBlock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IConditionalOrder.ConditionalOrderParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IConditionalOrder",
                  "name": "handler",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "staticInput",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConditionalOrderCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "offchainInput",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTradeableOrder",
          "outputs": [
            {
              "internalType": "struct GPv2Order.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "ctx",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "staticInput",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "offchainInput",
              "type": "bytes"
            },
            {
              "internalType": "struct GPv2Order.Data",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "validateData(bytes)": {
            "details": "Throws if the data is invalid.",
            "params": {
              "data": "The ABI-encoded concrete order type's `Data` struct to be validated."
            }
          },
          "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": {
            "details": "As an order generator, the `GPv2Order.Data` passed as a parameter is ignored / not validated.",
            "params": {
              "_hash": "the hash of the order",
              "ctx": "the context key of the order (bytes32(0) if a merkle tree is used, otherwise H(params)) with which to lookup the cabinet",
              "domainSeparator": "the domain separator used to sign the order",
              "offchainInput": "dynamic off-chain input for a discrete order cut from this conditional order",
              "order": "`GPv2Order.Data` of a discrete order to be verified (if *not* an `IConditionalOrderGenerator`).",
              "owner": "the contract who is the owner of the order",
              "sender": "the `msg.sender` of the transaction",
              "staticInput": "the static input for all discrete orders cut from this conditional order"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "validateData(bytes)": {
            "notice": "A helper function for SDK users to verify if a given conditional order's data is valid."
          },
          "verify(address,address,bytes32,bytes32,bytes32,bytes,bytes,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32))": {
            "notice": "Verify if a given discrete order is valid."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "balancer/=lib/balancer/src/",
        "canonical-weth/=lib/canonical-weth/src/",
        "cowprotocol/=lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/balancer/src/lib/helpers/",
        "math/=lib/balancer/src/lib/math/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/types/GoodAfterTime.sol": "GoodAfterTime"
      },
      "libraries": {}
    },
    "sources": {
      "lib/cowprotocol/src/contracts/libraries/GPv2Interaction.sol": {
        "keccak256": "0xb950f05f76ac8044b82314ea5510941fdbc0f0e76e7f159023d435652b429528",
        "urls": [
          "bzz-raw://c081155e1b18c060aaab781b4887744413efffdfc55ce190db45c321444f165f",
          "dweb:/ipfs/QmbK3Qu7ZgwBfx2Es5EQcvG6q2srkHjzfNK2ziQ4ojxLSF"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/safe/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/BaseConditionalOrder.sol": {
        "keccak256": "0x83d14b5411a5a1adc00da2d3e17703cd7be15de3f5637b2a3f77501df14c5e9c",
        "urls": [
          "bzz-raw://4c007603000bb506c58265f61863bb90966a210429f2985a2632d4f00c7bbc1f",
          "dweb:/ipfs/QmUz7ikMYiS8MGNsMxvcHzpkX2yYiPidxvcfG97Vpqs73j"
        ],
        "license": "MIT"
      },
      "src/interfaces/IConditionalOrder.sol": {
        "keccak256": "0x9ce9ab9b32a1cea3dd9390407f9733458868f0c4e706acbf5373d2c083ec363e",
        "urls": [
          "bzz-raw://e033e894f26b27544fc11d9cc1cd21351693defc8bd8716a47a74da57c634e28",
          "dweb:/ipfs/QmcC4PtfpCpf3srEqAuU3GNxz4qvgX8bU5B78hAQQjQhMW"
        ],
        "license": "GPL-3.0"
      },
      "src/types/ConditionalOrdersUtilsLib.sol": {
        "keccak256": "0x38e4ce4fc58c018f510ee45d78ae49253e8aa70fdf559d83ebb6c838c6b47aae",
        "urls": [
          "bzz-raw://a38ccd5b8ce2895a77b7474b1ac36ebfccc975b3839f6d3bfef72700f8f6f777",
          "dweb:/ipfs/QmSfs5zZ4U14NkZYSqAFUBcuKGjyfMM5Dp2sbj14FmVYPf"
        ],
        "license": "MIT"
      },
      "src/types/GoodAfterTime.sol": {
        "keccak256": "0xf46af01221ffa5064a5acb7de5b9b8f1b2fc963dc83350211a0f061105d7a45a",
        "urls": [
          "bzz-raw://6048f3c4d39662759022c4f99a53c234d71d07bb08acd77623ba7738657f00ca",
          "dweb:/ipfs/QmPSYbLk5QsvUZGqMY2dgDtqbHNLSa8dw3QGLYBvrHTQK5"
        ],
        "license": "GPL-3.0"
      },
      "src/vendored/Milkman.sol": {
        "keccak256": "0x79357bd8fc886e4de7fb7228ee2b7eafce7dfefc8dfa60c4f4e59046a67bb44b",
        "urls": [
          "bzz-raw://1c39a03abcd4b9813478020f30e8f286c778272f878a2556f4d392ac7d5aebeb",
          "dweb:/ipfs/QmUzj7RphTdxvXeLqaevz3D7DYZTsMBqsovnibcxP5qbB5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/types/GoodAfterTime.sol",
    "id": 54915,
    "exportedSymbols": {
      "BALANCE_INSUFFICIENT": [
        54714
      ],
      "BaseConditionalOrder": [
        53578
      ],
      "GPv2Interaction": [
        14303
      ],
      "GPv2Order": [
        14459
      ],
      "GoodAfterTime": [
        54914
      ],
      "IConditionalOrder": [
        54540
      ],
      "IConditionalOrderGenerator": [
        54571
      ],
      "IERC165": [
        52197
      ],
      "IERC20": [
        45820
      ],
      "IExpectedOutCalculator": [
        56152
      ],
      "INVALID_HASH": [
        53472
      ],
      "PRICE_CHECKER_FAILED": [
        54718
      ],
      "SafeCast": [
        47936
      ],
      "TOO_EARLY": [
        54710
      ],
      "Utils": [
        54696
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4067:145",
    "nodes": [
      {
        "id": 54698,
        "nodeType": "PragmaDirective",
        "src": "36:31:145",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 54700,
        "nodeType": "ImportDirective",
        "src": "69:69:145",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54915,
        "sourceUnit": 45153,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54699,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45820,
              "src": "77:6:145",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54702,
        "nodeType": "ImportDirective",
        "src": "139:73:145",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54915,
        "sourceUnit": 47937,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54701,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47936,
              "src": "147:8:145",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54703,
        "nodeType": "ImportDirective",
        "src": "214:33:145",
        "nodes": [],
        "absolutePath": "src/vendored/Milkman.sol",
        "file": "../vendored/Milkman.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54915,
        "sourceUnit": 56153,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54704,
        "nodeType": "ImportDirective",
        "src": "248:37:145",
        "nodes": [],
        "absolutePath": "src/BaseConditionalOrder.sol",
        "file": "../BaseConditionalOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54915,
        "sourceUnit": 53579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54706,
        "nodeType": "ImportDirective",
        "src": "286:83:145",
        "nodes": [],
        "absolutePath": "src/types/ConditionalOrdersUtilsLib.sol",
        "file": "./ConditionalOrdersUtilsLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54915,
        "sourceUnit": 54697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54705,
              "name": "ConditionalOrdersUtilsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54696,
              "src": "294:25:145",
              "typeDescriptions": {}
            },
            "local": "Utils",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54710,
        "nodeType": "VariableDeclaration",
        "src": "458:39:145",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "TOO_EARLY",
        "nameLocation": "474:9:145",
        "scope": 54915,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54708,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "458:6:145",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "746f6f206561726c79",
          "id": 54709,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "486:11:145",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_d87d05e52726880c4bb1003e00ed00463d214b7b936d9983b909b11b18ccd468",
            "typeString": "literal_string \"too early\""
          },
          "value": "too early"
        },
        "visibility": "internal"
      },
      {
        "id": 54714,
        "nodeType": "VariableDeclaration",
        "src": "556:61:145",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "BALANCE_INSUFFICIENT",
        "nameLocation": "572:20:145",
        "scope": 54915,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54712,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "556:6:145",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "62616c616e636520696e73756666696369656e74",
          "id": 54713,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "595:22:145",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_a9ef3b4d07292ad1e9ff9cf86a951bcf260ed39b4c9f3962ba7c62aae85e2c4f",
            "typeString": "literal_string \"balance insufficient\""
          },
          "value": "balance insufficient"
        },
        "visibility": "internal"
      },
      {
        "id": 54718,
        "nodeType": "VariableDeclaration",
        "src": "656:61:145",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "PRICE_CHECKER_FAILED",
        "nameLocation": "672:20:145",
        "scope": 54915,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_string_memory_ptr",
          "typeString": "string"
        },
        "typeName": {
          "id": 54716,
          "name": "string",
          "nodeType": "ElementaryTypeName",
          "src": "656:6:145",
          "typeDescriptions": {
            "typeIdentifier": "t_string_storage_ptr",
            "typeString": "string"
          }
        },
        "value": {
          "hexValue": "707269636520636865636b6572206661696c6564",
          "id": 54717,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "string",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "695:22:145",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_5d01b0e3386345eb7eea4e021ec7bc264b1830cdfa164e963e50273f975d315e",
            "typeString": "literal_string \"price checker failed\""
          },
          "value": "price checker failed"
        },
        "visibility": "internal"
      },
      {
        "id": 54914,
        "nodeType": "ContractDefinition",
        "src": "1404:2698:145",
        "nodes": [
          {
            "id": 54724,
            "nodeType": "UsingForDirective",
            "src": "1457:27:145",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54722,
              "name": "SafeCast",
              "nameLocations": [
                "1463:8:145"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47936,
              "src": "1463:8:145"
            },
            "typeName": {
              "id": 54723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1476:7:145",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 54747,
            "nodeType": "StructDefinition",
            "src": "1508:396:145",
            "nodes": [],
            "canonicalName": "GoodAfterTime.Data",
            "members": [
              {
                "constant": false,
                "id": 54727,
                "mutability": "mutable",
                "name": "sellToken",
                "nameLocation": "1537:9:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1530:16:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$45820",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54726,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54725,
                    "name": "IERC20",
                    "nameLocations": [
                      "1530:6:145"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45820,
                    "src": "1530:6:145"
                  },
                  "referencedDeclaration": 45820,
                  "src": "1530:6:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45820",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54730,
                "mutability": "mutable",
                "name": "buyToken",
                "nameLocation": "1563:8:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1556:15:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$45820",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 54729,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54728,
                    "name": "IERC20",
                    "nameLocations": [
                      "1556:6:145"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45820,
                    "src": "1556:6:145"
                  },
                  "referencedDeclaration": 45820,
                  "src": "1556:6:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$45820",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54732,
                "mutability": "mutable",
                "name": "receiver",
                "nameLocation": "1589:8:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1581:16:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54731,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1581:7:145",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54734,
                "mutability": "mutable",
                "name": "sellAmount",
                "nameLocation": "1615:10:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1607:18:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54733,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1607:7:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54736,
                "mutability": "mutable",
                "name": "minSellBalance",
                "nameLocation": "1682:14:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1674:22:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54735,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1674:7:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54738,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "1714:9:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1706:17:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54737,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1706:7:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54740,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "1773:7:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1765:15:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54739,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1765:7:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54742,
                "mutability": "mutable",
                "name": "allowPartialFill",
                "nameLocation": "1821:16:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1816:21:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 54741,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1816:4:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54744,
                "mutability": "mutable",
                "name": "priceCheckerPayload",
                "nameLocation": "1853:19:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1847:25:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 54743,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1847:5:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54746,
                "mutability": "mutable",
                "name": "appData",
                "nameLocation": "1890:7:145",
                "nodeType": "VariableDeclaration",
                "scope": 54747,
                "src": "1882:15:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 54745,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:7:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nameLocation": "1515:4:145",
            "scope": 54914,
            "visibility": "public"
          },
          {
            "id": 54755,
            "nodeType": "StructDefinition",
            "src": "1910:149:145",
            "nodes": [],
            "canonicalName": "GoodAfterTime.PriceCheckerPayload",
            "members": [
              {
                "constant": false,
                "id": 54750,
                "mutability": "mutable",
                "name": "checker",
                "nameLocation": "1970:7:145",
                "nodeType": "VariableDeclaration",
                "scope": 54755,
                "src": "1947:30:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IExpectedOutCalculator_$56152",
                  "typeString": "contract IExpectedOutCalculator"
                },
                "typeName": {
                  "id": 54749,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 54748,
                    "name": "IExpectedOutCalculator",
                    "nameLocations": [
                      "1947:22:145"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 56152,
                    "src": "1947:22:145"
                  },
                  "referencedDeclaration": 56152,
                  "src": "1947:22:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IExpectedOutCalculator_$56152",
                    "typeString": "contract IExpectedOutCalculator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54752,
                "mutability": "mutable",
                "name": "payload",
                "nameLocation": "1993:7:145",
                "nodeType": "VariableDeclaration",
                "scope": 54755,
                "src": "1987:13:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 54751,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1987:5:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54754,
                "mutability": "mutable",
                "name": "allowedSlippage",
                "nameLocation": "2018:15:145",
                "nodeType": "VariableDeclaration",
                "scope": 54755,
                "src": "2010:23:145",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54753,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2010:7:145",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PriceCheckerPayload",
            "nameLocation": "1917:19:145",
            "scope": 54914,
            "visibility": "public"
          },
          {
            "id": 54913,
            "nodeType": "FunctionDefinition",
            "src": "2065:2035:145",
            "nodes": [],
            "body": {
              "id": 54912,
              "nodeType": "Block",
              "src": "2288:1812:145",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54774,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2377:4:145",
                      "nodeType": "VariableDeclaration",
                      "scope": 54912,
                      "src": "2365:16:145",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                        "typeString": "struct GoodAfterTime.Data"
                      },
                      "typeName": {
                        "id": 54773,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54772,
                          "name": "Data",
                          "nameLocations": [
                            "2365:4:145"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 54747,
                          "src": "2365:4:145"
                        },
                        "referencedDeclaration": 54747,
                        "src": "2365:4:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$54747_storage_ptr",
                          "typeString": "struct GoodAfterTime.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54781,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54777,
                        "name": "staticInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54763,
                        "src": "2395:11:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 54778,
                            "name": "Data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54747,
                            "src": "2409:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Data_$54747_storage_ptr_$",
                              "typeString": "type(struct GoodAfterTime.Data storage pointer)"
                            }
                          }
                        ],
                        "id": 54779,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2408:6:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$54747_storage_ptr_$",
                          "typeString": "type(struct GoodAfterTime.Data storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Data_$54747_storage_ptr_$",
                          "typeString": "type(struct GoodAfterTime.Data storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 54775,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2384:3:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2388:6:145",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2384:10:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 54780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:31:145",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                      "typeString": "struct GoodAfterTime.Data memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2365:50:145"
                },
                {
                  "condition": {
                    "id": 54788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2501:36:145",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54782,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2503:5:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 54783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2509:9:145",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2503:15:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 54784,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54774,
                              "src": "2522:4:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                "typeString": "struct GoodAfterTime.Data memory"
                              }
                            },
                            "id": 54785,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2527:9:145",
                            "memberName": "startTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54738,
                            "src": "2522:14:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2503:33:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 54787,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2502:35:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54796,
                  "nodeType": "IfStatement",
                  "src": "2497:116:145",
                  "trueBody": {
                    "id": 54795,
                    "nodeType": "Block",
                    "src": "2539:74:145",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54792,
                              "name": "TOO_EARLY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54710,
                              "src": "2592:9:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 54789,
                              "name": "IConditionalOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54540,
                              "src": "2560:17:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54540_$",
                                "typeString": "type(contract IConditionalOrder)"
                              }
                            },
                            "id": 54791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2578:13:145",
                            "memberName": "OrderNotValid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54484,
                            "src": "2560:31:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 54793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2560:42:145",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54794,
                        "nodeType": "RevertStatement",
                        "src": "2553:49:145"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 54806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2696:57:145",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 54800,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54757,
                                "src": "2723:5:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 54797,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54774,
                                  "src": "2698:4:145",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                    "typeString": "struct GoodAfterTime.Data memory"
                                  }
                                },
                                "id": 54798,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2703:9:145",
                                "memberName": "sellToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54727,
                                "src": "2698:14:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$45820",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 54799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2713:9:145",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45777,
                              "src": "2698:24:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 54801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2698:31:145",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 54802,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54774,
                              "src": "2733:4:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                "typeString": "struct GoodAfterTime.Data memory"
                              }
                            },
                            "id": 54803,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2738:14:145",
                            "memberName": "minSellBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54736,
                            "src": "2733:19:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2698:54:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 54805,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2697:56:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54814,
                  "nodeType": "IfStatement",
                  "src": "2692:148:145",
                  "trueBody": {
                    "id": 54813,
                    "nodeType": "Block",
                    "src": "2755:85:145",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54810,
                              "name": "BALANCE_INSUFFICIENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54714,
                              "src": "2808:20:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 54807,
                              "name": "IConditionalOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54540,
                              "src": "2776:17:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54540_$",
                                "typeString": "type(contract IConditionalOrder)"
                              }
                            },
                            "id": 54809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2794:13:145",
                            "memberName": "OrderNotValid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54484,
                            "src": "2776:31:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 54811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2776:53:145",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54812,
                        "nodeType": "RevertStatement",
                        "src": "2769:60:145"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54816,
                      "mutability": "mutable",
                      "name": "buyAmount",
                      "nameLocation": "2858:9:145",
                      "nodeType": "VariableDeclaration",
                      "scope": 54912,
                      "src": "2850:17:145",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54815,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2850:7:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54824,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54819,
                        "name": "offchainInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54765,
                        "src": "2881:13:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 54821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2897:7:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 54820,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2897:7:145",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 54822,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2896:9:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 54817,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2870:3:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2874:6:145",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2870:10:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 54823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:36:145",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2850:56:145"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 54825,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54774,
                          "src": "2968:4:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                            "typeString": "struct GoodAfterTime.Data memory"
                          }
                        },
                        "id": 54826,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2973:19:145",
                        "memberName": "priceCheckerPayload",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54744,
                        "src": "2968:24:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2993:6:145",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2968:31:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3002:1:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2968:35:145",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54881,
                  "nodeType": "IfStatement",
                  "src": "2964:700:145",
                  "trueBody": {
                    "id": 54880,
                    "nodeType": "Block",
                    "src": "3005:659:145",
                    "statements": [
                      {
                        "assignments": [
                          54832
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54832,
                            "mutability": "mutable",
                            "name": "p",
                            "nameLocation": "3115:1:145",
                            "nodeType": "VariableDeclaration",
                            "scope": 54880,
                            "src": "3088:28:145",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceCheckerPayload_$54755_memory_ptr",
                              "typeString": "struct GoodAfterTime.PriceCheckerPayload"
                            },
                            "typeName": {
                              "id": 54831,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 54830,
                                "name": "PriceCheckerPayload",
                                "nameLocations": [
                                  "3088:19:145"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54755,
                                "src": "3088:19:145"
                              },
                              "referencedDeclaration": 54755,
                              "src": "3088:19:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PriceCheckerPayload_$54755_storage_ptr",
                                "typeString": "struct GoodAfterTime.PriceCheckerPayload"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54840,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54835,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54774,
                                "src": "3130:4:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54836,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3135:19:145",
                              "memberName": "priceCheckerPayload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54744,
                              "src": "3130:24:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 54837,
                                  "name": "PriceCheckerPayload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54755,
                                  "src": "3157:19:145",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_PriceCheckerPayload_$54755_storage_ptr_$",
                                    "typeString": "type(struct GoodAfterTime.PriceCheckerPayload storage pointer)"
                                  }
                                }
                              ],
                              "id": 54838,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3156:21:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PriceCheckerPayload_$54755_storage_ptr_$",
                                "typeString": "type(struct GoodAfterTime.PriceCheckerPayload storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_PriceCheckerPayload_$54755_storage_ptr_$",
                                "typeString": "type(struct GoodAfterTime.PriceCheckerPayload storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 54833,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3119:3:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 54834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3123:6:145",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3119:10:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3119:59:145",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceCheckerPayload_$54755_memory_ptr",
                            "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3088:90:145"
                      },
                      {
                        "assignments": [
                          54842
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54842,
                            "mutability": "mutable",
                            "name": "_expectedOut",
                            "nameLocation": "3261:12:145",
                            "nodeType": "VariableDeclaration",
                            "scope": 54880,
                            "src": "3253:20:145",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 54841,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3253:7:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54855,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 54846,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54774,
                                "src": "3301:4:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54847,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3306:10:145",
                              "memberName": "sellAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54734,
                              "src": "3301:15:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 54848,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54774,
                                "src": "3318:4:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54849,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3323:9:145",
                              "memberName": "sellToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54727,
                              "src": "3318:14:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45820",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 54850,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54774,
                                "src": "3334:4:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54851,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3339:8:145",
                              "memberName": "buyToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54730,
                              "src": "3334:13:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45820",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 54852,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54832,
                                "src": "3349:1:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceCheckerPayload_$54755_memory_ptr",
                                  "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                                }
                              },
                              "id": 54853,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3351:7:145",
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54752,
                              "src": "3349:9:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$45820",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$45820",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 54843,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54832,
                                "src": "3276:1:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceCheckerPayload_$54755_memory_ptr",
                                  "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                                }
                              },
                              "id": 54844,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3278:7:145",
                              "memberName": "checker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54750,
                              "src": "3276:9:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IExpectedOutCalculator_$56152",
                                "typeString": "contract IExpectedOutCalculator"
                              }
                            },
                            "id": 54845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3286:14:145",
                            "memberName": "getExpectedOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56151,
                            "src": "3276:24:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_contract$_IERC20_$45820_$_t_contract$_IERC20_$45820_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,contract IERC20,contract IERC20,bytes memory) view external returns (uint256)"
                            }
                          },
                          "id": 54854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3276:83:145",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3253:106:145"
                      },
                      {
                        "condition": {
                          "id": 54871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3475:84:145",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 54869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 54856,
                                  "name": "buyAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54816,
                                  "src": "3477:9:145",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 54868,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 54864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 54857,
                                          "name": "_expectedOut",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 54842,
                                          "src": "3491:12:145",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 54862,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 54858,
                                                  "name": "Utils",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 54696,
                                                  "src": "3507:5:145",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                                    "typeString": "type(library ConditionalOrdersUtilsLib)"
                                                  }
                                                },
                                                "id": 54859,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberLocation": "3513:7:145",
                                                "memberName": "MAX_BPS",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 54617,
                                                "src": "3507:13:145",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 54860,
                                                  "name": "p",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 54832,
                                                  "src": "3523:1:145",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PriceCheckerPayload_$54755_memory_ptr",
                                                    "typeString": "struct GoodAfterTime.PriceCheckerPayload memory"
                                                  }
                                                },
                                                "id": 54861,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3525:15:145",
                                                "memberName": "allowedSlippage",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 54754,
                                                "src": "3523:17:145",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3507:33:145",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 54863,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3506:35:145",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3491:50:145",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 54865,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3490:52:145",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 54866,
                                      "name": "Utils",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 54696,
                                      "src": "3545:5:145",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ConditionalOrdersUtilsLib_$54696_$",
                                        "typeString": "type(library ConditionalOrdersUtilsLib)"
                                      }
                                    },
                                    "id": 54867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3551:7:145",
                                    "memberName": "MAX_BPS",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54617,
                                    "src": "3545:13:145",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3490:68:145",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3477:81:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 54870,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3476:83:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 54879,
                        "nodeType": "IfStatement",
                        "src": "3471:183:145",
                        "trueBody": {
                          "id": 54878,
                          "nodeType": "Block",
                          "src": "3561:93:145",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 54875,
                                    "name": "PRICE_CHECKER_FAILED",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54718,
                                    "src": "3618:20:145",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54872,
                                    "name": "IConditionalOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54540,
                                    "src": "3586:17:145",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IConditionalOrder_$54540_$",
                                      "typeString": "type(contract IConditionalOrder)"
                                    }
                                  },
                                  "id": 54874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3604:13:145",
                                  "memberName": "OrderNotValid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54484,
                                  "src": "3586:31:145",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 54876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3586:53:145",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54877,
                              "nodeType": "RevertStatement",
                              "src": "3579:60:145"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 54910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54882,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54770,
                      "src": "3674:5:145",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54885,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "3710:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54886,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3715:9:145",
                          "memberName": "sellToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54727,
                          "src": "3710:14:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 54887,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "3738:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54888,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3743:8:145",
                          "memberName": "buyToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54730,
                          "src": "3738:13:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 54889,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "3765:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54890,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3770:8:145",
                          "memberName": "receiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54732,
                          "src": "3765:13:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 54891,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "3792:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54892,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3797:10:145",
                          "memberName": "sellAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54734,
                          "src": "3792:15:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 54893,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54816,
                          "src": "3821:9:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 54894,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54774,
                                "src": "3844:4:145",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                                  "typeString": "struct GoodAfterTime.Data memory"
                                }
                              },
                              "id": 54895,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3849:7:145",
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54740,
                              "src": "3844:12:145",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 54896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3857:8:145",
                            "memberName": "toUint32",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47098,
                            "src": "3844:21:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint32)"
                            }
                          },
                          "id": 54897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3844:23:145",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54898,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "3881:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54899,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3886:7:145",
                          "memberName": "appData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54746,
                          "src": "3881:12:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 54900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3907:1:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 54901,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "3955:9:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 54902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3965:9:145",
                          "memberName": "KIND_SELL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14342,
                          "src": "3955:19:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54903,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "3988:4:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$54747_memory_ptr",
                              "typeString": "struct GoodAfterTime.Data memory"
                            }
                          },
                          "id": 54904,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3993:16:145",
                          "memberName": "allowPartialFill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54742,
                          "src": "3988:21:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 54905,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "4023:9:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 54906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4033:13:145",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14350,
                          "src": "4023:23:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 54907,
                            "name": "GPv2Order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14459,
                            "src": "4060:9:145",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                              "typeString": "type(library GPv2Order)"
                            }
                          },
                          "id": 54908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4070:13:145",
                          "memberName": "BALANCE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14350,
                          "src": "4060:23:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$45820",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 54883,
                          "name": "GPv2Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14459,
                          "src": "3682:9:145",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GPv2Order_$14459_$",
                            "typeString": "type(library GPv2Order)"
                          }
                        },
                        "id": 54884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3692:4:145",
                        "memberName": "Data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14334,
                        "src": "3682:14:145",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Data_$14334_storage_ptr_$",
                          "typeString": "type(struct GPv2Order.Data storage pointer)"
                        }
                      },
                      "id": 54909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3682:411:145",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                        "typeString": "struct GPv2Order.Data memory"
                      }
                    },
                    "src": "3674:419:145",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                      "typeString": "struct GPv2Order.Data memory"
                    }
                  },
                  "id": 54911,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:419:145"
                }
              ]
            },
            "baseFunctions": [
              53546
            ],
            "functionSelector": "b8296fc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeableOrder",
            "nameLocation": "2074:17:145",
            "overrides": {
              "id": 54767,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2241:8:145"
            },
            "parameters": {
              "id": 54766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54757,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2109:5:145",
                  "nodeType": "VariableDeclaration",
                  "scope": 54913,
                  "src": "2101:13:145",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:145",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54913,
                  "src": "2124:7:145",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:7:145",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54761,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54913,
                  "src": "2141:7:145",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54760,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:145",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54763,
                  "mutability": "mutable",
                  "name": "staticInput",
                  "nameLocation": "2173:11:145",
                  "nodeType": "VariableDeclaration",
                  "scope": 54913,
                  "src": "2158:26:145",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54762,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:5:145",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54765,
                  "mutability": "mutable",
                  "name": "offchainInput",
                  "nameLocation": "2209:13:145",
                  "nodeType": "VariableDeclaration",
                  "scope": 54913,
                  "src": "2194:28:145",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:5:145",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2091:137:145"
            },
            "returnParameters": {
              "id": 54771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54770,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2281:5:145",
                  "nodeType": "VariableDeclaration",
                  "scope": 54913,
                  "src": "2259:27:145",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$14334_memory_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 54769,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54768,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "2259:9:145",
                        "2269:4:145"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14334,
                      "src": "2259:14:145"
                    },
                    "referencedDeclaration": 14334,
                    "src": "2259:14:145",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$14334_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2258:29:145"
            },
            "scope": 54914,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54720,
              "name": "BaseConditionalOrder",
              "nameLocations": [
                "1430:20:145"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53578,
              "src": "1430:20:145"
            },
            "id": 54721,
            "nodeType": "InheritanceSpecifier",
            "src": "1430:20:145"
          }
        ],
        "canonicalName": "GoodAfterTime",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54719,
          "nodeType": "StructuredDocumentation",
          "src": "720:683:145",
          "text": " @title Good After Time (GAT) Conditional Order - with Milkman price checkers\n @author mfw78 <mfw78@rndlabs.xyz>\n @dev Designed to be used with the CoW Protocol Conditional Order Framework.\n      This order type allows for placing an order that is valid after a certain time\n      and that has an optional minimum `sellAmount` determined by a price checker. The\n      actual `buyAmount` is determined by off chain input. As changing the `buyAmount`\n      changes the `orderUid` of the order, this allows for placing multiple orders. To\n      ensure that the order is not filled multiple times, a `minSellBalance` is\n      checked before the order is placed."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54914,
          53578,
          54571,
          52197,
          54540
        ],
        "name": "GoodAfterTime",
        "nameLocation": "1413:13:145",
        "scope": 54915,
        "usedErrors": [
          54484,
          54488,
          54494,
          54500,
          54504
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 145
}