{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "AuthorizerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExternalBalanceTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "InternalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "protocolFeeAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "PoolBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "cashDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "managedDelta",
          "type": "int256"
        }
      ],
      "name": "PoolBalanceManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RelayerApprovalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokensDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "TokensRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "batchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "deregisterTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.ExitPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getActionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getInternalBalance",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNextNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "managed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPoolTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeesCollector",
      "outputs": [
        {
          "internalType": "contract ProtocolFeesCollector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "hasApprovedRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxAmountsIn",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.JoinPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.PoolBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.PoolBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "managePoolBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.UserBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct IVault.UserBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "manageUserBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "queryBatchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "assetDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "registerPool",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "registerTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setRelayerApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WETH()": "ad5c4648",
    "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
    "deregisterTokens(bytes32,address[])": "7d3aeb96",
    "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
    "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
    "getActionId(bytes4)": "851c1bb3",
    "getAuthorizer()": "aaabadc5",
    "getDomainSeparator()": "ed24911d",
    "getInternalBalance(address,address[])": "0f5a6efa",
    "getNextNonce(address)": "90193b7c",
    "getPausedState()": "1c0de051",
    "getPool(bytes32)": "f6c00927",
    "getPoolTokenInfo(bytes32,address)": "b05f8e48",
    "getPoolTokens(bytes32)": "f94d4668",
    "getProtocolFeesCollector()": "d2946c2b",
    "hasApprovedRelayer(address,address)": "fec90d72",
    "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
    "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
    "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
    "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
    "registerPool(uint8)": "09b2760f",
    "registerTokens(bytes32,address[],address[])": "66a9c7d2",
    "setAuthorizer(address)": "058a628f",
    "setPaused(bool)": "16c38b3c",
    "setRelayerApproval(address,address,bool)": "fa6e671d",
    "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract ProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol\":\"TwoTokenPoolsBalance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/balancer/src/lib/helpers/Authentication.sol\":{\"keccak256\":\"0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b\",\"dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF\"]},\"lib/balancer/src/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32\",\"dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9\"]},\"lib/balancer/src/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb\",\"dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH\"]},\"lib/balancer/src/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a\",\"dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq\"]},\"lib/balancer/src/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3\",\"dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ\"]},\"lib/balancer/src/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d\",\"dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc\"]},\"lib/balancer/src/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45\",\"dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9\"]},\"lib/balancer/src/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985\",\"dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj\"]},\"lib/balancer/src/lib/math/Math.sol\":{\"keccak256\":\"0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5\",\"dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp\"]},\"lib/balancer/src/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246\",\"dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc\"]},\"lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6\",\"dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C\"]},\"lib/balancer/src/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19\",\"dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj\"]},\"lib/balancer/src/vault/PoolRegistry.sol\":{\"keccak256\":\"0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61\",\"dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo\"]},\"lib/balancer/src/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1\",\"dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy\"]},\"lib/balancer/src/vault/VaultAuthorization.sol\":{\"keccak256\":\"0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb\",\"dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz\"]},\"lib/balancer/src/vault/balances/BalanceAllocation.sol\":{\"keccak256\":\"0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0\",\"dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny\"]},\"lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol\":{\"keccak256\":\"0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9\",\"dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4\"]},\"lib/balancer/src/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4\",\"dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4\"]},\"lib/balancer/src/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2\",\"dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB\"]},\"lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce\",\"dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP\"]},\"lib/balancer/src/vault/interfaces/IVault.sol\":{\"keccak256\":\"0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619\",\"dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq\"]},\"lib/canonical-weth/src/interfaces/IWETH.sol\":{\"keccak256\":\"0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05\",\"dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExternalBalanceTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashLoan",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InternalBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PausedStateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "deltas",
              "type": "int256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "protocolFeeAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "cashDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "managedDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceManaged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelayerApprovalChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "int256[]",
              "name": "limits",
              "type": "int256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "batchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exitPool"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashLoan"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuthorizer",
          "outputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInternalBalance",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPausedState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "pauseWindowEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bufferPeriodEndTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokenInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "managed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolFeesCollector",
          "outputs": [
            {
              "internalType": "contract ProtocolFeesCollector",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasApprovedRelayer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinPool"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.PoolBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.PoolBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "managePoolBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.UserBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.UserBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "manageUserBalance"
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queryBatchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "assetDeltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPool",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTokens"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthorizer"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelayerApproval"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "WETH()": {
            "details": "Returns the Vault's WETH instance."
          },
          "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
            "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
          },
          "deregisterTokens(bytes32,address[])": {
            "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
          },
          "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
          },
          "flashLoan(address,address[],uint256[],bytes)": {
            "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
          },
          "getActionId(bytes4)": {
            "details": "Returns the action identifier associated with the external function described by `selector`."
          },
          "getAuthorizer()": {
            "details": "Returns the Vault's Authorizer."
          },
          "getDomainSeparator()": {
            "details": "Returns the EIP712 domain separator."
          },
          "getInternalBalance(address,address[])": {
            "details": "Returns `user`'s Internal Balance for a set of tokens."
          },
          "getNextNonce(address)": {
            "details": "Returns the next nonce used by an address to sign messages."
          },
          "getPausedState()": {
            "details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."
          },
          "getPool(bytes32)": {
            "details": "Returns a Pool's contract address and specialization setting."
          },
          "getPoolTokenInfo(bytes32,address)": {
            "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
          },
          "getPoolTokens(bytes32)": {
            "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
          },
          "getProtocolFeesCollector()": {
            "details": "Returns the current protocol fee module."
          },
          "hasApprovedRelayer(address,address)": {
            "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
          },
          "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
          },
          "managePoolBalance((uint8,bytes32,address,uint256)[])": {
            "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
          },
          "manageUserBalance((uint8,address,uint256,address,address)[])": {
            "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
          },
          "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
            "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
          },
          "registerPool(uint8)": {
            "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
          },
          "registerTokens(bytes32,address[],address[])": {
            "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
          },
          "setAuthorizer(address)": {
            "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
          },
          "setPaused(bool)": {
            "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
          },
          "setRelayerApproval(address,address,bool)": {
            "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
          },
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
            "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol": "TwoTokenPoolsBalance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/helpers/Authentication.sol": {
        "keccak256": "0x131f4b886220362d0127fdb51bfe983689fb554f38afa4f7c5ab93c46b6a08a3",
        "urls": [
          "bzz-raw://089b6c089dfe4c7cd6da59c8cf72f43e7c7b695959d2bcd08596eab193903e9b",
          "dweb:/ipfs/QmbXRP9EMowRTaTTxtmmUUAo7ufUZBVhTMEj7FW8PofevF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xb6007e18aac8c801adb1f6ffa5218439c5dd4b8e8f5e6e368defea8f2aa11942",
        "urls": [
          "bzz-raw://9f5aa7386aa0ffaf4ad3ad5f635c59bf262eff0e57a69aa346728f555178ab32",
          "dweb:/ipfs/QmcWraVfXDJVEVRmK1h2kczeiaXQ9imTzhXYVjxo8gKJV9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xbcdbfe6a049f07b45974a539007e5bbe5898ccf41f82dde4dac9af21c2db4537",
        "urls": [
          "bzz-raw://dee452370f4966364b60bf3bc74b179ed0c0e020eb52dd063ee7817efc3b3efb",
          "dweb:/ipfs/Qmd6EZLp4W3RqTWo3SYRRVneSofHYHCmLn23Rgot9EisUH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0xa19d02738aa1ffda742c86870731f3d115cdb5f54607d92eb05d61908ccb648b",
        "urls": [
          "bzz-raw://27dabb6e09b71acf4f42f10e411e2b380abd087c0a62144bbbe3cfcf4149842a",
          "dweb:/ipfs/QmSay9rw6M1UwNwrrJYaBSeUPEzsQWKh91WTPZVdAfn7Zq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xaa1012d53c713d3210b380234dc31fda5cb57ef5ddf62b3a4f93bc370b15eee2",
        "urls": [
          "bzz-raw://84fc4f52724bff8a058b6f6fe4ffa531b76fa4da70b8175883b3cd6f06b75ef3",
          "dweb:/ipfs/QmcjJBGCkzw1ohdygYGm1JwAyFnxGaJUFi7GDEdGh8wLnQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/InputHelpers.sol": {
        "keccak256": "0x1a98f84372a0d2b7ebff4ec1eed54b6108a88d049763ddcab2769bbaa65e1d42",
        "urls": [
          "bzz-raw://7ab1056efa927440e5b13699dbcdacd3109fe6aa70cf80a232b143c044a1a77d",
          "dweb:/ipfs/QmV7nC83wHKwuBfr3JhCvt1A9oTNie5fffVh4QzSrxE8Tc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x8a1d969fc9c2247ba150366d1b6af2c51d80b66983044a6806668e3b07f2b00c",
        "urls": [
          "bzz-raw://873fae2853c941bc00737f9a2a9c02dd5a9ab5a8ff183ef6dbc1ea5f56c60d45",
          "dweb:/ipfs/QmQwkWKNbSmXBMqogYv4Xk28mj4JeMWfnG9dK1bEDP6AT9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xc92fd13b4fc5ab23d2f726fab9ad755d1130f985b50f59ced9e5da4a0cbeef12",
        "urls": [
          "bzz-raw://72301458f2efb086027328f316f69113cadc08128240692ea5342b2248225985",
          "dweb:/ipfs/QmRKvqueD5v4ZVZ35ctj5Nikhv1VjcF5BJsaPTFmRLfmsj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/lib/math/Math.sol": {
        "keccak256": "0x7828aea1e40ccff2e022d83f608e68a9b79c3493c74e685048dda141060b804d",
        "urls": [
          "bzz-raw://d36e0de3fb8db6324b123d75e058e492e85c872e480450f25e8c0162779130e5",
          "dweb:/ipfs/QmXRKeyEkGjj8L5YwbWx2ct1hDTH5bxGhuPoUnuTL8QrLp"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0xe5412c02a6926da25517bce53822f3231783635f4b74ec296944cd6631aa1717",
        "urls": [
          "bzz-raw://71f24670f9eb3ff0766ff10743abe855eb97df844da7fa481200fa8f0fbaa246",
          "dweb:/ipfs/QmYGqeCkfJ12QBKaYTmTSJhWBZ3q5rugqyDZbNZHEPnYoc"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xfee6a0b7071ee2b5f937b4b48a7574a6ac1b1cd7012124e12d696fef8bd69862",
        "urls": [
          "bzz-raw://0bd6b10b04a81a1bd0d7203414e7cb17b736f96266f25d27693d0812894273f6",
          "dweb:/ipfs/QmeouzDNfygnCmEytzed4HCHkRWQDjKCbSSQbRHC582F3C"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe8df6e6a2745689359b990eb94ae60f188e8093b477d53adf67a35ac2635b3f8",
        "urls": [
          "bzz-raw://734eb2a19b7eec6e5d7be4bcf8610040bae429cb0c9f65851b7a3dace79caa19",
          "dweb:/ipfs/QmQ78Jetsdy4iYTpR85VTcwtvRsSpRsjQBxfkL35KcgiQj"
        ],
        "license": "MIT"
      },
      "lib/balancer/src/vault/PoolRegistry.sol": {
        "keccak256": "0x5d8404487a96d357fb0ccf649f776f3cb5deb5d5194b3b140f105aed310e58b5",
        "urls": [
          "bzz-raw://d0dc8ac0d4c777c0f8818ccd965c293e19233db9f4821ac07078564c31917f61",
          "dweb:/ipfs/QmYeVv7fTZ4uFbPzLD4wJHXGYFdBVzVDQ8DkPhtafeAPLo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x1dd306e5b05e5eda3d5a4c5abdd4ebc6083849c1a43d2545b47b0a7a1982d78e",
        "urls": [
          "bzz-raw://b2019f578c340abb860b74cc2aab3d45210f3569dfb4f355bb3b202d15a72dd1",
          "dweb:/ipfs/QmdnTNNk1CDsimdtvmp7Wa2gjtJ2sa46XvqmcrdQDQXjyy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/VaultAuthorization.sol": {
        "keccak256": "0xd0ef70a4180e71995a20c487c45f35da88ccd1e2efeb8a34978276a7258682b1",
        "urls": [
          "bzz-raw://0fabd47a0b4c899deb78527327e404dfc69236221f5d9e19f68242976e68c1bb",
          "dweb:/ipfs/QmYad6Jw5u8prpMYh4kDhKcLehjofThGegvLHsXQ6Y76bz"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/BalanceAllocation.sol": {
        "keccak256": "0x7bbd692caa596ea22160a01d7adee125010322af46deb9a73d0aedbe5dcef349",
        "urls": [
          "bzz-raw://2f3434a71646ccaddbf8b5c7773b44dad9c2f68ecd24b3f1dc36dddf61ece0a0",
          "dweb:/ipfs/QmSoeDgGcgAJki2nnj4xUcLZEk4fZphvcRh9K5s4ZJQBny"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol": {
        "keccak256": "0x4cdae83e97be68f5f65257c9f9e716a7e43b9632f1c39bfc9cd02c2ae707db26",
        "urls": [
          "bzz-raw://e466b98ded97f485ae838c07f45fe54c0a385bda092e83b309f723557c0cbbb9",
          "dweb:/ipfs/QmTMRkKoKnqTfiJjteeEzhcXwdayU2QoKSFgbb6nJR4oB4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAsset.sol": {
        "keccak256": "0x48875a5c08b3c90dd69d4dc0a0d28aca69609eedbf42772fe1f66e3097a53a5c",
        "urls": [
          "bzz-raw://a4b3d8dc951be1732a8dd1f6379db2ad054b05ad384d67036eb831001f5c17e4",
          "dweb:/ipfs/Qmb5kx5C9srQjW4rRkDpikmwo57crvzL4K5o22uFXGVLo4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x8179280bc53b5313ad036b1966695a466c0594788e5ece1028e2e29997d1bafa",
        "urls": [
          "bzz-raw://12145a3e1289ff9e2b197ca09b545fc6168022b9e9a250b3835d62c6717adaa2",
          "dweb:/ipfs/QmZVuw6Yxv4D28HPC5UDmKbuEyqvzZkEJLwCxqsHzySoUB"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0xf039be9ad3b731700cc69efe53c8a8d8b447f25799f68c7195592a09e9247b5f",
        "urls": [
          "bzz-raw://bfd48af1e1460f3a174b52ffb3398c37cf42abd6c6a58e6b7d9d50d9094819ce",
          "dweb:/ipfs/QmbRTDDnYGwpNd76wRNLUfQBc52TQ67npeMGjN4M8j97dP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/balancer/src/vault/interfaces/IVault.sol": {
        "keccak256": "0x6f5e6a58d0f11b952840ef3a8d022dc3df3e75d73928e2979c248fd80e416b9c",
        "urls": [
          "bzz-raw://c56287185d0daa3a4bc96832c81463931bdf937042d265836844539e14470619",
          "dweb:/ipfs/QmV9GiMZLb3L7HRFPf8hciWxsDqRRYrDxmiB1RCt1u8Vsq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/canonical-weth/src/interfaces/IWETH.sol": {
        "keccak256": "0x7c3bbe9f0d93c652822ac3741ffa870516ef01183c4f2408a05bf4ba806907a3",
        "urls": [
          "bzz-raw://fd0908e7d72f7bbfbe9b8a9520ba8b035b9fac2edbd5c83c80e0c605263b9c05",
          "dweb:/ipfs/QmWKYntvGqbi3nSUWTYapz9Rk9MhrLkiFXY2iN8Fw87sQL"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/balancer/src/vault/balances/TwoTokenPoolsBalance.sol",
    "id": 14555,
    "exportedSymbols": {
      "Authentication": [
        3005
      ],
      "BalanceAllocation": [
        12871
      ],
      "EIP712": [
        6240
      ],
      "Errors": [
        3317
      ],
      "IAsset": [
        14558
      ],
      "IAuthentication": [
        3328
      ],
      "IAuthorizer": [
        14573
      ],
      "IERC20": [
        670
      ],
      "IFlashLoanRecipient": [
        14651
      ],
      "ISignaturesValidator": [
        3346
      ],
      "ITemporarilyPausable": [
        3365
      ],
      "IVault": [
        15228
      ],
      "IWETH": [
        15479
      ],
      "InputHelpers": [
        3498
      ],
      "Math": [
        5806
      ],
      "PoolRegistry": [
        9320
      ],
      "ProtocolFeesCollector": [
        10020
      ],
      "ReentrancyGuard": [
        6883
      ],
      "SafeERC20": [
        7009
      ],
      "SignaturesValidator": [
        3749
      ],
      "TemporarilyPausable": [
        3929
      ],
      "TwoTokenPoolsBalance": [
        14554
      ],
      "VaultAuthorization": [
        12232
      ],
      "_require": [
        3023
      ],
      "_revert": [
        3031
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:15739:44",
    "nodes": [
      {
        "id": 13774,
        "nodeType": "PragmaDirective",
        "src": "688:31:44",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 13775,
        "nodeType": "ImportDirective",
        "src": "721:46:44",
        "nodes": [],
        "absolutePath": "lib/balancer/src/lib/helpers/BalancerErrors.sol",
        "file": "../../lib/helpers/BalancerErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14555,
        "sourceUnit": 3318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13776,
        "nodeType": "ImportDirective",
        "src": "768:45:44",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14555,
        "sourceUnit": 3,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13777,
        "nodeType": "ImportDirective",
        "src": "815:33:44",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/balances/BalanceAllocation.sol",
        "file": "./BalanceAllocation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14555,
        "sourceUnit": 12872,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13778,
        "nodeType": "ImportDirective",
        "src": "849:29:44",
        "nodes": [],
        "absolutePath": "lib/balancer/src/vault/PoolRegistry.sol",
        "file": "../PoolRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14555,
        "sourceUnit": 9321,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14554,
        "nodeType": "ContractDefinition",
        "src": "880:15547:44",
        "nodes": [
          {
            "id": 13783,
            "nodeType": "UsingForDirective",
            "src": "941:36:44",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13781,
              "name": "BalanceAllocation",
              "nameLocations": [
                "947:17:44"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12871,
              "src": "947:17:44"
            },
            "typeName": {
              "id": 13782,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "969:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 13788,
            "nodeType": "StructDefinition",
            "src": "1773:94:44",
            "nodes": [],
            "canonicalName": "TwoTokenPoolsBalance.TwoTokenPoolBalances",
            "members": [
              {
                "constant": false,
                "id": 13785,
                "mutability": "mutable",
                "name": "sharedCash",
                "nameLocation": "1819:10:44",
                "nodeType": "VariableDeclaration",
                "scope": 13788,
                "src": "1811:18:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 13784,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1811:7:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13787,
                "mutability": "mutable",
                "name": "sharedManaged",
                "nameLocation": "1847:13:44",
                "nodeType": "VariableDeclaration",
                "scope": 13788,
                "src": "1839:21:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 13786,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1839:7:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TwoTokenPoolBalances",
            "nameLocation": "1780:20:44",
            "scope": 14554,
            "visibility": "public"
          },
          {
            "id": 13800,
            "nodeType": "StructDefinition",
            "src": "3249:138:44",
            "nodes": [],
            "canonicalName": "TwoTokenPoolsBalance.TwoTokenPoolTokens",
            "members": [
              {
                "constant": false,
                "id": 13791,
                "mutability": "mutable",
                "name": "tokenA",
                "nameLocation": "3292:6:44",
                "nodeType": "VariableDeclaration",
                "scope": 13800,
                "src": "3285:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$670",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 13790,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 13789,
                    "name": "IERC20",
                    "nameLocations": [
                      "3285:6:44"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 670,
                    "src": "3285:6:44"
                  },
                  "referencedDeclaration": 670,
                  "src": "3285:6:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13794,
                "mutability": "mutable",
                "name": "tokenB",
                "nameLocation": "3315:6:44",
                "nodeType": "VariableDeclaration",
                "scope": 13800,
                "src": "3308:13:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$670",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 13793,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 13792,
                    "name": "IERC20",
                    "nameLocations": [
                      "3308:6:44"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 670,
                    "src": "3308:6:44"
                  },
                  "referencedDeclaration": 670,
                  "src": "3308:6:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13799,
                "mutability": "mutable",
                "name": "balances",
                "nameLocation": "3372:8:44",
                "nodeType": "VariableDeclaration",
                "scope": 13800,
                "src": "3331:49:44",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_$",
                  "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances)"
                },
                "typeName": {
                  "id": 13798,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 13795,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3339:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "3331:40:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_$",
                    "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 13797,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13796,
                      "name": "TwoTokenPoolBalances",
                      "nameLocations": [
                        "3350:20:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13788,
                      "src": "3350:20:44"
                    },
                    "referencedDeclaration": 13788,
                    "src": "3350:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TwoTokenPoolTokens",
            "nameLocation": "3256:18:44",
            "scope": 14554,
            "visibility": "public"
          },
          {
            "id": 13805,
            "nodeType": "VariableDeclaration",
            "src": "3393:66:44",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_twoTokenPoolTokens",
            "nameLocation": "3440:19:44",
            "scope": 14554,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
              "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens)"
            },
            "typeName": {
              "id": 13804,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 13801,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3401:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3393:38:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 13803,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13802,
                  "name": "TwoTokenPoolTokens",
                  "nameLocations": [
                    "3412:18:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13800,
                  "src": "3412:18:44"
                },
                "referencedDeclaration": 13800,
                "src": "3412:18:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                  "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 13877,
            "nodeType": "FunctionDefinition",
            "src": "3781:1034:44",
            "nodes": [],
            "body": {
              "id": 13876,
              "nodeType": "Block",
              "src": "3903:912:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        "id": 13820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13818,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13811,
                          "src": "4076:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 13819,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13814,
                          "src": "4086:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4076:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 13821,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3317,
                          "src": "4094:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 13822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4101:24:44",
                        "memberName": "TOKEN_ALREADY_REGISTERED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3289,
                        "src": "4094:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13817,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "4067:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 13823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:59:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13824,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:59:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        "id": 13828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13826,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13811,
                          "src": "4146:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 13827,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13814,
                          "src": "4155:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4146:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 13829,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3317,
                          "src": "4163:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 13830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4170:15:44",
                        "memberName": "UNSORTED_TOKENS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3070,
                        "src": "4163:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13825,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "4137:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 13831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4137:49:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13832,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:49:44"
                },
                {
                  "assignments": [
                    13835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13835,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nameLocation": "4337:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13876,
                      "src": "4310:37:44",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                      },
                      "typeName": {
                        "id": 13834,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13833,
                          "name": "TwoTokenPoolTokens",
                          "nameLocations": [
                            "4310:18:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13800,
                          "src": "4310:18:44"
                        },
                        "referencedDeclaration": 13800,
                        "src": "4310:18:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13839,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13836,
                      "name": "_twoTokenPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13805,
                      "src": "4350:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                      }
                    },
                    "id": 13838,
                    "indexExpression": {
                      "id": 13837,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13808,
                      "src": "4370:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4350:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4310:67:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          },
                          "id": 13849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13841,
                              "name": "poolTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13835,
                              "src": "4409:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                                "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                              }
                            },
                            "id": 13842,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4420:6:44",
                            "memberName": "tokenA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13791,
                            "src": "4409:17:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 13846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4445:1:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 13845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4437:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 13844,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4437:7:44",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4437:10:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13843,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "4430:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 13848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4430:18:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4409:39:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          },
                          "id": 13858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13850,
                              "name": "poolTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13835,
                              "src": "4452:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                                "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                              }
                            },
                            "id": 13851,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4463:6:44",
                            "memberName": "tokenB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13794,
                            "src": "4452:17:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 13855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4488:1:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 13854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4480:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 13853,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4480:7:44",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4480:10:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13852,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "4473:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 13857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4473:18:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4452:39:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4409:82:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 13860,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3317,
                          "src": "4505:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 13861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4512:18:44",
                        "memberName": "TOKENS_ALREADY_SET",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3292,
                        "src": "4505:25:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13840,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "4387:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 13862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4387:153:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13863,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:153:44"
                },
                {
                  "expression": {
                    "id": 13868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13864,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13835,
                        "src": "4613:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 13866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4624:6:44",
                      "memberName": "tokenA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13791,
                      "src": "4613:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13867,
                      "name": "tokenX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13811,
                      "src": "4633:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4613:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13869,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:26:44"
                },
                {
                  "expression": {
                    "id": 13874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13870,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13835,
                        "src": "4649:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 13872,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4660:6:44",
                      "memberName": "tokenB",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13794,
                      "src": "4649:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13873,
                      "name": "tokenY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13814,
                      "src": "4669:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4649:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13875,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:26:44"
                }
              ]
            },
            "documentation": {
              "id": 13806,
              "nodeType": "StructuredDocumentation",
              "src": "3466:310:44",
              "text": " @dev Registers tokens in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the Two Token specialization setting.\n Requirements:\n - `tokenX` and `tokenY` must not be the same\n - The tokens must be ordered: tokenX < tokenY"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTwoTokenPoolTokens",
            "nameLocation": "3790:27:44",
            "parameters": {
              "id": 13815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13808,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "3835:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13877,
                  "src": "3827:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13807,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3827:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13811,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nameLocation": "3858:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13877,
                  "src": "3851:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13810,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13809,
                      "name": "IERC20",
                      "nameLocations": [
                        "3851:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "3851:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "3851:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13814,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nameLocation": "3881:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13877,
                  "src": "3874:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13813,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13812,
                      "name": "IERC20",
                      "nameLocations": [
                        "3874:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "3874:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "3874:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3817:76:44"
            },
            "returnParameters": {
              "id": 13816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3903:0:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13924,
            "nodeType": "FunctionDefinition",
            "src": "5152:666:44",
            "nodes": [],
            "body": {
              "id": 13923,
              "nodeType": "Block",
              "src": "5276:542:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13890,
                    13892,
                    13895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13890,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nameLocation": "5308:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13923,
                      "src": "5300:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13889,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5300:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13892,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nameLocation": "5338:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13923,
                      "src": "5330:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13891,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5330:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13895,
                      "mutability": "mutable",
                      "name": "poolBalances",
                      "nameLocation": "5389:12:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13923,
                      "src": "5360:41:44",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                      },
                      "typeName": {
                        "id": 13894,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13893,
                          "name": "TwoTokenPoolBalances",
                          "nameLocations": [
                            "5360:20:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13788,
                          "src": "5360:20:44"
                        },
                        "referencedDeclaration": 13788,
                        "src": "5360:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13901,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13897,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13880,
                        "src": "5445:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 13898,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13883,
                        "src": "5453:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 13899,
                        "name": "tokenY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13886,
                        "src": "5461:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 13896,
                      "name": "_getTwoTokenPoolSharedBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14465,
                      "src": "5414:30:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$returns$_t_bytes32_$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$",
                        "typeString": "function (bytes32,contract IERC20,contract IERC20) view returns (bytes32,bytes32,struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer)"
                      }
                    },
                    "id": 13900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5414:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5286:182:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 13903,
                              "name": "balanceA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13890,
                              "src": "5488:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 13904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5497:6:44",
                            "memberName": "isZero",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12450,
                            "src": "5488:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$attached_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bool)"
                            }
                          },
                          "id": 13905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5488:17:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 13906,
                              "name": "balanceB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13892,
                              "src": "5509:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 13907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5518:6:44",
                            "memberName": "isZero",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12450,
                            "src": "5509:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$attached_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bool)"
                            }
                          },
                          "id": 13908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5509:17:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5488:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 13910,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3317,
                          "src": "5528:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 13911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5535:21:44",
                        "memberName": "NONZERO_TOKEN_BALANCE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3298,
                        "src": "5528:28:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13902,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3023,
                      "src": "5479:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 13912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5479:78:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13913,
                  "nodeType": "ExpressionStatement",
                  "src": "5479:78:44"
                },
                {
                  "expression": {
                    "id": 13917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5568:34:44",
                    "subExpression": {
                      "baseExpression": {
                        "id": 13914,
                        "name": "_twoTokenPoolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13805,
                        "src": "5575:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                          "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                        }
                      },
                      "id": 13916,
                      "indexExpression": {
                        "id": 13915,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13880,
                        "src": "5595:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5575:27:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13918,
                  "nodeType": "ExpressionStatement",
                  "src": "5568:34:44"
                },
                {
                  "expression": {
                    "id": 13921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5781:30:44",
                    "subExpression": {
                      "expression": {
                        "id": 13919,
                        "name": "poolBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13895,
                        "src": "5788:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 13920,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5801:10:44",
                      "memberName": "sharedCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13785,
                      "src": "5788:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13922,
                  "nodeType": "ExpressionStatement",
                  "src": "5781:30:44"
                }
              ]
            },
            "documentation": {
              "id": 13878,
              "nodeType": "StructuredDocumentation",
              "src": "4821:326:44",
              "text": " @dev Deregisters tokens in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the Two Token specialization setting.\n Requirements:\n - `tokenX` and `tokenY` must be registered in the Pool\n - both tokens must have zero balance in the Vault"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deregisterTwoTokenPoolTokens",
            "nameLocation": "5161:29:44",
            "parameters": {
              "id": 13887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13880,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "5208:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13924,
                  "src": "5200:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13879,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13883,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nameLocation": "5231:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13924,
                  "src": "5224:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13882,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13881,
                      "name": "IERC20",
                      "nameLocations": [
                        "5224:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "5224:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "5224:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13886,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nameLocation": "5254:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13924,
                  "src": "5247:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13884,
                      "name": "IERC20",
                      "nameLocations": [
                        "5247:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "5247:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "5247:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5190:76:44"
            },
            "returnParameters": {
              "id": 13888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5276:0:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13968,
            "nodeType": "FunctionDefinition",
            "src": "6031:433:44",
            "nodes": [],
            "body": {
              "id": 13967,
              "nodeType": "Block",
              "src": "6206:258:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13941,
                      "mutability": "mutable",
                      "name": "pairHash",
                      "nameLocation": "6224:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13967,
                      "src": "6216:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13940,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6216:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13946,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13943,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13930,
                        "src": "6256:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 13944,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "6264:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 13942,
                      "name": "_getTwoTokenPairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14525,
                      "src": "6235:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (bytes32)"
                      }
                    },
                    "id": 13945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6235:36:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6216:55:44"
                },
                {
                  "assignments": [
                    13949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13949,
                      "mutability": "mutable",
                      "name": "poolBalances",
                      "nameLocation": "6310:12:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13967,
                      "src": "6281:41:44",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                      },
                      "typeName": {
                        "id": 13948,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13947,
                          "name": "TwoTokenPoolBalances",
                          "nameLocations": [
                            "6281:20:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13788,
                          "src": "6281:20:44"
                        },
                        "referencedDeclaration": 13788,
                        "src": "6281:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13956,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 13950,
                          "name": "_twoTokenPoolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13805,
                          "src": "6325:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                          }
                        },
                        "id": 13952,
                        "indexExpression": {
                          "id": 13951,
                          "name": "poolId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13927,
                          "src": "6345:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6325:27:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                        }
                      },
                      "id": 13953,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6353:8:44",
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13799,
                      "src": "6325:36:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref)"
                      }
                    },
                    "id": 13955,
                    "indexExpression": {
                      "id": 13954,
                      "name": "pairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13941,
                      "src": "6362:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6325:46:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6281:90:44"
                },
                {
                  "expression": {
                    "id": 13965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13957,
                        "name": "poolBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13949,
                        "src": "6381:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 13959,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6394:10:44",
                      "memberName": "sharedCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13785,
                      "src": "6381:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13962,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13932,
                          "src": "6438:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 13963,
                          "name": "balanceB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13937,
                          "src": "6448:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 13960,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "6407:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 13961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6425:12:44",
                        "memberName": "toSharedCash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12821,
                        "src": "6407:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 13964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6407:50:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6381:76:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 13966,
                  "nodeType": "ExpressionStatement",
                  "src": "6381:76:44"
                }
              ]
            },
            "documentation": {
              "id": 13925,
              "nodeType": "StructuredDocumentation",
              "src": "5824:202:44",
              "text": " @dev Sets the cash balances of a Two Token Pool's tokens.\n WARNING: this assumes `tokenA` and `tokenB` are the Pool's two registered tokens, and are in the correct order."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTwoTokenPoolCashBalances",
            "nameLocation": "6040:28:44",
            "parameters": {
              "id": 13938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13927,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "6086:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "6078:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13926,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6078:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13930,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "6109:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "6102:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13929,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13928,
                      "name": "IERC20",
                      "nameLocations": [
                        "6102:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "6102:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "6102:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13932,
                  "mutability": "mutable",
                  "name": "balanceA",
                  "nameLocation": "6133:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "6125:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13931,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6125:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13935,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "6158:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "6151:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13934,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13933,
                      "name": "IERC20",
                      "nameLocations": [
                        "6151:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "6151:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "6151:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13937,
                  "mutability": "mutable",
                  "name": "balanceB",
                  "nameLocation": "6182:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "6174:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13936,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6174:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6068:128:44"
            },
            "returnParameters": {
              "id": 13939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6206:0:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13988,
            "nodeType": "FunctionDefinition",
            "src": "6742:226:44",
            "nodes": [],
            "body": {
              "id": 13987,
              "nodeType": "Block",
              "src": "6863:105:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13980,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13971,
                        "src": "6906:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 13981,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13974,
                        "src": "6914:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 13982,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "6921:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 13983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6939:13:44",
                        "memberName": "cashToManaged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12618,
                        "src": "6921:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        }
                      },
                      {
                        "id": 13984,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13976,
                        "src": "6954:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13979,
                      "name": "_updateTwoTokenPoolSharedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14135,
                      "src": "6873:32:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$670_$_t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (bytes32,contract IERC20,function (bytes32,uint256) returns (bytes32),uint256) returns (int256)"
                      }
                    },
                    "id": 13985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6873:88:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13986,
                  "nodeType": "ExpressionStatement",
                  "src": "6873:88:44"
                }
              ]
            },
            "documentation": {
              "id": 13969,
              "nodeType": "StructuredDocumentation",
              "src": "6470:267:44",
              "text": " @dev Transforms `amount` of `token`'s balance in a Two Token Pool from cash into managed.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_twoTokenPoolCashToManaged",
            "nameLocation": "6751:26:44",
            "parameters": {
              "id": 13977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13971,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "6795:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13988,
                  "src": "6787:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13970,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6787:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13974,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6818:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13988,
                  "src": "6811:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13973,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13972,
                      "name": "IERC20",
                      "nameLocations": [
                        "6811:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "6811:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "6811:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13976,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6841:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13988,
                  "src": "6833:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6777:76:44"
            },
            "returnParameters": {
              "id": 13978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6863:0:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14008,
            "nodeType": "FunctionDefinition",
            "src": "7246:226:44",
            "nodes": [],
            "body": {
              "id": 14007,
              "nodeType": "Block",
              "src": "7367:105:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14000,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13991,
                        "src": "7410:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14001,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13994,
                        "src": "7418:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 14002,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "7425:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7443:13:44",
                        "memberName": "managedToCash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12659,
                        "src": "7425:31:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        }
                      },
                      {
                        "id": 14004,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13996,
                        "src": "7458:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13999,
                      "name": "_updateTwoTokenPoolSharedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14135,
                      "src": "7377:32:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$670_$_t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (bytes32,contract IERC20,function (bytes32,uint256) returns (bytes32),uint256) returns (int256)"
                      }
                    },
                    "id": 14005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7377:88:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 14006,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:88:44"
                }
              ]
            },
            "documentation": {
              "id": 13989,
              "nodeType": "StructuredDocumentation",
              "src": "6974:267:44",
              "text": " @dev Transforms `amount` of `token`'s balance in a Two Token Pool from managed into cash.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_twoTokenPoolManagedToCash",
            "nameLocation": "7255:26:44",
            "parameters": {
              "id": 13997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13991,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "7299:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "7291:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13990,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7291:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13994,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7322:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "7315:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13993,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13992,
                      "name": "IERC20",
                      "nameLocations": [
                        "7315:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "7315:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "7315:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13996,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7345:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "7337:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7337:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7281:76:44"
            },
            "returnParameters": {
              "id": 13998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7367:0:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14030,
            "nodeType": "FunctionDefinition",
            "src": "7803:251:44",
            "nodes": [],
            "body": {
              "id": 14029,
              "nodeType": "Block",
              "src": "7945:109:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14022,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14011,
                        "src": "7995:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14023,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14014,
                        "src": "8003:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 14024,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "8010:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8028:10:44",
                        "memberName": "setManaged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12687,
                        "src": "8010:28:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) view returns (bytes32)"
                        }
                      },
                      {
                        "id": 14026,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14016,
                        "src": "8040:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) view returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14021,
                      "name": "_updateTwoTokenPoolSharedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14135,
                      "src": "7962:32:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$670_$_t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (bytes32,contract IERC20,function (bytes32,uint256) returns (bytes32),uint256) returns (int256)"
                      }
                    },
                    "id": 14027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:85:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 14020,
                  "id": 14028,
                  "nodeType": "Return",
                  "src": "7955:92:44"
                }
              ]
            },
            "documentation": {
              "id": 14009,
              "nodeType": "StructuredDocumentation",
              "src": "7478:320:44",
              "text": " @dev Sets `token`'s managed balance in a Two Token Pool to `amount`.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool.\n Returns the managed balance delta as a result of this call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTwoTokenPoolManagedBalance",
            "nameLocation": "7812:30:44",
            "parameters": {
              "id": 14017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14011,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "7860:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14030,
                  "src": "7852:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7852:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14014,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7883:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14030,
                  "src": "7876:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14013,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14012,
                      "name": "IERC20",
                      "nameLocations": [
                        "7876:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "7876:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "7876:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14016,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7906:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14030,
                  "src": "7898:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7898:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7842:76:44"
            },
            "returnParameters": {
              "id": 14020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14030,
                  "src": "7937:6:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14018,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7937:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7936:8:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14135,
            "nodeType": "FunctionDefinition",
            "src": "8463:1028:44",
            "nodes": [],
            "body": {
              "id": 14134,
              "nodeType": "Block",
              "src": "8669:822:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14055,
                    14058,
                    14060,
                    null,
                    14062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14055,
                      "mutability": "mutable",
                      "name": "balances",
                      "nameLocation": "8722:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14134,
                      "src": "8693:37:44",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                      },
                      "typeName": {
                        "id": 14054,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14053,
                          "name": "TwoTokenPoolBalances",
                          "nameLocations": [
                            "8693:20:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13788,
                          "src": "8693:20:44"
                        },
                        "referencedDeclaration": 13788,
                        "src": "8693:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14058,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nameLocation": "8751:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14134,
                      "src": "8744:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14056,
                          "name": "IERC20",
                          "nameLocations": [
                            "8744:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "8744:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "8744:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14060,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nameLocation": "8779:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14134,
                      "src": "8771:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14059,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8771:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 14062,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nameLocation": "8823:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14134,
                      "src": "8815:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14061,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8815:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14066,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14064,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14033,
                        "src": "8869:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14063,
                      "name": "_getTwoTokenPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14312,
                      "src": "8844:24:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                      }
                    },
                    "id": 14065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8844:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$",
                      "typeString": "tuple(struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8679:197:44"
                },
                {
                  "assignments": [
                    14068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14068,
                      "mutability": "mutable",
                      "name": "delta",
                      "nameLocation": "8894:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14134,
                      "src": "8887:12:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 14067,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8887:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14069,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8887:12:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    },
                    "id": 14072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14070,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14036,
                      "src": "8913:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 14071,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14058,
                      "src": "8922:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "8913:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 14110,
                    "nodeType": "Block",
                    "src": "9098:193:44",
                    "statements": [
                      {
                        "assignments": [
                          14093
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 14093,
                            "mutability": "mutable",
                            "name": "newBalance",
                            "nameLocation": "9151:10:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 14110,
                            "src": "9143:18:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 14092,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9143:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 14098,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 14095,
                              "name": "balanceB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14062,
                              "src": "9173:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 14096,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14048,
                              "src": "9183:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14094,
                            "name": "mutation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14046,
                            "src": "9164:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256) returns (bytes32)"
                            }
                          },
                          "id": 14097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9164:26:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9143:47:44"
                      },
                      {
                        "expression": {
                          "id": 14104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14099,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14068,
                            "src": "9204:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 14102,
                                "name": "balanceB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14062,
                                "src": "9236:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 14100,
                                "name": "newBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14093,
                                "src": "9212:10:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 14101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9223:12:44",
                              "memberName": "managedDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12359,
                              "src": "9212:23:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_int256_$attached_to$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (int256)"
                              }
                            },
                            "id": 14103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9212:33:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "9204:41:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 14105,
                        "nodeType": "ExpressionStatement",
                        "src": "9204:41:44"
                      },
                      {
                        "expression": {
                          "id": 14108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14106,
                            "name": "balanceB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14062,
                            "src": "9259:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 14107,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14093,
                            "src": "9270:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9259:21:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 14109,
                        "nodeType": "ExpressionStatement",
                        "src": "9259:21:44"
                      }
                    ]
                  },
                  "id": 14111,
                  "nodeType": "IfStatement",
                  "src": "8909:382:44",
                  "trueBody": {
                    "id": 14091,
                    "nodeType": "Block",
                    "src": "8930:162:44",
                    "statements": [
                      {
                        "assignments": [
                          14074
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 14074,
                            "mutability": "mutable",
                            "name": "newBalance",
                            "nameLocation": "8952:10:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 14091,
                            "src": "8944:18:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 14073,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8944:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 14079,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 14076,
                              "name": "balanceA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14060,
                              "src": "8974:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 14077,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14048,
                              "src": "8984:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14075,
                            "name": "mutation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14046,
                            "src": "8965:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256) returns (bytes32)"
                            }
                          },
                          "id": 14078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8965:26:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8944:47:44"
                      },
                      {
                        "expression": {
                          "id": 14085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14080,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14068,
                            "src": "9005:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 14083,
                                "name": "balanceA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14060,
                                "src": "9037:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 14081,
                                "name": "newBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14074,
                                "src": "9013:10:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 14082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9024:12:44",
                              "memberName": "managedDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12359,
                              "src": "9013:23:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_int256_$attached_to$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (int256)"
                              }
                            },
                            "id": 14084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9013:33:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "9005:41:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 14086,
                        "nodeType": "ExpressionStatement",
                        "src": "9005:41:44"
                      },
                      {
                        "expression": {
                          "id": 14089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14087,
                            "name": "balanceA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14060,
                            "src": "9060:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 14088,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14074,
                            "src": "9071:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9060:21:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 14090,
                        "nodeType": "ExpressionStatement",
                        "src": "9060:21:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 14120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 14112,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14055,
                        "src": "9301:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 14114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9310:10:44",
                      "memberName": "sharedCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13785,
                      "src": "9301:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14117,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14060,
                          "src": "9354:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 14118,
                          "name": "balanceB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14062,
                          "src": "9364:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 14115,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "9323:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9341:12:44",
                        "memberName": "toSharedCash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12821,
                        "src": "9323:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 14119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9323:50:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9301:72:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14121,
                  "nodeType": "ExpressionStatement",
                  "src": "9301:72:44"
                },
                {
                  "expression": {
                    "id": 14130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 14122,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14055,
                        "src": "9383:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 14124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9392:13:44",
                      "memberName": "sharedManaged",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13787,
                      "src": "9383:22:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14127,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14060,
                          "src": "9442:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 14128,
                          "name": "balanceB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14062,
                          "src": "9452:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 14125,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "9408:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9426:15:44",
                        "memberName": "toSharedManaged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12842,
                        "src": "9408:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 14129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9408:53:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9383:78:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14131,
                  "nodeType": "ExpressionStatement",
                  "src": "9383:78:44"
                },
                {
                  "expression": {
                    "id": 14132,
                    "name": "delta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14068,
                    "src": "9479:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 14052,
                  "id": 14133,
                  "nodeType": "Return",
                  "src": "9472:12:44"
                }
              ]
            },
            "documentation": {
              "id": 14031,
              "nodeType": "StructuredDocumentation",
              "src": "8060:398:44",
              "text": " @dev Sets `token`'s balance in a Two Token Pool to the result of the `mutation` function when called with\n the current balance and `amount`.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool.\n Returns the managed balance delta as a result of this call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTwoTokenPoolSharedBalance",
            "nameLocation": "8472:32:44",
            "parameters": {
              "id": 14049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14033,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "8522:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14135,
                  "src": "8514:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14032,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8514:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14036,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8545:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14135,
                  "src": "8538:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14034,
                      "name": "IERC20",
                      "nameLocations": [
                        "8538:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "8538:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "8538:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14046,
                  "mutability": "mutable",
                  "name": "mutation",
                  "nameLocation": "8605:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14135,
                  "src": "8560:53:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                    "typeString": "function (bytes32,uint256) returns (bytes32)"
                  },
                  "typeName": {
                    "id": 14045,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 14041,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 14038,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 14045,
                          "src": "8569:7:44",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 14037,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8569:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 14040,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 14045,
                          "src": "8578:7:44",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 14039,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8578:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "8568:18:44"
                    },
                    "returnParameterTypes": {
                      "id": 14044,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 14043,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 14045,
                          "src": "8596:7:44",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 14042,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8596:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "8595:9:44"
                    },
                    "src": "8560:53:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                      "typeString": "function (bytes32,uint256) returns (bytes32)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14048,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8631:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14135,
                  "src": "8623:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8623:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8504:139:44"
            },
            "returnParameters": {
              "id": 14052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14135,
                  "src": "8661:6:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14050,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8661:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8660:8:44"
            },
            "scope": 14554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 14235,
            "nodeType": "FunctionDefinition",
            "src": "9776:882:44",
            "nodes": [],
            "body": {
              "id": 14234,
              "nodeType": "Block",
              "src": "9926:732:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    14149,
                    14151,
                    14154,
                    14156
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 14149,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nameLocation": "9946:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14234,
                      "src": "9939:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14147,
                          "name": "IERC20",
                          "nameLocations": [
                            "9939:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "9939:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "9939:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14151,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nameLocation": "9962:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14234,
                      "src": "9954:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14150,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9954:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14154,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nameLocation": "9979:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14234,
                      "src": "9972:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14152,
                          "name": "IERC20",
                          "nameLocations": [
                            "9972:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "9972:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "9972:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14156,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nameLocation": "9995:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14234,
                      "src": "9987:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14155,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9987:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14158,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14137,
                        "src": "10032:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14157,
                      "name": "_getTwoTokenPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14312,
                      "src": "10007:24:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                      }
                    },
                    "id": 14159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10007:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$",
                      "typeString": "tuple(struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9936:103:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "id": 14168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14161,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14149,
                        "src": "10195:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 14165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10220:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 14164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10212:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14163,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10212:7:44",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 14166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10212:10:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14162,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "10205:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 14167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10205:18:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "10195:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "id": 14176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14169,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14154,
                        "src": "10227:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 14173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10252:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 14172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10244:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14171,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10244:7:44",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 14174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10244:10:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14170,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "10237:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 14175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10237:18:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "10227:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10195:60:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14192,
                  "nodeType": "IfStatement",
                  "src": "10191:133:44",
                  "trueBody": {
                    "id": 14191,
                    "nodeType": "Block",
                    "src": "10257:67:44",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 14182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10292:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 14181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "10279:12:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 14179,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 14178,
                                      "name": "IERC20",
                                      "nameLocations": [
                                        "10283:6:44"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 670,
                                      "src": "10283:6:44"
                                    },
                                    "referencedDeclaration": 670,
                                    "src": "10283:6:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$670",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 14180,
                                  "nodeType": "ArrayTypeName",
                                  "src": "10283:8:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                                    "typeString": "contract IERC20[]"
                                  }
                                }
                              },
                              "id": 14183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10279:15:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 14187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10310:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 14186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "10296:13:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes32[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 14184,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10300:7:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 14185,
                                  "nodeType": "ArrayTypeName",
                                  "src": "10300:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                    "typeString": "bytes32[]"
                                  }
                                }
                              },
                              "id": 14188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10296:16:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "id": 14189,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10278:35:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "tuple(contract IERC20[] memory,bytes32[] memory)"
                          }
                        },
                        "functionReturnParameters": 14146,
                        "id": 14190,
                        "nodeType": "Return",
                        "src": "10271:42:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 14200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14193,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14142,
                      "src": "10469:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 14198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10491:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 14197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10478:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 14195,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 14194,
                              "name": "IERC20",
                              "nameLocations": [
                                "10482:6:44"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 670,
                              "src": "10482:6:44"
                            },
                            "referencedDeclaration": 670,
                            "src": "10482:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 14196,
                          "nodeType": "ArrayTypeName",
                          "src": "10482:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 14199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10478:15:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "10469:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 14201,
                  "nodeType": "ExpressionStatement",
                  "src": "10469:24:44"
                },
                {
                  "expression": {
                    "id": 14206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14202,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14142,
                        "src": "10503:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 14204,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 14203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10510:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10503:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14205,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14149,
                      "src": "10515:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "10503:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 14207,
                  "nodeType": "ExpressionStatement",
                  "src": "10503:18:44"
                },
                {
                  "expression": {
                    "id": 14212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14208,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14142,
                        "src": "10531:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 14210,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 14209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10538:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10531:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14211,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14154,
                      "src": "10543:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "10531:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 14213,
                  "nodeType": "ExpressionStatement",
                  "src": "10531:18:44"
                },
                {
                  "expression": {
                    "id": 14220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14214,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14145,
                      "src": "10560:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 14218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10585:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 14217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10571:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes32[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 14215,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10575:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 14216,
                          "nodeType": "ArrayTypeName",
                          "src": "10575:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        }
                      },
                      "id": 14219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10571:16:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "10560:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 14221,
                  "nodeType": "ExpressionStatement",
                  "src": "10560:27:44"
                },
                {
                  "expression": {
                    "id": 14226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14222,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14145,
                        "src": "10597:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 14224,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 14223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10606:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10597:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14225,
                      "name": "balanceA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14151,
                      "src": "10611:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10597:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14227,
                  "nodeType": "ExpressionStatement",
                  "src": "10597:22:44"
                },
                {
                  "expression": {
                    "id": 14232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14228,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14145,
                        "src": "10629:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 14230,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 14229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10638:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10629:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14231,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14156,
                      "src": "10643:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10629:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14233,
                  "nodeType": "ExpressionStatement",
                  "src": "10629:22:44"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolTokens",
            "nameLocation": "9785:22:44",
            "parameters": {
              "id": 14138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14137,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "9816:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14235,
                  "src": "9808:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14136,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9808:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9807:16:44"
            },
            "returnParameters": {
              "id": 14146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14142,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "9887:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14235,
                  "src": "9871:22:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14140,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 14139,
                        "name": "IERC20",
                        "nameLocations": [
                          "9871:6:44"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 670,
                        "src": "9871:6:44"
                      },
                      "referencedDeclaration": 670,
                      "src": "9871:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 14141,
                    "nodeType": "ArrayTypeName",
                    "src": "9871:8:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14145,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "9912:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14235,
                  "src": "9895:25:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14143,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "9895:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 14144,
                    "nodeType": "ArrayTypeName",
                    "src": "9895:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9870:51:44"
            },
            "scope": 14554,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14312,
            "nodeType": "FunctionDefinition",
            "src": "10980:843:44",
            "nodes": [],
            "body": {
              "id": 14311,
              "nodeType": "Block",
              "src": "11259:564:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14256,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nameLocation": "11296:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14311,
                      "src": "11269:37:44",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                      },
                      "typeName": {
                        "id": 14255,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14254,
                          "name": "TwoTokenPoolTokens",
                          "nameLocations": [
                            "11269:18:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13800,
                          "src": "11269:18:44"
                        },
                        "referencedDeclaration": 13800,
                        "src": "11269:18:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14260,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14257,
                      "name": "_twoTokenPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13805,
                      "src": "11309:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                      }
                    },
                    "id": 14259,
                    "indexExpression": {
                      "id": 14258,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14238,
                      "src": "11329:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11309:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11269:67:44"
                },
                {
                  "expression": {
                    "id": 14264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14261,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14245,
                      "src": "11346:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14262,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14256,
                        "src": "11355:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 14263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11366:6:44",
                      "memberName": "tokenA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13791,
                      "src": "11355:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "11346:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 14265,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:26:44"
                },
                {
                  "expression": {
                    "id": 14269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14266,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14250,
                      "src": "11382:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14267,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14256,
                        "src": "11391:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 14268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11402:6:44",
                      "memberName": "tokenB",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13794,
                      "src": "11391:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "11382:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 14270,
                  "nodeType": "ExpressionStatement",
                  "src": "11382:26:44"
                },
                {
                  "assignments": [
                    14272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14272,
                      "mutability": "mutable",
                      "name": "pairHash",
                      "nameLocation": "11427:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14311,
                      "src": "11419:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14271,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11419:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14277,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14274,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14245,
                        "src": "11459:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 14275,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14250,
                        "src": "11467:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 14273,
                      "name": "_getTwoTokenPairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14525,
                      "src": "11438:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (bytes32)"
                      }
                    },
                    "id": 14276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11438:36:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11419:55:44"
                },
                {
                  "expression": {
                    "id": 14283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14278,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14242,
                      "src": "11484:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 14279,
                          "name": "poolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14256,
                          "src": "11499:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                            "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                          }
                        },
                        "id": 14280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11510:8:44",
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13799,
                        "src": "11499:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_$",
                          "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref)"
                        }
                      },
                      "id": 14282,
                      "indexExpression": {
                        "id": 14281,
                        "name": "pairHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14272,
                        "src": "11519:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11499:29:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref"
                      }
                    },
                    "src": "11484:44:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                    }
                  },
                  "id": 14284,
                  "nodeType": "ExpressionStatement",
                  "src": "11484:44:44"
                },
                {
                  "assignments": [
                    14286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14286,
                      "mutability": "mutable",
                      "name": "sharedCash",
                      "nameLocation": "11547:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14311,
                      "src": "11539:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14285,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11539:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14289,
                  "initialValue": {
                    "expression": {
                      "id": 14287,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14242,
                      "src": "11560:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 14288,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11573:10:44",
                    "memberName": "sharedCash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13785,
                    "src": "11560:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11539:44:44"
                },
                {
                  "assignments": [
                    14291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14291,
                      "mutability": "mutable",
                      "name": "sharedManaged",
                      "nameLocation": "11601:13:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14311,
                      "src": "11593:21:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14290,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11593:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14294,
                  "initialValue": {
                    "expression": {
                      "id": 14292,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14242,
                      "src": "11617:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 14293,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11630:13:44",
                    "memberName": "sharedManaged",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13787,
                    "src": "11617:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11593:50:44"
                },
                {
                  "expression": {
                    "id": 14301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14295,
                      "name": "balanceA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14247,
                      "src": "11654:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14298,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14286,
                          "src": "11704:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 14299,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14291,
                          "src": "11716:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 14296,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "11665:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11683:20:44",
                        "memberName": "fromSharedToBalanceA",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12762,
                        "src": "11665:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 14300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11665:65:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11654:76:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14302,
                  "nodeType": "ExpressionStatement",
                  "src": "11654:76:44"
                },
                {
                  "expression": {
                    "id": 14309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14303,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14252,
                      "src": "11740:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14306,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14286,
                          "src": "11790:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 14307,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14291,
                          "src": "11802:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 14304,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "11751:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11769:20:44",
                        "memberName": "fromSharedToBalanceB",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12785,
                        "src": "11751:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 14308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11751:65:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11740:76:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14310,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:76:44"
                }
              ]
            },
            "documentation": {
              "id": 14236,
              "nodeType": "StructuredDocumentation",
              "src": "10664:311:44",
              "text": " @dev Same as `_getTwoTokenPoolTokens`, except it returns the two tokens and balances directly instead of using\n an array, as well as a storage pointer to the `TwoTokenPoolBalances` struct, which can be used to update it\n without having to recompute the pair hash and storage slot."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolBalances",
            "nameLocation": "10989:24:44",
            "parameters": {
              "id": 14239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14238,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "11022:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "11014:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14237,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11014:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11013:16:44"
            },
            "returnParameters": {
              "id": 14253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14242,
                  "mutability": "mutable",
                  "name": "poolBalances",
                  "nameLocation": "11118:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "11089:41:44",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                    "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                  },
                  "typeName": {
                    "id": 14241,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14240,
                      "name": "TwoTokenPoolBalances",
                      "nameLocations": [
                        "11089:20:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13788,
                      "src": "11089:20:44"
                    },
                    "referencedDeclaration": 13788,
                    "src": "11089:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14245,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "11151:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "11144:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14244,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14243,
                      "name": "IERC20",
                      "nameLocations": [
                        "11144:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "11144:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "11144:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14247,
                  "mutability": "mutable",
                  "name": "balanceA",
                  "nameLocation": "11179:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "11171:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14246,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11171:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14250,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "11208:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "11201:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14248,
                      "name": "IERC20",
                      "nameLocations": [
                        "11201:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "11201:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "11201:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14252,
                  "mutability": "mutable",
                  "name": "balanceB",
                  "nameLocation": "11236:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "11228:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14251,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11228:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11075:179:44"
            },
            "scope": 14554,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 14358,
            "nodeType": "FunctionDefinition",
            "src": "12332:636:44",
            "nodes": [],
            "body": {
              "id": 14357,
              "nodeType": "Block",
              "src": "12427:541:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    14325,
                    14327,
                    14330,
                    14332
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 14325,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nameLocation": "12663:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14357,
                      "src": "12656:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14324,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14323,
                          "name": "IERC20",
                          "nameLocations": [
                            "12656:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "12656:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "12656:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14327,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nameLocation": "12679:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14357,
                      "src": "12671:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14326,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12671:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14330,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nameLocation": "12696:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14357,
                      "src": "12689:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14329,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14328,
                          "name": "IERC20",
                          "nameLocations": [
                            "12689:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "12689:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "12689:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14332,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nameLocation": "12712:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14357,
                      "src": "12704:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14331,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12704:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14336,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14334,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14315,
                        "src": "12749:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14333,
                      "name": "_getTwoTokenPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14312,
                      "src": "12724:24:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                      }
                    },
                    "id": 14335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12724:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TwoTokenPoolBalances_$13788_storage_ptr_$_t_contract$_IERC20_$670_$_t_bytes32_$_t_contract$_IERC20_$670_$_t_bytes32_$",
                      "typeString": "tuple(struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12653:103:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    },
                    "id": 14339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14337,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14318,
                      "src": "12771:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 14338,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14325,
                      "src": "12780:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "12771:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "id": 14345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14343,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14318,
                        "src": "12838:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 14344,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14330,
                        "src": "12847:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "12838:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 14354,
                      "nodeType": "Block",
                      "src": "12901:61:44",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 14350,
                                  "name": "Errors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3317,
                                  "src": "12923:6:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                    "typeString": "type(library Errors)"
                                  }
                                },
                                "id": 14351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12930:20:44",
                                "memberName": "TOKEN_NOT_REGISTERED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3286,
                                "src": "12923:27:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 14349,
                              "name": "_revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3031,
                              "src": "12915:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 14352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12915:36:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 14353,
                          "nodeType": "ExpressionStatement",
                          "src": "12915:36:44"
                        }
                      ]
                    },
                    "id": 14355,
                    "nodeType": "IfStatement",
                    "src": "12834:128:44",
                    "trueBody": {
                      "id": 14348,
                      "nodeType": "Block",
                      "src": "12855:40:44",
                      "statements": [
                        {
                          "expression": {
                            "id": 14346,
                            "name": "balanceB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14332,
                            "src": "12876:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "functionReturnParameters": 14322,
                          "id": 14347,
                          "nodeType": "Return",
                          "src": "12869:15:44"
                        }
                      ]
                    }
                  },
                  "id": 14356,
                  "nodeType": "IfStatement",
                  "src": "12767:195:44",
                  "trueBody": {
                    "id": 14342,
                    "nodeType": "Block",
                    "src": "12788:40:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 14340,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14327,
                          "src": "12809:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 14322,
                        "id": 14341,
                        "nodeType": "Return",
                        "src": "12802:15:44"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14313,
              "nodeType": "StructuredDocumentation",
              "src": "11829:498:44",
              "text": " @dev Returns the balance of a token in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the General specialization setting.\n This function is convenient but not particularly gas efficient, and should be avoided during gas-sensitive\n operations, such as swaps. For those, _getTwoTokenPoolSharedBalances provides a more flexible interface.\n Requirements:\n - `token` must be registered in the Pool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolBalance",
            "nameLocation": "12341:23:44",
            "parameters": {
              "id": 14319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14315,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "12373:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14358,
                  "src": "12365:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14314,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12365:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14318,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12388:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14358,
                  "src": "12381:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14317,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14316,
                      "name": "IERC20",
                      "nameLocations": [
                        "12381:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "12381:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "12381:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12364:30:44"
            },
            "returnParameters": {
              "id": 14322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14358,
                  "src": "12418:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14320,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12418:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12417:9:44"
            },
            "scope": 14554,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14465,
            "nodeType": "FunctionDefinition",
            "src": "13585:1758:44",
            "nodes": [],
            "body": {
              "id": 14464,
              "nodeType": "Block",
              "src": "13877:1466:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14379,
                    14382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14379,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nameLocation": "13895:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14464,
                      "src": "13888:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14378,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14377,
                          "name": "IERC20",
                          "nameLocations": [
                            "13888:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "13888:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "13888:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14382,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nameLocation": "13910:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14464,
                      "src": "13903:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 14381,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14380,
                          "name": "IERC20",
                          "nameLocations": [
                            "13903:6:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 670,
                          "src": "13903:6:44"
                        },
                        "referencedDeclaration": 670,
                        "src": "13903:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14387,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14384,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14364,
                        "src": "13935:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 14385,
                        "name": "tokenY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14367,
                        "src": "13943:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 14383,
                      "name": "_sortTwoTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14553,
                      "src": "13920:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$returns$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (contract IERC20,contract IERC20)"
                      }
                    },
                    "id": 14386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13920:30:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$",
                      "typeString": "tuple(contract IERC20,contract IERC20)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13887:63:44"
                },
                {
                  "assignments": [
                    14389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14389,
                      "mutability": "mutable",
                      "name": "pairHash",
                      "nameLocation": "13968:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14464,
                      "src": "13960:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14388,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13960:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14394,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14391,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14379,
                        "src": "14000:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 14392,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14382,
                        "src": "14008:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 14390,
                      "name": "_getTwoTokenPairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14525,
                      "src": "13979:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (bytes32)"
                      }
                    },
                    "id": 14393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13979:36:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13960:55:44"
                },
                {
                  "expression": {
                    "id": 14402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14395,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14375,
                      "src": "14026:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14396,
                            "name": "_twoTokenPoolTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13805,
                            "src": "14041:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                            }
                          },
                          "id": 14398,
                          "indexExpression": {
                            "id": 14397,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14361,
                            "src": "14061:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14041:27:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage",
                            "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                          }
                        },
                        "id": 14399,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14069:8:44",
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13799,
                        "src": "14041:36:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$13788_storage_$",
                          "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref)"
                        }
                      },
                      "id": 14401,
                      "indexExpression": {
                        "id": 14400,
                        "name": "pairHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14389,
                        "src": "14078:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14041:46:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref"
                      }
                    },
                    "src": "14026:61:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                    }
                  },
                  "id": 14403,
                  "nodeType": "ExpressionStatement",
                  "src": "14026:61:44"
                },
                {
                  "assignments": [
                    14405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14405,
                      "mutability": "mutable",
                      "name": "sharedCash",
                      "nameLocation": "14269:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14464,
                      "src": "14261:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14404,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14261:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14408,
                  "initialValue": {
                    "expression": {
                      "id": 14406,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14375,
                      "src": "14282:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 14407,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14295:10:44",
                    "memberName": "sharedCash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13785,
                    "src": "14282:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14261:44:44"
                },
                {
                  "assignments": [
                    14410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14410,
                      "mutability": "mutable",
                      "name": "sharedManaged",
                      "nameLocation": "14323:13:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14464,
                      "src": "14315:21:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14409,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14315:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14413,
                  "initialValue": {
                    "expression": {
                      "id": 14411,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14375,
                      "src": "14339:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 14412,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14352:13:44",
                    "memberName": "sharedManaged",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13787,
                    "src": "14339:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14315:50:44"
                },
                {
                  "assignments": [
                    14415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14415,
                      "mutability": "mutable",
                      "name": "tokensRegistered",
                      "nameLocation": "14666:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14464,
                      "src": "14661:21:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 14414,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14661:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14434,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 14422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14416,
                            "name": "sharedCash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14405,
                            "src": "14685:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 14417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14696:9:44",
                          "memberName": "isNotZero",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12464,
                          "src": "14685:20:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$attached_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (bool)"
                          }
                        },
                        "id": 14418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14685:22:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14419,
                            "name": "sharedManaged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14410,
                            "src": "14723:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 14420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14737:9:44",
                          "memberName": "isNotZero",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12464,
                          "src": "14723:23:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$attached_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (bool)"
                          }
                        },
                        "id": 14421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14723:25:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14685:63:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 14431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 14424,
                                "name": "poolId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14361,
                                "src": "14796:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 14425,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14379,
                                "src": "14804:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 14423,
                              "name": "_isTwoTokenPoolTokenRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14504,
                              "src": "14765:30:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_contract$_IERC20_$670_$returns$_t_bool_$",
                                "typeString": "function (bytes32,contract IERC20) view returns (bool)"
                              }
                            },
                            "id": 14426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14765:46:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 14428,
                                "name": "poolId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14361,
                                "src": "14846:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 14429,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14382,
                                "src": "14854:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$670",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 14427,
                              "name": "_isTwoTokenPoolTokenRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14504,
                              "src": "14815:30:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_contract$_IERC20_$670_$returns$_t_bool_$",
                                "typeString": "function (bytes32,contract IERC20) view returns (bool)"
                              }
                            },
                            "id": 14430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14815:46:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14765:96:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 14432,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14764:98:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14685:177:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14661:201:44"
                },
                {
                  "condition": {
                    "id": 14436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14877:17:44",
                    "subExpression": {
                      "id": 14435,
                      "name": "tokensRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14415,
                      "src": "14878:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14447,
                  "nodeType": "IfStatement",
                  "src": "14873:291:44",
                  "trueBody": {
                    "id": 14446,
                    "nodeType": "Block",
                    "src": "14896:268:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 14438,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14361,
                              "src": "15096:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 14437,
                            "name": "_ensureRegisteredPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9092,
                            "src": "15074:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 14439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15074:29:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14440,
                        "nodeType": "ExpressionStatement",
                        "src": "15074:29:44"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14442,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3317,
                                "src": "15125:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$3317_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 14443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15132:20:44",
                              "memberName": "TOKEN_NOT_REGISTERED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3286,
                              "src": "15125:27:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14441,
                            "name": "_revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3031,
                            "src": "15117:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 14444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15117:36:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14445,
                        "nodeType": "ExpressionStatement",
                        "src": "15117:36:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 14454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14448,
                      "name": "balanceA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14370,
                      "src": "15174:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14451,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14405,
                          "src": "15224:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 14452,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14410,
                          "src": "15236:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 14449,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "15185:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15203:20:44",
                        "memberName": "fromSharedToBalanceA",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12762,
                        "src": "15185:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 14453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15185:65:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15174:76:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14455,
                  "nodeType": "ExpressionStatement",
                  "src": "15174:76:44"
                },
                {
                  "expression": {
                    "id": 14462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14456,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14372,
                      "src": "15260:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14459,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14405,
                          "src": "15310:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 14460,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14410,
                          "src": "15322:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 14457,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12871,
                          "src": "15271:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$12871_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 14458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15289:20:44",
                        "memberName": "fromSharedToBalanceB",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12785,
                        "src": "15271:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 14461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15271:65:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15260:76:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14463,
                  "nodeType": "ExpressionStatement",
                  "src": "15260:76:44"
                }
              ]
            },
            "documentation": {
              "id": 14359,
              "nodeType": "StructuredDocumentation",
              "src": "12974:606:44",
              "text": " @dev Returns the balance of the two tokens in a Two Token Pool.\n The returned balances are those of token A and token B, where token A is the lowest of token X and token Y, and\n token B the other.\n This function also returns a storage pointer to the TwoTokenPoolBalances struct associated with the token pair,\n which can be used to update it without having to recompute the pair hash and storage slot.\n Requirements:\n - `poolId` must be a Minimal Swap Info Pool\n - `tokenX` and `tokenY` must be registered in the Pool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolSharedBalances",
            "nameLocation": "13594:30:44",
            "parameters": {
              "id": 14368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14361,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "13642:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14465,
                  "src": "13634:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14360,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13634:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14364,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nameLocation": "13665:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14465,
                  "src": "13658:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14363,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14362,
                      "name": "IERC20",
                      "nameLocations": [
                        "13658:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "13658:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "13658:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14367,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nameLocation": "13688:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14465,
                  "src": "13681:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14366,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14365,
                      "name": "IERC20",
                      "nameLocations": [
                        "13681:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "13681:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "13681:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13624:76:44"
            },
            "returnParameters": {
              "id": 14376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14370,
                  "mutability": "mutable",
                  "name": "balanceA",
                  "nameLocation": "13769:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14465,
                  "src": "13761:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14369,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13761:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14372,
                  "mutability": "mutable",
                  "name": "balanceB",
                  "nameLocation": "13799:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14465,
                  "src": "13791:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13791:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14375,
                  "mutability": "mutable",
                  "name": "poolBalances",
                  "nameLocation": "13850:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14465,
                  "src": "13821:41:44",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                    "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                  },
                  "typeName": {
                    "id": 14374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14373,
                      "name": "TwoTokenPoolBalances",
                      "nameLocations": [
                        "13821:20:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13788,
                      "src": "13821:20:44"
                    },
                    "referencedDeclaration": 13788,
                    "src": "13821:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$13788_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13747:125:44"
            },
            "scope": 14554,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14504,
            "nodeType": "FunctionDefinition",
            "src": "15545:351:44",
            "nodes": [],
            "body": {
              "id": 14503,
              "nodeType": "Block",
              "src": "15644:252:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14478,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nameLocation": "15681:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 14503,
                      "src": "15654:37:44",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                      },
                      "typeName": {
                        "id": 14477,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14476,
                          "name": "TwoTokenPoolTokens",
                          "nameLocations": [
                            "15654:18:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13800,
                          "src": "15654:18:44"
                        },
                        "referencedDeclaration": 13800,
                        "src": "15654:18:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14482,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14479,
                      "name": "_twoTokenPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13805,
                      "src": "15694:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$13800_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                      }
                    },
                    "id": 14481,
                    "indexExpression": {
                      "id": 14480,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14468,
                      "src": "15714:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15694:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15654:67:44"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 14491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            },
                            "id": 14486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 14483,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14471,
                              "src": "15801:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 14484,
                                "name": "poolTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14478,
                                "src": "15810:10:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                                  "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                                }
                              },
                              "id": 14485,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15821:6:44",
                              "memberName": "tokenA",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13791,
                              "src": "15810:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "src": "15801:26:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            },
                            "id": 14490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 14487,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14471,
                              "src": "15831:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 14488,
                                "name": "poolTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14478,
                                "src": "15840:10:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$13800_storage_ptr",
                                  "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                                }
                              },
                              "id": 14489,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15851:6:44",
                              "memberName": "tokenB",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13794,
                              "src": "15840:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "src": "15831:26:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15801:56:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 14492,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15800:58:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "id": 14500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14493,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14471,
                        "src": "15862:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 14497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15886:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 14496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15878:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14495,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15878:7:44",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 14498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15878:10:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 14494,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "15871:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$670_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 14499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15871:18:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "15862:27:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15800:89:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14475,
                  "id": 14502,
                  "nodeType": "Return",
                  "src": "15793:96:44"
                }
              ]
            },
            "documentation": {
              "id": 14466,
              "nodeType": "StructuredDocumentation",
              "src": "15349:191:44",
              "text": " @dev Returns true if `token` is registered in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the Two Token specialization setting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isTwoTokenPoolTokenRegistered",
            "nameLocation": "15554:30:44",
            "parameters": {
              "id": 14472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14468,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "15593:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14504,
                  "src": "15585:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14467,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15585:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14471,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15608:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14504,
                  "src": "15601:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14470,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14469,
                      "name": "IERC20",
                      "nameLocations": [
                        "15601:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "15601:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "15601:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15584:30:44"
            },
            "returnParameters": {
              "id": 14475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14504,
                  "src": "15638:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15638:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15637:6:44"
            },
            "scope": 14554,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14525,
            "nodeType": "FunctionDefinition",
            "src": "15983:158:44",
            "nodes": [],
            "body": {
              "id": 14524,
              "nodeType": "Block",
              "src": "16074:67:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14519,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14508,
                            "src": "16118:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 14520,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14511,
                            "src": "16126:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$670",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "expression": {
                            "id": 14517,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16101:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 14518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16105:12:44",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16101:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 14521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16101:32:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14516,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "16091:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 14522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16091:43:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 14515,
                  "id": 14523,
                  "nodeType": "Return",
                  "src": "16084:50:44"
                }
              ]
            },
            "documentation": {
              "id": 14505,
              "nodeType": "StructuredDocumentation",
              "src": "15902:76:44",
              "text": " @dev Returns the hash associated with a given token pair."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPairHash",
            "nameLocation": "15992:20:44",
            "parameters": {
              "id": 14512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14508,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "16020:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14525,
                  "src": "16013:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14507,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14506,
                      "name": "IERC20",
                      "nameLocations": [
                        "16013:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "16013:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "16013:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14511,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "16035:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14525,
                  "src": "16028:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14510,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14509,
                      "name": "IERC20",
                      "nameLocations": [
                        "16028:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "16028:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "16028:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16012:30:44"
            },
            "returnParameters": {
              "id": 14515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14525,
                  "src": "16065:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14513,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16065:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16064:9:44"
            },
            "scope": 14554,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 14553,
            "nodeType": "FunctionDefinition",
            "src": "16256:169:44",
            "nodes": [],
            "body": {
              "id": 14552,
              "nodeType": "Block",
              "src": "16348:77:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      },
                      "id": 14543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14541,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14529,
                        "src": "16365:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 14542,
                        "name": "tokenY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14532,
                        "src": "16374:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$670",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "16365:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 14547,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14532,
                          "src": "16403:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 14548,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14529,
                          "src": "16411:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "id": 14549,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16402:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$",
                        "typeString": "tuple(contract IERC20,contract IERC20)"
                      }
                    },
                    "id": 14550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16365:53:44",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 14544,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14529,
                          "src": "16384:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 14545,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14532,
                          "src": "16392:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$670",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "id": 14546,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16383:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$",
                        "typeString": "tuple(contract IERC20,contract IERC20)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$670_$_t_contract$_IERC20_$670_$",
                      "typeString": "tuple(contract IERC20,contract IERC20)"
                    }
                  },
                  "functionReturnParameters": 14540,
                  "id": 14551,
                  "nodeType": "Return",
                  "src": "16358:60:44"
                }
              ]
            },
            "documentation": {
              "id": 14526,
              "nodeType": "StructuredDocumentation",
              "src": "16147:104:44",
              "text": " @dev Sorts two tokens in ascending order, returning them as a (tokenA, tokenB) tuple."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sortTwoTokens",
            "nameLocation": "16265:14:44",
            "parameters": {
              "id": 14533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14529,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nameLocation": "16287:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14553,
                  "src": "16280:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14528,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14527,
                      "name": "IERC20",
                      "nameLocations": [
                        "16280:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "16280:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "16280:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14532,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nameLocation": "16302:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 14553,
                  "src": "16295:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14531,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14530,
                      "name": "IERC20",
                      "nameLocations": [
                        "16295:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "16295:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "16295:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16279:30:44"
            },
            "returnParameters": {
              "id": 14540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14536,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14553,
                  "src": "16332:6:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14535,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14534,
                      "name": "IERC20",
                      "nameLocations": [
                        "16332:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "16332:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "16332:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14553,
                  "src": "16340:6:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$670",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 14538,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14537,
                      "name": "IERC20",
                      "nameLocations": [
                        "16340:6:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 670,
                      "src": "16340:6:44"
                    },
                    "referencedDeclaration": 670,
                    "src": "16340:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$670",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16331:16:44"
            },
            "scope": 14554,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 13779,
              "name": "PoolRegistry",
              "nameLocations": [
                "922:12:44"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9320,
              "src": "922:12:44"
            },
            "id": 13780,
            "nodeType": "InheritanceSpecifier",
            "src": "922:12:44"
          }
        ],
        "canonicalName": "TwoTokenPoolsBalance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          14554,
          9320,
          12232,
          3929,
          3749,
          6240,
          3005,
          3328,
          6883,
          15228,
          3365,
          3346
        ],
        "name": "TwoTokenPoolsBalance",
        "nameLocation": "898:20:44",
        "scope": 14555,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 44
}