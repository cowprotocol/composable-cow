{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVault",
          "name": "vault_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "balance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Transfer.Data",
          "name": "feeTransfer",
          "type": "tuple"
        }
      ],
      "name": "batchSwapWithFee",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "tokenDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "balance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Transfer.Data[]",
          "name": "transfers",
          "type": "tuple[]"
        }
      ],
      "name": "transferFromAccounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b5060405161149538038061149583398101604081905261002f91610044565b336080526001600160a01b031660a052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160a0516113e86100ad6000396000818161015c0152818161021e015261030a0152600081816093015261026901526113e86000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634817a2861461003b5780637d10d11f14610064575b600080fd5b61004e610049366004610da7565b610079565b60405161005b9190610eb6565b60405180910390f35b610077610072366004610ed0565b610251565b005b60603373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461011f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f475076323a206e6f742063726561746f7200000000000000000000000000000060448201526064015b60405180910390fd5b6040517f945bcec900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063945bcec99061019d908c908c908c908c908c908c908c90600401611003565b6000604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261020291908101906111dd565b905061024573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168333610336565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f475076323a206e6f742063726561746f720000000000000000000000000000006044820152606401610116565b61033273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001683833361061b565b5050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61035b604084016020850161126e565b73ffffffffffffffffffffffffffffffffffffffff16036103d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f475076323a2063616e6e6f74207472616e73666572206e6174697665204554486044820152606401610116565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc982606001350361044b57610446610413602084018461126e565b8260408501803590610428906020880161126e565b73ffffffffffffffffffffffffffffffffffffffff1692919061096d565b505050565b604080516001808252818301909252600091816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104625790505090506000816000815181106104d2576104d261128b565b602002602001015190507fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063284606001351461050e576002610511565b60035b8190600381111561052457610524610f45565b9081600381111561053757610537610f45565b90525061054a604085016020860161126e565b73ffffffffffffffffffffffffffffffffffffffff166020808301919091526040808601359083015261057f9085018561126e565b73ffffffffffffffffffffffffffffffffffffffff908116606083015283811660808301526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815290861690630e8e3e84906105e29085906004016112ba565b600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505050505050505050565b60008267ffffffffffffffff81111561063657610636610b66565b6040519080825280602002602001820160405280156106ad57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816106545790505b5090506000805b848110156108d657368686838181106106cf576106cf61128b565b60800291909101915073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90506106ff604083016020840161126e565b73ffffffffffffffffffffffffffffffffffffffff160361077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f475076323a2063616e6e6f74207472616e73666572206e6174697665204554486044820152606401610116565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc98160600135036107d1576107cc6107b7602083018361126e565b8660408401803590610428906020870161126e565b6108c3565b600084846107de81611353565b9550815181106107f0576107f061128b565b602002602001015190507fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063282606001351461082c57600161082f565b60035b8190600381111561084257610842610f45565b9081600381111561085557610855610f45565b905250610868604083016020840161126e565b73ffffffffffffffffffffffffffffffffffffffff166020808301919091526040808401359083015261089d9083018361126e565b73ffffffffffffffffffffffffffffffffffffffff908116606083015286166080909101525b50806108ce81611353565b9150506106b4565b508015610965578082526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871690630e8e3e84906109329085906004016112ba565b600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050505b505050505050565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8581166004840152841660248301526044820183905290600080606483828a5af16109d8573d6000803e3d6000fd5b506109e285610a4f565b610a48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610116565b5050505050565b6000610a8e565b7f08c379a000000000000000000000000000000000000000000000000000000000600052602060045280602452508060445260646000fd5b3d8015610acd5760208114610b0757610ac87f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f610a56565b610b14565b823b610afe57610afe7f475076323a206e6f74206120636f6e74726163740000000000000000000000006014610a56565b60019150610b14565b3d6000803e600051151591505b50919050565b60008083601f840112610b2c57600080fd5b50813567ffffffffffffffff811115610b4457600080fd5b6020830191508360208260051b8501011115610b5f57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bdc57610bdc610b66565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b66565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610c2a57600080fd5b50565b600082601f830112610c3e57600080fd5b81356020610c53610c4e83610be4565b610b95565b82815260059290921b84018101918181019086841115610c7257600080fd5b8286015b84811015610c96578035610c8981610c08565b8352918301918301610c76565b509695505050505050565b80358015158114610cb157600080fd5b919050565b600060808284031215610cc857600080fd5b6040516080810181811067ffffffffffffffff82111715610ceb57610ceb610b66565b6040529050808235610cfc81610c08565b8152610d0a60208401610ca1565b60208201526040830135610d1d81610c08565b6040820152610d2e60608401610ca1565b60608201525092915050565b600082601f830112610d4b57600080fd5b81356020610d5b610c4e83610be4565b82815260059290921b84018101918181019086841115610d7a57600080fd5b8286015b84811015610c965780358352918301918301610d7e565b600060808284031215610b1457600080fd5b6000806000806000806000806101a0898b031215610dc457600080fd5b883560028110610dd357600080fd5b9750602089013567ffffffffffffffff80821115610df057600080fd5b610dfc8c838d01610b1a565b909950975060408b0135915080821115610e1557600080fd5b610e218c838d01610c2d565b9650610e308c60608d01610cb6565b955060e08b0135915080821115610e4657600080fd5b50610e538b828c01610d3a565b9350506101008901359150610e6c8a6101208b01610d95565b90509295985092959890939650565b600081518084526020808501945080840160005b83811015610eab57815187529582019590820190600101610e8f565b509495945050505050565b602081526000610ec96020830184610e7b565b9392505050565b60008060208385031215610ee357600080fd5b823567ffffffffffffffff80821115610efb57600080fd5b818501915085601f830112610f0f57600080fd5b813581811115610f1e57600080fd5b8660208260071b8501011115610f3357600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600081518084526020808501945080840160005b83811015610eab57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610fd1565b600061012080830160028b1061101b5761101b610f45565b8a84526020808501929092528890526101408084019160058a901b8501909101908a60005b8b811015611151577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec087850301855281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618e36030181126110a157600080fd5b8d01803585528381013584860152604080820135908601526060808201359086015260a0608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126110fc57600080fd5b90920185810192903567ffffffffffffffff81111561111a57600080fd5b80360384131561112957600080fd5b828289015261113b8389018286610f74565b9887019897505050928401925050600101611040565b50505083810360408501526111668189610fbd565b9150506111b5606084018773ffffffffffffffffffffffffffffffffffffffff808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e08401526111c78186610e7b565b9150508261010083015298975050505050505050565b600060208083850312156111f057600080fd5b825167ffffffffffffffff81111561120757600080fd5b8301601f8101851361121857600080fd5b8051611226610c4e82610be4565b81815260059190911b8201830190838101908783111561124557600080fd5b928401925b828410156112635783518252928401929084019061124a565b979650505050505050565b60006020828403121561128057600080fd5b8135610ec981610c08565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602080825282518282018190526000919060409081850190868401855b828110156113465781518051600481106112f3576112f3610f45565b85528087015173ffffffffffffffffffffffffffffffffffffffff908116888701528682015187870152606080830151821690870152608091820151169085015260a090930192908501906001016112d7565b5091979650505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122004adc15dd1d35c2bfa3dce7fd2d81bebbfbd818bb0fe0cbf0471642fd2d0766964736f6c63430008130033",
    "sourceMap": "292:2658:57:-:0;;;615:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;662:10;652:20;;-1:-1:-1;;;;;682:14:57;;;292:2658;;14:306:168;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:168;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:168:o;:::-;292:2658:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634817a2861461003b5780637d10d11f14610064575b600080fd5b61004e610049366004610da7565b610079565b60405161005b9190610eb6565b60405180910390f35b610077610072366004610ed0565b610251565b005b60603373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461011f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f475076323a206e6f742063726561746f7200000000000000000000000000000060448201526064015b60405180910390fd5b6040517f945bcec900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063945bcec99061019d908c908c908c908c908c908c908c90600401611003565b6000604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261020291908101906111dd565b905061024573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168333610336565b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f475076323a206e6f742063726561746f720000000000000000000000000000006044820152606401610116565b61033273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001683833361061b565b5050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61035b604084016020850161126e565b73ffffffffffffffffffffffffffffffffffffffff16036103d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f475076323a2063616e6e6f74207472616e73666572206e6174697665204554486044820152606401610116565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc982606001350361044b57610446610413602084018461126e565b8260408501803590610428906020880161126e565b73ffffffffffffffffffffffffffffffffffffffff1692919061096d565b505050565b604080516001808252818301909252600091816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104625790505090506000816000815181106104d2576104d261128b565b602002602001015190507fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063284606001351461050e576002610511565b60035b8190600381111561052457610524610f45565b9081600381111561053757610537610f45565b90525061054a604085016020860161126e565b73ffffffffffffffffffffffffffffffffffffffff166020808301919091526040808601359083015261057f9085018561126e565b73ffffffffffffffffffffffffffffffffffffffff908116606083015283811660808301526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815290861690630e8e3e84906105e29085906004016112ba565b600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505050505050505050565b60008267ffffffffffffffff81111561063657610636610b66565b6040519080825280602002602001820160405280156106ad57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816106545790505b5090506000805b848110156108d657368686838181106106cf576106cf61128b565b60800291909101915073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90506106ff604083016020840161126e565b73ffffffffffffffffffffffffffffffffffffffff160361077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f475076323a2063616e6e6f74207472616e73666572206e6174697665204554486044820152606401610116565b7f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc98160600135036107d1576107cc6107b7602083018361126e565b8660408401803590610428906020870161126e565b6108c3565b600084846107de81611353565b9550815181106107f0576107f061128b565b602002602001015190507fabee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea063282606001351461082c57600161082f565b60035b8190600381111561084257610842610f45565b9081600381111561085557610855610f45565b905250610868604083016020840161126e565b73ffffffffffffffffffffffffffffffffffffffff166020808301919091526040808401359083015261089d9083018361126e565b73ffffffffffffffffffffffffffffffffffffffff908116606083015286166080909101525b50806108ce81611353565b9150506106b4565b508015610965578082526040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871690630e8e3e84906109329085906004016112ba565b600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050505b505050505050565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8581166004840152841660248301526044820183905290600080606483828a5af16109d8573d6000803e3d6000fd5b506109e285610a4f565b610a48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610116565b5050505050565b6000610a8e565b7f08c379a000000000000000000000000000000000000000000000000000000000600052602060045280602452508060445260646000fd5b3d8015610acd5760208114610b0757610ac87f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f610a56565b610b14565b823b610afe57610afe7f475076323a206e6f74206120636f6e74726163740000000000000000000000006014610a56565b60019150610b14565b3d6000803e600051151591505b50919050565b60008083601f840112610b2c57600080fd5b50813567ffffffffffffffff811115610b4457600080fd5b6020830191508360208260051b8501011115610b5f57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bdc57610bdc610b66565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b66565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81168114610c2a57600080fd5b50565b600082601f830112610c3e57600080fd5b81356020610c53610c4e83610be4565b610b95565b82815260059290921b84018101918181019086841115610c7257600080fd5b8286015b84811015610c96578035610c8981610c08565b8352918301918301610c76565b509695505050505050565b80358015158114610cb157600080fd5b919050565b600060808284031215610cc857600080fd5b6040516080810181811067ffffffffffffffff82111715610ceb57610ceb610b66565b6040529050808235610cfc81610c08565b8152610d0a60208401610ca1565b60208201526040830135610d1d81610c08565b6040820152610d2e60608401610ca1565b60608201525092915050565b600082601f830112610d4b57600080fd5b81356020610d5b610c4e83610be4565b82815260059290921b84018101918181019086841115610d7a57600080fd5b8286015b84811015610c965780358352918301918301610d7e565b600060808284031215610b1457600080fd5b6000806000806000806000806101a0898b031215610dc457600080fd5b883560028110610dd357600080fd5b9750602089013567ffffffffffffffff80821115610df057600080fd5b610dfc8c838d01610b1a565b909950975060408b0135915080821115610e1557600080fd5b610e218c838d01610c2d565b9650610e308c60608d01610cb6565b955060e08b0135915080821115610e4657600080fd5b50610e538b828c01610d3a565b9350506101008901359150610e6c8a6101208b01610d95565b90509295985092959890939650565b600081518084526020808501945080840160005b83811015610eab57815187529582019590820190600101610e8f565b509495945050505050565b602081526000610ec96020830184610e7b565b9392505050565b60008060208385031215610ee357600080fd5b823567ffffffffffffffff80821115610efb57600080fd5b818501915085601f830112610f0f57600080fd5b813581811115610f1e57600080fd5b8660208260071b8501011115610f3357600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600081518084526020808501945080840160005b83811015610eab57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610fd1565b600061012080830160028b1061101b5761101b610f45565b8a84526020808501929092528890526101408084019160058a901b8501909101908a60005b8b811015611151577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec087850301855281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618e36030181126110a157600080fd5b8d01803585528381013584860152604080820135908601526060808201359086015260a0608080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe10181126110fc57600080fd5b90920185810192903567ffffffffffffffff81111561111a57600080fd5b80360384131561112957600080fd5b828289015261113b8389018286610f74565b9887019897505050928401925050600101611040565b50505083810360408501526111668189610fbd565b9150506111b5606084018773ffffffffffffffffffffffffffffffffffffffff808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e08401526111c78186610e7b565b9150508261010083015298975050505050505050565b600060208083850312156111f057600080fd5b825167ffffffffffffffff81111561120757600080fd5b8301601f8101851361121857600080fd5b8051611226610c4e82610be4565b81815260059190911b8201830190838101908783111561124557600080fd5b928401925b828410156112635783518252928401929084019061124a565b979650505050505050565b60006020828403121561128057600080fd5b8135610ec981610c08565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602080825282518282018190526000919060409081850190868401855b828110156113465781518051600481106112f3576112f3610f45565b85528087015173ffffffffffffffffffffffffffffffffffffffff908116888701528682015187870152606080830151821690870152608091820151169085015260a090930192908501906001016112d7565b5091979650505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122004adc15dd1d35c2bfa3dce7fd2d81bebbfbd818bb0fe0cbf0471642fd2d0766964736f6c63430008130033",
    "sourceMap": "292:2658:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:588;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1230:177;;;;;;:::i;:::-;;:::i;:::-;;2360:588;2681:27;861:10;:21;875:7;861:21;;853:51;;;;;;;6867:2:168;853:51:57;;;6849:21:168;6906:2;6886:18;;;6879:30;6945:19;6925:18;;;6918:47;6982:18;;853:51:57;;;;;;;;;2734:143:::1;::::0;;;;:15:::1;:5;:15;::::0;::::1;::::0;:143:::1;::::0;2763:4;;2781:5;;;;2800:6;;2820:5;;2839:6;;2859:8;;2734:143:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2720:157:::0;-1:-1:-1;2887:54:57::1;:29;:5;:29;2917:11:::0;2930:10:::1;2887:29;:54::i;:::-;2360:588:::0;;;;;;;;;;:::o;1230:177::-;861:10;:21;875:7;861:21;;853:51;;;;;;;6867:2:168;853:51:57;;;6849:21:168;6906:2;6886:18;;;6879:30;6945:19;6925:18;;;6918:47;6982:18;;853:51:57;6665:341:168;853:51:57;1351:49:::1;:26;:5;:26;1378:9:::0;;1389:10:::1;1351:26;:49::i;:::-;1230:177:::0;;:::o;1788:1123:66:-;632:42;1956:14;;;;;;;;:::i;:::-;1948:42;;;1927:121;;;;;;;12698:2:168;1927:121:66;;;12680:21:168;;;12717:18;;;12710:30;12776:34;12756:18;;;12749:62;12828:18;;1927:121:66;12496:356:168;1927:121:66;2083:23;2063:8;:16;;;:43;2059:846;;2122:139;2171:16;;;;:8;:16;:::i;:::-;2205:9;2232:15;;;;;;2122:14;;;;;;:::i;:::-;:31;;;:139;;:31;:139::i;:::-;1788:1123;;;:::o;2059:846::-;2351:29;;;2378:1;2351:29;;;;;;;;;2292:56;;2351:29;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2351:29:66;;;;;;;;;;;;;;2292:88;;2395:37;2435:10;2446:1;2435:13;;;;;;;;:::i;:::-;;;;;;;2395:53;;2499:26;2479:8;:16;;;:46;:168;;2605:42;2479:168;;;2544:42;2479:168;2462:9;;:185;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;2679:14:66;;;;;;;;:::i;:::-;2661:32;;:15;;;;:32;;;;2726:15;;;;;2707:16;;;:34;2774:16;;;;2726:8;2774:16;:::i;:::-;2755:35;;;;:16;;;:35;2804:40;;;:19;;;:40;2859:35;;;;;:23;;;;;;:35;;2883:10;;2859:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:627;;1788:1123;;;:::o;3508:1809::-;3920:40;4003:9;3963:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3963:66:66;;;;;;;;;;;;;;;3920:109;;4039:22;4081:9;4076:1076;4096:20;;;4076:1076;;;4137:22;4162:9;;4172:1;4162:12;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;632:42:66;;-1:-1:-1;4221:14:66;;;;;;;;:::i;:::-;4213:42;;;4188:133;;;;;;;12698:2:168;4188:133:66;;;12680:21:168;;;12717:18;;;12710:30;12776:34;12756:18;;;12749:62;12828:18;;4188:133:66;12496:356:168;4188:133:66;4360:23;4340:8;:16;;;:43;4336:806;;4403:155;4456:16;;;;:8;:16;:::i;:::-;4494:9;4525:15;;;;;;4403:14;;;;;;:::i;:155::-;4336:806;;;4597:37;4637:10;4669:16;;;;:::i;:::-;;;4637:66;;;;;;;;:::i;:::-;;;;;;;4597:106;;4758:26;4738:8;:16;;;:46;:176;;4872:42;4738:176;;;4807:42;4738:176;4721:9;;:193;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;4950:14:66;;;;;;;;:::i;:::-;4932:32;;:15;;;;:32;;;;5001:15;;;;;4982:16;;;:34;5053:16;;;;5001:8;5053:16;:::i;:::-;5034:35;;;;:16;;;:35;5087:40;;:19;;;;:40;4336:806;-1:-1:-1;4118:3:66;;;;:::i;:::-;;;;4076:1076;;;-1:-1:-1;5166:18:66;;5162:149;;7984:29;;;5265:35;;;;;:23;;;;;;:35;;5289:10;;5265:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5162:149;3637:1680;;3508:1809;;;;:::o;1390:990:64:-;1695:4;1689:11;1547:27;1713:36;;;1839:42;1829:53;;;1809:1;1786:25;;1762:134;1977:51;;1956:2;1933:26;;1909:133;2085:2;2062:26;;2055:41;;;1547:27;1528:16;;2161:3;1689:11;1528:16;2132:5;2125;2120:51;2110:177;;2212:16;2209:1;2206;2191:38;2256:16;2253:1;2246:27;2110:177;;2315:28;2337:5;2315:21;:28::i;:::-;2307:66;;;;;;;15102:2:168;2307:66:64;;;15084:21:168;15141:2;15121:18;;;15114:30;15180:27;15160:18;;;15153:55;15225:18;;2307:66:64;14900:349:168;2307:66:64;1518:862;1390:990;;;;:::o;2578:2906::-;2669:12;3841:253;;;3916:18;3910:4;3903:32;3965:4;3959;3952:18;4000:6;3994:4;3987:20;;4037:7;4031:4;4024:21;4075:4;4069;4062:18;3841:253;4115:16;4203:513;;;;4806:2;4801:558;;;;5398:56;5420:33;5416:2;5398:56;:::i;:::-;4108:1360;;4203:513;4579:5;4567:18;4557:115;;4609:45;4631:22;4627:2;4609:45;:::i;:::-;4701:1;4690:12;;4203:513;;4801:558;4848:16;4845:1;4842;4827:38;5341:1;5335:8;5328:16;5321:24;5310:35;;4108:1360;;2578:2906;;;:::o;14:389:168:-;99:8;109:6;163:3;156:4;148:6;144:17;140:27;130:55;;181:1;178;171:12;130:55;-1:-1:-1;204:20:168;;247:18;236:30;;233:50;;;279:1;276;269:12;233:50;316:4;308:6;304:17;292:29;;376:3;369:4;359:6;356:1;352:14;344:6;340:27;336:38;333:47;330:67;;;393:1;390;383:12;330:67;14:389;;;;;:::o;408:184::-;460:77;457:1;450:88;557:4;554:1;547:15;581:4;578:1;571:15;597:334;668:2;662:9;724:2;714:13;;729:66;710:86;698:99;;827:18;812:34;;848:22;;;809:62;806:88;;;874:18;;:::i;:::-;910:2;903:22;597:334;;-1:-1:-1;597:334:168:o;936:191::-;1004:4;1037:18;1029:6;1026:30;1023:56;;;1059:18;;:::i;:::-;-1:-1:-1;1104:1:168;1100:14;1116:4;1096:25;;936:191::o;1132:162::-;1226:42;1219:5;1215:54;1208:5;1205:65;1195:93;;1284:1;1281;1274:12;1195:93;1132:162;:::o;1299:761::-;1361:5;1414:3;1407:4;1399:6;1395:17;1391:27;1381:55;;1432:1;1429;1422:12;1381:55;1468:6;1455:20;1494:4;1518:68;1534:51;1582:2;1534:51;:::i;:::-;1518:68;:::i;:::-;1620:15;;;1706:1;1702:10;;;;1690:23;;1686:32;;;1651:12;;;;1730:15;;;1727:35;;;1758:1;1755;1748:12;1727:35;1794:2;1786:6;1782:15;1806:225;1822:6;1817:3;1814:15;1806:225;;;1902:3;1889:17;1919:39;1952:5;1919:39;:::i;:::-;1971:18;;2009:12;;;;1839;;1806:225;;;-1:-1:-1;2049:5:168;1299:761;-1:-1:-1;;;;;;1299:761:168:o;2065:160::-;2130:20;;2186:13;;2179:21;2169:32;;2159:60;;2215:1;2212;2205:12;2159:60;2065:160;;;:::o;2230:779::-;2291:5;2339:4;2327:9;2322:3;2318:19;2314:30;2311:50;;;2357:1;2354;2347:12;2311:50;2390:2;2384:9;2432:4;2424:6;2420:17;2503:6;2491:10;2488:22;2467:18;2455:10;2452:34;2449:62;2446:88;;;2514:18;;:::i;:::-;2550:2;2543:22;2583:6;-1:-1:-1;2583:6:168;2613:23;;2645:41;2613:23;2645:41;:::i;:::-;2695:23;;2751:35;2782:2;2767:18;;2751:35;:::i;:::-;2746:2;2738:6;2734:15;2727:60;2839:2;2828:9;2824:18;2811:32;2852:41;2885:7;2852:41;:::i;:::-;2921:2;2909:15;;2902:32;2967:35;2998:2;2983:18;;2967:35;:::i;:::-;2962:2;2954:6;2950:15;2943:60;;2230:779;;;;:::o;3014:669::-;3067:5;3120:3;3113:4;3105:6;3101:17;3097:27;3087:55;;3138:1;3135;3128:12;3087:55;3174:6;3161:20;3200:4;3224:68;3240:51;3288:2;3240:51;:::i;3224:68::-;3326:15;;;3412:1;3408:10;;;;3396:23;;3392:32;;;3357:12;;;;3436:15;;;3433:35;;;3464:1;3461;3454:12;3433:35;3500:2;3492:6;3488:15;3512:142;3528:6;3523:3;3520:15;3512:142;;;3594:17;;3582:30;;3632:12;;;;3545;;3512:142;;3688:153;3745:5;3790:3;3781:6;3776:3;3772:16;3768:26;3765:46;;;3807:1;3804;3797:12;3846:1467;4155:6;4163;4171;4179;4187;4195;4203;4211;4264:3;4252:9;4243:7;4239:23;4235:33;4232:53;;;4281:1;4278;4271:12;4232:53;4320:9;4307:23;4359:1;4352:5;4349:12;4339:40;;4375:1;4372;4365:12;4339:40;4398:5;-1:-1:-1;4454:2:168;4439:18;;4426:32;4477:18;4507:14;;;4504:34;;;4534:1;4531;4524:12;4504:34;4573:92;4657:7;4648:6;4637:9;4633:22;4573:92;:::i;:::-;4684:8;;-1:-1:-1;4547:118:168;-1:-1:-1;4772:2:168;4757:18;;4744:32;;-1:-1:-1;4788:16:168;;;4785:36;;;4817:1;4814;4807:12;4785:36;4840:71;4903:7;4892:8;4881:9;4877:24;4840:71;:::i;:::-;4830:81;;4930:61;4983:7;4978:2;4967:9;4963:18;4930:61;:::i;:::-;4920:71;;5044:3;5033:9;5029:19;5016:33;5000:49;;5074:2;5064:8;5061:16;5058:36;;;5090:1;5087;5080:12;5058:36;;5113:62;5167:7;5156:8;5145:9;5141:24;5113:62;:::i;:::-;5103:72;;;5222:3;5211:9;5207:19;5194:33;5184:43;;5246:61;5299:7;5293:3;5282:9;5278:19;5246:61;:::i;:::-;5236:71;;3846:1467;;;;;;;;;;;:::o;5318:434::-;5370:3;5408:5;5402:12;5435:6;5430:3;5423:19;5461:4;5490:2;5485:3;5481:12;5474:19;;5527:2;5520:5;5516:14;5548:1;5558:169;5572:6;5569:1;5566:13;5558:169;;;5633:13;;5621:26;;5667:12;;;;5702:15;;;;5594:1;5587:9;5558:169;;;-1:-1:-1;5743:3:168;;5318:434;-1:-1:-1;;;;;5318:434:168:o;5757:258::-;5934:2;5923:9;5916:21;5897:4;5954:55;6005:2;5994:9;5990:18;5982:6;5954:55;:::i;:::-;5946:63;5757:258;-1:-1:-1;;;5757:258:168:o;6020:640::-;6131:6;6139;6192:2;6180:9;6171:7;6167:23;6163:32;6160:52;;;6208:1;6205;6198:12;6160:52;6248:9;6235:23;6277:18;6318:2;6310:6;6307:14;6304:34;;;6334:1;6331;6324:12;6304:34;6372:6;6361:9;6357:22;6347:32;;6417:7;6410:4;6406:2;6402:13;6398:27;6388:55;;6439:1;6436;6429:12;6388:55;6479:2;6466:16;6505:2;6497:6;6494:14;6491:34;;;6521:1;6518;6511:12;6491:34;6574:7;6569:2;6559:6;6556:1;6552:14;6548:2;6544:23;6540:32;6537:45;6534:65;;;6595:1;6592;6585:12;6534:65;6626:2;6618:11;;;;;6648:6;;-1:-1:-1;6020:640:168;;-1:-1:-1;;;;6020:640:168:o;7011:184::-;7063:77;7060:1;7053:88;7160:4;7157:1;7150:15;7184:4;7181:1;7174:15;7200:325;7288:6;7283:3;7276:19;7340:6;7333:5;7326:4;7321:3;7317:14;7304:43;;7392:1;7385:4;7376:6;7371:3;7367:16;7363:27;7356:38;7258:3;7514:4;7444:66;7439:2;7431:6;7427:15;7423:88;7418:3;7414:98;7410:109;7403:116;;7200:325;;;;:::o;7530:492::-;7591:3;7629:5;7623:12;7656:6;7651:3;7644:19;7682:4;7711:2;7706:3;7702:12;7695:19;;7748:2;7741:5;7737:14;7769:1;7779:218;7793:6;7790:1;7787:13;7779:218;;;7858:13;;7873:42;7854:62;7842:75;;7937:12;;;;7972:15;;;;7815:1;7808:9;7779:218;;8410:2914;8958:4;8987:3;9028:2;9017:9;9013:18;9061:1;9053:6;9050:13;9040:47;;9067:18;;:::i;:::-;9096:25;;;9140:2;9158:18;;;9151:30;;;;9216:22;;;9257:3;9276:18;;;;9340:1;9336:14;;;9321:30;;9317:39;;;;9379:6;-1:-1:-1;9413:1534:168;9427:6;9424:1;9421:13;9413:1534;;;9516:66;9504:9;9496:6;9492:22;9488:95;9483:3;9476:108;9636:6;9623:20;9723:66;9714:6;9698:14;9694:27;9690:100;9670:18;9666:125;9656:153;;9805:1;9802;9795:12;9656:153;9835:31;;9921:19;;9906:35;;9991:14;;;9978:28;9961:15;;;9954:53;10030:4;10084:14;;;10071:28;10054:15;;;10047:53;10123:4;10177:14;;;10164:28;10147:15;;;10140:53;9889:4;10216;10274:14;;;10261:28;10346:14;10342:26;;;10370:66;10338:99;10312:126;;10302:154;;10452:1;10449;10442:12;10302:154;10484:32;;;10592:16;;;;-1:-1:-1;10543:21:168;10635:18;10624:30;;10621:50;;;10667:1;10664;10657:12;10621:50;10720:6;10704:14;10700:27;10691:7;10687:41;10684:61;;;10741:1;10738;10731:12;10684:61;10782:2;10777;10769:6;10765:15;10758:27;10808:59;10863:2;10855:6;10851:15;10843:6;10834:7;10808:59;:::i;:::-;10925:12;;;;10798:69;-1:-1:-1;;;10890:15:168;;;;-1:-1:-1;;9449:1:168;9442:9;9413:1534;;;9417:3;;;10997:9;10989:6;10985:22;10978:4;10967:9;10963:20;10956:52;11031;11076:6;11068;11031:52;:::i;:::-;11017:66;;;11092:62;11148:4;11137:9;11133:20;11125:6;8105:42;8186:2;8178:5;8172:12;8168:21;8163:3;8156:34;8253:4;8246:5;8242:16;8236:23;8229:31;8222:39;8215:4;8210:3;8206:14;8199:63;8323:2;8315:4;8308:5;8304:16;8298:23;8294:32;8287:4;8282:3;8278:14;8271:56;;8390:4;8383:5;8379:16;8373:23;8366:31;8359:39;8352:4;8347:3;8343:14;8336:63;8027:378;;;11092:62;11203:9;11195:6;11191:22;11185:3;11174:9;11170:19;11163:51;11231:43;11267:6;11259;11231:43;:::i;:::-;11223:51;;;11311:6;11305:3;11294:9;11290:19;11283:35;8410:2914;;;;;;;;;;:::o;11329:888::-;11423:6;11454:2;11497;11485:9;11476:7;11472:23;11468:32;11465:52;;;11513:1;11510;11503:12;11465:52;11546:9;11540:16;11579:18;11571:6;11568:30;11565:50;;;11611:1;11608;11601:12;11565:50;11634:22;;11687:4;11679:13;;11675:27;-1:-1:-1;11665:55:168;;11716:1;11713;11706:12;11665:55;11745:2;11739:9;11768:68;11784:51;11832:2;11784:51;:::i;11768:68::-;11870:15;;;11952:1;11948:10;;;;11940:19;;11936:28;;;11901:12;;;;11976:19;;;11973:39;;;12008:1;12005;11998:12;11973:39;12032:11;;;;12052:135;12068:6;12063:3;12060:15;12052:135;;;12134:10;;12122:23;;12085:12;;;;12165;;;;12052:135;;;12206:5;11329:888;-1:-1:-1;;;;;;;11329:888:168:o;12222:269::-;12295:6;12348:2;12336:9;12327:7;12323:23;12319:32;12316:52;;;12364:1;12361;12354:12;12316:52;12403:9;12390:23;12422:39;12455:5;12422:39;:::i;13117:184::-;13169:77;13166:1;13159:88;13266:4;13263:1;13256:15;13290:4;13287:1;13280:15;13306:1235;13541:2;13593:21;;;13663:13;;13566:18;;;13685:22;;;13512:4;;13541:2;13726;;13744:18;;;;13785:15;;;13512:4;13828:687;13842:6;13839:1;13836:13;13828:687;;;13907:6;13901:13;13943:2;13937:9;13976:1;13972:2;13969:9;13959:43;;13982:18;;:::i;:::-;14015:15;;14069:11;;;14063:18;14104:42;14180:21;;;14166:12;;;14159:43;14242:11;;;14236:18;14222:12;;;14215:40;14278:4;14326:11;;;14320:18;14316:27;;14302:12;;;14295:49;14367:4;14415:11;;;14409:18;14405:27;14391:12;;;14384:49;14462:4;14453:14;;;;14490:15;;;;13864:1;13857:9;13828:687;;;-1:-1:-1;14532:3:168;;13306:1235;-1:-1:-1;;;;;;;13306:1235:168:o;14546:349::-;14585:3;14616:66;14609:5;14606:77;14603:257;;14716:77;14713:1;14706:88;14817:4;14814:1;14807:15;14845:4;14842:1;14835:15;14603:257;-1:-1:-1;14887:1:168;14876:13;;14546:349::o",
    "linkReferences": {},
    "immutableReferences": {
      "16762": [
        {
          "start": 147,
          "length": 32
        },
        {
          "start": 617,
          "length": 32
        }
      ],
      "16766": [
        {
          "start": 348,
          "length": 32
        },
        {
          "start": 542,
          "length": 32
        },
        {
          "start": 778,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "batchSwapWithFee(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256,(address,address,uint256,bytes32))": "4817a286",
    "transferFromAccounts((address,address,uint256,bytes32)[])": "7d10d11f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"balance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Transfer.Data\",\"name\":\"feeTransfer\",\"type\":\"tuple\"}],\"name\":\"batchSwapWithFee\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"tokenDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"balance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Transfer.Data[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"transferFromAccounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gnosis Developers\",\"kind\":\"dev\",\"methods\":{\"batchSwapWithFee(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256,(address,address,uint256,bytes32))\":{\"details\":\"Performs a Balancer batched swap on behalf of a user and sends a fee to the caller. This function reverts if: - The caller is not the creator of the vault relayer - The swap fails - The fee transfer fails\",\"params\":{\"deadline\":\"The deadline for the swap.\",\"feeTransfer\":\"The transfer data for the caller fee.\",\"funds\":\"The fund management settings, specifying the user the swap is being performed for as well as the recipient of the proceeds.\",\"kind\":\"The Balancer swap kind, this can either be `GIVEN_IN` for sell orders or `GIVEN_OUT` for buy orders.\",\"limits\":\"Swap limits for encoding limit prices.\",\"swaps\":\"The swaps to perform.\",\"tokens\":\"The tokens for the swaps. Swaps encode to and from tokens as indices into this array.\"},\"returns\":{\"tokenDeltas\":\"The executed swap amounts.\"}},\"transferFromAccounts((address,address,uint256,bytes32)[])\":{\"details\":\"Transfers all sell amounts for the executed trades from their owners to the caller. This function reverts if: - The caller is not the creator of the vault relayer - Any ERC20 transfer fails\",\"params\":{\"transfers\":\"The transfers to execute.\"}}},\"stateVariables\":{\"creator\":{\"details\":\"The creator of the contract which has special permissions. This value is set at creation time and cannot change.\"},\"vault\":{\"details\":\"The vault this relayer is for.\"}},\"title\":\"Gnosis Protocol v2 Vault Relayer Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol\":\"GPv2VaultRelayer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/contracts/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":balancer/=lib/balancer/src/\",\":canonical-weth/=lib/canonical-weth/src/\",\":cowprotocol/=lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/balancer/src/lib/helpers/\",\":math/=lib/balancer/src/lib/math/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/@openzeppelin/contracts/\",\":safe/=lib/safe/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol\":{\"keccak256\":\"0xb785d0cc8a18cad4bd7bdc46ba4f995b17e6a3f95c8cbefcc1be6618bfab1595\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://655f249d6af04d75e907376157e393d205ee6be73007f6d75d9bb1325a9efc28\",\"dweb:/ipfs/QmanQfzHUnyrGvknJ9EgkLLQ2Nfd1A6RnfFjXaStp6vgYr\"]},\"lib/cowprotocol/src/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x205fedd49ab79dd6d2824a056d61ec8bdd6bd02ea9b50e398ea4353095c5325b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4470ff225bda4345d08c27f7d2e41b079be66e51c2376f4170978aba85bef906\",\"dweb:/ipfs/QmUxq55vtTEDU63ttAUGUsEksH4gLq8dJHkQEC7Zy6gdT1\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Order.sol\":{\"keccak256\":\"0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d\",\"dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2SafeERC20.sol\":{\"keccak256\":\"0x746fa180cf0c8f866d124958afdabb7430bc79539335f8e25ea89c212378d03b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://eb94c53fd20b77c15cf44fcdb4939dba3e6e370661d114f73d59b2737ccf4e39\",\"dweb:/ipfs/QmeWYK6wZJ4WKT35yhYkhp1ixwcP348Dr5nS36fnx5FLVD\"]},\"lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol\":{\"keccak256\":\"0x3fbac207882d1e12ce41b112c1d878e3b234842904c11e006059ab642740f84b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://eba7b5484ed100a8b4d8af0d62bcc3f30f622065d21de4913ea6a1be024f718e\",\"dweb:/ipfs/QmYxbR3cUybCwyCmzdEyxtjnrf8zb6jxBRVycEVpANXnmf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IVault",
              "name": "vault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "int256[]",
              "name": "limits",
              "type": "int256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "struct GPv2Transfer.Data",
              "name": "feeTransfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "balance",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchSwapWithFee",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "tokenDeltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct GPv2Transfer.Data[]",
              "name": "transfers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "balance",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAccounts"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchSwapWithFee(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256,(address,address,uint256,bytes32))": {
            "details": "Performs a Balancer batched swap on behalf of a user and sends a fee to the caller. This function reverts if: - The caller is not the creator of the vault relayer - The swap fails - The fee transfer fails",
            "params": {
              "deadline": "The deadline for the swap.",
              "feeTransfer": "The transfer data for the caller fee.",
              "funds": "The fund management settings, specifying the user the swap is being performed for as well as the recipient of the proceeds.",
              "kind": "The Balancer swap kind, this can either be `GIVEN_IN` for sell orders or `GIVEN_OUT` for buy orders.",
              "limits": "Swap limits for encoding limit prices.",
              "swaps": "The swaps to perform.",
              "tokens": "The tokens for the swaps. Swaps encode to and from tokens as indices into this array."
            },
            "returns": {
              "tokenDeltas": "The executed swap amounts."
            }
          },
          "transferFromAccounts((address,address,uint256,bytes32)[])": {
            "details": "Transfers all sell amounts for the executed trades from their owners to the caller. This function reverts if: - The caller is not the creator of the vault relayer - Any ERC20 transfer fails",
            "params": {
              "transfers": "The transfers to execute."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/@openzeppelin/contracts/",
        ":@openzeppelin/contracts/=lib/@openzeppelin/contracts/",
        ":balancer/=lib/balancer/src/",
        ":canonical-weth/=lib/canonical-weth/src/",
        ":cowprotocol/=lib/cowprotocol/src/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":helpers/=lib/balancer/src/lib/helpers/",
        ":math/=lib/balancer/src/lib/math/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/@openzeppelin/contracts/",
        ":safe/=lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol": "GPv2VaultRelayer"
      },
      "libraries": {}
    },
    "sources": {
      "lib/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol": {
        "keccak256": "0xb785d0cc8a18cad4bd7bdc46ba4f995b17e6a3f95c8cbefcc1be6618bfab1595",
        "urls": [
          "bzz-raw://655f249d6af04d75e907376157e393d205ee6be73007f6d75d9bb1325a9efc28",
          "dweb:/ipfs/QmanQfzHUnyrGvknJ9EgkLLQ2Nfd1A6RnfFjXaStp6vgYr"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/interfaces/IVault.sol": {
        "keccak256": "0x205fedd49ab79dd6d2824a056d61ec8bdd6bd02ea9b50e398ea4353095c5325b",
        "urls": [
          "bzz-raw://4470ff225bda4345d08c27f7d2e41b079be66e51c2376f4170978aba85bef906",
          "dweb:/ipfs/QmUxq55vtTEDU63ttAUGUsEksH4gLq8dJHkQEC7Zy6gdT1"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Order.sol": {
        "keccak256": "0xffd0cc3de3209aa38045d57def570ccbde028a39a54b00c696dbe19f4f6d7f9f",
        "urls": [
          "bzz-raw://5714a47cae551d3364bfc6a753d92822b29d277298e55942a2814ed1e2afd87d",
          "dweb:/ipfs/QmS2G8ftdhk11qoSYHX8twZK5vFArhcnVVe6gy5UGTvXmg"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2SafeERC20.sol": {
        "keccak256": "0x746fa180cf0c8f866d124958afdabb7430bc79539335f8e25ea89c212378d03b",
        "urls": [
          "bzz-raw://eb94c53fd20b77c15cf44fcdb4939dba3e6e370661d114f73d59b2737ccf4e39",
          "dweb:/ipfs/QmeWYK6wZJ4WKT35yhYkhp1ixwcP348Dr5nS36fnx5FLVD"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol": {
        "keccak256": "0x3fbac207882d1e12ce41b112c1d878e3b234842904c11e006059ab642740f84b",
        "urls": [
          "bzz-raw://eba7b5484ed100a8b4d8af0d62bcc3f30f622065d21de4913ea6a1be024f718e",
          "dweb:/ipfs/QmYxbR3cUybCwyCmzdEyxtjnrf8zb6jxBRVycEVpANXnmf"
        ],
        "license": "LGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/cowprotocol/src/contracts/GPv2VaultRelayer.sol",
    "id": 16868,
    "exportedSymbols": {
      "GPv2Order": [
        17246
      ],
      "GPv2SafeERC20": [
        17316
      ],
      "GPv2Transfer": [
        18026
      ],
      "GPv2VaultRelayer": [
        16867
      ],
      "IERC20": [
        670
      ],
      "IVault": [
        17010
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2905:57",
    "nodes": [
      {
        "id": 16751,
        "nodeType": "PragmaDirective",
        "src": "46:31:57",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 16752,
        "nodeType": "ImportDirective",
        "src": "79:55:57",
        "nodes": [],
        "absolutePath": "lib/@openzeppelin/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16868,
        "sourceUnit": 3,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16753,
        "nodeType": "ImportDirective",
        "src": "135:33:57",
        "nodes": [],
        "absolutePath": "lib/cowprotocol/src/contracts/interfaces/IVault.sol",
        "file": "./interfaces/IVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16868,
        "sourceUnit": 17011,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16754,
        "nodeType": "ImportDirective",
        "src": "169:38:57",
        "nodes": [],
        "absolutePath": "lib/cowprotocol/src/contracts/libraries/GPv2Transfer.sol",
        "file": "./libraries/GPv2Transfer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16868,
        "sourceUnit": 18027,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16867,
        "nodeType": "ContractDefinition",
        "src": "292:2658:57",
        "nodes": [
          {
            "id": 16759,
            "nodeType": "UsingForDirective",
            "src": "324:30:57",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 16756,
              "name": "GPv2Transfer",
              "nameLocations": [
                "330:12:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18026,
              "src": "330:12:57"
            },
            "typeName": {
              "id": 16758,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16757,
                "name": "IVault",
                "nameLocations": [
                  "347:6:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17010,
                "src": "347:6:57"
              },
              "referencedDeclaration": 17010,
              "src": "347:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$17010",
                "typeString": "contract IVault"
              }
            }
          },
          {
            "id": 16762,
            "nodeType": "VariableDeclaration",
            "src": "494:33:57",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 16760,
              "nodeType": "StructuredDocumentation",
              "src": "360:129:57",
              "text": "@dev The creator of the contract which has special permissions. This\n value is set at creation time and cannot change."
            },
            "mutability": "immutable",
            "name": "creator",
            "nameLocation": "520:7:57",
            "scope": 16867,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "494:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 16766,
            "nodeType": "VariableDeclaration",
            "src": "578:30:57",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 16763,
              "nodeType": "StructuredDocumentation",
              "src": "534:39:57",
              "text": "@dev The vault this relayer is for."
            },
            "mutability": "immutable",
            "name": "vault",
            "nameLocation": "603:5:57",
            "scope": 16867,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVault_$17010",
              "typeString": "contract IVault"
            },
            "typeName": {
              "id": 16765,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16764,
                "name": "IVault",
                "nameLocations": [
                  "578:6:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17010,
                "src": "578:6:57"
              },
              "referencedDeclaration": 17010,
              "src": "578:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$17010",
                "typeString": "contract IVault"
              }
            },
            "visibility": "private"
          },
          {
            "id": 16782,
            "nodeType": "FunctionDefinition",
            "src": "615:88:57",
            "nodes": [],
            "body": {
              "id": 16781,
              "nodeType": "Block",
              "src": "642:61:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 16775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16772,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16762,
                      "src": "652:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 16773,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "662:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "666:6:57",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "662:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "652:20:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16776,
                  "nodeType": "ExpressionStatement",
                  "src": "652:20:57"
                },
                {
                  "expression": {
                    "id": 16779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16777,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16766,
                      "src": "682:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17010",
                        "typeString": "contract IVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 16778,
                      "name": "vault_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16769,
                      "src": "690:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17010",
                        "typeString": "contract IVault"
                      }
                    },
                    "src": "682:14:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$17010",
                      "typeString": "contract IVault"
                    }
                  },
                  "id": 16780,
                  "nodeType": "ExpressionStatement",
                  "src": "682:14:57"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16769,
                  "mutability": "mutable",
                  "name": "vault_",
                  "nameLocation": "634:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16782,
                  "src": "627:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVault_$17010",
                    "typeString": "contract IVault"
                  },
                  "typeName": {
                    "id": 16768,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16767,
                      "name": "IVault",
                      "nameLocations": [
                        "627:6:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17010,
                      "src": "627:6:57"
                    },
                    "referencedDeclaration": 17010,
                    "src": "627:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$17010",
                      "typeString": "contract IVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:15:57"
            },
            "returnParameters": {
              "id": 16771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:0:57"
            },
            "scope": 16867,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16795,
            "nodeType": "ModifierDefinition",
            "src": "820:102:57",
            "nodes": [],
            "body": {
              "id": 16794,
              "nodeType": "Block",
              "src": "843:79:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16786,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "861:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "865:6:57",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "861:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 16788,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16762,
                          "src": "875:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "861:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "475076323a206e6f742063726561746f72",
                        "id": 16790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "884:19:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a118d42aca8f0d18499f71ca3219d725ded8dd59de64143d5614ffc234d6738",
                          "typeString": "literal_string \"GPv2: not creator\""
                        },
                        "value": "GPv2: not creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a118d42aca8f0d18499f71ca3219d725ded8dd59de64143d5614ffc234d6738",
                          "typeString": "literal_string \"GPv2: not creator\""
                        }
                      ],
                      "id": 16785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "853:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "853:51:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16792,
                  "nodeType": "ExpressionStatement",
                  "src": "853:51:57"
                },
                {
                  "id": 16793,
                  "nodeType": "PlaceholderStatement",
                  "src": "914:1:57"
                }
              ]
            },
            "documentation": {
              "id": 16783,
              "nodeType": "StructuredDocumentation",
              "src": "709:106:57",
              "text": "@dev Modifier that ensures that a function can only be called by the\n creator of this contract."
            },
            "name": "onlyCreator",
            "nameLocation": "829:11:57",
            "parameters": {
              "id": 16784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "840:2:57"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16814,
            "nodeType": "FunctionDefinition",
            "src": "1230:177:57",
            "nodes": [],
            "body": {
              "id": 16813,
              "nodeType": "Block",
              "src": "1341:66:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16808,
                        "name": "transfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16800,
                        "src": "1378:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Data_$17570_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct GPv2Transfer.Data calldata[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 16809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1389:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1393:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1389:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Data_$17570_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct GPv2Transfer.Data calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16805,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16766,
                        "src": "1351:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$17010",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 16807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1357:20:57",
                      "memberName": "transferFromAccounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17849,
                      "src": "1351:26:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IVault_$17010_$_t_array$_t_struct$_Data_$17570_calldata_ptr_$dyn_calldata_ptr_$_t_address_$returns$__$attached_to$_t_contract$_IVault_$17010_$",
                        "typeString": "function (contract IVault,struct GPv2Transfer.Data calldata[] calldata,address)"
                      }
                    },
                    "id": 16811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:49:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16812,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:49:57"
                }
              ]
            },
            "documentation": {
              "id": 16796,
              "nodeType": "StructuredDocumentation",
              "src": "928:297:57",
              "text": "@dev Transfers all sell amounts for the executed trades from their\n owners to the caller.\n This function reverts if:\n - The caller is not the creator of the vault relayer\n - Any ERC20 transfer fails\n @param transfers The transfers to execute."
            },
            "functionSelector": "7d10d11f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16802,
                  "name": "onlyCreator",
                  "nameLocations": [
                    "1325:11:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16795,
                  "src": "1325:11:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1325:11:57"
              }
            ],
            "name": "transferFromAccounts",
            "nameLocation": "1239:20:57",
            "parameters": {
              "id": 16801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16800,
                  "mutability": "mutable",
                  "name": "transfers",
                  "nameLocation": "1289:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16814,
                  "src": "1260:38:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Data_$17570_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct GPv2Transfer.Data[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16798,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16797,
                        "name": "GPv2Transfer.Data",
                        "nameLocations": [
                          "1260:12:57",
                          "1273:4:57"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 17570,
                        "src": "1260:17:57"
                      },
                      "referencedDeclaration": 17570,
                      "src": "1260:17:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17570_storage_ptr",
                        "typeString": "struct GPv2Transfer.Data"
                      }
                    },
                    "id": 16799,
                    "nodeType": "ArrayTypeName",
                    "src": "1260:19:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Data_$17570_storage_$dyn_storage_ptr",
                      "typeString": "struct GPv2Transfer.Data[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1259:40:57"
            },
            "returnParameters": {
              "id": 16804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1341:0:57"
            },
            "scope": 16867,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16866,
            "nodeType": "FunctionDefinition",
            "src": "2360:588:57",
            "nodes": [],
            "body": {
              "id": 16865,
              "nodeType": "Block",
              "src": "2710:238:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 16855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16845,
                      "name": "tokenDeltas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16843,
                      "src": "2720:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16848,
                          "name": "kind",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16818,
                          "src": "2763:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SwapKind_$16931",
                            "typeString": "enum IVault.SwapKind"
                          }
                        },
                        {
                          "id": 16849,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16822,
                          "src": "2781:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$17000_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct IVault.BatchSwapStep calldata[] calldata"
                          }
                        },
                        {
                          "id": 16850,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16826,
                          "src": "2800:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        },
                        {
                          "id": 16851,
                          "name": "funds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16829,
                          "src": "2820:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$17009_memory_ptr",
                            "typeString": "struct IVault.FundManagement memory"
                          }
                        },
                        {
                          "id": 16852,
                          "name": "limits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16832,
                          "src": "2839:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        {
                          "id": 16853,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16834,
                          "src": "2859:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_SwapKind_$16931",
                            "typeString": "enum IVault.SwapKind"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$17000_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct IVault.BatchSwapStep calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_FundManagement_$17009_memory_ptr",
                            "typeString": "struct IVault.FundManagement memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16846,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16766,
                          "src": "2734:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$17010",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 16847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2740:9:57",
                        "memberName": "batchSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16989,
                        "src": "2734:15:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_enum$_SwapKind_$16931_$_t_array$_t_struct$_BatchSwapStep_$17000_memory_ptr_$dyn_memory_ptr_$_t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr_$_t_struct$_FundManagement_$17009_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                          "typeString": "function (enum IVault.SwapKind,struct IVault.BatchSwapStep memory[] memory,contract IERC20[] memory,struct IVault.FundManagement memory,int256[] memory,uint256) payable external returns (int256[] memory)"
                        }
                      },
                      "id": 16854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2734:143:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[] memory"
                      }
                    },
                    "src": "2720:157:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                      "typeString": "int256[] memory"
                    }
                  },
                  "id": 16856,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:157:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16860,
                        "name": "feeTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16837,
                        "src": "2917:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17570_calldata_ptr",
                          "typeString": "struct GPv2Transfer.Data calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 16861,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2930:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2934:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2930:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$17570_calldata_ptr",
                          "typeString": "struct GPv2Transfer.Data calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16857,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16766,
                        "src": "2887:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$17010",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 16859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2893:23:57",
                      "memberName": "fastTransferFromAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17693,
                      "src": "2887:29:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IVault_$17010_$_t_struct$_Data_$17570_calldata_ptr_$_t_address_$returns$__$attached_to$_t_contract$_IVault_$17010_$",
                        "typeString": "function (contract IVault,struct GPv2Transfer.Data calldata,address)"
                      }
                    },
                    "id": 16863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2887:54:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16864,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:54:57"
                }
              ]
            },
            "documentation": {
              "id": 16815,
              "nodeType": "StructuredDocumentation",
              "src": "1413:942:57",
              "text": "@dev Performs a Balancer batched swap on behalf of a user and sends a\n fee to the caller.\n This function reverts if:\n - The caller is not the creator of the vault relayer\n - The swap fails\n - The fee transfer fails\n @param kind The Balancer swap kind, this can either be `GIVEN_IN` for\n sell orders or `GIVEN_OUT` for buy orders.\n @param swaps The swaps to perform.\n @param tokens The tokens for the swaps. Swaps encode to and from tokens\n as indices into this array.\n @param funds The fund management settings, specifying the user the swap\n is being performed for as well as the recipient of the proceeds.\n @param limits Swap limits for encoding limit prices.\n @param deadline The deadline for the swap.\n @param feeTransfer The transfer data for the caller fee.\n @return tokenDeltas The executed swap amounts."
            },
            "functionSelector": "4817a286",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 16840,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16839,
                  "name": "onlyCreator",
                  "nameLocations": [
                    "2660:11:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16795,
                  "src": "2660:11:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "2660:11:57"
              }
            ],
            "name": "batchSwapWithFee",
            "nameLocation": "2369:16:57",
            "parameters": {
              "id": 16838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16818,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "2411:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2395:20:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SwapKind_$16931",
                    "typeString": "enum IVault.SwapKind"
                  },
                  "typeName": {
                    "id": 16817,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16816,
                      "name": "IVault.SwapKind",
                      "nameLocations": [
                        "2395:6:57",
                        "2402:8:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16931,
                      "src": "2395:15:57"
                    },
                    "referencedDeclaration": 16931,
                    "src": "2395:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SwapKind_$16931",
                      "typeString": "enum IVault.SwapKind"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16822,
                  "mutability": "mutable",
                  "name": "swaps",
                  "nameLocation": "2457:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2425:37:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$17000_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVault.BatchSwapStep[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16820,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16819,
                        "name": "IVault.BatchSwapStep",
                        "nameLocations": [
                          "2425:6:57",
                          "2432:13:57"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 17000,
                        "src": "2425:20:57"
                      },
                      "referencedDeclaration": 17000,
                      "src": "2425:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchSwapStep_$17000_storage_ptr",
                        "typeString": "struct IVault.BatchSwapStep"
                      }
                    },
                    "id": 16821,
                    "nodeType": "ArrayTypeName",
                    "src": "2425:22:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$17000_storage_$dyn_storage_ptr",
                      "typeString": "struct IVault.BatchSwapStep[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16826,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "2488:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2472:22:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16824,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16823,
                        "name": "IERC20",
                        "nameLocations": [
                          "2472:6:57"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 670,
                        "src": "2472:6:57"
                      },
                      "referencedDeclaration": 670,
                      "src": "2472:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$670",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 16825,
                    "nodeType": "ArrayTypeName",
                    "src": "2472:8:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$670_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16829,
                  "mutability": "mutable",
                  "name": "funds",
                  "nameLocation": "2533:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2504:34:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FundManagement_$17009_memory_ptr",
                    "typeString": "struct IVault.FundManagement"
                  },
                  "typeName": {
                    "id": 16828,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16827,
                      "name": "IVault.FundManagement",
                      "nameLocations": [
                        "2504:6:57",
                        "2511:14:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17009,
                      "src": "2504:21:57"
                    },
                    "referencedDeclaration": 17009,
                    "src": "2504:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundManagement_$17009_storage_ptr",
                      "typeString": "struct IVault.FundManagement"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16832,
                  "mutability": "mutable",
                  "name": "limits",
                  "nameLocation": "2564:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2548:22:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16830,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2548:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 16831,
                    "nodeType": "ArrayTypeName",
                    "src": "2548:8:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16834,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2588:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2580:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16837,
                  "mutability": "mutable",
                  "name": "feeTransfer",
                  "nameLocation": "2633:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2606:38:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$17570_calldata_ptr",
                    "typeString": "struct GPv2Transfer.Data"
                  },
                  "typeName": {
                    "id": 16836,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16835,
                      "name": "GPv2Transfer.Data",
                      "nameLocations": [
                        "2606:12:57",
                        "2619:4:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17570,
                      "src": "2606:17:57"
                    },
                    "referencedDeclaration": 17570,
                    "src": "2606:17:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17570_storage_ptr",
                      "typeString": "struct GPv2Transfer.Data"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:265:57"
            },
            "returnParameters": {
              "id": 16844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16843,
                  "mutability": "mutable",
                  "name": "tokenDeltas",
                  "nameLocation": "2697:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 16866,
                  "src": "2681:27:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16841,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2681:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 16842,
                    "nodeType": "ArrayTypeName",
                    "src": "2681:8:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2680:29:57"
            },
            "scope": 16867,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GPv2VaultRelayer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 16755,
          "nodeType": "StructuredDocumentation",
          "src": "209:83:57",
          "text": "@title Gnosis Protocol v2 Vault Relayer Contract\n @author Gnosis Developers"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16867
        ],
        "name": "GPv2VaultRelayer",
        "nameLocation": "301:16:57",
        "scope": 16868,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-or-later"
  },
  "id": 57
}